<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Office.Interop.Excel</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Office.Interop.Excel._Application">
      <summary>Represents the entire Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application._Default">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application._Evaluate(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application._FindFile">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application._Run2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application._Wait(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application._WSFunction(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.ActivateMicrosoftApp(Microsoft.Office.Interop.Excel.XlMSApplication)">
      <summary>Activates a Microsoft application. If the application is already running, this method activates the running application. If the application isn't running, this method starts a new instance of the application.</summary>
      <param name="Index">Required <see cref="T:Microsoft.Office.Interop.Excel.XlMSApplication" />. Specifies the Microsoft application to activate.XlMSApplication can be one of these XlMSApplication constants:xlMicrosoftWordxlMicrosoftPowerPointxlMicrosoftMailxlMicrosoftAccessxlMicrosoftFoxProxlMicrosoftProjectxlMicrosoftSchedulePlus</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ActiveCell">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the active cell in the active window (the window on top) or in the specified window. If the window isn't displaying a worksheet, this property fails.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ActiveChart">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the active chart (either an embedded chart or a chart sheet). An embedded chart is considered active when it's either selected or activated. When no chart is active, this property returns Nothing.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ActiveDialog">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ActiveEncryptionSession">
      <summary>Read-only.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ActiveMenuBar">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ActivePrinter">
      <summary>Returns or sets the name of the active printer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ActiveProtectedViewWindow">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" />
 object that represents the active Protected View window (the window on top).</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" />
 object that represents the active Protected View window (the window on top).</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ActiveSheet">
      <summary>Returns an object that represents the active sheet (the sheet on top) in the active workbook or in the specified window or workbook. Returns Nothing if no sheet is active.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ActiveWindow">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Window" /> object that represents the active window (the window on top). Returns Nothing if there are no windows open.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object that represents the workbook in the active window (the window on top). Returns Nothing if there are no windows open or if either the Info window or the Clipboard window is the active window.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.AddChartAutoFormat(System.Object,System.String,System.Object)">
      <summary>Adds a custom chart autoformat to the list of available chart autoformats.</summary>
      <param name="Chart">Required Object. A chart that contains the format that will be applied when the new chart autoformat is applied.</param>
      <param name="Name">Required String. The name of the autoformat.</param>
      <param name="Description">Optional Object. A description of the custom autoformat.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.AddCustomList(System.Object,System.Object)">
      <summary>Adds a custom list for custom autofill and/or custom sort.</summary>
      <param name="ListArray">Required Object. Specifies the source data, as either an array of strings or a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</param>
      <param name="ByRow">Optional Object. Only used if <paramref name="ListArray" /> is a Range object. True to create a custom list from each row in the range. False to create a custom list from each column in the range. If this argument is omitted and there are more rows than columns (or an equal number of rows and columns) in the range, Microsoft Excel creates a custom list from each column in the range. If this argument is omitted and there are more columns than rows in the range, Microsoft Excel creates a custom list from each row in the range.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.AddIns">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.AddIns" /> collection that represents all the add-ins listed in the Add-Ins dialog box (Tools menu).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.AddIns2">
      <summary>Gets a collection of <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> objects that represent all the add-ins that are currently available or open in Microsoft Excel, regardless of whether they are installed.</summary>
      <returns>A collection of <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> objects that represent all the add-ins that are currently available or open in Microsoft Excel.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.AlertBeforeOverwriting">
      <summary>True if Microsoft Excel displays a message before overwriting nonblank cells during a drag-and-drop editing operation.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.AltStartupPath">
      <summary>Returns or sets the name of the alternate startup folder.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.AlwaysUseClearType">
      <summary>Returns or sets a Boolean that represents whether to use ClearType to display fonts in the menu, Ribbon, and dialog box text. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.AnswerWizard">
      <summary>Returns the <see cref="T:Microsoft.Office.Core.AnswerWizard" /> object for Microsoft Excel.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ArbitraryXMLSupportAvailable">
      <summary>Returns a Boolean value that indicates whether the XML features in Microsoft Excel are available.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.AskToUpdateLinks">
      <summary>True if Microsoft Excel asks the user to update links when opening files with links. False if links are automatically updated with no dialog box.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Assistance">
      <summary>Returns an <see cref="T:Microsoft.Office.Core.IAssistance" /> object for short_Excel2007 that represents the Microsoft Office Help Viewer. Read-only.</summary>
      <returns>IAssistance</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Assistant">
      <summary>Returns an <see cref="T:Microsoft.Office.Core.Assistant" /> object for Microsoft Excel.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.AutoCorrect">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.AutoCorrect" /> object that represents the Microsoft Excel AutoCorrect attributes.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.AutoFormatAsYouTypeReplaceHyperlinks">
      <summary>True (default) if Microsoft Excel automatically formats hyperlinks as you type. False if Excel does not automatically format hyperlinks as you type.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity">
      <summary>Returns or sets an <see cref="T:Microsoft.Office.Core.MsoAutomationSecurity" /> constant that represents the security mode Microsoft Excel uses when programmatically opening files.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.AutoPercentEntry">
      <summary>True if entries in cells formatted as percentages aren’t automatically multiplied by 100 as soon as they are entered.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.AutoRecover">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.AutoRecover" /> object, which backs up all file formats on a timed interval.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Build">
      <summary>Returns the Microsoft Excel build number.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Calculate">
      <summary>Calculates all open workbooks</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.CalculateBeforeSave">
      <summary>True if workbooks are calculated before they're saved to disk (if the <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> property is set to xlManual). This property is preserved even if you change the <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> property.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.CalculateFull">
      <summary>Forces a full calculation of the data in all open workbooks.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.CalculateFullRebuild">
      <summary>For all open workbooks, forces a full calculation of the data and rebuilds the dependencies.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone">
      <summary>Runs all pending queries to OLEDB and OLAP data sources.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Calculation">
      <summary>Returns or sets the calculation mode. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlCalculation" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.CalculationInterruptKey">
      <summary>Sets or returns an <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationInterruptKey" /> constant that specifies the key that can interrupt Microsoft Excel when performing calculations.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.CalculationState">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationState" /> constant that indicates the calculation state of the application for any calculations that are being performed in Microsoft Excel.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.CalculationVersion">
      <summary>Returns a number whose rightmost four digits are the minor calculation engine version number, and whose other digits (on the left) are the major version of Microsoft Excel.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Caller(System.Object)">
      <summary>Returns information about how Visual Basic was called (for more information, see the Remarks section).</summary>
      <param name="Index">Optional Object. An index to the array. This argument is used only when the property returns an array (for more information, see the Remarks section).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.CanPlaySounds">
      <summary>This property should not be used. Sound notes have been removed from Microsoft Excel.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.CanRecordSounds">
      <summary>This property should not be used. Sound notes have been removed from Microsoft Excel.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Caption">
      <summary>The name that appears in the title bar of the main Microsoft Excel window. If you don't set a name, or if you set the name to Empty, this property returns "Microsoft Excel".</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.CellDragAndDrop">
      <summary>True if dragging and dropping cells is enabled.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Cells">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells on the active worksheet. If the active document isn’t a worksheet, this property fails.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.CentimetersToPoints(System.Double)">
      <summary>Converts a measurement from centimeters to points (one point equals 0.035 centimeters).</summary>
      <param name="Centimeters">Required Double. Specifies the centimeter value to be converted to points.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Charts">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the chart sheets in the active workbook.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.CheckAbort(System.Object)">
      <summary>Stops recalculation in a Microsoft Excel application.</summary>
      <param name="KeepAbort">Optional Object. Allows recalculation to be performed for a Range.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.CheckSpelling(System.String,System.Object,System.Object)">
      <summary>Checks the spelling of a single word. Returns True if the word is found in one of the dictionaries; returns False if the word isn't found.</summary>
      <param name="Word">Required String. The word you want to check.</param>
      <param name="CustomDictionary">Optional Object. A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary. If this argument is omitted, the currently specified dictionary is used.</param>
      <param name="IgnoreUppercase">Optional Object. True to have Microsoft Excel ignore words that are all uppercase. False to have Microsoft Excel check words that are all uppercase. If this argument is omitted, the current setting will be used.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ClipboardFormats(System.Object)">
      <summary>Returns the formats that are currently on the Clipboard as an array of numeric values. To determine whether a particular format is on the Clipboard, compare each element in the array with the appropriate constant listed in the Remarks section.</summary>
      <param name="Index">Optional Object. The array element to be returned. If this argument is omitted, the property returns the entire array of formats that are currently on the Clipboard. For more information, see the Remarks section.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector">
      <summary>Gets or sets the name of the High Performance Computing (HPC) Cluster Connector that is used to run user-defined functions in XLL add-ins.</summary>
      <returns>The name of the High Performance Computing (HPC) Cluster Connector that is used to run user-defined functions in XLL add-ins.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ColorButtons">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Columns">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the columns on the active worksheet. If the active document isn't a worksheet, the Columns property fails.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.COMAddIns">
      <summary>Returns the <see cref="T:Microsoft.Office.Core.COMAddIns" /> collection for Microsoft Excel, which represents the currently installed COM add-ins.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.CommandBars">
      <summary>Returns a <see cref="T:Microsoft.Office.Core.CommandBars" /> object that represents the Microsoft Excel command bars.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.CommandUnderlines">
      <summary>Returns or sets the state of the command underlines in Microsoft Excel for the Macintosh.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ConstrainNumeric">
      <summary>True if handwriting recognition is limited to numbers and punctuation only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ControlCharacters">
      <summary>True if Microsoft Excel displays control characters for right-to-left languages.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)">
      <summary>Converts cell references in a formula between the A1 and R1C1 reference styles, between relative and absolute references, or both.</summary>
      <param name="Formula">Required Object. A String that contains the formula you want to convert. This must be a valid formula, and it must begin with an equal sign.</param>
      <param name="FromReferenceStyle">Required <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />. The reference style of the formula.XlReferenceStyle can be one of these XlReferenceStyle constants:xlA1xlR1C1</param>
      <param name="ToReferenceStyle">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />. The reference style you want returned. If this argument is omitted, the reference style isn't changed; the formula stays in the style specified by <paramref name="FromReferenceStyle" />.XlReferenceStyle can be one of these XlReferenceStyle constants. xlA1 xlR1C1</param>
      <param name="ToAbsolute">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />. Specifies the converted reference type. If this argument is omitted, the reference type isn't changed.XlReferenceStyle can be one of these XlReferenceStyle constants:xlAbsolutexlAbsRowRelColumnxlRelRowAbsColumnxlRelative</param>
      <param name="RelativeTo">Optional Object. Optional Variant. A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that contains one cell. Relative references relate to this cell.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.CopyObjectsWithCells">
      <summary>True if objects are cut, copied, extracted, and sorted with cells.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Cursor">
      <summary>Returns or sets the appearance of the mouse pointer in Microsoft Excel.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.CursorMovement">
      <summary>Returns or sets a value that indicates whether a visual cursor or a logical cursor is used. Can be one of the following constants: xlVisualCursor or xlLogicalCursor.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.CustomListCount">
      <summary>Returns the number of defined custom lists (including built-in lists).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.CutCopyMode">
      <summary>Returns or sets the status of Cut or Copy mode.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DataEntryMode">
      <summary>Returns or sets Data Entry mode, as shown in the table below. When in Data Entry mode, you can enter data only in the unlocked cells in the currently selected range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DDEAppReturnCode">
      <summary>Returns the application-specific DDE return code that was contained in the last DDE acknowledge message received by Microsoft Excel.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.DDEExecute(System.Int32,System.String)">
      <summary>Runs a command or performs some other action or actions in another application by way of the specified DDE channel.</summary>
      <param name="Channel">Required Integer. The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</param>
      <param name="String">Required String. The message defined in the receiving application.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)">
      <summary>Opens a DDE channel to an application.</summary>
      <param name="App">Required String. The application name.</param>
      <param name="Topic">Required String. Describes something in the application to which you're opening a channel — usually a document of that application.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.DDEPoke(System.Int32,System.Object,System.Object)">
      <summary>Sends data to an application.</summary>
      <param name="Channel">Required Integer. The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</param>
      <param name="Item">Required Object. The item to which the data is to be sent.</param>
      <param name="Data">Required Object. The data to be sent to the application.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.DDERequest(System.Int32,System.String)">
      <summary>Requests information from the specified application. This method always returns an array.</summary>
      <param name="Channel">Required Integer. The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</param>
      <param name="Item">Required String. The item to be requested.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.DDETerminate(System.Int32)">
      <summary>Closes a channel to another application.</summary>
      <param name="Channel">Required Integer. The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DecimalSeparator">
      <summary>Sets or returns the character used for the decimal separator as a String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DefaultFilePath">
      <summary>Returns or sets the default path that Microsoft Excel uses when it opens files.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DefaultSaveFormat">
      <summary>Returns or sets the default format for saving files.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DefaultSheetDirection">
      <summary>Returns or sets the default direction in which Microsoft Excel displays new windows and worksheets. Can be one of the following constants: xlRTL (right to left) or xlLTR (left to right).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DefaultWebOptions">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.DefaultWebOptions" /> object that contains global application-level attributes used by Microsoft Excel whenever you save a document as a Web page or open a Web page.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DeferAsyncQueries">
      <summary>Gets or sets whether asychronous queries to OLAP data sources are executed when a worksheet is calculated by VBA code. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.DeleteChartAutoFormat(System.String)">
      <summary>Removes a custom chart autoformat from the list of available chart autoformats.</summary>
      <param name="Name">Required String. The name of the custom autoformat to be removed.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.DeleteCustomList(System.Int32)">
      <summary>Deletes a custom list.</summary>
      <param name="ListNum">Required Integer. The custom list number. This number must be greater than or equal to 5 (Microsoft Excel has four built-in custom lists that cannot be deleted).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Dialogs">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Dialogs" /> collection that represents all built-in dialog boxes.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DialogSheets">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts">
      <summary>True if Microsoft Excel displays certain alerts and messages while a macro is running.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DisplayClipboardWindow">
      <summary>Returns True if the Microsoft Office Clipboard can be displayed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DisplayCommentIndicator">
      <summary>Returns or sets the way cells display comments and indicators. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlCommentDisplayMode" /> constants: xlNoIndicator, xlCommentIndicatorOnly, or xlCommentAndIndicator.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DisplayDocumentActionTaskPane">
      <summary>Set to True to display the Document Actions task pane; set to False to hide the Document Actions task pane.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DisplayDocumentInformationPanel">
      <summary>Returns or sets a Boolean that represents whether the document properties panel is displayed. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DisplayExcel4Menus">
      <summary>True if Microsoft Excel displays version 4.0 menu bars.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DisplayFormulaAutoComplete">
      <summary>Gets or sets whether to show a list of relevant functions and defined names when building cell formulas. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DisplayFormulaBar">
      <summary>True if the formula bar is displayed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DisplayFullScreen">
      <summary>True if Microsoft Excel is in full-screen mode.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DisplayFunctionToolTips">
      <summary>True if function ToolTips can be displayed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DisplayInfoWindow">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DisplayInsertOptions">
      <summary>True if the Insert Options button should be displayed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DisplayNoteIndicator">
      <summary>True if cells containing notes display cell tips and contain note indicators (small dots in their upper-right corners).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DisplayPasteOptions">
      <summary>True if the Paste Options button can be displayed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DisplayRecentFiles">
      <summary>True if the list of recently used files is displayed on the File menu.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DisplayScrollBars">
      <summary>True if scroll bars are visible for all workbooks.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.DisplayStatusBar">
      <summary>True if the status bar is displayed.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.DisplayXMLSourcePane(System.Object)">
      <summary>Opens the XML Source task pane and displays the XML map specified by the <paramref name="XmlMap" /> argument.</summary>
      <param name="XmlMap">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object. The XML map to display in the task pane.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.DoubleClick">
      <summary>Equivalent to double-clicking the active cell.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Dummy1(System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Dummy10(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Dummy101">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Dummy11">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Dummy12(Microsoft.Office.Interop.Excel.PivotTable,Microsoft.Office.Interop.Excel.PivotTable)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Dummy13(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Dummy14">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Dummy2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Dummy20(System.Int32)">
      <summary>Reserved for internal use.</summary>
      <returns>s</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Dummy3">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Dummy4(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Dummy5(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Dummy6">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Dummy7">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Dummy8(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Dummy9">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.EditDirectlyInCell">
      <summary>True if Microsoft Excel allows editing in cells.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.EnableAnimations">
      <summary>True if animated insertion and deletion is enabled.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.EnableAutoComplete">
      <summary>True if the AutoComplete feature is enabled.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.EnableCancelKey">
      <summary>Controls how Microsoft Excel handles CTRL+BREAK (or ESC or COMMAND+PERIOD) user interruptions to the running procedure. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlEnableCancelKey" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.EnableEvents">
      <summary>True if events are enabled for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.EnableLargeOperationAlert">
      <summary>Sets or returns a Boolean that represents whether to display an alert message when a user attempts to perform an operation that affects a larger number of cells than is specified in the Office center UI. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.EnableLivePreview">
      <summary>Sets or returns a Boolean that represents whether to show or hide gallery previews that appear when using galleries that support previewing. Setting this property to True shows a preview of your workbook before applying the command. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.EnableSound">
      <summary>True if sound is enabled for Microsoft Office.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.EnableTipWizard">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ErrorCheckingOptions">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.ErrorCheckingOptions" /> object, which represents the error checking options for an application.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Evaluate(System.Object)">
      <summary>Converts a Microsoft Excel name to an object or a value.</summary>
      <param name="Name">Required Object. The name of the object, using the naming convention of Microsoft Excel.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 international macro sheets in the specified workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 macro sheets in the specified workbook.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.ExecuteExcel4Macro(System.String)">
      <summary>Runs a Microsoft Excel 4.0 macro function, and then returns the result of the function. The return type depends on the function.</summary>
      <param name="String">Required String. A Microsoft Excel 4.0 macro language function without the equal sign. All references must be given as R1C1 strings. If <paramref name="String" /> contains embedded double quotation marks, you must double them. For example, to run the macro function =MID("sometext",1,4), <paramref name="String" /> would have to be "MID(""sometext"",1,4)".</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ExtendList">
      <summary>True if Microsoft Excel automatically extends formatting and formulas to new data that is added to a list.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.FeatureInstall">
      <summary>Returns or sets a value (constant) that specifies how Microsoft Excel handles calls to methods and properties that require features that aren’t yet installed. Read/write <see cref="T:Microsoft.Office.Core.MsoFeatureInstall" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)">
      <summary>Returns information about installed file converters. Returns Null if there are no converters installed.</summary>
      <param name="Index1">Optional Object. The long name of the converter, including the file-type search string in Windows, for example, "Lotus 1-2-3 Files (*.wk*)".</param>
      <param name="Index2">Optional Object. The path of the converter DLL or code resource.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.FileDialog(Microsoft.Office.Core.MsoFileDialogType)">
      <summary>Returns a <see cref="T:Microsoft.Office.Core.FileDialog" /> object representing an instance of the file dialog.</summary>
      <param name="fileDialogType">Required <see cref="T:Microsoft.Office.Core.MsoFileDialogType" />. The type of file dialog.MsoFileDialogType can be one of these MsoFileDialogType constants:msoFileDialogFilePicker Allows user to select a file.msoFileDialogFolderPicker Allows user to select a folder.msoFileDialogOpen Allows user to open a file.msoFileDialogSaveAs Allows user to save a file.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.FileExportConverters">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" /> collection that represents all the file converters for saving files available to Microsoft Excel. Read-only.</summary>
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.FileFind">
      <summary>You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.FileSearch">
      <summary>Returns a <see cref="T:Microsoft.Office.Core.FileSearch" /> object for use with file searches. This property is available only in Microsoft Windows.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.FileValidation">
      <summary>Gets or sets how Microsoft Excel will validate files before opening them.</summary>
      <returns>A <see cref="T:Microsoft.Office.Core.MsoFileValidationMode" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot">
      <summary>Gets or sets how Microsoft Excel will validate the contents of the data caches for PivotTable reports.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.XlFileValidationPivotMode" /> object.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.FindFile">
      <summary>Displays the Open dialog box.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.FindFormat">
      <summary>Sets or returns the search criteria for the type of cell formats to find.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal">
      <summary>All data entered after this property is set to True will be formatted with the number of fixed decimal places set by the <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" /> property.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces">
      <summary>Returns or sets the number of fixed decimal places used when the <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" /> property is set to True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.FormulaBarHeight">
      <summary>Allows the user to specify the height of the formula bar in lines. Read/write.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.GenerateGetPivotData">
      <summary>Returns True when Microsoft Excel can get PivotTable report data.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs">
      <summary>The <see cref="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" /> property determines whether the traditional notation method or the new structured referencing notation method is used for referencing tables in formulas. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlGenerateTableRefs" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.GetCustomListContents(System.Int32)">
      <summary>Returns a custom list (an array of strings).</summary>
      <param name="ListNum">Required Integer. The list number.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.GetCustomListNum(System.Object)">
      <summary>Returns the custom list number for an array of strings. You can use this method to match both built-in lists and custom-defined lists.</summary>
      <param name="ListArray">Required Object. An array of strings.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.GetOpenFilename(System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Displays the standard Open dialog box and gets a file name from the user without actually opening any files.</summary>
      <param name="FileFilter">Optional Object. A string specifying file filtering criteria.This string consists of pairs of file filter strings followed by the MS-DOS wildcard file filter specification, with each part and each pair separated by commas. Each separate pair is listed in the Files of type drop-down list box. For example, the following string specifies two file filters — text and addin: "Text Files (*.txt),*.txt,Add-In Files (*.xla),*.xla".To use multiple MS-DOS wildcard expressions for a single file filter type, separate the wildcard expressions with semicolons, for example, "Visual Basic Files (*.bas; *.txt),*.bas;*.txt".If omitted, this argument defaults to "All Files (*.*),*.*".</param>
      <param name="FilterIndex">Optional Object. Specifies the index numbers of the default file filtering criteria, from 1 to the number of filters specified in <paramref name="FileFilter" />. If this argument is omitted or greater than the number of filters present, the first file filter is used.</param>
      <param name="Title">Optional Object. Specifies the title of the dialog box. If this argument is omitted, the title is "Open."</param>
      <param name="ButtonText">Optional Object. Macintosh only.</param>
      <param name="MultiSelect">Optional Object. True to allow multiple file names to be selected. False to allow only one file name to be selected. The default value is False.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.GetPhonetic(System.Object)">
      <summary>Returns the Japanese phonetic text of the specified text string. This method is available to you only if you have selected or installed Japanese language support for Microsoft Office.</summary>
      <param name="Text">Optional Object. Specifies the text to be converted to phonetic text. If you omit this argument, the next possible phonetic text string (if any) of the previously specified <paramref name="Text" /> is returned. If there are no more possible phonetic text strings, an empty string is returned.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.GetSaveAsFilename(System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Displays the standard Save As dialog box and gets a file name from the user without actually saving any files.</summary>
      <param name="InitialFilename">Optional Object. Specifies the suggested file name. If this argument is omitted, Microsoft Excel uses the active workbook's name.</param>
      <param name="FileFilter">Optional Object. A string specifying file filtering criteria.This string consists of pairs of file filter strings followed by the MS-DOS wildcard file filter specification, with each part and each pair separated by commas. Each separate pair is listed in the Files of type drop-down list box. For example, the following string specifies two file filters, text and addin: "Text Files (*.txt), *.txt, Add-In Files (*.xla), *.xla".To use multiple MS-DOS wildcard expressions for a single file filter type, separate the wildcard expressions with semicolons, for example, "Visual Basic Files (*.bas; *.txt),*.bas;*.txt".If omitted, this argument defaults to "All Files (*.*),*.*".</param>
      <param name="FilterIndex">Optional Object. Specifies the index number of the default file filtering criteria, from 1 to the number of filters specified in <paramref name="FileFilter" />. If this argument is omitted or greater than the number of filters present, the first file filter is used.</param>
      <param name="Title">Optional Object. Specifies the title of the dialog box. If this argument is omitted, the default title is used.</param>
      <param name="ButtonText">Optional Object. Macintosh only.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)">
      <summary>Selects any range or Visual Basic procedure in any workbook and activates that workbook if it’s not already active.</summary>
      <param name="Reference">Optional Object. The destination. Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object, a string that contains a cell reference in R1C1-style notation, or a string that contains a Visual Basic procedure name. If this argument is omitted, the destination is the last range you used the Goto method to select.</param>
      <param name="Scroll">Optional Object. True to scroll through the window so that the upper-left corner of the range appears in the upper-left corner of the window. False to not scroll through the window. The default is False.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Height">
      <summary>The height, in points, of the main application window. If the window is minimized, this property is read-only and refers to the height of the icon. If the window is maximized, this property cannot be set. Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.WindowState" /> property to determine the window state.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Help(System.Object,System.Object)">
      <summary>Displays a Help topic.</summary>
      <param name="HelpFile">Optional Object. The name of the online Help file you want to display. If this argument isn't specified, Microsoft Excel Help is used.</param>
      <param name="HelpContextID">Optional Object. Specifies the context ID number for the Help topic. If this argument isn't specified, the Help Topics dialog box is displayed.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.HideChartDraftModeNotification">
      <summary>Reserved for internal use.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.HighQualityModeForGraphics">
      <summary>Gets or sets whether Excel uses high quality mode to print graphics.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Hinstance">
      <summary>Returns the instance handle of the instance that is calling Microsoft Excel.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.HinstancePtr">
      <summary>Gets a handle to the instance of Microsoft Excel 2010 represented by the specified <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object.</summary>
      <returns>A handle to the instance of Microsoft Excel 2010 represented by the specified <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Hwnd">
      <summary>Returns an Integer indicating the top-level window handle of the Microsoft Excel window.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.IgnoreRemoteRequests">
      <summary>True if remote DDE requests are ignored.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.InchesToPoints(System.Double)">
      <summary>Converts a measurement from inches to points.</summary>
      <param name="Inches">Required Double. Specifies the inch value to be converted to points.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.InputBox(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Displays a dialog box for user input. Returns the information entered in the dialog box.</summary>
      <param name="Prompt">Required Object. The message to be displayed in the dialog box. This can be a string, a number, a date, or a Boolean value.</param>
      <param name="Title">Optional Object. The title for the input box. If this argument is omitted, the default title is "Input."</param>
      <param name="Default">Optional Object. Specifies a value that will appear in the text box when the dialog box is initially displayed. If this argument is omitted, the text box is left empty. This value can be a Range object.</param>
      <param name="Left">Optional Object. Specifies an x position for the dialog box in relation to the upper-left corner of the screen in points.</param>
      <param name="Top">Optional Object. Specifies a y position for the dialog box in relation to the upper-left corner of the screen in points.</param>
      <param name="HelpFile">Optional Object. The name of the Help file for this input box. If the <paramref name="HelpFile" /> and <paramref name="HelpContextID" /> arguments are present, a Help button will appear in the dialog box.</param>
      <param name="HelpContextID">Optional Object. The context ID number of the Help topic in <paramref name="HelpFile" />.</param>
      <param name="Type">Optional Object. Specifies the return data type. If this argument is omitted, the dialog box returns text. Can be one or a sum of the following values.You can use the sum of the allowable values for <paramref name="Type" />. For example, for an input box that can accept both text and numbers, set <paramref name="Type" /> to 1 + 2.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.InsertChartInDraftMode">
      <summary>Reserved for internal use.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Interactive">
      <summary>True if Microsoft Excel is in interactive mode; this property is usually True. If you set this property to False, Microsoft Excel will block all input from the keyboard and mouse (except input to dialog boxes that are displayed by your code). Blocking user input will prevent the user from interfering with the code as it moves or activates Microsoft Excel objects.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.International(System.Object)">
      <summary>Returns information about the current country/region and international settings.</summary>
      <param name="Index">Required Object. The setting to be returned. Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlApplicationInternational" /> constants listed in the following tables.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Intersect(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the rectangular intersection of two or more ranges.</summary>
      <param name="Arg1">Required Range. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg2">Required Range. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg3">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg4">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg5">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg6">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg7">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg8">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg9">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg10">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg11">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg12">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg13">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg14">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg15">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg16">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg17">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg18">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg19">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg20">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg21">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg22">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg23">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg24">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg25">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg26">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg27">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg28">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg29">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
      <param name="Arg30">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed">
      <summary>Gets whether the specified workbook is open in a Protected View window.</summary>
      <returns>true if the specified workbook is open in a Protected View window; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Iteration">
      <summary>True if Microsoft Excel will use iteration to resolve circular references.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.LanguageSettings">
      <summary>Returns the <see cref="T:Microsoft.Office.Core.LanguageSettings" /> object, which contains information about the language settings in Microsoft Excel.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.LargeButtons">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.LargeOperationCellThousandCount">
      <summary>Returns or sets the maximum number of cells needed in an operation beyond which an alert  is triggered. Read/write.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Left">
      <summary>The distance, in points, from the left edge of the screen to the left edge of the main Microsoft Excel window.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.LibraryPath">
      <summary>Returns the path to the Library folder but without the final separator.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.MacroOptions(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Corresponds to options in the Macro Options dialog box. You can also use this method to display a user defined function (UDF) in a built-in or new category within the Insert Function dialog box.</summary>
      <param name="Macro">Optional Object. The macro name or the name of a user defined function (UDF).</param>
      <param name="Description">Optional Object. The macro description.</param>
      <param name="HasMenu">Optional Object. This argument is ignored.</param>
      <param name="MenuText">Optional Object. This argument is ignored.</param>
      <param name="HasShortcutKey">Optional Object. True to assign a shortcut key to the macro (<paramref name="ShortcutKey" /> must also be specified). If this argument is False, no shortcut key is assigned to the macro. If the macro already has a shortcut key, setting this argument to False removes the shortcut key. The default value is False.</param>
      <param name="ShortcutKey">Optional Object. Required if <paramref name="HasShortcutKey" /> is True; ignored otherwise. The shortcut key.</param>
      <param name="Category">Optional Object. An integer that specifies an existing macro function category (Financial, Date &amp; Time, or User Defined, for example). See the remarks section to determine the integers that are mapped to the built-in categories. You can also specify a string for a custom category. If you provide a string, it will be treated as the category name that is displayed in the Insert Function dialog box. If the category name has never been used, a new category is defined with that name. If you use a category name that is that same as a built-in name, Excel will map the user defined function to that built-in category.</param>
      <param name="StatusBar">Optional Object. The status bar text for the macro.</param>
      <param name="HelpContextID">Optional Object. An integer that specifies the context ID for the Help topic assigned to the macro.</param>
      <param name="HelpFile">Optional Object. The name of the Help file that contains the Help topic defined by <paramref name="HelpContextId" />.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.MacroOptions2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.MailLogoff">
      <summary>Closes a MAPI mail session established by Microsoft Excel.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.MailLogon(System.Object,System.Object,System.Object)">
      <summary>Logs in to MAPI Mail or Microsoft Exchange and establishes a mail session. If Microsoft Mail isn't already running, you must use this method to establish a mail session before mail or document routing functions can be used.</summary>
      <param name="Name">Optional Object. The mail account name or Microsoft Exchange profile name. If this argument is omitted, the default mail account name is used.</param>
      <param name="Password">Optional Object. The mail account password. This argument is ignored in Microsoft Exchange.</param>
      <param name="DownloadNewMail">Optional Object. True to download new mail immediately.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.MailSession">
      <summary>Returns the MAPI mail session number as a hexadecimal string (if there's an active session), or returns Null if there's no session.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.MailSystem">
      <summary>Returns the mail system that's installed on the host machine. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlMailSystem" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.MapPaperSize">
      <summary>True if documents formatted for the standard paper size of another country/region (for example, A4) are automatically adjusted so that they're printed correctly on the standard paper size (for example, Letter) of your country/region.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.MathCoprocessorAvailable">
      <summary>True if a math coprocessor is available.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.MaxChange">
      <summary>Returns or sets the maximum amount of change between each iteration as Microsoft Excel resolves circular references.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.MaxIterations">
      <summary>Returns or sets the maximum number of iterations that Microsoft Excel can use to resolve a circular reference.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.MeasurementUnit">
      <summary>Specifies the measurement unit used in the application. Read/write Integer value corresponding to the constants in the <see cref="T:Microsoft.Office.Interop.Excel.XlMeasurementUnits" /> enumeration.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.MemoryFree">
      <summary>Returns the amount of memory that's still available for Microsoft Excel to use, in bytes.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.MemoryTotal">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.MemoryUsed">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.MenuBars">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Modules">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.MouseAvailable">
      <summary>True if a mouse is available.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn">
      <summary>True if the active cell will be moved as soon as the ENTER (RETURN) key is pressed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection">
      <summary>Returns or sets the direction in which the active cell is moved when the user presses ENTER. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.MultiThreadedCalculation">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" /> object that controls the multi-threaded recalculation settings that are new in Excel 2007. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Names">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the names in the active workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.NetworkTemplatesPath">
      <summary>Returns the network path where templates are stored. If the network path doesn’t exist, this property returns an empty string.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.NewWorkbook">
      <summary>Returns a NewFile object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.NextLetter">
      <summary>You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ODBCErrors">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> collection that contains all the ODBC errors generated by the most recent query table or PivotTable report operation.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ODBCTimeout">
      <summary>Returns or sets the ODBC query time limit in seconds. The default value is 45 seconds.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.OLEDBErrors">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.OLEDBErrors" /> collection, which represents the error information returned by the most recent OLE DB query.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.OnCalculate">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.OnData">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.OnEntry">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.OnKey(System.String,System.Object)">
      <summary>Runs a specified procedure when a particular key or key combination is pressed.</summary>
      <param name="Key">Required String. A string indicating the key to be pressed.</param>
      <param name="Procedure">Optional Object. A string indicating the name of the procedure to be run. If <paramref name="Procedure" /> is "" (empty text), nothing happens when <paramref name="Key" /> is pressed. This form of OnKey changes the normal result of keystrokes in Microsoft Excel. If <paramref name="Procedure" /> is omitted, <paramref name="Key" /> reverts to its normal result in Microsoft Excel, and any special key assignments made with previous OnKey methods are cleared.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)">
      <summary>Sets the Repeat menu item and the name of the procedure that will run if you choose the Repeat command (Edit menu) after running the procedure that sets this property.</summary>
      <param name="Text">Required String. The text that appears with the Repeat command (Edit menu).</param>
      <param name="Procedure">Required String. The name of the procedure that will be run when you choose the Repeat command (Edit menu).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.OnSheetActivate">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.OnSheetDeactivate">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.OnTime(System.Object,System.String,System.Object,System.Object)">
      <summary>Schedules a procedure to be run at a specified time in the future (either at a specific time of day or after a specific amount of time has passed).</summary>
      <param name="EarliestTime">Required Object. The time when you want this procedure to be run.</param>
      <param name="Procedure">Required String. The name of the procedure to be run.</param>
      <param name="LatestTime">Optional Object. The latest time at which the procedure can be run. For example, if <paramref name="LatestTime" /> is set to <paramref name="EarliestTime" /> + 30 and Microsoft Excel is not in Ready, Copy, Cut, or Find mode at <paramref name="EarliestTime" /> because another procedure is running, Microsoft Excel will wait 30 seconds for the first procedure to complete. If Microsoft Excel is not in Ready mode within 30 seconds, the procedure won’t be run. If this argument is omitted, Microsoft Excel will wait until the procedure can be run.</param>
      <param name="Schedule">Optional Object. True to schedule a new OnTime procedure. False to clear a previously set procedure. The default value is True.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)">
      <summary>Sets the text of the Undo and the name of the procedure that’s run if you choose the Undo command (Edit menu) after running the procedure that sets this property.</summary>
      <param name="Text">Required String. The text that appears with the Undo command (Edit menu).</param>
      <param name="Procedure">Required String. The name of the procedure that’s run when you choose the Undo command (Edit menu).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.OnWindow">
      <summary>Returns or sets the name of the procedure that’s run whenever you activate a window.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.OperatingSystem">
      <summary>Returns the name and version number of the current operating system, for example, "Windows (32-bit) 4.00" or "Macintosh 7.00".</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.OrganizationName">
      <summary>Returns the registered organization name.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Path">
      <summary>Returns the complete path to the application, excluding the final separator and name of the application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.PathSeparator">
      <summary>Returns the path separator character ("\").</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.PivotTableSelection">
      <summary>True if PivotTable reports use structured selection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)">
      <summary>Returns an array of the last four ranges or names selected. Each element in the array is a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</summary>
      <param name="Index">Optional Object. The index number (from 1 to 4) of the previous range or name.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication">
      <summary>Gets or sets whether communication with the printer is turned on.</summary>
      <returns>true if communication with the printer is turned on; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ProductCode">
      <summary>Returns the globally unique identifier (GUID) for Microsoft Excel.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.PromptForSummaryInfo">
      <summary>True if Microsoft Excel asks for summary information when files are first saved.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ProtectedViewWindows">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> collection that represents all the Protected View windows that are open in the application.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> collection that represents all the Protected View windows that are open in the application.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Quit">
      <summary>Quits Microsoft Excel.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Quitting">
      <summary>Reserved for internal use.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Range(System.Object,System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</summary>
      <param name="Cell1">Required Object. The name of the range. This must be an A1-style reference in the language of the macro. It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma). It can also include dollar signs, but they’re ignored. You can use a local defined name in any part of the range. If you use a name, the name is assumed to be in the language of the macro.</param>
      <param name="Cell2">Optional Object. The cell in the upper-left and lower-right corner of the range. Can be a Range object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Ready">
      <summary>Returns True when the Microsoft Excel application is ready; False when the Excel application is not ready.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.RecentFiles">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.RecentFiles" /> collection that represents the list of recently used files.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.RecordMacro(System.Object,System.Object)">
      <summary>Records code if the macro recorder is on.</summary>
      <param name="BasicCode">Optional Object. A string that specifies the Visual Basic code that will be recorded if the macro recorder is recording into a Visual Basic module. The string will be recorded on one line. If the string contains a carriage return (ASCII character 10, or Chr$(10) in code), it will be recorded on more than one line.</param>
      <param name="XlmCode">Optional Object. This argument is ignored.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.RecordRelative">
      <summary>True if macros are recorded using relative references; False if recording is absolute.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ReferenceStyle">
      <summary>Returns or sets how Microsoft Excel displays cell references and row and column headings in either A1 or R1C1 reference style. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.RegisteredFunctions(System.Object,System.Object)">
      <summary>Returns information about functions in either dynamic-link libraries (DLLs) or code resources that were registered with the REGISTER or REGISTER.ID macro functions.</summary>
      <param name="Index1">Optional Object. The name of the DLL or code resource.</param>
      <param name="Index2">Optional Object. The name of the function.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.RegisterXLL(System.String)">
      <summary>Loads an XLL code resource and automatically registers the functions and commands contained in the resource.</summary>
      <param name="Filename">Required String. Specifies the name of the XLL to be loaded.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Repeat">
      <summary>Repeats the last user interface action.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat">
      <summary>Sets the replacement criteria to use in replacing cell formats. The replacement criteria is then used in a subsequent call to the <see cref="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.ResetTipWizard">
      <summary>Resets the routing slip so that a new routing can be initiated with the same slip (using the same recipient list and delivery information). The routing must be completed before you use this method. Using this method at other times causes an error.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.RollZoom">
      <summary>True if the IntelliMouse zooms instead of scrolling.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Rows">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the rows on the active worksheet. If the active document isn’t a worksheet, the Rows property fails.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.RTD">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.RTD" /> object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Runs a macro or calls a function.</summary>
      <param name="Macro">Optional Object. The macro to run. This can be either a string with the macro name, a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object indicating where the function is, or a register ID for a registered DLL (XLL) function. If a string is used, the string will be evaluated in the context of the active sheet.</param>
      <param name="Arg1">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg2">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg3">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg4">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg5">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg6">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg7">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg8">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg9">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg10">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg11">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg12">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg13">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg14">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg15">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg16">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg17">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg18">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg19">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg20">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg21">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg22">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg23">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg24">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg25">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg26">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg27">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg28">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg29">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg30">Optional Object. The arguments that should be passed to the function.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Save(System.Object)">
      <summary>Saves changes to the specified workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.SaveISO8601Dates">
      <summary>Gets or sets whether Excel saves date and time values using the ISO 8601 format.</summary>
      <returns>true if Excel saves date and time values using the ISO 8601 format; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.SaveWorkspace(System.Object)">
      <summary>Saves the current workspace.</summary>
      <param name="Filename">Optional Object. The saved file name.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating">
      <summary>True if screen updating is turned on.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Selection">
      <summary>Returns the selected object in the active window.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)">
      <summary>Sends keystrokes to the active application.</summary>
      <param name="Keys">Required Object. The key or key combination you want to send to the application as text.</param>
      <param name="Wait">Optional Object. True to have Microsoft Excel wait for the keys to be processed before returning control to the macro. False (or omitted) to continue running the macro without waiting for the keys to be processed.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.SetDefaultChart(System.Object,System.Object)">
      <summary>Specifies the name of the chart template that Microsoft Excel will use when creating new charts.</summary>
      <param name="FormatName">Optional Object. Specifies the name of a custom autoformat. This name can be a string naming a custom autoformat, or it can be the special constant xlBuiltIn to specify the built-in chart template.</param>
      <param name="Gallery">Optional Object. Specifies the name of a gallery.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.SharePointVersion(System.String)">
      <summary>Returns the version number of SharePoint Foundation instances running at site for the specified URL.</summary>
      <returns>Integer</returns>
      <param name="bstrUrl">The URL of site to check.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Sheets">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the sheets in the active workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.SheetsInNewWorkbook">
      <summary>Returns or sets the number of sheets that Microsoft Excel automatically inserts into new workbooks.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ShortcutMenus(System.Int32)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ShowChartTipNames">
      <summary>True if charts show chart tip names. The default value is True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ShowChartTipValues">
      <summary>True if charts show chart tip values. The default value is True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ShowDevTools">
      <summary>Returns or sets a Boolean that represents whether the Developer tab is displayed in the Ribbon. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ShowMenuFloaties">
      <summary>Returns or sets a Boolean that represents whether to display Mini toolbars when the user right-clicks in the workbook window. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ShowSelectionFloaties">
      <summary>Returns or sets a Boolean that represents whether Mini toolbars displays when a user selects text. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ShowStartupDialog">
      <summary>Returns True (default) when the New Workbook task pane appears for a Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ShowToolTips">
      <summary>True if ToolTips are turned on.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ShowWindowsInTaskbar">
      <summary>True if there’s a separate Windows taskbar button for each open workbook. The default value is True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.SmartArtColors">
      <summary>Gets the set of color styles that are currently loaded in the application.</summary>
      <returns>The set of color styles that are currently loaded in the application.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.SmartArtLayouts">
      <summary>Gets the set of SmartArt layouts that are currently loaded in the application.</summary>
      <returns>The set of SmartArt layouts that are currently loaded in the application.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.SmartArtQuickStyles">
      <summary>Gets the set of SmartArt quick styles which are currently loaded in the application.</summary>
      <returns>The set of SmartArt quick styles which are currently loaded in the application.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.SmartTagRecognizers">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTagRecognizers" /> collection for an application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Speech">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Speech" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.SpellingOptions">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.SpellingOptions" /> object that represents the spelling options of the application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.StandardFont">
      <summary>Returns or sets the name of the standard font.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.StandardFontSize">
      <summary>Returns or sets the standard font size, in points.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.StartupPath">
      <summary>Returns the complete path of the startup folder excluding the final separator.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.StatusBar">
      <summary>Returns or sets the text in the status bar.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Support(System.Object,System.Int32,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.TemplatesPath">
      <summary>Returns the local path where templates are stored.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ThisCell">
      <summary>Returns the cell the user-defined function is being called from as a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ThisWorkbook">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object that represents the workbook where the current macro code is running.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.ThousandsSeparator">
      <summary>Sets or returns the character used for the thousands separator as a String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Toolbars">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Top">
      <summary>The distance, in points, from the top edge of the screen to the top edge of the main Microsoft Excel window. If the application window is minimized, this property controls the position of the window icon (anywhere on the screen).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.TransitionMenuKey">
      <summary>Returns or sets the Microsoft Excel menu or help key, which is usually "/".</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.TransitionMenuKeyAction">
      <summary>Returns or sets the action taken when the Microsoft Excel menu key is pressed. Can be either xlExcelMenus or xlLotusHelp.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.TransitionNavigKeys">
      <summary>True if transition navigation keys are active.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.UILanguage">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Undo">
      <summary>Cancels the last user interface action.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Union(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the union of two or more ranges.</summary>
      <param name="Arg1">Required Range. At least two Range objects must be specified.</param>
      <param name="Arg2">Required Range. At least two Range objects must be specified.</param>
      <param name="Arg3">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg4">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg5">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg6">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg7">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg8">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg9">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg10">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg11">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg12">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg13">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg14">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg15">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg16">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg17">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg18">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg19">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg20">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg21">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg22">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg23">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg24">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg25">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg26">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg27">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg28">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg29">Required Object. At least two Range objects must be specified.</param>
      <param name="Arg30">Required Object. At least two Range objects must be specified.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.UsableHeight">
      <summary>Returns the maximum height of the space that a window can occupy in the application window area, in points.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.UsableWidth">
      <summary>Returns the maximum width of the space that a window can occupy in the application window area in points.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector">
      <summary>Gets or sets whether Microsoft Excel allows user-defined functions in XLL add-ins to be run on a compute cluster.</summary>
      <returns>true if Excel allows user-defined functions in XLL add-ins to be run on a compute cluster; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.UsedObjects">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.UsedObjects" /> object representing objects allocated in a workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.UserControl">
      <summary>True if the application is visible or if it was created or started by the user. False if you created or started the application programmatically by using the CreateObject or GetObject functions and the application is hidden.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.UserLibraryPath">
      <summary>Returns the path to the location on the user’s computer where the COM add-ins are installed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.UserName">
      <summary>Returns or sets the name of the current user.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.UseSystemSeparators">
      <summary>True (default) if the system separators of Microsoft Excel are enabled.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Value">
      <summary>Returns "Microsoft Excel".</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.VBE">
      <summary>Returns a VBE object that represents the Visual Basic Editor.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Version">
      <summary>Returns the Microsoft Excel version number.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Visible">
      <summary>Determines whether the object is visible.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Volatile(System.Object)">
      <summary>Marks a user-defined function as volatile. A volatile function must be recalculated whenever calculation occurs in any cells on the worksheet. A nonvolatile function is recalculated only when the input variables change. This method has no effect if it's not inside a user-defined function used to calculate a worksheet cell.</summary>
      <param name="Volatile">Optional Object. True to mark the function as volatile. False to mark the function as nonvolatile. The default value is True.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Application.Wait(System.Object)">
      <summary>Pauses a running macro until a specified time. Returns True if the specified time has arrived.</summary>
      <param name="Time">Required Object. The time at which you want the macro to resume in Microsoft Excel date format.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict">
      <summary>The <see cref="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" /> property, when set to True, raises an alert if a developer tries to create a new function using an existing function name. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Watches">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Watches" /> object representing a range which is tracked when the worksheet is recalculated.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Width">
      <summary>The distance, in points, from the left edge of the application window to its right edge. If the window is minimized, this property is read-only and returns the width of the window icon.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Windows">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection that represents all the windows in all the workbooks.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.WindowsForPens">
      <summary>True if the computer is running under Microsoft Windows for Pen Computing.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.WindowState">
      <summary>Returns or sets the state of the window. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlWindowState" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Workbooks">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> collection that represents all the open workbooks.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.WorksheetFunction">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Application.Worksheets">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the worksheets in the active workbook.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel._Chart">
      <summary>Represents a chart in a workbook. The chart can be either an embedded chart (contained in a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" />) or a separate chart sheet.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart._CodeName">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart._Dummy23">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart._Evaluate(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.Activate">
      <summary>Makes the current chart the active chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.ApplyChartTemplate(System.String)">
      <summary>Applies a standard or custom chart type to a chart.</summary>
      <param name="Filename">The file name for a chart template.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.ApplyCustomType(Microsoft.Office.Interop.Excel.XlChartType,System.Object)">
      <summary>Applies a standard or custom chart type to a chart.</summary>
      <param name="ChartType">Required <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />. A standard chart type.</param>
      <param name="TypeName">Optional object (used only with a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object). The name of the custom chart type if <paramref name="ChartType" /> specifies a custom chart gallery.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Applies data labels to a point, a series, or all the series in a chart.</summary>
      <param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" />. The type of data label to apply.</param>
      <param name="LegendKey">Optional Object. True to show the legend key next to the point. The default value is False.</param>
      <param name="AutoText">Optional Object. True if the object automatically generates appropriate text based on content.</param>
      <param name="HasLeaderLines">Optional Object. For the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> and <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objects, True if the series has leader lines.</param>
      <param name="ShowSeriesName">Optional Object. The series name for the data label.</param>
      <param name="ShowCategoryName">Optional Object. The category name for the data label.</param>
      <param name="ShowValue">Optional Object. The value for the data label.</param>
      <param name="ShowPercentage">Optional Object. The percentage for the data label.</param>
      <param name="ShowBubbleSize">Optional Object. The bubble size for the data label.</param>
      <param name="Separator">Optional Object. The separator for the data label.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.ApplyLayout(System.Int32,System.Object)">
      <summary>Applies the layouts shown in the ribbon.</summary>
      <param name="Layout">Specifies the type of layout.  The type of layout is denoted by a number from 1 to 10.</param>
      <param name="ChartType">The type of chart.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.Arcs(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.Area3DGroup">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the area chart group on a 3-D chart.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.AreaGroups(System.Object)">
      <summary>On a 2-D chart, returns an object that represents either a single area chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the area chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</summary>
      <param name="Index">Optional Object. The chart group number.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.AutoFormat(System.Int32,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.AutoScaling">
      <summary>True if Microsoft Excel scales a 3-D chart so that it's closer in size to the equivalent 2-D chart. The <see cref="P:Microsoft.Office.Interop.Excel._Chart.RightAngleAxes" /> property must be True.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.Axes(System.Object,Microsoft.Office.Interop.Excel.XlAxisGroup)">
      <summary>Returns an object that represents either a single axis or a collection of the axes on the chart.</summary>
      <param name="Type">Optional Object. Specifies the axis to return. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constants: xlValue, xlCategory, or xlSeriesAxis (xlSeriesAxis is valid only for 3-D charts).</param>
      <param name="AxisGroup">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" />. Specifies the axis group. If this argument is omitted, the primary group is used. 3-D charts have only one axis group.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.BackWall">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that allows the user to individually format the back wall of a 3-D chart. Read-only.</summary>
      <returns>Walls</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.Bar3DGroup">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the bar chart group on a 3-D chart.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.BarGroups(System.Object)">
      <summary>On a 2-D chart, returns an object that represents either a single bar chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the bar chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</summary>
      <param name="Index">Optional Object. Specifies the chart group.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.BarShape">
      <summary>Returns or sets the shape used with the 3-D bar or column chart.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.Buttons(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.ChartArea">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" /> object that represents the complete chart area for the chart.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.ChartGroups(System.Object)">
      <summary>Returns an object that represents either a single chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of all the chart groups in the chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> object). The returned collection includes every type of group.</summary>
      <param name="Index">Optional Object. The chart group number.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.ChartObjects(System.Object)">
      <summary>Returns an object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> object) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> object) on the sheet.</summary>
      <param name="Index">Optional Object. The name or number of the chart. This argument can be an array to specify more than one chart.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.ChartStyle">
      <summary>Returns or sets the chart style for the chart. Read/write.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.ChartTitle">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> object that represents the title of the specified chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.ChartType">
      <summary>Returns or sets the chart type.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.ChartWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Modifies the properties of the given chart. You can use this method to quickly format a chart without setting all the individual properties. This method is non-interactive, and it changes only the specified properties.</summary>
      <param name="Source">Optional Object. The range that contains the source data for the new chart. If this argument is omitted, Microsoft Excel edits the active chart sheet or the selected chart on the active worksheet.</param>
      <param name="Gallery">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />. The chart type.</param>
      <param name="Format">Optional Object. The option number for the built-in autoformats. Can be a number from 1 through 10, depending on the gallery type. If this argument is omitted, Microsoft Excel chooses a default value based on the gallery type and data source.</param>
      <param name="PlotBy">Optional Object. Specifies whether the data for each series is in rows or columns. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: xlRows or xlColumns.</param>
      <param name="CategoryLabels">Optional Object. An integer specifying the number of rows or columns within the source range that contain category labels. Legal values are from 0 (zero) through one less than the maximum number of the corresponding categories or series.</param>
      <param name="SeriesLabels">Optional object. An integer specifying the number of rows or columns within the source range that contain series labels. Legal values are from 0 (zero) through one less than the maximum number of the corresponding categories or series.</param>
      <param name="HasLegend">Optional Object. True to include a legend.</param>
      <param name="Title">Optional Object. The chart title text.</param>
      <param name="CategoryTitle">Optional Object. The category axis title text.</param>
      <param name="ValueTitle">Optional Object. The value axis title text.</param>
      <param name="ExtraTitle">Optional Object. The series axis title for 3-D charts or the second value axis title for 2-D charts.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.CheckBoxes(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
      <summary>Checks the spelling of an object and displays the Spelling dialog box</summary>
      <param name="CustomDictionary">Optional Object. A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary. If this argument is omitted, the currently specified dictionary is used.</param>
      <param name="IgnoreUppercase">Optional Object. True to have Microsoft Excel ignore words that are all uppercase. False to have Microsoft Excel check words that are all uppercase. If this argument is omitted, the current setting will be used.</param>
      <param name="AlwaysSuggest">Optional Object. True to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found. False to have Microsoft Excel wait for you to input the correct spelling. If this argument is omitted, the current setting will be used.</param>
      <param name="SpellLang">Optional Object. The language of the dictionary being used. Can be one of the <see cref="T:Microsoft.Office.Core.MsoLanguageID" /> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.ClearToMatchStyle">
      <summary>Clears the chart elements formatting to automatic.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.CodeName">
      <summary>Returns the code name for the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.Column3DGroup">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the column chart group on a 3-D chart.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.ColumnGroups(System.Object)">
      <summary>On a 2-D chart, returns an object that represents either a single column chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the column chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</summary>
      <param name="Index">Optional Object. Specifies the chart group.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.Copy(System.Object,System.Object)">
      <summary>Copies the sheet to another location in the workbook.</summary>
      <param name="Before">Optional Object. The sheet before which the copied sheet will be placed. You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</param>
      <param name="After">Optional Object. The sheet after which the copied sheet will be placed. You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.CopyChartBuild">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat,Microsoft.Office.Interop.Excel.XlPictureAppearance)">
      <summary>Copies the selected object to the Clipboard as a picture.</summary>
      <param name="Appearance">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />. Specifies how the picture should be copied.</param>
      <param name="Format">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />. The format of the picture.</param>
      <param name="Size">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />. The size of the copied picture when the object is a chart on a chart sheet (not embedded on a worksheet).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.Corners">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Corners" /> object that represents the corners of a 3-D chart.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.This member is for Macintosh only and should not be used.</summary>
      <param name="Edition">This parameter is for Macintosh only and should not be used.</param>
      <param name="Appearance">This parameter is for Macintosh only and should not be used.</param>
      <param name="Size">This parameter is for Macintosh only and should not be used.</param>
      <param name="ContainsPICT">This parameter is for Macintosh only and should not be used.</param>
      <param name="ContainsBIFF">This parameter is for Macintosh only and should not be used.</param>
      <param name="ContainsRTF">This parameter is for Macintosh only and should not be used.</param>
      <param name="ContainsVALU">This parameter is for Macintosh only and should not be used.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.Creator">
      <summary>Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.DataTable">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.DataTable" /> object that represents the chart data table.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.DepthPercent">
      <summary>Returns or sets the depth of a 3-D chart as a percentage of the chart width (between 20 and 2000 percent).</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.Deselect">
      <summary>Cancels the selection for the specified chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.DisplayBlanksAs">
      <summary>Returns or sets the way that blank cells are plotted on a chart. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs" /> constants: xlNotPlotted, xlInterpolated, or xlZero.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.DoughnutGroups(System.Object)">
      <summary>On a 2-D chart, returns an object that represents either a single doughnut chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the doughnut chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</summary>
      <param name="Index">Optional Object. Specifies the chart group.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.DrawingObjects(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.Drawings(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.DropDowns(System.Object)">
      <summary>For callouts with an explicitly set drop value, this property returns the vertical distance (in points) from the edge of the text bounding box to the place where the callout line attaches to the text box. Read-only Single.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.Elevation">
      <summary>Returns or sets the elevation of the 3-D chart view in degrees.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.Evaluate(System.Object)">
      <summary>Converts a Microsoft Excel name to an object or a value.</summary>
      <param name="Name">Required Object. The name of the object, using the naming convention of Microsoft Excel.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.Export(System.String,System.Object,System.Object)">
      <summary>Exports the chart in a graphic format.</summary>
      <param name="Filename">Required String. The name of the exported file.</param>
      <param name="FilterName">Optional Object. The language-independent name of the graphic filter as it appears in the registry.</param>
      <param name="Interactive">Optional Object. True to display the dialog box that contains the filter-specific options. If this argument is False, Microsoft Excel uses the default values for the filter. The default value is False.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Exports to a file of the specified format.</summary>
      <param name="Type">The type of file format to export to.</param>
      <param name="Filename">The file name of the file to be saved. You can include a full path, or short_Excel2007 saves the file in the current folder.</param>
      <param name="Quality">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />. Specifies the quality of the published file.</param>
      <param name="IncludeDocProperties">True to include the document properties; otherwise False.</param>
      <param name="IgnorePrintAreas">True to ignore any print areas set when publishing; otherwise False.</param>
      <param name="From">The number of the page at which to start publishing. If this argument is omitted, publishing starts at the beginning.</param>
      <param name="To">The number of the last page to publish. If this argument is omitted, publishing ends with the last page.</param>
      <param name="OpenAfterPublish">True to display the file in the viewer after it is published; otherwise
False.</param>
      <param name="FixedFormatExtClassPtr">Pointer to the FixedFormatExt class.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.Floor">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> object that represents the floor of the 3-D chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.GapDepth">
      <summary>Returns or sets the distance between the data series in a 3-D chart as a percentage of the marker width. The value of this property must be between 0 and 500.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.GetChartElement(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
      <summary>Returns information about the chart element at specified X and Y coordinates. This method is unusual in that you specify values for only the first two arguments. Microsoft Excel fills in the other arguments, and your code should examine those values when the method returns.</summary>
      <param name="x">Required Integer. The X coordinate of the chart element.</param>
      <param name="y">Required Integer. The Y coordinate of the chart element.</param>
      <param name="ElementID">Required Integer. When the method returns, this argument contains the <see cref="T:Microsoft.Office.Interop.Excel.XlChartItem" /> value of the chart element at the specified coordinates. For more information, see the Remarks section.</param>
      <param name="Arg1">Required Integer. When the method returns, this argument contains information related to the chart element. For more information, see the Remarks section.</param>
      <param name="Arg2">Required Integer. When the method returns, this argument contains information related to the chart element. For more information, see the Remarks section.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.GroupBoxes(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.GroupObjects(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.HasAxis(System.Object,System.Object)">
      <summary>Returns or sets which axes exist on the chart.</summary>
      <param name="Index1">Optional Object. The axis type. Series axes apply only to 3-D charts. Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constants.</param>
      <param name="Index2">Optional Object. The axis group. 3-D charts have only one set of axes. Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" /> constants.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.HasDataTable">
      <summary>True if the chart has a data table.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.HasLegend">
      <summary>True if the chart has a legend.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.HasPivotFields">
      <summary>True if the PivotChart controls are displayed on the specified PivotChart report. The default value is True. For a regular chart, this property always returns False and cannot be set.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.HasTitle">
      <summary>True if the axis or chart has a visible title.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.HeightPercent">
      <summary>Returns or sets the height of a 3-D chart as a percentage of the chart width (between 5 and 500 percent).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.Hyperlinks">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range or worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.Index">
      <summary>Returns the index number of the object within the collection of similar objects.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.InDraftMode">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.Labels(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.Legend">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Legend" /> object that represents the legend for the chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.Line3DGroup">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the line chart group on a 3-D chart.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.LineGroups(System.Object)">
      <summary>On a 2-D chart, returns an object that represents either a single line chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the line chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</summary>
      <param name="Index">Optional Object. Specifies the chart group.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.Lines(System.Object)">
      <summary>Reserved for internal use. f</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.ListBoxes(System.Object)">
      <summary>Returns or sets the text entries in the specified list box or a combo box, as an array of strings, or returns or sets a single text entry. An error occurs if there are no entries in the list.</summary>
      <returns>Variant</returns>
      <param name="Index">The index number of a single text entry to be set or returned. If this argument is omitted, the entire list is returned or set as an array of strings.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.Location(Microsoft.Office.Interop.Excel.XlChartLocation,System.Object)">
      <summary>Moves the chart to a new location.</summary>
      <param name="Where">Required <see cref="T:Microsoft.Office.Interop.Excel.XlChartLocation" />. Where to move the chart.</param>
      <param name="Name">Optional Object; required if <paramref name="Where" /> is xlLocationAsObject. The name of the sheet where the chart will be embedded if <paramref name="Where" /> is xlLocationAsObject or the name of the new sheet if <paramref name="Where" /> is xlLocationAsNewSheet.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.MailEnvelope">
      <summary>Represents an e-mail header for a document.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.Move(System.Object,System.Object)">
      <summary>Moves the sheet to another location in the workbook.</summary>
      <param name="Before">Optional Object. The sheet before which the moved sheet will be placed. You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</param>
      <param name="After">Optional Object. The sheet after which the moved sheet will be placed. You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.Name">
      <summary>Returns or sets the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.Next">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the next sheet or cell.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.OLEObjects(System.Object)">
      <summary>Returns an object that represents either a single OLE object (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) or a collection of all OLE objects (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> collection) on the chart or sheet.</summary>
      <param name="Index">Optional Object. The name or number of the OLE object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.OnDoubleClick">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.OnSheetActivate">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.OnSheetDeactivate">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.OptionButtons(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.Ovals(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.PageSetup">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> object that contains all the page setup settings for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.Paste(System.Object)">
      <summary>Pastes chart data from the Clipboard into the specified chart.</summary>
      <param name="Type">Optional Object. Specifies the chart information to paste if a chart is on the Clipboard. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" /> constants: xlFormats, xlFormulas, or xlAll. The default value is xlAll. If there’s data other than a chart on the Clipboard, this argument cannot be used.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.Perspective">
      <summary>Returns or sets the perspective for the 3-D chart view. Must be between 0 and 100. This property is ignored if the <see cref="P:Microsoft.Office.Interop.Excel._Chart.RightAngleAxes" /> property is True.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.Pictures(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.Pie3DGroup">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the pie chart group on a 3-D chart.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.PieGroups(System.Object)">
      <summary>On a 2-D chart, returns an object that represents either a single pie chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the pie chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</summary>
      <param name="Index">Optional Object. Specifies the chart group.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.PivotLayout">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" /> object that represents the placement of fields in a PivotTable report and the placement of axes in a PivotChart report.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.PlotArea">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> object that represents the plot area of a chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.PlotBy">
      <summary>Returns or sets the way columns or rows are used as data series on the chart. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: xlColumns or xlRows. For PivotChart reports, this property is read-only and always returns xlColumns.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.PlotVisibleOnly">
      <summary>True if only visible cells are plotted. False if both visible and hidden cells are plotted.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.Previous">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the previous sheet or cell.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.PrintedCommentPages">
      <summary>Gets the number of comment pages that will be printed for the current chart.</summary>
      <returns>The number of comment pages that will be printed for the current chart.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Prints the object.</summary>
      <param name="From">Optional Object. The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
      <param name="To">Optional Object. The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
      <param name="Copies">Optional Object. The number of copies to print. If this argument is omitted, one copy is printed.</param>
      <param name="Preview">Optional Object. True to have Microsoft Excel invoke print preview before printing the object. False (or omitted) to print the object immediately.</param>
      <param name="ActivePrinter">Optional Object. Sets the name of the active printer.</param>
      <param name="PrintToFile">Optional Object. True to print to a file. If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</param>
      <param name="Collate">Optional Object. True to collate multiple copies.</param>
      <param name="PrToFileName">Optional Object. If <paramref name="PrintToFile" /> is set to True, this argument specifies the name of the file you want to print to.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.PrintPreview(System.Object)">
      <summary>Shows a preview of the object as it would look when printed.</summary>
      <param name="EnableChanges">Optional Object. True to enable changes to the chart. </param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Protects a chart so that it cannot be modified.</summary>
      <param name="Password">Optional Object. A string that specifies a case-sensitive password for the worksheet or workbook. If this argument is omitted, you can unprotect the worksheet or workbook without using a password. Otherwise, you must specify the password to unprotect the worksheet or workbook. If you forget the password, you cannot unprotect the worksheet or workbook. It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</param>
      <param name="DrawingObjects">Optional Object. True to protect shapes. The default value is False.</param>
      <param name="Contents">Optional Object. True to protect contents. For a chart, this protects the entire chart. For a worksheet, this protects the locked cells. The default value is True.</param>
      <param name="Scenarios">Optional Object. True to protect scenarios. This argument is valid only for worksheets. The default value is True.</param>
      <param name="UserInterfaceOnly">Optional Object. True to protect the user interface, but not macros. If this argument is omitted, protection applies both to macros and to the user interface.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.ProtectContents">
      <summary>True if the contents of the sheet are protected. This protects the entire chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.ProtectData">
      <summary>True if series formulas cannot be modified by the user.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.ProtectDrawingObjects">
      <summary>True if shapes are protected.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.ProtectFormatting">
      <summary>True if chart formatting cannot be modified by the user.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.ProtectGoalSeek">
      <summary>True if the user cannot modify chart data points with mouse actions.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.ProtectionMode">
      <summary>True if user-interface-only protection is turned on. To turn on user interface protection, use the <see cref="M:Microsoft.Office.Interop.Excel._Chart.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" /> method with the <paramref name="UserInterfaceOnly" /> argument set to True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.ProtectSelection">
      <summary>True if chart elements cannot be selected.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.RadarGroups(System.Object)">
      <summary>On a 2-D chart, returns an object that represents either a single radar chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the radar chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</summary>
      <param name="Index">Optional Object. Specifies the chart group.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.Rectangles(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.Refresh">
      <summary>Updates the cache of the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> or <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.RightAngleAxes">
      <summary>True if the chart axes are at right angles, independent of chart rotation or elevation. Applies only to 3-D line, column, and bar charts.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.Rotation">
      <summary>Returns or sets the rotation of the 3-D chart view (the rotation of the plot area around the z-axis in degrees). The value of this property must be from 0 to 360, except for 3-D bar charts, where the value must be from 0 to 44. The default value is 20. Applies only to 3-D charts.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Saves changes to the chart or worksheet in a different file.</summary>
      <param name="Filename">Optional Object. A string that indicates the name of the file to be saved. You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</param>
      <param name="FileFormat">Optional Object. The file format to use when you save the file. For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> property. For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</param>
      <param name="Password">Optional Object. A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</param>
      <param name="WriteResPassword">Optional Object. A string that indicates the write-reservation password for this file. If a file is saved with the password and the password isn't supplied when the file is opened, the file is opened as read-only.</param>
      <param name="ReadOnlyRecommended">Optional Object. True to display a message when the file is opened, recommending that the file be opened as read-only.</param>
      <param name="CreateBackup">Optional Object. True to create a backup file.</param>
      <param name="AddToMru">Optional Object. True to add this workbook to the list of recently used files. The default value is False.</param>
      <param name="TextCodepage">Optional Object. Not used in U.S. English Microsoft Excel.</param>
      <param name="TextVisualLayout">Optional Object. Not used in U.S. English Microsoft Excel.</param>
      <param name="Local">Optional Object. True saves files against the language of Microsoft Excel (including control panel settings). False (default) saves files against the language of Visual Basic for Applications (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.SaveChartTemplate(System.String)">
      <summary>Saves a custom chart template to the list of available chart templates.

</summary>
      <param name="Filename">The name of the chart template.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.Scripts">
      <summary>Returns the <see cref="T:Microsoft.Office.Core.Scripts" /> collection, which contains <see cref="T:Microsoft.Office.Core.Script" /> objects representing blocks of script or code in the specified document when it’s saved as a Web page.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.ScrollBars(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.Select(System.Object)">
      <summary>Selects the object.</summary>
      <param name="Replace">Optional Object. The object to replace.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.SeriesCollection(System.Object)">
      <summary>Returns an object that represents either a single series (a <see cref="T:Microsoft.Office.Interop.Excel.Series" /> object) or a collection of all the series (a <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> collection) in the chart or chart group.</summary>
      <param name="Index">Optional Object. The name or number of the series.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.SetBackgroundPicture(System.String)">
      <summary>Sets the background graphic for a worksheet or chart.</summary>
      <param name="Filename">Required String. The name of the graphic file.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.SetDefaultChart(System.Object)">
      <summary>Specifies the name of the  chart template that Microsoft Excel uses when creating new charts.</summary>
      <param name="Name">Specifies the name of the default chart template that will be used when creating new charts.  This name can be a string naming a chart in the gallery for a user-defined template or it can be a special constant <see cref="F:Microsoft.Office.Interop.Excel.XlChartGallery.xlBuiltIn" /> to specify a built-in chart template.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.SetElement(Microsoft.Office.Core.MsoChartElementType)">
      <summary>Sets chart elements on a chart. Read/write.</summary>
      <param name="Element">Specifies the chart element type.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.SetSourceData(Microsoft.Office.Interop.Excel.Range,System.Object)">
      <summary>Sets the source data range for the chart.</summary>
      <param name="Source">Required <see cref="T:Microsoft.Office.Interop.Excel.Range" />. The range that contains the source data.</param>
      <param name="PlotBy">Optional Object. Specifies the way the data is to be plotted. Can be either of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: xlColumns or xlRows.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.Shapes">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the worksheet or chart sheet. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.ShowAllFieldButtons">
      <summary>Gets or sets whether to display all field buttons on a PivotChart.</summary>
      <returns>true if all field buttons on a PivotChart should be displayed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.ShowAxisFieldButtons">
      <summary>Gets or sets whether to display axis field buttons on a PivotChart.</summary>
      <returns>true if axis field buttons on a PivotChart should be displayed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.ShowDataLabelsOverMaximum">
      <summary>Returns or sets whether to show the data labels when the value is greater than the  maximum value on the value axis.  Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.ShowDraftModeButton">
      <summary>Reserved for internal use.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.ShowLegendFieldButtons">
      <summary>Gets or sets whether to display legend field buttons on a PivotChart.</summary>
      <returns>true if legend field buttons on a PivotChart should be displayed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.ShowReportFilterFieldButtons">
      <summary>Gets or sets whether to display the report filter field buttons on a PivotChart.</summary>
      <returns>true if the report filter field buttons on a PivotChart should be displayed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.ShowValueFieldButtons">
      <summary>Gets or sets whether to display the value field buttons on a PivotChart.</summary>
      <returns>true if the value field buttons on a PivotChart should be displayed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.ShowWindow">
      <summary>True if the embedded chart is displayed in a separate window. The <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object used with this property must refer to an embedded chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.SideWall">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that allows the user to individually format the side wall of a 3-D chart. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Walls" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.SizeWithWindow">
      <summary>True if Microsoft Excel resizes the chart to match the size of the chart sheet window. False if the chart size isn't attached to the window size. Applies only to chart sheets (doesn't apply to embedded charts).</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.Spinners(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.SubType">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.SurfaceGroup">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the surface chart group of a 3-D chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.Tab">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> object for a chart or a worksheet.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.TextBoxes(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.Type">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.Unprotect(System.Object)">
      <summary>Removes protection from a sheet or workbook. This method has no effect if the sheet or workbook isn't protected.</summary>
      <param name="Password">Optional Object. A string that denotes the case-sensitive password to use to unprotect the sheet or workbook. If the sheet or workbook isn't protected with a password, this argument is ignored. If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password. If you omit this argument for a workbook that's protected with a password, the method fails.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.Visible">
      <summary>Determines whether the object is visible.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.Walls">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that represents the walls of the 3-D chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Chart.WallsAndGridlines2D">
      <summary>True if gridlines are drawn two-dimensionally on a 3-D chart.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Chart.XYGroups(System.Object)">
      <summary>On a 2-D chart, returns an object that represents either a single scatter chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the scatter chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</summary>
      <param name="Index">Optional Object. Specifies the chart group.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel._Global">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Global._Evaluate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel._Global._Run2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.ActiveCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.ActiveChart"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.ActiveDialog"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.ActiveMenuBar"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.ActivePrinter"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.ActiveSheet"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.ActiveWindow"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.ActiveWorkbook"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.AddIns"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.Assistant"></member>
    <member name="M:Microsoft.Office.Interop.Excel._Global.Calculate"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.Cells"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.Charts"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.Columns"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.CommandBars"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.DDEAppReturnCode"></member>
    <member name="M:Microsoft.Office.Interop.Excel._Global.DDEExecute(System.Int32,System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel._Global.DDEInitiate(System.String,System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel._Global.DDEPoke(System.Int32,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel._Global.DDERequest(System.Int32,System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel._Global.DDETerminate(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.DialogSheets"></member>
    <member name="M:Microsoft.Office.Interop.Excel._Global.Evaluate(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.Excel4IntlMacroSheets"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.Excel4MacroSheets"></member>
    <member name="M:Microsoft.Office.Interop.Excel._Global.ExecuteExcel4Macro(System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel._Global.Intersect(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.MenuBars"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.Modules"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.Names"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.Range(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.Rows"></member>
    <member name="M:Microsoft.Office.Interop.Excel._Global.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.Selection"></member>
    <member name="M:Microsoft.Office.Interop.Excel._Global.SendKeys(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.Sheets"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.ShortcutMenus(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.ThisWorkbook"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.Toolbars"></member>
    <member name="M:Microsoft.Office.Interop.Excel._Global.Union(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.Windows"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.Workbooks"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.WorksheetFunction"></member>
    <member name="P:Microsoft.Office.Interop.Excel._Global.Worksheets"></member>
    <member name="T:Microsoft.Office.Interop.Excel._IOLEObject">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._IOLEObject.Activate"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.AltHTML"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.AutoLoad"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.AutoUpdate"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel._IOLEObject.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel._IOLEObject.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel._IOLEObject.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel._IOLEObject.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel._IOLEObject.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel._IOLEObject.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.ListFillRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.Object"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.OLEType"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.progID"></member>
    <member name="M:Microsoft.Office.Interop.Excel._IOLEObject.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel._IOLEObject.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.SourceName"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.TopLeftCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel._IOLEObject.Update"></member>
    <member name="M:Microsoft.Office.Interop.Excel._IOLEObject.Verb(Microsoft.Office.Interop.Excel.XlOLEVerb)"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IOLEObject.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel._IQueryTable">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.AdjustColumnWidth"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.BackgroundQuery"></member>
    <member name="M:Microsoft.Office.Interop.Excel._IQueryTable.CancelRefresh"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.CommandText"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.CommandType"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.Connection"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel._IQueryTable.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.Destination"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.EditWebPage"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.EnableEditing"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.EnableRefresh"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.FetchedRowOverflow"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.FieldNames"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.FillAdjacentFormulas"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.HasAutoFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.ListObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.MaintainConnection"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.Parameters"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.PostText"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.PreserveColumnInfo"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.PreserveFormatting"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.QueryType"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.Recordset"></member>
    <member name="M:Microsoft.Office.Interop.Excel._IQueryTable.Refresh(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.Refreshing"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.RefreshOnFileOpen"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.RefreshPeriod"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.RefreshStyle"></member>
    <member name="M:Microsoft.Office.Interop.Excel._IQueryTable.ResetTimer"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.ResultRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.RobustConnect"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.RowNumbers"></member>
    <member name="M:Microsoft.Office.Interop.Excel._IQueryTable.SaveAsODC(System.String,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.SaveData"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.SavePassword"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.Sort"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.SourceConnectionFile"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.SourceDataFile"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.Sql"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.TablesOnlyFromHTML"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.TextFileColumnDataTypes"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.TextFileCommaDelimiter"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.TextFileConsecutiveDelimiter"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.TextFileDecimalSeparator"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.TextFileFixedColumnWidths"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.TextFileOtherDelimiter"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.TextFileParseType"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.TextFilePlatform"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.TextFilePromptOnRefresh"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.TextFileSemicolonDelimiter"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.TextFileSpaceDelimiter"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.TextFileStartRow"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.TextFileTabDelimiter"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.TextFileTextQualifier"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.TextFileThousandsSeparator"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.TextFileTrailingMinusNumbers"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.TextFileVisualLayout"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.WebConsecutiveDelimitersAsOne"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.WebDisableDateRecognition"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.WebDisableRedirections"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.WebFormatting"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.WebPreFormattedTextToColumns"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.WebSelectionType"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.WebSingleBlockTextImport"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.WebTables"></member>
    <member name="P:Microsoft.Office.Interop.Excel._IQueryTable.WorkbookConnection"></member>
    <member name="T:Microsoft.Office.Interop.Excel._OLEObject">
      <summary>Represents an ActiveX control or a linked or embedded OLE object on a worksheet. The OLEObject object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> collection. The OLEObjects collection contains all the OLE objects on a single worksheet.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._OLEObject.Activate">
      <summary>Activates the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.AltHTML">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.Application">
      <summary>This property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object). Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.AutoLoad">
      <summary>True if the OLE object is automatically loaded when the workbook that contains it is opened. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.AutoUpdate">
      <summary>True if the OLE object is updated automatically when the source changes. Valid only if the object is linked (its <see cref="P:Microsoft.Office.Interop.Excel._OLEObject.OLEType" /> property must be xlOLELink). Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.BottomRightCell">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell that lies under the lower-right corner of the object. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._OLEObject.BringToFront">
      <summary>Brings the object to the front of the z-order.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._OLEObject.Copy">
      <summary>Copies the object to the Clipboard.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._OLEObject.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
      <summary>Copies the selected object to the Clipboard as a picture. Object.</summary>
      <param name="Appearance">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />. Specifies how the picture should be copied.</param>
      <param name="Format">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />. The format of the picture.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only xlCreatorCode.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._OLEObject.Cut">
      <summary>Cuts the object to the Clipboard or pastes it into a specified destination.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._OLEObject.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._OLEObject.Duplicate">
      <summary>Duplicates the object and returns a reference to the new copy.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.Enabled">
      <summary>True if the object is enabled. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.Height">
      <summary>The height, in points, of the object. Read/write Double.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.Index">
      <summary>Returns the index number of the object within the collection of similar objects. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.Interior">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.Left">
      <summary>The distance, in points, from the left edge of the object to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart). Read/write Double.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.LinkedCell">
      <summary>Returns or sets the worksheet range linked to the control's value. If you place a value in the cell, the control takes this value. Likewise, if you change the value of the control, that value is also placed in the cell. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.ListFillRange">
      <summary>Returns or sets the worksheet range used to fill the specified list box. Setting this property destroys any existing list in the list box. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.Locked">
      <summary>True if the object is locked, False if the object can be modified when the sheet is protected. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.Name">
      <summary>Returns or sets the name of the object. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.Object">
      <summary>Returns the OLE Automation object associated with this OLE object. Read-only Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.OLEType">
      <summary>Returns the OLE object type. Can be one of the following XlOLEType constants: xlOLELink or xlOLEEmbed. Returns xlOLELink if the object is linked (it exists outside of the file) or returns xlOLEEmbed if the object is embedded (it's entirely contained within the file). Read-only Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.OnAction">
      <summary>Returns or sets the name of a macro that’s run when the specified object is clicked. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.Placement">
      <summary>Returns or sets the way the object is attached to the cells below it. Read/write Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.PrintObject">
      <summary>True if the object will be printed when the document is printed. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.progID">
      <summary>Returns the programmatic identifiers for the object. Read-only String.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._OLEObject.Select(System.Object)">
      <summary>Selects the object.</summary>
      <param name="Replace">Optional Object. True to replace the current selection with the specified object. False to extend the current selection to include any previously selected objects and the specified object.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._OLEObject.SendToBack">
      <summary>Sends the object to the back of the z-order.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.Shadow">
      <summary>True if the font is a shadow font or if the object has a shadow. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.ShapeRange">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object that represents the specified object or objects. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.SourceName">
      <summary>Returns or sets the specified object's link source name. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.Top">
      <summary>The distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart). Read/write Double.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.TopLeftCell">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell that lies under the upper-left corner of the specified object. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._OLEObject.Update">
      <summary>Updates the link.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._OLEObject.Verb(Microsoft.Office.Interop.Excel.XlOLEVerb)">
      <summary>Sends a verb to the server of the specified OLE object.</summary>
      <param name="Verb">Optional XlOLEVerb. The verb that the server of the OLE object should act on. If this argument is omitted, the default verb is sent. The available verbs are determined by the object's source application. Typical verbs for an OLE object are Open and Primary (represented by the XlOLEVerb constants xlOpen and xlPrimary).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.Visible">
      <summary>Determines whether the object is visible. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.Width">
      <summary>The width, in points, of the object. Read/write Double.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._OLEObject.ZOrder">
      <summary>Returns the z-order position of the object. Read-only Integer.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel._QueryTable">
      <summary>Represents a worksheet table built from data returned from an external data source, such as a SQL server or a Microsoft Access database. The QueryTable object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.AdjustColumnWidth">
      <summary>True if the column widths are automatically adjusted for the best fit each time you refresh the specified query table or XML map. False if the column widths aren’t automatically adjusted with each refresh. The default value is True. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.BackgroundQuery">
      <summary>True if queries for the PivotTable report or query table are performed asynchronously (in the background). Read/write Boolean.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._QueryTable.CancelRefresh">
      <summary>Cancels all background queries for the specified query table. Use the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.Refreshing" /> property to determine whether a background query is currently in progress.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.CommandText">
      <summary>Returns or sets the command string for the specified data source. Read/write Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.CommandType">
      <summary>Returns or sets an <see cref="T:Microsoft.Office.Interop.Excel.XlCmdType" /> constant that describes the command type associated with the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.CommandText" /> property. The default value is xlCmdSQL. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlCmdType" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.Connection">
      <summary>Returns or sets a string that contains connection information for the query table. Read/write Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.Creator">
      <summary>Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._QueryTable.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.Destination">
      <summary>Returns the cell in the upper-left corner of the query table destination range (the range where the resulting query table will be placed). The destination range must be on the worksheet that contains the <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> object. Read-only Range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.EditWebPage">
      <summary>Returns or sets the web page uniform resource locator (URL) for a web query. Read/write Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.EnableEditing">
      <summary>True if the user can edit the specified query table. False if the user can only refresh the query table. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.EnableRefresh">
      <summary>True if the PivotTable cache or query table can be refreshed by the user. The default value is True. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.FetchedRowOverflow">
      <summary>True if the number of rows returned by the last use of the <see cref="M:Microsoft.Office.Interop.Excel._QueryTable.Refresh(System.Object)" /> method is greater than the number of rows available on the worksheet. Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.FieldNames">
      <summary>True if field names from the data source appear as column headings for the returned data. The default value is True. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.FillAdjacentFormulas">
      <summary>True if formulas to the right of the specified query table are automatically updated whenever the query table is refreshed. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.HasAutoFormat">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.ListObject">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object for the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object or <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> object. Read-only ListObject object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.MaintainConnection">
      <summary>True if the connection to the specified data source is maintained after the refresh and until the workbook is closed. The default value is True. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.Name">
      <summary>Returns or sets the name of the object. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.Parameters">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Parameters" /> collection that represents the query table parameters. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.PostText">
      <summary>Returns or sets the string used with the post method of inputting data into a Web server to return data from a Web query. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.PreserveColumnInfo">
      <summary>True if column sorting, filtering, and layout information is preserved whenever a query table is refreshed. The default value is False. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.PreserveFormatting">
      <summary>This property is True if any formatting common to the first five rows of data are applied to new rows of data in the query table. Unused cells aren’t formatted. The property is False if the last AutoFormat applied to the query table is applied to new rows of data. The default value is True (unless the query table was created in Microsoft Excel 97 and the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.HasAutoFormat" /> property is True, in which case PreserveFormatting is False). Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType">
      <summary>Indicates the type of query used by Microsoft Excel to populate the query table or PivotTable cache. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlQueryType" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.Recordset">
      <summary>Returns or sets a Recordset object that’s used as the data source for the specified query table or PivotTable cache. Read/write.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._QueryTable.Refresh(System.Object)">
      <summary>Updates an external data range (<see cref="T:Microsoft.Office.Interop.Excel.QueryTable" />). Boolean.</summary>
      <param name="BackgroundQuery">Optional Object. Used only with QueryTables that are based on the results of a SQL query. True to return control to the procedure as soon as a database connection is made and the query is submitted. The QueryTable is updated in the background. False to return control to the procedure only after all data has been fetched to the worksheet. If this argument isn't specified, the setting of the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.BackgroundQuery" /> property determines the query mode.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.Refreshing">
      <summary>True if there’s a background query in progress for the specified query table. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.RefreshOnFileOpen">
      <summary>True if the PivotTable cache or query table is automatically updated each time the workbook is opened. The default value is False. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.RefreshPeriod">
      <summary>Returns or sets the number of minutes between refreshes. Read/write Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.RefreshStyle">
      <summary>Returns or sets the way rows on the specified worksheet are added or deleted to accommodate the number of rows in a recordset returned by a query. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlCellInsertionMode" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._QueryTable.ResetTimer">
      <summary>Resets the refresh timer for the specified query table or PivotTable report to the last interval you set using the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.RefreshPeriod" /> property.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.ResultRange">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the area of the worksheet occupied by the specified query table. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.RobustConnect">
      <summary>Returns or sets how the PivotTable cache connects to its data source. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlRobustConnect" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.RowNumbers">
      <summary>True if row numbers are added as the first column of the specified query table. Read/write Boolean.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._QueryTable.SaveAsODC(System.String,System.Object,System.Object)">
      <summary>Saves the PivotTable cache source as a Microsoft Office Data Connection file.</summary>
      <param name="ODCFileName">Required String. Location to which the file is saved.</param>
      <param name="Description">Optional Object. Description that will be saved in the file.</param>
      <param name="Keywords">Optional Object. Space-separated keywords that can be used to search for this file.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.SaveData">
      <summary>True if data for the PivotTable report is saved with the workbook. False if only the report definition is saved. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.SavePassword">
      <summary>True if password information in an ODBC connection string is saved with the specified query. False if the password is removed. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.Sort">
      <summary>Returns the sort criteria for the query table range. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Sort" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.SourceConnectionFile">
      <summary>Returns or sets a String indicating the Microsoft Office Data Connection file or similar file that was used to create the PivotTable. Read/write.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.SourceDataFile">
      <summary>Returns or sets a String indicating the source data file for a query table.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.Sql">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.TablesOnlyFromHTML">
      <summary>Creates a data table based on input values and formulas that you define on a worksheet.</summary>
      <returns>Variant</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileColumnDataTypes">
      <summary>Returns or sets an ordered array of constants that specify the data types applied to the corresponding columns in the text file that you’re importing into a query table. The default constant for each column is xlGeneral. Read/write Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileCommaDelimiter">
      <summary>True if the comma is the delimiter when you import a text file into a query table. False if you want to use some other character as the delimiter. The default value is False. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileConsecutiveDelimiter">
      <summary>True if consecutive delimiters are treated as a single delimiter when you import a text file into a query table. The default value is False. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileDecimalSeparator">
      <summary>Returns or sets the decimal separator character that Microsoft Excel uses when you import a text file into a query table. The default is the system decimal separator character. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileFixedColumnWidths">
      <summary>Returns or sets an array of integers that correspond to the widths of the columns (in characters) in the text file that you’re importing into a query table. Valid widths are from 1 through 32,767 characters. Read/write Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileOtherDelimiter">
      <summary>Returns or sets the character used as the delimiter when you import a text file into a query table. The default value is Null. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileParseType">
      <summary>Returns or sets the column format for the data in the text file that you’re importing into a query table. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.TextFilePlatform">
      <summary>Returns or sets the origin of the text file you’re importing into the query table. This property determines which code page is used during the data import. The default value is the current setting of the File Origin option in the Text File Import Wizard. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.TextFilePromptOnRefresh">
      <summary>True if you want to specify the name of the imported text file each time the query table is refreshed. The Import Text File dialog box allows you to specify the path and file name. The default value is False. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileSemicolonDelimiter">
      <summary>True if the semicolon is the delimiter when you import a text file into a query table, and if the value of the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileParseType" /> property is xlDelimited. The default value is False. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileSpaceDelimiter">
      <summary>True if the space character is the delimiter when you import a text file into a query table. The default value is False. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileStartRow">
      <summary>Returns or sets the row number at which text parsing will begin when you import a text file into a query table. Valid values are integers from 1 through 32,767. The default value is 1. Read/write Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileTabDelimiter">
      <summary>True if the tab character is the delimiter when you import a text file into a query table. The default value is False. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileTextQualifier">
      <summary>Returns or sets the text qualifier when you import a text file into a query table. The text qualifier specifies that the enclosed data is in text format. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileThousandsSeparator">
      <summary>Returns or sets the thousands separator character that Microsoft Excel uses when you import a text file into a query table. The default is the system thousands separator character. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileTrailingMinusNumbers">
      <summary>True for Microsoft Excel to treat numbers imported as text that begin with a "-" symbol as a negative number. False for Excel to treat numbers imported as text that begin with a "-" symbol as text. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileVisualLayout">
      <summary>Returns or sets a <see cref="T:Microsoft.Office.Interop.Excel.XlTextVisualLayoutType" /> constant that indicates whether the visual layout of the text being imported is left-to-right or right-to-left.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.WebConsecutiveDelimitersAsOne">
      <summary>True if consecutive delimiters are treated as a single delimiter when you import data from HTML &lt;PRE&gt; tags in a Web page into a query table, and if the data is to be parsed into columns. False if you want to treat consecutive delimiters as multiple delimiters. The default value is True. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.WebDisableDateRecognition">
      <summary>True if data that resembles dates is parsed as text when you import a Web page into a query table. False if date recognition is used. The default value is False. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.WebDisableRedirections">
      <summary>True if Web query redirections are disabled for a <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> object. The default value is False. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.WebFormatting">
      <summary>Returns or sets a value that determines how much formatting from a Web page, if any, is applied when you import the page into a query table. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlWebFormatting" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.WebPreFormattedTextToColumns">
      <summary>Returns or sets whether data contained within HTML &lt;PRE&gt; tags in the Web page is parsed into columns when you import the page into a query table. The default is True. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.WebSelectionType">
      <summary>Returns or sets a value that determines whether an entire Web page, all tables on the Web page, or only specific tables on the Web page are imported into a query table. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlWebSelectionType" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.WebSingleBlockTextImport">
      <summary>True if data from the HTML &lt;PRE&gt; tags in the specified Web page is processed all at once when you import the page into a query table. False if the data is imported in blocks of contiguous rows so that header rows will be recognized as such. The default value is False. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.WebTables">
      <summary>Returns or sets a comma-delimited list of table names or table index numbers when you import a Web page into a query table. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._QueryTable.WorkbookConnection">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> object that the query table uses. Read-only.</summary>
      <returns>WorkbookConnection</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel._Workbook">
      <summary>Represents a Microsoft Excel workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook._CodeName">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook._Protect(System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook._ReadOnlyRecommended">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook._SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.AcceptAllChanges(System.Object,System.Object,System.Object)">
      <summary>Accepts all changes in the specified shared workbook.</summary>
      <param name="When">Optional Object. Specifies when all the changes are accepted.</param>
      <param name="Who">Optional Object. Specifies by whom all the changes are accepted.</param>
      <param name="Where">Optional Object. Specifies where all the changes are accepted.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.AcceptLabelsInFormulas">
      <summary>True if labels can be used in worksheet formulas. The default value is False. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion">
      <summary>Gets or sets whether certain worksheet functions use the latest accuracy algorithms to calculate their results.</summary>
      <returns>Specifies which version of algorithms to use for certain worksheet functions.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.Activate">
      <summary>Activates the first window associated with the workbook. This won't run any Auto_Activate or Auto_Deactivate macros that might be attached to the workbook (use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run those macros).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.ActiveChart">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the active chart (either an embedded chart or a chart sheet). An embedded chart is considered active when it's either selected or activated. When no chart is active, this property returns Nothing. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSheet">
      <summary>Returns an object that represents the active sheet (the sheet on top) in the active workbook or in the specified window or workbook. Returns Nothing if no sheet is active. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSlicer">
      <summary>Gets an object that represents the active slicer in the active workbook or in the specified workbook. </summary>
      <returns>An object that represents the active slicer in the active workbook or in the specified workbook.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.AddToFavorites">
      <summary>Adds a shortcut to the workbook or a hyperlink to the Favorites folder.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object). Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.ApplyTheme(System.String)">
      <summary>Applies the specified theme to the current workbook.</summary>
      <param name="Filename">Name of the theme.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Author">
      <summary>Returns or sets the author of the comment. Read-only String.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateFrequency">
      <summary>Returns or sets the number of minutes between automatic updates to the shared workbook. Read/write Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateSaveChanges">
      <summary>True if current changes to the shared workbook are posted to other users whenever the workbook is automatically updated. False if changes aren’t posted (this workbook is still synchronized with changes made by other users). The default value is True. Read/write Boolean.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.BreakLink(System.String,Microsoft.Office.Interop.Excel.XlLinkType)">
      <summary>Converts formulas linked to other Microsoft Excel sources or OLE sources to values.</summary>
      <param name="Name">Required String. The name of the link.</param>
      <param name="Type">Required <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />. The type of link.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.BuiltinDocumentProperties">
      <summary>Returns a <see cref="T:Microsoft.Office.Core.DocumentProperties" /> collection that represents all the built-in document properties for the specified workbook. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.CalculationVersion">
      <summary>Returns a number whose rightmost four digits are the minor calculation engine version number and whose other digits (on the left) are the major version of Microsoft Excel. For a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object, this property returns the information about the version of Excel that the workbook was last fully recalculated by. Read-only Integer.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.CanCheckIn">
      <summary>True if Microsoft Excel can check in a specified workbook to a server.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.ChangeFileAccess(Microsoft.Office.Interop.Excel.XlFileAccess,System.Object,System.Object)">
      <summary>Changes the access permissions for the workbook. This may require an updated version to be loaded from the disk.</summary>
      <param name="Mode">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFileAccess" />. Specifies the new access mode.</param>
      <param name="WritePassword">Optional Object. Specifies the write-reserved password if the file is write reserved and <paramref name="Mode" /> is xlReadWrite. Ignored if there's no password for the file or if <paramref name="Mode" /> is xlReadOnly.</param>
      <param name="Notify">Optional Object. True (or omitted) to notify the user if the file cannot be immediately accessed.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.ChangeHistoryDuration">
      <summary>Returns or sets the number of days shown in the shared workbook's change history. Read/write Integer.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.ChangeLink(System.String,System.String,Microsoft.Office.Interop.Excel.XlLinkType)">
      <summary>Changes a link from one document to another.</summary>
      <param name="Name">Required String. The name of the Microsoft Excel or DDE/OLE link to be changed, as it was returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</param>
      <param name="NewName">Required String. The new name of the link.</param>
      <param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />. The link type.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Charts">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the chart sheets in the specified workbook. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.CheckCompatibility">
      <summary>Controls whether or not the compatibility checker is run automatically when the workbook is saved. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.CheckIn(System.Object,System.Object,System.Object)">
      <summary>Returns a workbook from a local computer to a server and sets the local workbook to read-only so that it cannot be edited locally. Calling this method will also close the workbook.</summary>
      <param name="SaveChanges">Optional Object. True saves changes and checks in the document. False returns the document to a checked-in status without saving revision.</param>
      <param name="Comments">Optional Object. Allows the user to enter check-in comments for the revision of the workbook being checked in (applies only if <paramref name="SaveChanges" /> equals True).</param>
      <param name="MakePublic">Optional Object. True allows the user to publish the workbook after it has been checked in. This submits the workbook for the approval process, which can eventually result in a version of the workbook being published to users with read-only rights to the workbook (applies only if <paramref name="SaveChanges" /> equals True).</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.CheckInWithVersion(System.Object,System.Object,System.Object,System.Object)">
      <summary>Saves a workbook to a server from a local computer, and sets the local workbook to read-only so that it cannot be edited locally.</summary>
      <param name="SaveChanges">true to save the workbook to the server location. The default is true.</param>
      <param name="Comments">Comments for the revision of the workbook being checked in (applies only if <paramref name="SaveChanges" /> is set to true).</param>
      <param name="MakePublic">true to allow the user to publish the workbook after it is checked in.</param>
      <param name="VersionType">Specifies versioning information for the workbook.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.Close(System.Object,System.Object,System.Object)">
      <summary>Closes the object.</summary>
      <param name="SaveChanges">Optional Object. If there are no changes to the workbook, this argument is ignored. If there are changes to the workbook and the workbook appears in other open windows, this argument is ignored. If there are changes to the workbook but the workbook doesn't appear in any other open windows, this argument specifies whether changes should be saved, as shown in the following table.ValueActionTrueSaves the changes to the workbook. If there is not yet a file name associated with the workbook, then <paramref name="FileName" /> is used. If <paramref name="FileName" /> is omitted, the user is asked to supply a file name.FalseDoes not save the changes to this file.OmittedDisplays a dialog box asking the user whether or not to save changes.</param>
      <param name="Filename">Optional Object. Save changes under this file name.</param>
      <param name="RouteWorkbook">Optional Object. If the workbook doesn't need to be routed to the next recipient (if it has no routing slip or has already been routed), this argument is ignored. Otherwise, Microsoft Excel routes the workbook as shown in the following table.ValueMeaningTrueSends the workbook to the next recipient.FalseDoesn't send the workbook.OmittedDisplays a dialog box asking the user whether the workbook should be sent.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.CodeName">
      <summary>Returns the code name for the object. Read-only String. The value that you see in the cell to the right of (Name) in the Properties window is the code name of the selected object. At design time, you can change the code name of an object by changing this value. You cannot programmatically change this property at run time.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Colors(System.Object)">
      <summary>Returns or sets colors in the palette for the workbook. The palette has 56 entries, each represented by an RGB value. Read/write Object.</summary>
      <param name="Index">Optional Object. The color number (from 1 to 56). If this argument isn’t specified, this method returns an array that contains all 56 of the colors in the palette.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.CommandBars">
      <summary>Returns a <see cref="P:Microsoft.Office.Interop.Excel._Workbook.CommandBars" /> object that represents the Microsoft Excel command bars. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Comments">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Comments" />
 collection that represents all the comments for the specified worksheet. Read-only.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.ConflictResolution">
      <summary>Returns or sets the way conflicts are to be resolved whenever a shared workbook is updated. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Connections">
      <summary>The <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Connections" /> property establishes a connection between the workbook and an ODBC or an OLEDB data source and refreshes the data without prompting the user. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Connections" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.ConnectionsDisabled">
      <summary>Disables the external connections or links in the workbook. Read-only</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Container">
      <summary>Returns the object that represents the container application for the specified OLE object. Read-only Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.ContentTypeProperties">
      <summary>Returns a <see cref="T:Microsoft.Office.Core.MetaProperties" /> collection that describes the metadata stored in the workbook. Read-only.</summary>
      <returns>MetaProperties</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.CreateBackup">
      <summary>True if a backup file is created when this file is saved. Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Creator">
      <summary>Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.CustomDocumentProperties">
      <summary>Returns or sets a <see cref="T:Microsoft.Office.Core.DocumentProperties" /> collection that represents all the custom document properties for the specified workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.CustomViews">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.CustomViews" /> collection that represents all the custom views for the workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.CustomXMLParts">
      <summary>Returns a. <see cref="T:Microsoft.Office.Core.CustomXMLParts" /> collection that represents the custom XML in the XML data store. Read-only.</summary>
      <returns>CustomXMLParts</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Date1904">
      <summary>True if the workbook uses the 1904 date system. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.DefaultPivotTableStyle">
      <summary>Specifies the table style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> collection that is used as the default style for PivotTables. Read/write.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.DefaultSlicerStyle">
      <summary>Gets or sets the style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> object that is used as the default style for slicers.</summary>
      <returns>The style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> object that is used as the default style for slicers.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.DefaultTableStyle">
      <summary>Specifies the table style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> collection that is used as the default TableStyle. Read/write </summary>
      <returns>Object</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.DeleteNumberFormat(System.String)">
      <summary>Deletes a custom number format from the workbook.</summary>
      <param name="NumberFormat">Required String. Names the number format to be deleted.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.DialogSheets">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.DisableDraftModeAllCharts">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.DisplayDrawingObjects">
      <summary>Returns or sets how shapes are displayed. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.DisplayInkComments">
      <summary>A Boolean value that determines whether ink comments are displayed in the workbook. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.DocumentInspectors">
      <summary>Returns a <see cref="T:Microsoft.Office.Core.DocumentInspectors" /> collection that represents the Document Inspector modules for the specified workbook. Read-only.</summary>
      <returns>DocumentInspectors</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.DocumentLibraryVersions">
      <summary>Returns a <see cref="P:Microsoft.Office.Interop.Excel._Workbook.DocumentLibraryVersions" /> collection that represents the collection of versions of a shared workbook that has versioning enabled and that is stored in a document library on a server.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.DoNotPromptForConvert">
      <summary>Returns or sets if the user should be prompted to convert the workbook if the workbook contains features that are not supported by versions of Excel earlier than short_Excel2007. Read/write </summary>
      <returns>Boolean</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.Dummy16">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.Dummy17(System.Int32)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.EnableAutoRecover">
      <summary>Saves changed files, of all formats, on a timed interval. Read/write Boolean.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.EnableConnections">
      <summary>The <see cref="M:Microsoft.Office.Interop.Excel._Workbook.EnableConnections" /> method allows developers to programmatically enable data connections within the workbook for the user.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.EnableDraftModeAllCharts">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.EncryptionProvider">
      <summary>Returns a String specifying the name of the algorithm encryption provider that 1st_Excel12 uses when encrypting documents. Read/write.</summary>
      <returns>s</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.EndReview">
      <summary>Terminates a review of a file that has been sent for review using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" /> method.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.EnvelopeVisible">
      <summary>True if the e-mail composition header and the envelope toolbar are both visible. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Excel4IntlMacroSheets">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 international macro sheets in the specified workbook. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Excel4MacroSheets">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 macro sheets in the specified workbook. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Excel8CompatibilityMode">
      <summary>The <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel8CompatibilityMode" /> property provides developers with a way to check if the workbook is in compatibility mode. Read-only </summary>
      <returns>Boolean</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.ExclusiveAccess">
      <summary>Assigns the current user exclusive access to the workbook that's open as a shared list.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>The <see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method is used to publish a workbook to either the PDF or XPS format.</summary>
      <param name="Type">Can be either <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypePDF" />
or <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypeXPS" />.</param>
      <param name="Filename">A String that indicates the name of the file to be saved. You can include a full path or short.  Excel2007 saves the file in the current folder.</param>
      <param name="Quality">Can  be set to either <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityStandard" />
or <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityMinimum" />.</param>
      <param name="IncludeDocProperties">Set to True to indicate that document properties should be included or set to False to indicate that they are omitted.</param>
      <param name="IgnorePrintAreas">If set to True, ignores any print areas set when publishing. If set to False, will use the print areas set when publishing.</param>
      <param name="From">The number of the page at which to start publishing. If this argument is omitted, publishing starts at the beginning.</param>
      <param name="To">The number of the last page to publish. If this argument is omitted, publishing ends with the last page</param>
      <param name="OpenAfterPublish">If set to True displays file in viewer after it is published. If set to
False the file is published but not displayed.</param>
      <param name="FixedFormatExtClassPtr">Pointer to the FixedFormatExt class.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat">
      <summary>Returns the file format and/or type of the workbook. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlFileFormat" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Final">
      <summary>Returns or sets a Boolean that indicates whether a workbook is final. Read/write </summary>
      <returns>Boolean</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.FollowHyperlink(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Displays a cached document if it’s already been downloaded. Otherwise, this method resolves the hyperlink, downloads the target document, and displays the document in the appropriate application.</summary>
      <param name="Address">Required String. The address of the target document.</param>
      <param name="SubAddress">Optional Object. The location within the target document. The default value is the empty string.</param>
      <param name="NewWindow">Optional Object. True to display the target application in a new window. The default value is False.</param>
      <param name="AddHistory">Optional Object. Not used. Reserved for future use.</param>
      <param name="ExtraInfo">Optional Object. A string or byte array that specifies additional information for HTTP to use to resolve the hyperlink. For example, you can use <paramref name="ExtraInfo" /> to specify the coordinates of an image map, the contents of a form, or a FAT file name.</param>
      <param name="Method">Optional Object. Specifies the way <paramref name="ExtraInfo" /> is attached. Can be one of the <see cref="T:Microsoft.Office.Core.MsoExtraInfoMethod" /> constants.</param>
      <param name="HeaderInfo">Optional Object. A string that specifies header information for the HTTP request. The default value is an empty string.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.ForceFullCalculation">
      <summary>Forces a full calculation of a workbook. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.ForwardMailer">
      <summary>You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.FullName">
      <summary>Returns the name of the object, including its path on disk, as a string. Read-only String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.FullNameURLEncoded">
      <summary>Returns a String indicating the name of the object, including its path on disk, as a string. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.GetWorkflowTasks">
      <summary>Returns the collection of <see cref="T:Microsoft.Office.Core.WorkflowTask" /> objects for the specified workbook. </summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.WorkflowTasks" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.GetWorkflowTemplates">
      <summary>Returns the collection of <see cref="T:Microsoft.Office.Core.WorkflowTemplate" /> objects for the specified workbook. </summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.WorkflowTemplates" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.HasMailer">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.HasPassword">
      <summary>True if the workbook has a protection password. Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.HasRoutingSlip">
      <summary>True if the workbook has a routing slip. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.HasVBProject">
      <summary>Returns a Boolean that represents whether a workbook has an attached Microsoft Visual Basic for Applications project. Read-only.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.HighlightChangesOnScreen">
      <summary>True if changes to the shared workbook are highlighted on-screen. Read/write Boolean.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.HighlightChangesOptions(System.Object,System.Object,System.Object)">
      <summary>Controls how changes are shown in a shared workbook.</summary>
      <param name="When">Optional Object. The changes that are shown. Can be one of the following XlHighlightChangesTime constants: xlSinceMyLastSave, xlAllChanges, or xlNotYetReviewed.</param>
      <param name="Who">Optional Object. The user or users whose changes are shown. Can be "Everyone", "Everyone but Me", or the name of one of the users of the shared workbook.</param>
      <param name="Where">Optional Object. An A1-style range reference that specifies the area to check for changes.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.HTMLProject">
      <summary>Returns the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.HTMLProject" /> object in the specified workbook, which represents a top-level project branch as in the Project Explorer in the Microsoft Script Editor. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.IconSets">
      <summary>This property is used to filter data in a workbook based on a cell icon from the <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> collection. Read-only.</summary>
      <returns>IconSets</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.InactiveListBorderVisible">
      <summary>A Boolean value that specifies whether list borders are visible when a list is not active. Returns True if the border is visible. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.IsAddin">
      <summary>True if the workbook is running as an add-in. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.IsInplace">
      <summary>True if the specified workbook is being edited in place. False if the workbook has been opened in Microsoft Excel for editing. Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.KeepChangeHistory">
      <summary>True if change tracking is enabled for the shared workbook. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Keywords">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.LinkInfo(System.String,Microsoft.Office.Interop.Excel.XlLinkInfo,System.Object,System.Object)">
      <summary>Returns the link date and update status. Object.</summary>
      <param name="Name">Optional String.</param>
      <param name="LinkInfo">Required <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfo" />. The type of information to be returned.</param>
      <param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfoType" />. The type of link to return.</param>
      <param name="EditionRef">Optional Object. If the link is an edition, this argument specifies the edition reference as a string in R1C1 style. This argument is required if there's more than one publisher or subscriber with the same name in the workbook.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)">
      <summary>Returns an array of links in the workbook. The names in the array are the names of the linked documents, editions, or DDE or OLE servers. Returns Empty if there are no links. Object.</summary>
      <param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLink" />. The type of link to return.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.ListChangesOnNewSheet">
      <summary>True if changes to the shared workbook are shown on a separate worksheet. Read/write Boolean.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.LockServerFile">
      <summary>Locks the workbook on the server to prevent modification.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Mailer">
      <summary>You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.MergeWorkbook(System.Object)">
      <summary>Merges changes from one workbook into an open workbook.</summary>
      <param name="Filename">Required Object. The file name of the workbook that contains the changes to be merged into the open workbook.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Modules">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing">
      <summary>True if the workbook is open as a shared list. Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Name">
      <summary>Returns the name of the object. Read-only String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Names">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the names in the specified workbook (including all worksheet-specific names). Read-only Names object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.NewWindow">
      <summary>Creates a new window or a copy of the specified window.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.OnSave">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.OnSheetActivate">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.OnSheetDeactivate">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.OpenLinks(System.String,System.Object,System.Object)">
      <summary>Opens the supporting documents for a link or links.</summary>
      <param name="Name">Required String. The name of the Microsoft Excel or DDE/OLE link, as returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</param>
      <param name="ReadOnly">Optional Object. True to open documents as read-only. The default value is False.</param>
      <param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLink" />. The link type.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Password">
      <summary>Returns or sets the password that must be supplied to open the specified workbook. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionAlgorithm">
      <summary>Returns a String indicating the algorithm Microsoft Excel uses to encrypt passwords for the specified workbook. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionFileProperties">
      <summary>True if Microsoft Excel encrypts file properties for the specified password-protected workbook. Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionKeyLength">
      <summary>Returns an Integer indicating the key length of the algorithm Microsoft Excel uses when encrypting passwords for the specified workbook. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionProvider">
      <summary>Returns a String specifying the name of the algorithm encryption provider that Microsoft Excel uses when encrypting passwords for the specified workbook. Read-only.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Path">
      <summary>Returns the complete path to the application, excluding the final separator and name of the application. Read-only String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Permission">
      <summary>Returns a <see cref="T:Microsoft.Office.Core.Permission" /> object that represents the permission settings in the specified workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.PersonalViewListSettings">
      <summary>True if filter and sort settings for lists are included in the user's personal view of the shared workbook. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.PersonalViewPrintSettings">
      <summary>True if print settings are included in the user's personal view of the shared workbook. Read-write Boolean.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.PivotCaches">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotCaches" /> collection that represents all the PivotTable caches in the specified workbook. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.Post(System.Object)">
      <summary>Posts the specified workbook to a public folder. This method works only with a Microsoft Exchange client connected to a Microsoft Exchange server.</summary>
      <param name="DestName">Optional Object. This argument is ignored. The Post method prompts the user to specify the destination for the workbook.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.PrecisionAsDisplayed">
      <summary>True if calculations in this workbook will be done using only the precision of the numbers as they’re displayed. Read/write Boolean.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Prints the object.</summary>
      <param name="From">Optional Object. The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
      <param name="To">Optional Object. The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
      <param name="Copies">Optional Object. The number of copies to print. If this argument is omitted, one copy is printed.</param>
      <param name="Preview">Optional Object. True to have Microsoft Excel invoke print preview before printing the object. False (or omitted) to print the object immediately.</param>
      <param name="ActivePrinter">Optional Object. Sets the name of the active printer.</param>
      <param name="PrintToFile">Optional Object. True to print to a file. If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</param>
      <param name="Collate">Optional Object. True to collate multiple copies.</param>
      <param name="PrToFileName">Optional Object. If <paramref name="PrintToFile" /> is set to True, this argument specifies the name of the file you want to print to.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.PrintPreview(System.Object)">
      <summary>Shows a preview of the object as it would look when printed.</summary>
      <param name="EnableChanges">Enables changes to the object.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)">
      <summary>Protects a workbook so that it cannot be modified.</summary>
      <param name="Password">Optional Object. A string that specifies a case-sensitive password for the worksheet or workbook. If this argument is omitted, you can unprotect the worksheet or workbook without using a password. Otherwise, you must specify the password to unprotect the worksheet or workbook. If you forget the password, you cannot unprotect the worksheet or workbook. It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</param>
      <param name="Structure">Optional Object. True to protect the structure of the workbook (the relative position of the sheets). The default value is False.</param>
      <param name="Windows">Optional Object. True to protect the workbook windows. If this argument is omitted, the windows aren’t protected.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.ProtectSharing(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Saves the workbook and protects it for sharing.</summary>
      <param name="Filename">Optional Object. A string indicating the name of the saved file. You can include a full path; if you don’t, Microsoft Excel saves the file in the current folder.</param>
      <param name="Password">Optional Object. A case-sensitive string indicating the protection password to be given to the file. Should be no longer than 15 characters.</param>
      <param name="WriteResPassword">Optional Object. A string indicating the write-reservation password for this file. If a file is saved with the password and the password isn’t supplied when the file is opened, the file is opened read-only.</param>
      <param name="ReadOnlyRecommended">Optional Object. True to display a message when the file is opened recommending that the file be opened read-only.</param>
      <param name="CreateBackup">Optional Object. True to create a backup file.</param>
      <param name="SharingPassword">Optional Object. A string indicating the password to be used to protect the file for sharing.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.ProtectSharingEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.ProtectStructure">
      <summary>True if the order of the sheets in the workbook is protected. Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.ProtectWindows">
      <summary>True if the windows of the workbook are protected. Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.PublishObjects">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.PublishObjects" /> collection. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.PurgeChangeHistoryNow(System.Int32,System.Object)">
      <summary>Removes entries from the change log for the specified workbook.</summary>
      <param name="Days">Required Integer. The number of days that changes in the change log are to be retained.</param>
      <param name="SharingPassword">Optional Object. The password that unprotects the workbook for sharing. If the workbook is protected for sharing with a password and this argument is omitted, the user is prompted for the password.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.ReadOnly">
      <summary>Returns True if the object has been opened as read-only. Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.ReadOnlyRecommended">
      <summary>True if the workbook was saved as read-only recommended. Read-only Boolean.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.RecheckSmartTags">
      <summary>Causes a foreground smart tag check to occur, automatically annotating data that was not annotated before.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.RefreshAll">
      <summary>Refreshes all external data ranges and PivotTable reports in the specified workbook.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.RejectAllChanges(System.Object,System.Object,System.Object)">
      <summary>Rejects all changes in the specified shared workbook.</summary>
      <param name="When">Optional Object. Specifies when all the changes are rejected.</param>
      <param name="Who">Optional Object. Specifies by whom all the changes are rejected.</param>
      <param name="Where">Optional Object. Specifies where all the changes are rejected.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.ReloadAs(Microsoft.Office.Core.MsoEncoding)">
      <summary>Reloads a workbook based on an HTML document, using the specified document encoding.</summary>
      <param name="Encoding">Required <see cref="T:Microsoft.Office.Core.MsoEncoding" />. The encoding that is to be applied to the workbook.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.RemoveDocumentInformation(Microsoft.Office.Interop.Excel.XlRemoveDocInfoType)">
      <summary>Removes all information of the specified type from the workbook.</summary>
      <param name="RemoveDocInfoType">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType" /> values indicating the type of information to be removed.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.RemovePersonalInformation">
      <summary>True if personal information can be removed from the specified workbook. The default value is False. Read/write Boolean.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.RemoveUser(System.Int32)">
      <summary>Disconnects the specified user from the shared workbook.</summary>
      <param name="Index">Required Integer. The user index.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.Reply">
      <summary>You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.ReplyAll">
      <summary>You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.ReplyWithChanges(System.Object)">
      <summary>Sends an e-mail message to the author of a workbook that has been sent out for review, notifying them that a reviewer has completed review of the workbook.</summary>
      <param name="ShowMessage">Optional Object. False does not display the message. True displays the message.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Research">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Research" /> object that represents the research service for a workbook. Read-only.</summary>
      <returns>Research</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.ResetColors">
      <summary>Resets the color palette to the default colors.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.RevisionNumber">
      <summary>Returns the number of times the workbook has been saved while open as a shared list. If the workbook is open in exclusive mode, this property returns 0 (zero). Read-only Integer.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.Route">
      <summary>Routes the workbook, using the workbook's current routing slip.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Routed">
      <summary>True if the workbook has been routed to the next recipient. False if the workbook needs to be routed. Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.RoutingSlip">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.RoutingSlip" /> object that represents the routing slip for the workbook. Reading this property if there's no routing slip causes an error (check the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.HasRoutingSlip" /> property first). Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)">
      <summary>Runs the Auto_Open, Auto_Close, Auto_Activate, or Auto_Deactivate macro attached to the workbook. This method is included for backward compatibility. You should use the Open, Close, Activate and Deactivate events instead of these macros.</summary>
      <param name="Which">Required <see cref="T:Microsoft.Office.Interop.Excel.XlRunAutoMacro" />.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.Save">
      <summary>Saves changes to the specified workbook.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Saves changes to the workbook in a different file.</summary>
      <param name="Filename">Optional Object. A string that indicates the name of the file to be saved. You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</param>
      <param name="FileFormat">Optional Object. The file format to use when you save the file. For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> property. For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</param>
      <param name="Password">Optional Object. A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</param>
      <param name="WriteResPassword">Optional Object. A string that indicates the write-reservation password for this file. If a file is saved with the password and the password isn't supplied when the file is opened, the file is opened as read-only.</param>
      <param name="ReadOnlyRecommended">Optional Object. True to display a message when the file is opened recommending that the file be opened as read-only.</param>
      <param name="CreateBackup">Optional Object. True to create a backup file.</param>
      <param name="AccessMode">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />.</param>
      <param name="ConflictResolution">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" />.</param>
      <param name="AddToMru">Optional Object. True to add this workbook to the list of recently used files. The default value is False.</param>
      <param name="TextCodepage">Optional Object. Not used in U.S. English Microsoft Excel.</param>
      <param name="TextVisualLayout">Optional Object. Not used in U.S. English Microsoft Excel.</param>
      <param name="Local">Optional Object. True saves files against the language of Microsoft Excel (including control panel settings). False (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.SaveAsXMLData(System.String,Microsoft.Office.Interop.Excel.XmlMap)">
      <summary>Exports the data that has been mapped to the specified XML schema map to an XML data file.</summary>
      <param name="Filename">Required String. A string that indicates the name of the file to be saved. You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</param>
      <param name="Map">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object. The schema map to apply to the data.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.SaveCopyAs(System.Object)">
      <summary>Saves a copy of the workbook to a file but doesn't modify the open workbook in memory.</summary>
      <param name="Filename">Required. Specifies the file name for the copy.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Saved">
      <summary>True if no changes have been made to the specified workbook since it was last saved. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.SaveLinkValues">
      <summary>True if Microsoft Excel saves external link values with the workbook. Read/write Boolean.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.sblt(System.String)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.SendFaxOverInternet(System.Object,System.Object,System.Object)">
      <summary>Sends a worksheet as a fax to the specified recipients.</summary>
      <param name="Recipients">Optional Object. A string that represents the fax numbers and e-mail addresses of the people to whom the fax will be sent. Separate multiple recipients with a semicolon.</param>
      <param name="Subject">Optional Object. A string that represents the subject line for the faxed document.</param>
      <param name="ShowMessage">Optional Object. True displays the fax message before sending it. False sends the fax without displaying the fax message.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)">
      <summary>Sends a workbook in an e-mail message for review to the specified recipients.</summary>
      <param name="Recipients">Optional Object. A string that lists the people to whom to send the message. These can be unresolved names and aliases in an e-mail phone book or full e-mail addresses. Separate multiple recipients with a semicolon (;). If left blank and <paramref name="ShowMessage" /> is False, you will receive an error message, and the message will not be sent.</param>
      <param name="Subject">Optional Object. A string for the subject of the message. If left blank, the subject will be: Please review "<paramref name="filename" />".</param>
      <param name="ShowMessage">Optional Object. A Boolean value that indicates whether the message should be displayed when the method is executed. The default value is True. If set to False, the message is automatically sent to the recipients without first showing the message to the sender.</param>
      <param name="IncludeAttachment">Optional Object. A Boolean value that indicates whether the message should include an attachment or a link to a server location. The default value is True. If set to False, the document must be stored at a shared location.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.SendMail(System.Object,System.Object,System.Object)">
      <summary>Sends the workbook by using the installed mail system.</summary>
      <param name="Recipients">Required Object. Specifies the name of the recipient as text, or as an array of text strings if there are multiple recipients. At least one recipient must be specified, and all recipients are added as To recipients.</param>
      <param name="Subject">Optional Object. Specifies the subject of the message. If this argument is omitted, the document name is used.</param>
      <param name="ReturnReceipt">Optional Object. True to request a return receipt. False not to request a return receipt. The default value is False.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.SendMailer(System.Object,Microsoft.Office.Interop.Excel.XlPriority)">
      <summary>You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
      <param name="FileFormat">This parameter is for Macintosh only and should not be used.</param>
      <param name="Priority">This parameter is for Macintosh only and should not be used.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.ServerPolicy">
      <summary>Returns a <see cref="T:Microsoft.Office.Core.ServerPolicy" /> object that represents a policy specified for a workbook stored on a server running 2nd_OSS_NoVersion 2007. Read-only.</summary>
      <returns>ServerPolicy</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.ServerViewableItems">
      <summary>Allows a developer to interact with the list of published objects in the workbook that are shown on the server. Read-only.</summary>
      <returns>
        <see cref="P:Microsoft.Office.Interop.Excel._Workbook.ServerViewableItems" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.SetLinkOnData(System.String,System.Object)">
      <summary>Sets the name of a procedure that runs whenever a DDE link is updated.</summary>
      <param name="Name">Required String. The name of the DDE/OLE link as returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</param>
      <param name="Procedure">Required String. The name of the procedure to be run when the link is updated. This can be either a Microsoft Excel 4.0 macro or a Visual Basic procedure. Set this argument to an empty string ("") to indicate that no procedure should run when the link is updated.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)">
      <summary>Sets the options for encrypting workbooks using passwords.</summary>
      <param name="PasswordEncryptionProvider">Optional Object. A case sensitive string of the encryption provider.</param>
      <param name="PasswordEncryptionAlgorithm">Optional Object. A case sensitive string of the algorithmic short name (i.e. "RC4").</param>
      <param name="PasswordEncryptionKeyLength">Optional Object. The encryption key length which is a multiple of 8 (40 or greater).</param>
      <param name="PasswordEncryptionFileProperties">Optional Object. True (default) to encrypt file properties.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.SharedWorkspace">
      <summary>Returns a <see cref="T:Microsoft.Office.Core.SharedWorkspace" /> object that represents the Document Workspace in which a specified document is located. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Sheets">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the sheets in the specified workbook. Read-only Sheets object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.ShowConflictHistory">
      <summary>True if the Conflict History worksheet is visible in the workbook that's open as a shared list. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.ShowPivotChartActiveFields">
      <summary>This property controls the visibility of the PivotChart Filter Pane. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.ShowPivotTableFieldList">
      <summary>True (default) if the PivotTable field list can be shown. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Signatures">
      <summary>Returns the digital signatures for a workbook. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.SignatureSet" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.SlicerCaches">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> object associated with the workbook.</summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> object associated with the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.SmartDocument">
      <summary>Returns a <see cref="T:Microsoft.Office.Core.SmartDocument" /> object that represents the settings for a smart document solution. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.SmartTagOptions">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTagOptions" /> object representing the options that can be performed with a smart tag.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Styles">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> collection that represents all the styles in the specified workbook. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Subject">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Sync">
      <summary>Returns a <see cref="T:Microsoft.Office.Core.Sync" /> object that provides access to the methods and properties for documents that are part of a Document Workspace.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.TableStyles">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> collection object for the current workbook that refers to the styles used in the current workbook. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.TemplateRemoveExtData">
      <summary>True if external data references are removed when the workbook is saved as a template. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Theme">
      <summary>Returns the theme applied to the current workbook. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.OfficeTheme" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Title">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.ToggleFormsDesign">
      <summary>Toggles form design mode on or off.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.Unprotect(System.Object)">
      <summary>Removes protection from a sheet or workbook. This method has no effect if the sheet or workbook isn't protected.</summary>
      <param name="Password">Optional Object. A string that denotes the case-sensitive password to use to unprotect the sheet or workbook. If the sheet or workbook isn't protected with a password, this argument is ignored. If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password. If you omit this argument for a workbook that's protected with a password, the method fails.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.UnprotectSharing(System.Object)">
      <summary>Turns off protection for sharing and saves the workbook.</summary>
      <param name="SharingPassword">Optional Object. The workbook password.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.UpdateFromFile">
      <summary>Updates a read-only workbook from the saved disk version of the workbook if the disk version is more recent than the copy of the workbook that is loaded in memory. If the disk copy hasn't changed since the workbook was loaded, the in-memory copy of the workbook isn't reloaded.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.UpdateLink(System.Object,System.Object)">
      <summary>Updates a Microsoft Excel, DDE, or OLE link (or links).</summary>
      <param name="Name">Optional Object. The name of the Microsoft Excel or DDE/OLE link to be updated, as returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</param>
      <param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.UpdateLinks">
      <summary>Returns or sets an <see cref="T:Microsoft.Office.Interop.Excel.XlUpdateLinks" /> constant indicating a workbook's setting for updating embedded OLE links. Read/write.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.UpdateRemoteReferences">
      <summary>True if Microsoft Excel updates remote references in the workbook. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.UserControl">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.UserStatus">
      <summary>Returns a 1-based, two-dimensional array that provides information about each user who has the workbook open as a shared list. The first element of the second dimension is the name of the user, the second element is the date and time when the user last opened the workbook, and the third element is a number indicating the type of list (1 indicates exclusive, and 2 indicates shared). Read-only Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.VBASigned">
      <summary>True if the Visual Basic for Applications project for the specified workbook has been digitally signed. Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.VBProject">
      <summary>Returns a VBProject object that represents the Visual Basic project in the specified workbook. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.WebOptions">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.WebOptions" /> collection, which contains workbook-level attributes used by Microsoft Excel when you save a document as a Web page or open a Web page. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.WebPagePreview">
      <summary>Displays a preview of the specified workbook as it would look if saved as a Web page.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Windows">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection that represents all the windows in the specified workbook. Read-only Windows object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.Worksheets">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the worksheets in the specified workbook. Read-only Sheets object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.WritePassword">
      <summary>Returns or sets a String for the write password of a workbook. Read/write.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.WriteReserved">
      <summary>True if the workbook is write-reserved. Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.WriteReservedBy">
      <summary>Returns the name of the user who currently has write permission for the workbook. Read-only String.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.XmlImport(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)">
      <summary>Imports an XML data file into the current workbook. Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</summary>
      <param name="Url">Required String. A uniform resource locator (URL) or a uniform naming convention (UNC) path to a XML data file.</param>
      <param name="ImportMap">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />. The schema map to apply when importing the file.</param>
      <param name="Overwrite">Optional Boolean. If a value is not specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite data that has been mapped to the schema map specified in the <paramref name="ImportMap" /> parameter. Set to True to overwrite the data or False to append the new data to the existing data. The default value is True. If a value is specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite existing data. Set to True to overwrite existing data or False to cancel the import if data would be overwritten. The default value is True.</param>
      <param name="Destination">Optional <see cref="T:Microsoft.Office.Interop.Excel.Range" />. The data will be imported into a new XML list at the range specified.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Workbook.XmlImportXml(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)">
      <summary>Imports an XML data stream that has been previously loaded into memory. Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</summary>
      <param name="Data">Required String. The data to import.</param>
      <param name="ImportMap">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />. The schema map to apply when importing the file.</param>
      <param name="Overwrite">Optional Boolean. If a value is not specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite data that has been mapped to the schema map specified in the <paramref name="ImportMap" /> parameter. Set to True to overwrite the data or False to append the new data to the existing data. The default value is True. If a value is specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite existing data. Set to True to overwrite existing data or False to cancel the import if data would be overwritten. The default value is True.</param>
      <param name="Destination">Optional <see cref="T:Microsoft.Office.Interop.Excel.Range" />. The data will be imported into a new XML list in the range specified.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.XmlMaps">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> collection that represents the schema maps that have been added to the specified workbook. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Workbook.XmlNamespaces">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespaces" /> collection that represents the XML namespaces contained in the specified workbook. Read-only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel._Worksheet">
      <summary>Represents a worksheet.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet._CheckSpelling(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet._CodeName">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet._DisplayRightToLeft">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet._Evaluate(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet._PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.Activate">
      <summary>Makes the current sheet the active sheet. Equivalent to clicking the sheet's tab.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object). Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.Arcs(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilter">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> object if filtering is on. Returns Nothing if filtering is off. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilterMode">
      <summary>True if the AutoFilter drop-down arrows are currently displayed on the sheet. This property is independent of the <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode" /> property. Read/write Boolean.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.Buttons(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.Calculate">
      <summary>Calculates all open workbooks, a specific worksheet in a workbook, or a specified range of cells on a worksheet, as shown in the following table.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.Cells">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells on the worksheet (not just the cells that are currently in use). Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.ChartObjects(System.Object)">
      <summary>Returns an object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> object) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> object) on the sheet.</summary>
      <param name="Index">Optional Variant. The name or number of the chart. This argument can be an array to specify more than one chart.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.CheckBoxes(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
      <summary>Checks the spelling of an object. This form has no return value; Microsoft Excel displays the Spelling dialog box.</summary>
      <param name="CustomDictionary">Optional Object. A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary. If this argument is omitted, the currently specified dictionary is used.</param>
      <param name="IgnoreUppercase">Optional Object. True to have Microsoft Excel ignore words that are all uppercase. False to have Microsoft Excel check words that are all uppercase. If this argument is omitted, the current setting will be used.</param>
      <param name="AlwaysSuggest">Optional Object. True to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found. False to have Microsoft Excel wait for you to input the correct spelling. If this argument is omitted, the current setting will be used.</param>
      <param name="SpellLang">Optional Object. The language of the dictionary being used. Can be one of the MsoLanguageID values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.CircleInvalid">
      <summary>Circles invalid entries on the worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.CircularReference">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing the first circular reference on the sheet, or returns Nothing if there's no circular reference on the sheet. The circular reference must be removed before calculation can proceed. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.ClearArrows">
      <summary>Clears the tracer arrows from the worksheet. Tracer arrows are added by using the auditing feature.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.ClearCircles">
      <summary>Clears circles from invalid entries on the worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.CodeName">
      <summary>Returns the code name for the object. Read-only String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.Columns">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the columns on the specified worksheet. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.Comments">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> collection that represents all the comments for the specified worksheet. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationFunction">
      <summary>Returns the function code used for the current consolidation. Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> constants. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationOptions">
      <summary>Returns a three-element array of consolidation options, as shown in the following table. If the element is True, that option is set. Read-only Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationSources">
      <summary>Returns an array of string values that name the source sheets for the worksheet's current consolidation. Returns Empty if there's no consolidation on the sheet. Read-only Object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.Copy(System.Object,System.Object)">
      <summary>Copies the sheet to another location in the workbook.</summary>
      <param name="Before">Optional Object. The sheet before which the copied sheet will be placed. You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</param>
      <param name="After">Optional Object. The sheet after which the copied sheet will be placed. You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.Creator">
      <summary>Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only xlCreatorCode.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.CustomProperties">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.CustomProperties" /> object representing the identifier information associated with a worksheet.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayAutomaticPageBreaks">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayPageBreaks">
      <summary>True if page breaks (both automatic and manual) on the specified worksheet are displayed. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayRightToLeft">
      <summary>True if the specified window, worksheet, or ListObject is displayed from right to left instead of from left to right. False if the object is displayed from left to right. Read-only Boolean.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.DrawingObjects(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.Drawings(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.DropDowns(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.EnableAutoFilter">
      <summary>True if AutoFilter arrows are enabled when user-interface-only protection is turned on. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.EnableCalculation">
      <summary>True if Microsoft Excel automatically recalculates the worksheet when necessary. False if Excel doesn't recalculate the sheet. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.EnableFormatConditionsCalculation">
      <summary>Returns or sets if conditional formats will occur automatically as needed. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.EnableOutlining">
      <summary>True if outlining symbols are enabled when user-interface-only protection is turned on. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.EnablePivotTable">
      <summary>True if PivotTable controls and actions are enabled when user-interface-only protection is turned on. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.EnableSelection">
      <summary>Returns or sets what can be selected on the sheet. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlEnableSelection" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.Evaluate(System.Object)">
      <summary>Converts a Microsoft Excel name to an object or a value.</summary>
      <param name="Name">Required String. The name of the object, using the naming convention of Microsoft Excel.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Exports to a file of the specified format.</summary>
      <param name="Type">The type of file format to export to.</param>
      <param name="Filename">The file name of the file to be saved. You can include a full path, or short_Excel2007 saves the file in the current folder.</param>
      <param name="Quality">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />. Specifies the quality of the published file.</param>
      <param name="IncludeDocProperties">True to include the document properties; otherwise False.</param>
      <param name="IgnorePrintAreas">True to ignore any print areas set when publishing; otherwise False.</param>
      <param name="From">The number of the page at which to start publishing. If this argument is omitted, publishing starts at the beginning.</param>
      <param name="To">The number of the last page to publish. If this argument is omitted, publishing ends with the last page.</param>
      <param name="OpenAfterPublish">True to display the file in the viewer after it is published; otherwise
False.</param>
      <param name="FixedFormatExtClassPtr">Pointer to the FixedFormatExt class.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode">
      <summary>True if the worksheet is in filter mode. Read-only Boolean.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.GroupBoxes(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.GroupObjects(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.HPageBreaks">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> collection that represents the horizontal page breaks on the sheet. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.Hyperlinks">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range or worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.Index">
      <summary>Returns the index number of the object within the collection of similar objects. Read-only Integer.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.Labels(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.Lines(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.ListBoxes(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.ListObjects">
      <summary>Returns a collection of <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> objects in the worksheet. Read-only ListObjects collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.MailEnvelope">
      <summary>Represents an e-mail header for a document.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.Move(System.Object,System.Object)">
      <summary>Moves the sheet to another location in the workbook</summary>
      <param name="Before">Optional Object. The sheet before which the moved sheet will be placed. You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</param>
      <param name="After">Optional Object. The sheet after which the moved sheet will be placed. You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.Name">
      <summary>Returns or sets the name of the object. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.Names">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the worksheet-specific names (names defined with the "WorksheetName!" prefix). Read-only Names object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.Next">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />, or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the next sheet or cell. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.OLEObjects(System.Object)">
      <summary>Returns an object that represents either a single OLE object (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) or a collection of all OLE objects (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> collection) on the chart or sheet. Read-only.</summary>
      <param name="Index">Optional Object. The name or number of the OLE object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.OnCalculate">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.OnData">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.OnDoubleClick">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.OnEntry">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.OnSheetActivate">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.OnSheetDeactivate">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.OptionButtons(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.Outline">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Outline" /> object that represents the outline for the specified worksheet. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.Ovals(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.PageSetup">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> object that contains all the page setup settings for the specified object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.Paste(System.Object,System.Object)">
      <summary>Pastes the contents of the Clipboard onto the sheet.</summary>
      <param name="Destination">Optional Object. A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that specifies where the Clipboard contents should be pasted. If this argument is omitted, the current selection is used. This argument can be specified only if the contents of the Clipboard can be pasted into a range. If this argument is specified, the <paramref name="Link" /> argument cannot be used.</param>
      <param name="Link">Optional Object. True to establish a link to the source of the pasted data. If this argument is specified, the <paramref name="Destination" /> argument cannot be used. The default value is False.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Pastes the contents of the Clipboard onto the sheet using a specified format. Use this method to paste data from other applications or to paste data in a specific format.</summary>
      <param name="Format">Optional Object. A string that specifies the Clipboard format of the data.</param>
      <param name="Link">Optional Object. True to establish a link to the source of the pasted data. If the source data isn’t suitable for linking or the source application doesn't support linking, this parameter is ignored. The default value is False.</param>
      <param name="DisplayAsIcon">Optional Object. True to display the pasted data as an icon. The default value is False.</param>
      <param name="IconFileName">Optional Object. The name of the file that contains the icon to use if <paramref name="DisplayAsIcon" /> is True.</param>
      <param name="IconIndex">Optional Object. The index number of the icon within the icon file.</param>
      <param name="IconLabel">Optional Object. The text label of the icon.</param>
      <param name="NoHTMLFormatting">Optional Object. True to remove all formatting, hyperlinks, and images from HTML. False to paste HTML as is. The default value is False.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.Pictures(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.PivotTables(System.Object)">
      <summary>Returns an object that represents either a single PivotTable report (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object) or a collection of all the PivotTable reports (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> object) on a worksheet. Read-only.</summary>
      <param name="Index">Optional Object. The name or number of the report.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Creates a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object. This method doesn’t display the PivotTable Wizard. This method isn’t available for OLE DB data sources. Use the <see cref="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" /> method to add a PivotTable cache, and then create a PivotTable report based on the cache. PivotTable object.</summary>
      <param name="SourceType">Optional Object. The source of the report data. Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" />.constants.</param>
      <param name="SourceData">Optional Object. The data for the new report. Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object, an array of ranges, or a text constant that represents the name of another report. For an external database, <paramref name="SourceData" /> is an array of strings containing the SQL query string, where each element is up to 255 characters in length. You should use the <paramref name="Connection" /> argument to specify the ODBC connection string. For compatibility with earlier versions of Excel, <paramref name="SourceData" /> can be a two-element array. The first element is the connection string specifying the ODBC source for the data. The second element is the SQL query string used to get the data. If you specify <paramref name="SourceData" />, you must also specify <paramref name="SourceType" />. If the active cell is inside the <paramref name="SourceData" /> range, you must specify <paramref name="TableDestination" /> as well.</param>
      <param name="TableDestination">Optional Object. A Range object specifying where the report should be placed on the worksheet. If this argument is omitted, the report is placed at the active cell.</param>
      <param name="TableName">Optional Object. A string that specifies the name of the new report.</param>
      <param name="RowGrand">Optional Object. True to show grand totals for rows in the report.</param>
      <param name="ColumnGrand">Optional Object. True to show grand totals for columns in the report.</param>
      <param name="SaveData">Optional Object. True to save data with the report. False to save only the report definition.</param>
      <param name="HasAutoFormat">Optional Object. True to have Microsoft Excel automatically format the report when it’s refreshed or when fields are moved.</param>
      <param name="AutoPage">Optional Object. Valid only if <paramref name="SourceType" /> is xlConsolidation. True to have Microsoft Excel create a page field for the consolidation. If <paramref name="AutoPage" /> is False, you must create the page field or fields.</param>
      <param name="Reserved">Optional Object. Not used by Microsoft Excel.</param>
      <param name="BackgroundQuery">Optional Object. True to have Excel perform queries for the report asynchronously (in the background). The default value is False.</param>
      <param name="OptimizeCache">Optional Object. True to optimize the PivotTable cache when it's constructed. The default value is False.</param>
      <param name="PageFieldOrder">Optional Object. The order in which page fields are added to the PivotTable report’s layout. Can be one of the following XlOrder constants: xlDownThenOver or xlOverThenDown. The default value is xlDownThenOver.</param>
      <param name="PageFieldWrapCount">Optional Object. The number of page fields in each column or row in the PivotTable report. The default value is 0 (zero).</param>
      <param name="ReadData">Optional Object. True to create a PivotTable cache that contains all records from the external database; this cache can be very large. If <paramref name="ReadData" /> is False, you can set some of the fields as server-based page fields before the data is actually read.</param>
      <param name="Connection">Optional Object. A string that contains ODBC settings that allow Excel to connect to an ODBC data source. The connection string has the form "ODBC;&lt;connection string&gt;". This argument overrides any previous setting for the <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> object’s <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection" /> property.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.Previous">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />, or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the previous sheet or cell. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.PrintedCommentPages">
      <summary>Gets the number of comment pages that will be printed for the current worksheet. </summary>
      <returns>The number of comment pages that will be printed for the current worksheet.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Prints the object.</summary>
      <param name="From">Optional Object. The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
      <param name="To">Optional Object. The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
      <param name="Copies">Optional Object. The number of copies to print. If this argument is omitted, one copy is printed.</param>
      <param name="Preview">Optional Object. True to have Microsoft Excel invoke print preview before printing the object. False (or omitted) to print the object immediately.</param>
      <param name="ActivePrinter">Optional Object. Sets the name of the active printer.</param>
      <param name="PrintToFile">Optional Object. True to print to a file. If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</param>
      <param name="Collate">Optional Object. True to collate multiple copies.</param>
      <param name="PrToFileName">Optional Object. If <paramref name="PrintToFile" /> is set to True, this argument specifies the name of the file you want to print to.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.PrintPreview(System.Object)">
      <summary>Shows a preview of the object as it would look when printed.</summary>
      <param name="EnableChanges">Optional Object. True to enable changes to the specified worksheet.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Protects a worksheet so that it cannot be modified.</summary>
      <param name="Password">Optional Object. A string that specifies a case-sensitive password for the worksheet or workbook. If this argument is omitted, you can unprotect the worksheet or workbook without using a password. Otherwise, you must specify the password to unprotect the worksheet or workbook. If you forget the password, you cannot unprotect the worksheet or workbook. It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</param>
      <param name="DrawingObjects">Optional Object. True to protect shapes. The default value is False.</param>
      <param name="Contents">Optional Object. True to protect contents. For a chart, this protects the entire chart. For a worksheet, this protects the locked cells. The default value is True.</param>
      <param name="Scenarios">Optional Object. True to protect scenarios. This argument is valid only for worksheets. The default value is True.</param>
      <param name="UserInterfaceOnly">Optional Object. True to protect the user interface but not macros. If this argument is omitted, protection applies both to macros and to the user interface.</param>
      <param name="AllowFormattingCells">Optional Object. True allows the user to format any cell on a protected worksheet. The default value is False.</param>
      <param name="AllowFormattingColumns">Optional Object. True allows the user to format any column on a protected worksheet. The default value is False.</param>
      <param name="AllowFormattingRows">Optional Object. True allows the user to format any row on a protected worksheet. The default value is False.</param>
      <param name="AllowInsertingColumns">Optional Object. True allows the user to insert columns on the protected worksheet. The default value is False.</param>
      <param name="AllowInsertingRows">Optional Object. True allows the user to insert rows on the protected worksheet. The default value is False.</param>
      <param name="AllowInsertingHyperlinks">Optional Object. True allows the user to insert hyperlinks on the worksheet. The default value is False.</param>
      <param name="AllowDeletingColumns">Optional Object. True allows the user to delete columns on the protected worksheet, where every cell in the column to be deleted is unlocked. The default value is False.</param>
      <param name="AllowDeletingRows">Optional Object. True allows the user to delete rows on the protected worksheet where every cell in the row to be deleted is unlocked. The default value is False.</param>
      <param name="AllowSorting">Optional Object. True allows the user to sort on the protected worksheet. Every cell in the sort range must be unlocked or unprotected. The default value is False.</param>
      <param name="AllowFiltering">Optional Object. True allows the user to set filters on the protected worksheet. Users can change filter criteria but can not enable or disable an auto filter. Users can set filters on an existing auto filter. The default value is False.</param>
      <param name="AllowUsingPivotTables">Optional Object. True allows the user to use pivot table reports on the protected worksheet. The default value is False.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectContents">
      <summary>True if the contents of the sheet are protected. For a chart, this protects the entire chart. For a worksheet, this protects the individual cells. Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectDrawingObjects">
      <summary>True if shapes are protected. Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.Protection">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Protection" /> object that represents the protection options of the worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectionMode">
      <summary>True if user-interface-only protection is turned on. To turn on user interface protection, use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method with the <paramref name="UserInterfaceOnly" /> argument set to True. Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectScenarios">
      <summary>True if the worksheet scenarios are protected. Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.QueryTables">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> collection that represents all the query tables on the specified worksheet. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.Range(System.Object,System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</summary>
      <param name="Cell1">Required Object. The name of the range. This must be an A1-style reference in the language of the macro. It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma). It can also include dollar signs, but they’re ignored. You can use a local defined name in any part of the range. If you use a name, the name is assumed to be in the language of the macro.</param>
      <param name="Cell2">Optional Object. The cell in the upper-left and lower-right corner of the range. Can be a Range object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.Rectangles(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.ResetAllPageBreaks">
      <summary>Resets all page breaks on the specified worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.Rows">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the rows on the specified worksheet. Read-only Range object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Saves changes to the chart or worksheet in a different file.</summary>
      <param name="Filename">Optional Object. A string that indicates the name of the file to be saved. You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</param>
      <param name="FileFormat">Optional Object. The file format to use when you save the file. For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> property. For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</param>
      <param name="Password">Optional Object. A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</param>
      <param name="WriteResPassword">Optional Object. A string that indicates the write-reservation password for this file. If a file is saved with the password and the password isn't supplied when the file is opened, the file is opened as read-only.</param>
      <param name="ReadOnlyRecommended">Optional Object. True to display a message when the file is opened recommending that the file be opened as read-only.</param>
      <param name="CreateBackup">Optional Object. True to create a backup file.</param>
      <param name="AddToMru">Optional Object. True to add this workbook to the list of recently used files. The default value is False.</param>
      <param name="TextCodepage">Optional Object. Not used in U.S. English Microsoft Excel.</param>
      <param name="TextVisualLayout">Optional Object. Not used in U.S. English Microsoft Excel.</param>
      <param name="Local">Optional Object. True saves files against the language of Microsoft Excel (including control panel settings). False (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.Scenarios(System.Object)">
      <summary>Returns an object that represents either a single scenario (a <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> object) or a collection of scenarios (a <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> object) on the worksheet.</summary>
      <param name="Index">Optional Object. The name or number of the scenario. Use an array to specify more than one scenario.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.Scripts">
      <summary>Returns the <see cref="T:Microsoft.Office.Core.Scripts" /> collection, which contains <see cref="T:Microsoft.Office.Core.Script" /> objects representing blocks of script or code in the specified document when it’s saved as a Web page.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.ScrollArea">
      <summary>Returns or sets the range where scrolling is allowed as an A1-style range reference. Cells outside the scroll area cannot be selected. Read/write String.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.ScrollBars(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)">
      <summary>Selects the object.</summary>
      <param name="Replace">Optional Object. The object to replace.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.SetBackgroundPicture(System.String)">
      <summary>Sets the background graphic for a worksheet or chart.</summary>
      <param name="Filename">Required String. The name of the graphic file.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.Shapes">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the worksheet or chart sheet. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.ShowAllData">
      <summary>Makes all rows of the currently filtered list visible. If AutoFilter is in use, this method changes the arrows to "All."</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.ShowDataForm">
      <summary>Displays the data form associated with the worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.SmartTags">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> object representing the identifier for the specified cell.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.Sort">
      <summary>Returns the sorted values in the current worksheet. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Sort" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.Spinners(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.StandardHeight">
      <summary>Returns the standard (default) height of all the rows in the worksheet in points. Read-only Double.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.StandardWidth">
      <summary>Returns or sets the standard (default) width of all the columns in the worksheet. Read/write Double.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.Tab">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> object for a chart or a worksheet.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.TextBoxes(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.TransitionExpEval">
      <summary>True if Microsoft Excel uses Lotus 1-2-3 expression evaluation rules for the worksheet. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.TransitionFormEntry">
      <summary>True if Microsoft Excel uses Lotus 1-2-3 formula entry rules for the worksheet. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.Type">
      <summary>Returns or sets the worksheet type. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.Unprotect(System.Object)">
      <summary>Removes protection from a sheet or workbook. This method has no effect if the sheet or workbook isn't protected.</summary>
      <param name="Password">Optional Object. A string that denotes the case-sensitive password to use to unprotect the sheet or workbook. If the sheet or workbook isn't protected with a password, this argument is ignored. If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password. If you omit this argument for a workbook that's protected with a password, the method fails.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.UsedRange">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the used range on the specified worksheet. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.Visible">
      <summary>Determines whether the object is visible. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlSheetVisibility" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel._Worksheet.VPageBreaks">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection that represents the vertical page breaks on the sheet. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath. Returns Nothing if the specified XPath has not been mapped to the worksheet or if the mapped range is empty.</summary>
      <param name="XPath">Required Object. The XPath to query for.</param>
      <param name="SelectionNamespaces">Optional Object. A space-delimited String that contains the namespaces referenced in the XPath parameter. A run-time error will be generated if one of the specified namespaces cannot be resolved.</param>
      <param name="Map">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />. Specify an XML map if you want to query for the XPath within a specific map.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel._Worksheet.XmlMapQuery(System.String,System.Object,System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath. Returns Nothing if the specified XPath has not been mapped to the worksheet.</summary>
      <param name="XPath">Required Object. The XPath to query for.</param>
      <param name="SelectionNamespaces">Optional Object. A space-delimited String that contains the namespaces referenced in the XPath parameter. A run-time error will be generated if one of the specified namespaces cannot be resolved.</param>
      <param name="Map">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />. Specify an XML map if you want to query for the XPath within a specific map.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AboveAverage">
      <summary>Represents an above average visual of a conditional formatting rule. Applying a color or fill to a range or selection to help you see the value of a cells relative to other cells.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AboveAverage.AboveBelow">
      <summary>Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlAboveBelow" /> enumeration, specifying if the conditional formatting rule looks for cell values above or below the range average or standard deviation.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlAboveBelow" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AboveAverage.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
      <returns>Application (see above)</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AboveAverage.AppliesTo">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object specifying the cell range to which the formatting rule is applied.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Range" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AboveAverage.Borders">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> collection that specifies the formatting of cell borders if the conditional formatting rule evaluates to True. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Borders" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AboveAverage.CalcFor">
      <summary>Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlCalcFor" /> enumeration, which specifies the scope of data to be evaluated for the conditional format in a PivotTable report.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCalcFor" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AboveAverage.Creator">
      <summary>Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AboveAverage.Delete">
      <summary>Deletes the specified conditional formatting rule object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AboveAverage.Font">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that specifies the font formatting if the conditional formatting rule evaluates to True. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Font" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AboveAverage.Interior">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that specifies a cell's interior attributes for a conditional formatting rule that evaluates to True. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Interior" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AboveAverage.ModifyAppliesToRange(Microsoft.Office.Interop.Excel.Range)">
      <summary>Sets the cell range to which this formatting rule applies.</summary>
      <param name="Range">The range to which this formatting rule will be applied.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AboveAverage.NumberFormat">
      <summary>Returns or sets the number format applied to a cell if the conditional formatting rule evaluates to True. Read/write Object.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AboveAverage.NumStdDev">
      <summary>Returns or sets the numeric standard deviation for an AboveAverage object. Read/write Integer.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AboveAverage.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AboveAverage.Priority">
      <summary>Returns or sets the priority value of the conditional formatting rule. The priority determines the order of evaluation when multiple conditional formatting rules exist in a worksheet.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AboveAverage.PTCondition">
      <summary>Returns a Boolean value indicating if the conditional format is being applied to a PivotTable chart. Read-only.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AboveAverage.ScopeType">
      <summary>Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /> enumeration, which determines the scope of the conditional format when it is applied to a PivotTable chart.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AboveAverage.SetFirstPriority">
      <summary>Sets the priority value for this conditional formatting rule to "1" so that it will be evaluated before all other rules on the worksheet.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AboveAverage.SetLastPriority">
      <summary>Sets the evaluation order for this conditional formatting rule so it is evaluated after all other rules on the worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AboveAverage.StopIfTrue">
      <summary>Returns or sets a Boolean value that determines if additional formatting rules on the cell should be evaluated if the current rule evaluates to True.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AboveAverage.Type">
      <summary>Returns one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" /> enumeration, which specifies the type of conditional format. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" />
      </returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Action">
      <summary>Represents an action to be executed in <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />data.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Action.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
      <returns>Application (see above)</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Action.Caption">
      <summary>Returns the caption assigned to the <see cref="P:Microsoft.Office.Interop.Excel.Action" />object. Read-only String.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Action.Content">
      <summary>Returns the content associated to the <see cref="P:Microsoft.Office.Interop.Excel.Action" /> object. Read-only String.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Action.Coordinate">
      <summary>Returns the coordinate property of the <see cref="P:Microsoft.Office.Interop.Excel.Action" /> object. Read-only</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Action.Creator">
      <summary>Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Action.Execute">
      <summary>Performs the specified action.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Action.Name">
      <summary>Returns the name of the object. Read-only String.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Action.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Action.Type">
      <summary>Returns the action type. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlActionType" />.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlActionType" />
      </returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Actions">
      <summary>A collection of all <see cref="T:Microsoft.Office.Interop.Excel.Action" /> objects for the specified series.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Actions._Default(System.Object)">
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Actions.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
      <returns>Application (see above)</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Actions.Count">
      <summary>Returns the number of objects in the collection. Read-only Integer</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Actions.Creator">
      <summary>Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Actions.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Actions.Item(System.Object)">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Action" /> object that represents an action in a workbook. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Action" />
      </returns>
      <param name="Index">Index value of the action.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Actions.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AddIn">
      <summary>Represents a single add-in, either installed or not installed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIn.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIn.Author">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIn.CLSID">
      <summary>Returns a read-only unique identifier, or CLSID, identifying an object, as a String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIn.Comments">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIn.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIn.FullName">
      <summary>Returns the name of the object, including its path on disk, as a string.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIn.Installed">
      <summary>True if the add-in is installed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIn.IsOpen">
      <summary>Gets whether the add-in is currently open.</summary>
      <returns>true if the add-in is currently open; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIn.Keywords">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIn.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIn.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIn.Path">
      <summary>Returns the complete path to the application, excluding the final separator and name of the application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIn.progID">
      <summary>Returns the programmatic identifiers for the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIn.Subject">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIn.Title">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AddIns">
      <summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.AddIn" /> objects that represents all the add-ins available to Microsoft Excel, regardless of whether they’re installed. This list corresponds to the list of add-ins displayed in the Add-Ins dialog box (Tools menu).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIns._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AddIns.Add(System.String,System.Object)">
      <summary>Adds a new add-in file to the list of add-ins. Returns an <see cref="T:Microsoft.Office.Interop.Excel.AddIn" /> object.</summary>
      <param name="Filename">Required String. The name of the file that contains the add-in you want to add to the list in the add-in manager.</param>
      <param name="CopyFile">Optional Object. Ignored if the add-in file is on a hard disk. True to copy the add-in to your hard disk if the add-in is on a removable medium (a floppy disk or compact disc). False to have the add-in remain on the removable medium. If this argument is omitted, Microsoft Excel displays a dialog box and asks you to choose.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIns.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIns.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIns.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AddIns.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIns.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIns.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AddIns2">
      <summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.AddIn" /> objects that represent all the add-ins that are currently available or open in Microsoft Excel, regardless of whether they are installed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIns2._Default(System.Object)">
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.AddIn" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AddIns2.Add(System.String,System.Object)">
      <summary>Adds a new add-in to the list of add-ins.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.AddIn" /> object.</returns>
      <param name="Filename">The name of the file that contains the add-in to add to the list in the Add-Ins dialog box.</param>
      <param name="CopyFile">If the add-in file is on a removable medium, specifies whether to copy the add-in to the local hard disk. Specify true to copy the add-in to your hard disk. Specify false to keep the add-in on the removable medium. If this parameter is omitted, Microsoft Excel displays a dialog box and asks the user to choose whether to copy the add-in file. This parameter is ignored if the add-in file is already on the hard disk.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIns2.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIns2.Count">
      <summary>Gets a value that represents the number of objects in the collection.</summary>
      <returns>The number of objects in the collection.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIns2.Creator">
      <summary>Gets a 32-bit integer that indicates the application in which this object was created.</summary>
      <returns>A 32-bit integer that indicates the application in which this object was created.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AddIns2.GetEnumerator">
      <returns>Returns <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIns2.Item(System.Object)">
      <summary>Gets a single object from a collection.</summary>
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.AddIn" />.</returns>
      <param name="Index">The name or index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AddIns2.Parent">
      <summary>Gets the parent object for the specified object.</summary>
      <returns>The parent object for the specified object.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Adjustments">
      <summary>Contains a collection of adjustment values for the specified AutoShape, WordArt object, or connector.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Adjustments.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Adjustments.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Adjustments.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Adjustments.Item(System.Int32)">
      <summary>Returns or sets the specified adjustment value.</summary>
      <param name="Index">Required Integer. The index number of the adjustment.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Adjustments.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AllowEditRange">
      <summary>Represents the cells that can be edited on a protected worksheet.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AllowEditRange.ChangePassword(System.String)">
      <summary>Changes the password for a range that can be edited on a protected worksheet.</summary>
      <param name="Password">Required String. The new password.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AllowEditRange.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AllowEditRange.Range">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a subset of the ranges that can be edited on a protected worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AllowEditRange.Title">
      <summary>Returns or sets the title of the Web page when the document is saved as a Web page.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AllowEditRange.Unprotect(System.Object)">
      <summary>Removes protection from a sheet or workbook.</summary>
      <param name="Password">Optional Object. A string that denotes the case-sensitive password to use to unprotect the sheet or workbook. If the sheet or workbook isn't protected with a password, this argument is ignored. If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password. If you omit this argument for a workbook that's protected with a password, the method fails.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AllowEditRange.Users">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.UserAccessList" /> object for the protected range on a worksheet.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AllowEditRanges">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.AllowEditRange" /> objects that represent the cells that can be edited on a protected worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AllowEditRanges._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AllowEditRanges.Add(System.String,Microsoft.Office.Interop.Excel.Range,System.Object)">
      <summary>Adds a range that can be edited on a protected worksheet.</summary>
      <param name="Title">Optional Object. The password for the range.</param>
      <param name="Range">Required String. The title of range.</param>
      <param name="Password">Required <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object. The range allowed to be edited.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AllowEditRanges.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AllowEditRanges.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.AllowEditRanges.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.AfterCalculate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.NewWorkbook(Microsoft.Office.Interop.Excel.Workbook)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.ProtectedViewWindowActivate(Microsoft.Office.Interop.Excel.ProtectedViewWindow)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.ProtectedViewWindowBeforeClose(Microsoft.Office.Interop.Excel.ProtectedViewWindow,Microsoft.Office.Interop.Excel.XlProtectedViewCloseReason,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.ProtectedViewWindowBeforeEdit(Microsoft.Office.Interop.Excel.ProtectedViewWindow,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.ProtectedViewWindowDeactivate(Microsoft.Office.Interop.Excel.ProtectedViewWindow)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.ProtectedViewWindowOpen(Microsoft.Office.Interop.Excel.ProtectedViewWindow)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.ProtectedViewWindowResize(Microsoft.Office.Interop.Excel.ProtectedViewWindow)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.SheetActivate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.SheetBeforeDoubleClick(System.Object,Microsoft.Office.Interop.Excel.Range,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.SheetBeforeRightClick(System.Object,Microsoft.Office.Interop.Excel.Range,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.SheetCalculate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.SheetChange(System.Object,Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.SheetDeactivate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.SheetFollowHyperlink(System.Object,Microsoft.Office.Interop.Excel.Hyperlink)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.SheetPivotTableAfterValueChange(System.Object,Microsoft.Office.Interop.Excel.PivotTable,Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.SheetPivotTableBeforeAllocateChanges(System.Object,Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.SheetPivotTableBeforeCommitChanges(System.Object,Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.SheetPivotTableBeforeDiscardChanges(System.Object,Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.SheetPivotTableUpdate(System.Object,Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.SheetSelectionChange(System.Object,Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.WindowActivate(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.Window)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.WindowDeactivate(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.Window)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.WindowResize(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.Window)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookActivate(Microsoft.Office.Interop.Excel.Workbook)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookAddinInstall(Microsoft.Office.Interop.Excel.Workbook)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookAddinUninstall(Microsoft.Office.Interop.Excel.Workbook)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookAfterSave(Microsoft.Office.Interop.Excel.Workbook,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookAfterXmlExport(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.XmlMap,System.String,Microsoft.Office.Interop.Excel.XlXmlExportResult)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookAfterXmlImport(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.XmlMap,System.Boolean,Microsoft.Office.Interop.Excel.XlXmlImportResult)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookBeforeClose(Microsoft.Office.Interop.Excel.Workbook,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookBeforePrint(Microsoft.Office.Interop.Excel.Workbook,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookBeforeSave(Microsoft.Office.Interop.Excel.Workbook,System.Boolean,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookBeforeXmlExport(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookBeforeXmlImport(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Boolean,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookDeactivate(Microsoft.Office.Interop.Excel.Workbook)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookNewChart(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.Chart)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookNewSheet(Microsoft.Office.Interop.Excel.Workbook,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookOpen(Microsoft.Office.Interop.Excel.Workbook)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookPivotTableCloseConnection(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookPivotTableOpenConnection(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookRowsetComplete(Microsoft.Office.Interop.Excel.Workbook,System.String,System.String,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookSync(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Core.MsoSyncEventType)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_AfterCalculateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.AfterCalculate" /> event. The AfterCalculate event occurs when all pending refresh activity (both synchronous and asynchronous) and all of the resultant calculation activities have been completed.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_Event">
      <summary>Events interface for Microsoft Excel <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object events.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_AfterCalculate(Microsoft.Office.Interop.Excel.AppEvents_AfterCalculateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_NewWorkbook(Microsoft.Office.Interop.Excel.AppEvents_NewWorkbookEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_ProtectedViewWindowActivate(Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowActivateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_ProtectedViewWindowBeforeClose(Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowBeforeCloseEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_ProtectedViewWindowBeforeEdit(Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowBeforeEditEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_ProtectedViewWindowDeactivate(Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowDeactivateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_ProtectedViewWindowOpen(Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowOpenEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_ProtectedViewWindowResize(Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowResizeEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_SheetActivate(Microsoft.Office.Interop.Excel.AppEvents_SheetActivateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_SheetBeforeDoubleClick(Microsoft.Office.Interop.Excel.AppEvents_SheetBeforeDoubleClickEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_SheetBeforeRightClick(Microsoft.Office.Interop.Excel.AppEvents_SheetBeforeRightClickEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_SheetCalculate(Microsoft.Office.Interop.Excel.AppEvents_SheetCalculateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_SheetChange(Microsoft.Office.Interop.Excel.AppEvents_SheetChangeEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_SheetDeactivate(Microsoft.Office.Interop.Excel.AppEvents_SheetDeactivateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_SheetFollowHyperlink(Microsoft.Office.Interop.Excel.AppEvents_SheetFollowHyperlinkEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_SheetPivotTableAfterValueChange(Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableAfterValueChangeEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_SheetPivotTableBeforeAllocateChanges(Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableBeforeAllocateChangesEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_SheetPivotTableBeforeCommitChanges(Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableBeforeCommitChangesEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_SheetPivotTableBeforeDiscardChanges(Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableBeforeDiscardChangesEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_SheetPivotTableUpdate(Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableUpdateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_SheetSelectionChange(Microsoft.Office.Interop.Excel.AppEvents_SheetSelectionChangeEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_WindowActivate(Microsoft.Office.Interop.Excel.AppEvents_WindowActivateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_WindowDeactivate(Microsoft.Office.Interop.Excel.AppEvents_WindowDeactivateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_WindowResize(Microsoft.Office.Interop.Excel.AppEvents_WindowResizeEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_WorkbookActivate(Microsoft.Office.Interop.Excel.AppEvents_WorkbookActivateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_WorkbookAddinInstall(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAddinInstallEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_WorkbookAddinUninstall(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAddinUninstallEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_WorkbookAfterSave(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAfterSaveEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_WorkbookAfterXmlExport(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAfterXmlExportEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_WorkbookAfterXmlImport(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAfterXmlImportEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_WorkbookBeforeClose(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeCloseEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_WorkbookBeforePrint(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforePrintEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_WorkbookBeforeSave(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeSaveEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_WorkbookBeforeXmlExport(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeXmlExportEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_WorkbookBeforeXmlImport(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeXmlImportEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_WorkbookDeactivate(Microsoft.Office.Interop.Excel.AppEvents_WorkbookDeactivateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_WorkbookNewChart(Microsoft.Office.Interop.Excel.AppEvents_WorkbookNewChartEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_WorkbookNewSheet(Microsoft.Office.Interop.Excel.AppEvents_WorkbookNewSheetEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_WorkbookOpen(Microsoft.Office.Interop.Excel.AppEvents_WorkbookOpenEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_WorkbookPivotTableCloseConnection(Microsoft.Office.Interop.Excel.AppEvents_WorkbookPivotTableCloseConnectionEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_WorkbookPivotTableOpenConnection(Microsoft.Office.Interop.Excel.AppEvents_WorkbookPivotTableOpenConnectionEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_WorkbookRowsetComplete(Microsoft.Office.Interop.Excel.AppEvents_WorkbookRowsetCompleteEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.add_WorkbookSync(Microsoft.Office.Interop.Excel.AppEvents_WorkbookSyncEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.AfterCalculate">
      <summary>The <see cref="E:Microsoft.Office.Interop.Excel.ApplicationClass.AfterCalculate" /> event occurs when all pending refresh activity (both synchronous and asynchronous) and all of the resultant calculation activities have been completed.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.NewWorkbook">
      <summary>Occurs when a new workbook is created.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.ProtectedViewWindowActivate">
      <summary>Occurs when a Protected View window is activated.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.ProtectedViewWindowBeforeClose">
      <summary>Occurs immediately before a Protected View window or a workbook in a Protected View window closes.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.ProtectedViewWindowBeforeEdit">
      <summary>Occurs immediately before editing is enabled on the workbook in the specified Protected View window.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.ProtectedViewWindowDeactivate">
      <summary>Occurs when a Protected View window is deactivated.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.ProtectedViewWindowOpen">
      <summary>Occurs when a workbook is opened in a Protected View window.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.ProtectedViewWindowResize">
      <summary>Occurs when any Protected View window is resized.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_AfterCalculate(Microsoft.Office.Interop.Excel.AppEvents_AfterCalculateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_NewWorkbook(Microsoft.Office.Interop.Excel.AppEvents_NewWorkbookEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_ProtectedViewWindowActivate(Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowActivateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_ProtectedViewWindowBeforeClose(Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowBeforeCloseEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_ProtectedViewWindowBeforeEdit(Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowBeforeEditEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_ProtectedViewWindowDeactivate(Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowDeactivateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_ProtectedViewWindowOpen(Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowOpenEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_ProtectedViewWindowResize(Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowResizeEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_SheetActivate(Microsoft.Office.Interop.Excel.AppEvents_SheetActivateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_SheetBeforeDoubleClick(Microsoft.Office.Interop.Excel.AppEvents_SheetBeforeDoubleClickEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_SheetBeforeRightClick(Microsoft.Office.Interop.Excel.AppEvents_SheetBeforeRightClickEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_SheetCalculate(Microsoft.Office.Interop.Excel.AppEvents_SheetCalculateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_SheetChange(Microsoft.Office.Interop.Excel.AppEvents_SheetChangeEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_SheetDeactivate(Microsoft.Office.Interop.Excel.AppEvents_SheetDeactivateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_SheetFollowHyperlink(Microsoft.Office.Interop.Excel.AppEvents_SheetFollowHyperlinkEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_SheetPivotTableAfterValueChange(Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableAfterValueChangeEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_SheetPivotTableBeforeAllocateChanges(Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableBeforeAllocateChangesEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_SheetPivotTableBeforeCommitChanges(Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableBeforeCommitChangesEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_SheetPivotTableBeforeDiscardChanges(Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableBeforeDiscardChangesEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_SheetPivotTableUpdate(Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableUpdateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_SheetSelectionChange(Microsoft.Office.Interop.Excel.AppEvents_SheetSelectionChangeEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_WindowActivate(Microsoft.Office.Interop.Excel.AppEvents_WindowActivateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_WindowDeactivate(Microsoft.Office.Interop.Excel.AppEvents_WindowDeactivateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_WindowResize(Microsoft.Office.Interop.Excel.AppEvents_WindowResizeEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_WorkbookActivate(Microsoft.Office.Interop.Excel.AppEvents_WorkbookActivateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_WorkbookAddinInstall(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAddinInstallEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_WorkbookAddinUninstall(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAddinUninstallEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_WorkbookAfterSave(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAfterSaveEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_WorkbookAfterXmlExport(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAfterXmlExportEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_WorkbookAfterXmlImport(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAfterXmlImportEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_WorkbookBeforeClose(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeCloseEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_WorkbookBeforePrint(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforePrintEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_WorkbookBeforeSave(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeSaveEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_WorkbookBeforeXmlExport(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeXmlExportEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_WorkbookBeforeXmlImport(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeXmlImportEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_WorkbookDeactivate(Microsoft.Office.Interop.Excel.AppEvents_WorkbookDeactivateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_WorkbookNewChart(Microsoft.Office.Interop.Excel.AppEvents_WorkbookNewChartEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_WorkbookNewSheet(Microsoft.Office.Interop.Excel.AppEvents_WorkbookNewSheetEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_WorkbookOpen(Microsoft.Office.Interop.Excel.AppEvents_WorkbookOpenEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_WorkbookPivotTableCloseConnection(Microsoft.Office.Interop.Excel.AppEvents_WorkbookPivotTableCloseConnectionEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_WorkbookPivotTableOpenConnection(Microsoft.Office.Interop.Excel.AppEvents_WorkbookPivotTableOpenConnectionEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_WorkbookRowsetComplete(Microsoft.Office.Interop.Excel.AppEvents_WorkbookRowsetCompleteEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_Event.remove_WorkbookSync(Microsoft.Office.Interop.Excel.AppEvents_WorkbookSyncEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetActivate">
      <summary>Occurs when any sheet is activated.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetBeforeDoubleClick">
      <summary>Occurs when any worksheet is double-clicked, before the default double-click action.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetBeforeRightClick">
      <summary>Occurs when any worksheet is right-clicked, before the default right-click action.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetCalculate">
      <summary>Occurs after any worksheet is recalculated or after any changed data is plotted on a chart.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetChange">
      <summary>Occurs when cells in any worksheet are changed by the user or by an external link.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetDeactivate">
      <summary>Occurs when any sheet is deactivated.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetFollowHyperlink">
      <summary>Occurs when you click any hyperlink in Microsoft Excel.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetPivotTableAfterValueChange">
      <summary>Occurs after a cell or range of cells inside a PivotTable are edited or recalculated (for cells that contain formulas).</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetPivotTableBeforeAllocateChanges">
      <summary>Occurs before changes are applied to a PivotTable.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetPivotTableBeforeCommitChanges">
      <summary>Occurs before changes are committed against the OLAP data source for a PivotTable.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetPivotTableBeforeDiscardChanges">
      <summary>Occurs before changes to a PivotTable are discarded.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetPivotTableUpdate">
      <summary>Occurs after the sheet of the PivotTable report has been updated.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetSelectionChange">
      <summary>Occurs when the selection changes on any worksheet (doesn't occur if the selection is on a chart sheet).</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WindowActivate">
      <summary>Occurs when any workbook window is activated.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WindowDeactivate">
      <summary>Occurs when any workbook window is deactivated.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WindowResize">
      <summary>Occurs when any workbook window is resized.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookActivate">
      <summary>Occurs when any workbook is activated.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookAddinInstall">
      <summary>Occurs when a workbook is installed as an add-in.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookAddinUninstall">
      <summary>Occurs when any add-in workbook is uninstalled.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookAfterSave">
      <summary>Occurs after the workbook is saved.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookAfterXmlExport">
      <summary>Occurs after Microsoft Excel saves or exports data from any open workbook to an XML data file.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookAfterXmlImport">
      <summary>Occurs after an existing XML data connection is refreshed or new XML data is imported into any open Microsoft Excel workbook.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookBeforeClose">
      <summary>Occurs immediately before any open workbook closes.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookBeforePrint">
      <summary>Occurs before any open workbook is printed.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookBeforeSave">
      <summary>Occurs before any open workbook is saved.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookBeforeXmlExport">
      <summary>Occurs before Microsoft Excel saves or exports data from any open workbook to an XML data file.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookBeforeXmlImport">
      <summary>Occurs before an existing XML data connection is refreshed or new XML data is imported into any open Microsoft Excel workbook.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookDeactivate">
      <summary>Occurs when any open workbook is deactivated.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookNewChart">
      <summary>Occurs when a new chart is created in any open workbook.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookNewSheet">
      <summary>Occurs when a new sheet is created in any open workbook.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookOpen">
      <summary>Occurs when a workbook is opened.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookPivotTableCloseConnection">
      <summary>Occurs after a PivotTable report connection has been closed.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookPivotTableOpenConnection">
      <summary>Occurs after a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />report connection has been opened.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookRowsetComplete">
      <summary>The <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookRowsetComplete" />event  occurs when the user either drills through the recordset or invokes the rowset action on an OLAP PivotTable.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookSync">
      <summary>Occurs when the local copy of a workbook that is part of a Document Workspace is synchronized with the copy on the server.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_NewWorkbookEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.NewWorkbook" /> event. The NewWorkbook event occurs when a new workbook is created.</summary>
      <param name="Wb">The new workbook.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowActivateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.ProtectedViewWindowActivate" /> event. The ProtectedViewWindowActivate event occurs when a Protected View window is activated.</summary>
      <param name="Pvw">The activated Protected View window.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowBeforeCloseEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.ProtectedViewWindowBeforeClose" /> event. The ProtectedViewWindowBeforeClose event occurs immediately before a Protected View window or a workbook in a Protected View window closes.</summary>
      <param name="Pvw">An object that represents the Protected View window that is closed.</param>
      <param name="Reason">A constant that specifies the reason the Protected View window is closed.</param>
      <param name="Cancel">false when the event occurs. If the event procedure sets this parameter to true, the window does not close when the procedure is finished.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowBeforeEditEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.ProtectedViewWindowBeforeEdit" /> event. The ProtectedViewWindowBeforeEdit event occurs immediately before editing is enabled on the workbook in the specified Protected View window.</summary>
      <param name="Pvw">The Protected View window that contains the workbook that is enabled for editing.</param>
      <param name="Cancel">false when the event occurs. If the event procedure sets this argument to true, editing is not enabled on the workbook.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowDeactivateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.ProtectedViewWindowDeactivate" /> event. The ProtectedViewWindowDeactivate event occurs when a Protected View window is deactivated.</summary>
      <param name="Pvw">An object that represents the deactivated Protected View window.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowOpenEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.ProtectedViewWindowOpen" /> event. The ProtectedViewWindowOpen event occurs when a workbook is opened in a Protected View window.</summary>
      <param name="Pvw">An object that represents the Protected View window that is opened.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowResizeEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.ProtectedViewWindowResize" /> event. The ProtectedViewWindowResize event occurs when any Protected View window is resized.</summary>
      <param name="Pvw">An object that represents the resized Protected View window.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_SheetActivateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetActivate" /> event. The SheetActivate event occurs when any sheet is activated.</summary>
      <param name="Sh">The activated sheet. Can be a Chart or Worksheet object.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_SheetBeforeDoubleClickEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetBeforeDoubleClick" /> event. The SheetBeforeDoubleClick event occurs when any worksheet is double-clicked, before the default double-click action.</summary>
      <param name="Sh">A Worksheet object that represents the sheet.</param>
      <param name="Target">The cell nearest to the mouse pointer when the double-click occurred.</param>
      <param name="Cancel">False when the event occurs. If the event procedure sets this argument to True, the default double-click action isn't performed when the procedure is finished.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_SheetBeforeRightClickEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetBeforeRightClick" /> event. The SheetBeforeRightClick event occurs when any worksheet is right-clicked, before the default right-click action.</summary>
      <param name="Sh">A Worksheet object that represents the sheet.</param>
      <param name="Target">The cell nearest to the mouse pointer when the right-click occurred.</param>
      <param name="Cancel">False when the event occurs. If the event procedure sets this argument to True, the default right-click action isn't performed when the procedure is finished.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_SheetCalculateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetCalculate" /> event. The SheetCalculate event occurs after any worksheet is recalculated or after any changed data is plotted on a chart.</summary>
      <param name="Sh">The sheet. Can be a Chart or Worksheet object.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_SheetChangeEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetChange" /> event. The SheetChange event occurs when cells in any worksheet are changed by the user or by an external link.</summary>
      <param name="Sh">A Worksheet object that represents the sheet.</param>
      <param name="Target">The changed range.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_SheetDeactivateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetDeactivate" /> event. The SheetDeactivate event occurs when any sheet is deactivated.</summary>
      <param name="Sh">The sheet. Can be a Chart or Worksheet object.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_SheetFollowHyperlinkEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetFollowHyperlink" /> event. The SheetFollowHyperlink event occurs when you click any hyperlink in Microsoft Excel.</summary>
      <param name="Sh">Required Object. The <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that contains the hyperlink.</param>
      <param name="Target">Required <see cref="T:Microsoft.Office.Interop.Excel.Hyperlink" />. The Hyperlink object that represents the destination of the hyperlink.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableAfterValueChangeEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetPivotTableAfterValueChange" /> event. The SheetPivotTableAfterValueChange event occurs after a cell or range of cells inside a PivotTable are edited or recalculated (for cells that contain formulas).</summary>
      <param name="Sh">The worksheet that contains the PivotTable.</param>
      <param name="TargetPivotTable">The PivotTable that contains the edited or recalculated cells.</param>
      <param name="TargetRange">The range that contains all the edited or recalculated cells.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableBeforeAllocateChangesEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetPivotTableBeforeAllocateChanges" /> event. The SheetPivotTableBeforeAllocateChanges event occurs before changes are applied to a PivotTable.</summary>
      <param name="Sh">The worksheet that contains the PivotTable.</param>
      <param name="TargetPivotTable">The PivotTable that contains the changes to apply.</param>
      <param name="ValueChangeStart">The index to the first change in the associated <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection. The index is specified by the <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.Order" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> object in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection.</param>
      <param name="ValueChangeEnd">The index to the last change in the associated <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection. The index is specified by the <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.Order" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> object in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection.</param>
      <param name="Cancel">false when the event occurs. If the event procedure sets this parameter to true, the changes are not applied to the PivotTable and all edits are lost.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableBeforeCommitChangesEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetPivotTableBeforeCommitChanges" /> event. The SheetPivotTableBeforeCommitChanges event occurs before changes are committed against the OLAP data source for a PivotTable.</summary>
      <param name="Sh">The worksheet that contains the PivotTable.</param>
      <param name="TargetPivotTable">The PivotTable that contains the changes to commit.</param>
      <param name="ValueChangeStart">The index to the first change in the associated <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> object. The index is specified by the <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.Order" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> object in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection.</param>
      <param name="ValueChangeEnd">The index to the last change in the associated <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> object. The index is specified by the <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.Order" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> object in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection.</param>
      <param name="Cancel">false when the event occurs. If the event procedure sets this parameter to true, the changes are not committed against the OLAP data source of the PivotTable.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableBeforeDiscardChangesEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetPivotTableBeforeDiscardChanges" /> event. The SheetPivotTableBeforeDiscardChanges event occurs before changes to a PivotTable are discarded.</summary>
      <param name="Sh">The worksheet that contains the PivotTable.</param>
      <param name="TargetPivotTable">The PivotTable that contains the changes to discard.</param>
      <param name="ValueChangeStart">The index to the first change in the associated <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> object. The index is specified by the <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.Order" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> object in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection.</param>
      <param name="ValueChangeEnd">The index to the last change in the associated <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> object. The index is specified by the <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.Order" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> object in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableUpdateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetPivotTableUpdate" /> event. The SheetPivotTableUpdate event occurs after the sheet of the PivotTable report has been updated.</summary>
      <param name="Sh">Required. The selected sheet.</param>
      <param name="Target">Required. The selected PivotTable report.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_SheetSelectionChangeEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetSelectionChange" /> event. The SheetSelectionChange event occurs when the selection changes on any worksheet.</summary>
      <param name="Sh">The worksheet that contains the new selection.</param>
      <param name="Target">The new selected range.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.AfterCalculate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_AfterCalculateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_dwCookie"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_NewWorkbookDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_ProtectedViewWindowActivateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_ProtectedViewWindowBeforeCloseDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_ProtectedViewWindowBeforeEditDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_ProtectedViewWindowDeactivateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_ProtectedViewWindowOpenDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_ProtectedViewWindowResizeDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_SheetActivateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_SheetBeforeDoubleClickDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_SheetBeforeRightClickDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_SheetCalculateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_SheetChangeDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_SheetDeactivateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_SheetFollowHyperlinkDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_SheetPivotTableAfterValueChangeDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_SheetPivotTableBeforeAllocateChangesDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_SheetPivotTableBeforeCommitChangesDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_SheetPivotTableBeforeDiscardChangesDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_SheetPivotTableUpdateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_SheetSelectionChangeDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_WindowActivateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_WindowDeactivateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_WindowResizeDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_WorkbookActivateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_WorkbookAddinInstallDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_WorkbookAddinUninstallDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_WorkbookAfterSaveDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_WorkbookAfterXmlExportDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_WorkbookAfterXmlImportDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_WorkbookBeforeCloseDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_WorkbookBeforePrintDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_WorkbookBeforeSaveDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_WorkbookBeforeXmlExportDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_WorkbookBeforeXmlImportDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_WorkbookDeactivateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_WorkbookNewChartDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_WorkbookNewSheetDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_WorkbookOpenDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_WorkbookPivotTableCloseConnectionDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_WorkbookPivotTableOpenConnectionDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_WorkbookRowsetCompleteDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.m_WorkbookSyncDelegate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.NewWorkbook(Microsoft.Office.Interop.Excel.Workbook)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.ProtectedViewWindowActivate(Microsoft.Office.Interop.Excel.ProtectedViewWindow)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.ProtectedViewWindowBeforeClose(Microsoft.Office.Interop.Excel.ProtectedViewWindow,Microsoft.Office.Interop.Excel.XlProtectedViewCloseReason,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.ProtectedViewWindowBeforeEdit(Microsoft.Office.Interop.Excel.ProtectedViewWindow,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.ProtectedViewWindowDeactivate(Microsoft.Office.Interop.Excel.ProtectedViewWindow)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.ProtectedViewWindowOpen(Microsoft.Office.Interop.Excel.ProtectedViewWindow)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.ProtectedViewWindowResize(Microsoft.Office.Interop.Excel.ProtectedViewWindow)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.SheetActivate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.SheetBeforeDoubleClick(System.Object,Microsoft.Office.Interop.Excel.Range,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.SheetBeforeRightClick(System.Object,Microsoft.Office.Interop.Excel.Range,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.SheetCalculate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.SheetChange(System.Object,Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.SheetDeactivate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.SheetFollowHyperlink(System.Object,Microsoft.Office.Interop.Excel.Hyperlink)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.SheetPivotTableAfterValueChange(System.Object,Microsoft.Office.Interop.Excel.PivotTable,Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.SheetPivotTableBeforeAllocateChanges(System.Object,Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.SheetPivotTableBeforeCommitChanges(System.Object,Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.SheetPivotTableBeforeDiscardChanges(System.Object,Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.SheetPivotTableUpdate(System.Object,Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.SheetSelectionChange(System.Object,Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.WindowActivate(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.Window)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.WindowDeactivate(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.Window)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.WindowResize(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.Window)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.WorkbookActivate(Microsoft.Office.Interop.Excel.Workbook)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.WorkbookAddinInstall(Microsoft.Office.Interop.Excel.Workbook)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.WorkbookAddinUninstall(Microsoft.Office.Interop.Excel.Workbook)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.WorkbookAfterSave(Microsoft.Office.Interop.Excel.Workbook,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.WorkbookAfterXmlExport(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.XmlMap,System.String,Microsoft.Office.Interop.Excel.XlXmlExportResult)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.WorkbookAfterXmlImport(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.XmlMap,System.Boolean,Microsoft.Office.Interop.Excel.XlXmlImportResult)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.WorkbookBeforeClose(Microsoft.Office.Interop.Excel.Workbook,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.WorkbookBeforePrint(Microsoft.Office.Interop.Excel.Workbook,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.WorkbookBeforeSave(Microsoft.Office.Interop.Excel.Workbook,System.Boolean,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.WorkbookBeforeXmlExport(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.WorkbookBeforeXmlImport(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Boolean,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.WorkbookDeactivate(Microsoft.Office.Interop.Excel.Workbook)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.WorkbookNewChart(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.Chart)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.WorkbookNewSheet(Microsoft.Office.Interop.Excel.Workbook,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.WorkbookOpen(Microsoft.Office.Interop.Excel.Workbook)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.WorkbookPivotTableCloseConnection(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.WorkbookPivotTableOpenConnection(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.WorkbookRowsetComplete(Microsoft.Office.Interop.Excel.Workbook,System.String,System.String,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.AppEvents_SinkHelper.WorkbookSync(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Core.MsoSyncEventType)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_WindowActivateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WindowActivate" /> event. The WindowActivate event occurs when any workbook window is activated.</summary>
      <param name="Wb">The workbook displayed in the activated window.</param>
      <param name="Wn">The activated window.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_WindowDeactivateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WindowDeactivate" /> event. The WindowDeactivate event occurs when any workbook window is deactivated.</summary>
      <param name="Wb">The workbook displayed in the deactivated window.</param>
      <param name="Wn">The deactivated window.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_WindowResizeEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WindowResize" /> event. The WindowResize event occurs when any workbook window is resized.</summary>
      <param name="Wb">The workbook displayed in the resized window.</param>
      <param name="Wn">The resized window.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookActivateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookActivate" /> event. The WorkbookActivate event occurs when any workbook is activated.</summary>
      <param name="Wb">The activated workbook.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookAddinInstallEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookAddinInstall" /> event. The WorkbookAddinInstall event occurs when a workbook is installed as an add-in.</summary>
      <param name="Wb">The installed workbook.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookAddinUninstallEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookAddinUninstall" /> event. The WorkbookAddinUninstall event occurs when any add-in workbook is uninstalled.</summary>
      <param name="Wb">The uninstalled workbook.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookAfterSaveEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookAfterSave" /> event. The WorkbookAfterSave event occurs after the workbook is saved.</summary>
      <param name="Wb">The workbook being saved.</param>
      <param name="Success">Returns true if the save operation was successful; otherwise false.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookAfterXmlExportEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookAfterXmlExport" /> event. The WorkbookAfterXmlExport event occurs after Microsoft Excel saves or exports data from any open workbook to an XML data file.</summary>
      <param name="Wb">Required <see cref="T:Microsoft.Office.Interop.Excel.Workbook" />. The target workbook.</param>
      <param name="Map">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />. The XML map that was used to save or export data.</param>
      <param name="Url">Required String. The location of the XML file that was exported.</param>
      <param name="Result">Required <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" />. Indicates the results of the save or export operation.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookAfterXmlImportEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookAfterXmlImport" /> event. The WorkbookAfterXmlImport event occurs after an existing XML data connection is refreshed, or new XML data is imported into any open Microsoft Excel workbook.</summary>
      <param name="Wb">Required <see cref="T:Microsoft.Office.Interop.Excel.Workbook" />. The target workbook.</param>
      <param name="Map">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />. The XML map that was used to import data.</param>
      <param name="IsRefresh">Required Boolean. True if the event was triggered by refreshing an existing connection to XML data, False if a new mapping was created.</param>
      <param name="Result">Required <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />. Indicates the results of the refresh or import operation.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeCloseEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookBeforeClose" /> event. The WorkbookBeforeClose event occurs immediately before any open workbook closes.</summary>
      <param name="Wb">The workbook that's being closed.</param>
      <param name="Cancel">False when the event occurs. If the event procedure sets this argument to True, the workbook doesn't close when the procedure is finished.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforePrintEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookBeforePrint" /> event. The WorkbookBeforePrint event occurs before any open workbook is printed.</summary>
      <param name="Wb">The workbook.</param>
      <param name="Cancel">False when the event occurs. If the event procedure sets this argument to True, the workbook isn't printed when the procedure is finished.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeSaveEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookBeforeSave" /> event. The WorkbookBeforeSave event occurs before any open workbook is saved.</summary>
      <param name="Wb">The workbook.</param>
      <param name="SaveAsUI">True if the Save As dialog box will be displayed.</param>
      <param name="Cancel">False when the event occurs. If the event procedure sets this argument to True, the workbook isn't saved when the procedure is finished.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeXmlExportEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookBeforeXmlExport" /> event. The WorkbookBeforeXmlExport event occurs before Microsoft Excel saves or exports data from any open workbook to an XML data file.</summary>
      <param name="Wb">Required <see cref="T:Microsoft.Office.Interop.Excel.Workbook" />. The target workbook.</param>
      <param name="Map">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />. The XML map that will be used to save or export data.</param>
      <param name="Url">Required String. The location of the XML file to be exported.</param>
      <param name="Cancel">Required Boolean. Set to True to cancel the save or export operation.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeXmlImportEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookBeforeXmlImport" /> event. The WorkbookBeforeXmlImport event occurs before an existing XML data connection is refreshed, or new XML data is imported into any open Microsoft Excel workbook.</summary>
      <param name="Wb">Required <see cref="T:Microsoft.Office.Interop.Excel.Workbook" />. The target workbook.</param>
      <param name="Map">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />. The XML map that will be used to import data.</param>
      <param name="Url">Required String. The location of the XML file to be imported.</param>
      <param name="IsRefresh">Required Boolean. True if the event was triggered by refreshing an existing connection to XML data; False if a new mapping will be created.</param>
      <param name="Cancel">Required Boolean. Set to True to cancel the import or refresh operation.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookDeactivateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookDeactivate" /> event. The WorkbookDeactivate event occurs when any open workbook is deactivated.</summary>
      <param name="Wb">The workbook.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookNewChartEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookNewChart" /> event. The WorkbookNewChart event occurs when a new chart is created in any open workbook.</summary>
      <param name="Wb">The workbook.</param>
      <param name="Ch">The new chart.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookNewSheetEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookNewSheet" /> event. The WorkbookNewSheet event occurs when a new sheet is created in any open workbook.</summary>
      <param name="Wb">The workbook.</param>
      <param name="Sh">The new sheet.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookOpenEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookOpen" /> event. The WorkbookOpen event occurs when a workbook is opened.</summary>
      <param name="Wb">The workbook.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookPivotTableCloseConnectionEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookPivotTableCloseConnection" /> event. The WorkbookPivotTableCloseConnection event occurs after a PivotTable report connection has been closed.</summary>
      <param name="Wb">Required. The selected workbook.</param>
      <param name="Target">Required. The selected PivotTable report.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookPivotTableOpenConnectionEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookPivotTableOpenConnection" /> event. The WorkbookPivotTableOpenConnection event occurs after a PivotTable report connection has been opened.</summary>
      <param name="Wb">Required. The selected workbook.</param>
      <param name="Target">Required. The selected PivotTable report.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookRowsetCompleteEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookRowsetComplete" /> event. The WorkbookRowsetComplete event occurs when the user either drills through the recordset or invokes the rowset action on an OLAP PivotTable.</summary>
      <param name="Wb">The workbook for which the event occurs.</param>
      <param name="Description">A brief description of the event.</param>
      <param name="Sheet">The worksheet on which the recordset is created.</param>
      <param name="Success">Contains a Boolean value to indicate success or failure.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookSyncEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookSync" /> event. The WorkbookSync event occurs when the local copy of a workbook that is part of a Document Workspace is synchronized with the copy on the server.</summary>
      <param name="Wb">
        <see cref="T:Microsoft.Office.Interop.Excel.Workbook" />. The workbook being synchronized.</param>
      <param name="SyncEventType">Required <see cref="T:Microsoft.Office.Core.MsoSyncEventType" />. The status of the workbook synchronization.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Application">
      <summary>Represents the entire Microsoft Excel application.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ApplicationClass">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.#ctor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass._Evaluate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass._FindFile"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass._Run2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass._Wait(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass._WSFunction(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.ActivateMicrosoftApp(Microsoft.Office.Interop.Excel.XlMSApplication)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ActiveCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ActiveChart"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ActiveDialog"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ActiveEncryptionSession">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ActiveMenuBar"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ActivePrinter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ActiveProtectedViewWindow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ActiveSheet"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ActiveWindow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ActiveWorkbook"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_AfterCalculate(Microsoft.Office.Interop.Excel.AppEvents_AfterCalculateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_NewWorkbook(Microsoft.Office.Interop.Excel.AppEvents_NewWorkbookEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_ProtectedViewWindowActivate(Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowActivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_ProtectedViewWindowBeforeClose(Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowBeforeCloseEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_ProtectedViewWindowBeforeEdit(Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowBeforeEditEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_ProtectedViewWindowDeactivate(Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowDeactivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_ProtectedViewWindowOpen(Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowOpenEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_ProtectedViewWindowResize(Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowResizeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_SheetActivate(Microsoft.Office.Interop.Excel.AppEvents_SheetActivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_SheetBeforeDoubleClick(Microsoft.Office.Interop.Excel.AppEvents_SheetBeforeDoubleClickEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_SheetBeforeRightClick(Microsoft.Office.Interop.Excel.AppEvents_SheetBeforeRightClickEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_SheetCalculate(Microsoft.Office.Interop.Excel.AppEvents_SheetCalculateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_SheetChange(Microsoft.Office.Interop.Excel.AppEvents_SheetChangeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_SheetDeactivate(Microsoft.Office.Interop.Excel.AppEvents_SheetDeactivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_SheetFollowHyperlink(Microsoft.Office.Interop.Excel.AppEvents_SheetFollowHyperlinkEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_SheetPivotTableAfterValueChange(Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableAfterValueChangeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_SheetPivotTableBeforeAllocateChanges(Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableBeforeAllocateChangesEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_SheetPivotTableBeforeCommitChanges(Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableBeforeCommitChangesEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_SheetPivotTableBeforeDiscardChanges(Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableBeforeDiscardChangesEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_SheetPivotTableUpdate(Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableUpdateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_SheetSelectionChange(Microsoft.Office.Interop.Excel.AppEvents_SheetSelectionChangeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WindowActivate(Microsoft.Office.Interop.Excel.AppEvents_WindowActivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WindowDeactivate(Microsoft.Office.Interop.Excel.AppEvents_WindowDeactivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WindowResize(Microsoft.Office.Interop.Excel.AppEvents_WindowResizeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookActivate(Microsoft.Office.Interop.Excel.AppEvents_WorkbookActivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookAddinInstall(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAddinInstallEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookAddinUninstall(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAddinUninstallEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookAfterSave(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAfterSaveEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookAfterXmlExport(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAfterXmlExportEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookAfterXmlImport(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAfterXmlImportEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookBeforeClose(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeCloseEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookBeforePrint(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforePrintEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookBeforeSave(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeSaveEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookBeforeXmlExport(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeXmlExportEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookBeforeXmlImport(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeXmlImportEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookDeactivate(Microsoft.Office.Interop.Excel.AppEvents_WorkbookDeactivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookNewChart(Microsoft.Office.Interop.Excel.AppEvents_WorkbookNewChartEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookNewSheet(Microsoft.Office.Interop.Excel.AppEvents_WorkbookNewSheetEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookOpen(Microsoft.Office.Interop.Excel.AppEvents_WorkbookOpenEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookPivotTableCloseConnection(Microsoft.Office.Interop.Excel.AppEvents_WorkbookPivotTableCloseConnectionEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookPivotTableOpenConnection(Microsoft.Office.Interop.Excel.AppEvents_WorkbookPivotTableOpenConnectionEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookRowsetComplete(Microsoft.Office.Interop.Excel.AppEvents_WorkbookRowsetCompleteEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookSync(Microsoft.Office.Interop.Excel.AppEvents_WorkbookSyncEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.AddChartAutoFormat(System.Object,System.String,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.AddCustomList(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.AddIns"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.AddIns2"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.AfterCalculate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.AlertBeforeOverwriting"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.AltStartupPath"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.AlwaysUseClearType">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.AnswerWizard"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.AppEvents_Event_NewWorkbook"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ArbitraryXMLSupportAvailable"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.AskToUpdateLinks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Assistance">
      <returns>Returns <see cref="T:Microsoft.Office.Core.IAssistance" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Assistant"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.AutoCorrect"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.AutoFormatAsYouTypeReplaceHyperlinks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.AutomationSecurity"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.AutoPercentEntry"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.AutoRecover"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Build"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Calculate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.CalculateBeforeSave"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.CalculateFull"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.CalculateFullRebuild"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.CalculateUntilAsyncQueriesDone"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Calculation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.CalculationInterruptKey"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.CalculationState"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.CalculationVersion"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Caller(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.CanPlaySounds"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.CanRecordSounds"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.CellDragAndDrop"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Cells"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.CentimetersToPoints(System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Charts"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.CheckAbort(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.CheckSpelling(System.String,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ClipboardFormats(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ClusterConnector"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ColorButtons"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Columns"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.COMAddIns"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.CommandBars"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.CommandUnderlines"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ConstrainNumeric"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ControlCharacters"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.CopyObjectsWithCells"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Cursor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.CursorMovement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.CustomListCount"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.CutCopyMode"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DataEntryMode"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DDEAppReturnCode"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.DDEExecute(System.Int32,System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.DDEInitiate(System.String,System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.DDEPoke(System.Int32,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.DDERequest(System.Int32,System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.DDETerminate(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DecimalSeparator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DefaultFilePath"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DefaultSaveFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DefaultSheetDirection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DefaultWebOptions"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DeferAsyncQueries"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.DeleteChartAutoFormat(System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.DeleteCustomList(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Dialogs"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DialogSheets"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DisplayAlerts"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DisplayClipboardWindow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DisplayCommentIndicator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DisplayDocumentActionTaskPane"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DisplayDocumentInformationPanel"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DisplayExcel4Menus"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DisplayFormulaAutoComplete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DisplayFormulaBar"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DisplayFullScreen"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DisplayFunctionToolTips"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DisplayInfoWindow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DisplayInsertOptions"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DisplayNoteIndicator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DisplayPasteOptions"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DisplayRecentFiles"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DisplayScrollBars"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.DisplayStatusBar"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.DisplayXMLSourcePane(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.DoubleClick"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Dummy1(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Dummy10(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Dummy101"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Dummy11"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Dummy12(Microsoft.Office.Interop.Excel.PivotTable,Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Dummy13(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Dummy14"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Dummy2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Dummy20(System.Int32)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Dummy4(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Dummy5(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Dummy6"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Dummy7"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Dummy8(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Dummy9"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.EditDirectlyInCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.EnableAnimations"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.EnableAutoComplete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.EnableCancelKey"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.EnableEvents"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.EnableLargeOperationAlert"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.EnableLivePreview"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.EnableSound"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.EnableTipWizard"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ErrorCheckingOptions"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Evaluate(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Excel4IntlMacroSheets"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Excel4MacroSheets"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.ExecuteExcel4Macro(System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ExtendList"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.FeatureInstall"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.FileConverters(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.FileDialog(Microsoft.Office.Core.MsoFileDialogType)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.FileExportConverters"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.FileFind"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.FileSearch"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.FileValidation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.FileValidationPivot"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.FindFile"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.FindFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.FixedDecimal"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.FixedDecimalPlaces"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.FormulaBarHeight"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.GenerateGetPivotData"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.GenerateTableRefs"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.GetCustomListContents(System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.GetCustomListNum(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.GetOpenFilename(System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.GetPhonetic(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.GetSaveAsFilename(System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Goto(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Height"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Help(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.HideChartDraftModeNotification"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.HighQualityModeForGraphics"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Hinstance"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.HinstancePtr"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Hwnd"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.IgnoreRemoteRequests"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.InchesToPoints(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.InputBox(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.InsertChartInDraftMode"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Interactive"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.International(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Intersect(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.IsSandboxed"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Iteration"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.LanguageSettings"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.LargeButtons"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.LargeOperationCellThousandCount"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.LibraryPath"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.MacroOptions(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.MacroOptions2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.MailLogoff"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.MailLogon(System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.MailSession"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.MailSystem"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.MapPaperSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.MathCoprocessorAvailable"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.MaxChange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.MaxIterations"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.MeasurementUnit"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.MemoryFree"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.MemoryTotal"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.MemoryUsed"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.MenuBars"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Modules"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.MouseAvailable"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.MoveAfterReturn"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.MoveAfterReturnDirection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.MultiThreadedCalculation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Names"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.NetworkTemplatesPath"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.NewWorkbook"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.NextLetter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ODBCErrors"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ODBCTimeout"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.OLEDBErrors"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.OnCalculate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.OnData"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.OnDoubleClick"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.OnEntry"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.OnKey(System.String,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.OnRepeat(System.String,System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.OnSheetActivate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.OnSheetDeactivate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.OnTime(System.Object,System.String,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.OnUndo(System.String,System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.OnWindow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.OperatingSystem"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.OrganizationName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Path"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.PathSeparator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.PivotTableSelection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.PreviousSelections(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.PrintCommunication"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ProductCode"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.PromptForSummaryInfo"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.ProtectedViewWindowActivate"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.ProtectedViewWindowBeforeClose"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.ProtectedViewWindowBeforeEdit"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.ProtectedViewWindowDeactivate"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.ProtectedViewWindowOpen"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.ProtectedViewWindowResize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ProtectedViewWindows"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Quit"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Quitting"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Range(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Ready"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.RecentFiles"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.RecordMacro(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.RecordRelative"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ReferenceStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.RegisteredFunctions(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.RegisterXLL(System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_AfterCalculate(Microsoft.Office.Interop.Excel.AppEvents_AfterCalculateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_NewWorkbook(Microsoft.Office.Interop.Excel.AppEvents_NewWorkbookEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_ProtectedViewWindowActivate(Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowActivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_ProtectedViewWindowBeforeClose(Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowBeforeCloseEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_ProtectedViewWindowBeforeEdit(Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowBeforeEditEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_ProtectedViewWindowDeactivate(Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowDeactivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_ProtectedViewWindowOpen(Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowOpenEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_ProtectedViewWindowResize(Microsoft.Office.Interop.Excel.AppEvents_ProtectedViewWindowResizeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_SheetActivate(Microsoft.Office.Interop.Excel.AppEvents_SheetActivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_SheetBeforeDoubleClick(Microsoft.Office.Interop.Excel.AppEvents_SheetBeforeDoubleClickEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_SheetBeforeRightClick(Microsoft.Office.Interop.Excel.AppEvents_SheetBeforeRightClickEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_SheetCalculate(Microsoft.Office.Interop.Excel.AppEvents_SheetCalculateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_SheetChange(Microsoft.Office.Interop.Excel.AppEvents_SheetChangeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_SheetDeactivate(Microsoft.Office.Interop.Excel.AppEvents_SheetDeactivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_SheetFollowHyperlink(Microsoft.Office.Interop.Excel.AppEvents_SheetFollowHyperlinkEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_SheetPivotTableAfterValueChange(Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableAfterValueChangeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_SheetPivotTableBeforeAllocateChanges(Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableBeforeAllocateChangesEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_SheetPivotTableBeforeCommitChanges(Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableBeforeCommitChangesEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_SheetPivotTableBeforeDiscardChanges(Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableBeforeDiscardChangesEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_SheetPivotTableUpdate(Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableUpdateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_SheetSelectionChange(Microsoft.Office.Interop.Excel.AppEvents_SheetSelectionChangeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WindowActivate(Microsoft.Office.Interop.Excel.AppEvents_WindowActivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WindowDeactivate(Microsoft.Office.Interop.Excel.AppEvents_WindowDeactivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WindowResize(Microsoft.Office.Interop.Excel.AppEvents_WindowResizeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookActivate(Microsoft.Office.Interop.Excel.AppEvents_WorkbookActivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookAddinInstall(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAddinInstallEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookAddinUninstall(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAddinUninstallEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookAfterSave(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAfterSaveEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookAfterXmlExport(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAfterXmlExportEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookAfterXmlImport(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAfterXmlImportEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookBeforeClose(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeCloseEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookBeforePrint(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforePrintEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookBeforeSave(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeSaveEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookBeforeXmlExport(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeXmlExportEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookBeforeXmlImport(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeXmlImportEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookDeactivate(Microsoft.Office.Interop.Excel.AppEvents_WorkbookDeactivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookNewChart(Microsoft.Office.Interop.Excel.AppEvents_WorkbookNewChartEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookNewSheet(Microsoft.Office.Interop.Excel.AppEvents_WorkbookNewSheetEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookOpen(Microsoft.Office.Interop.Excel.AppEvents_WorkbookOpenEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookPivotTableCloseConnection(Microsoft.Office.Interop.Excel.AppEvents_WorkbookPivotTableCloseConnectionEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookPivotTableOpenConnection(Microsoft.Office.Interop.Excel.AppEvents_WorkbookPivotTableOpenConnectionEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookRowsetComplete(Microsoft.Office.Interop.Excel.AppEvents_WorkbookRowsetCompleteEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookSync(Microsoft.Office.Interop.Excel.AppEvents_WorkbookSyncEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Repeat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ReplaceFormat"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.ResetTipWizard"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.RollZoom"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Rows"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.RTD"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Save(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.SaveISO8601Dates"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.SaveWorkspace(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ScreenUpdating"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Selection"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.SendKeys(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.SetDefaultChart(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.SharePointVersion(System.String)">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.SheetActivate"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.SheetBeforeDoubleClick"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.SheetBeforeRightClick"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.SheetCalculate"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.SheetChange"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.SheetDeactivate"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.SheetFollowHyperlink"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.SheetPivotTableAfterValueChange"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.SheetPivotTableBeforeAllocateChanges"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.SheetPivotTableBeforeCommitChanges"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.SheetPivotTableBeforeDiscardChanges"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.SheetPivotTableUpdate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Sheets"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.SheetSelectionChange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.SheetsInNewWorkbook"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ShortcutMenus(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ShowChartTipNames"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ShowChartTipValues"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ShowDevTools"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ShowMenuFloaties"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ShowSelectionFloaties"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ShowStartupDialog"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ShowToolTips"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ShowWindowsInTaskbar"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.SmartArtColors"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.SmartArtLayouts"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.SmartArtQuickStyles"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.SmartTagRecognizers"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Speech"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.SpellingOptions"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.StandardFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.StandardFontSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.StartupPath"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.StatusBar"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Support(System.Object,System.Int32,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.TemplatesPath"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ThisCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ThisWorkbook"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ThousandsSeparator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Toolbars"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.TransitionMenuKey"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.TransitionMenuKeyAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.TransitionNavigKeys"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.UILanguage"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Undo"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Union(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.UsableHeight"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.UsableWidth"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.UseClusterConnector"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.UsedObjects"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.UserControl"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.UserLibraryPath"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.UserName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.UseSystemSeparators"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.VBE"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Version"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Visible"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Volatile(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Wait(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.WarnOnFunctionNameConflict"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Watches"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Width"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.WindowActivate"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.WindowDeactivate"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.WindowResize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Windows"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.WindowsForPens"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.WindowState"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.WorkbookActivate"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.WorkbookAddinInstall"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.WorkbookAddinUninstall"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.WorkbookAfterSave"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.WorkbookAfterXmlExport"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.WorkbookAfterXmlImport"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.WorkbookBeforeClose"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.WorkbookBeforePrint"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.WorkbookBeforeSave"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.WorkbookBeforeXmlExport"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.WorkbookBeforeXmlImport"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.WorkbookDeactivate"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.WorkbookNewChart"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.WorkbookNewSheet"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.WorkbookOpen"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.WorkbookPivotTableCloseConnection"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.WorkbookPivotTableOpenConnection"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.WorkbookRowsetComplete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Workbooks"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ApplicationClass.WorkbookSync"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.WorksheetFunction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Worksheets"></member>
    <member name="T:Microsoft.Office.Interop.Excel.Arc">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Arc._Dummy43"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arc.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arc.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arc.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arc.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arc.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arc.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arc.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.ReadingOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arc.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arc.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arc.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.Arcs">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Arcs._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arcs._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arcs._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arcs._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arcs._Dummy43"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arcs.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arcs.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arcs.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arcs.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arcs.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arcs.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arcs.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arcs.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.Formula"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arcs.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arcs.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arcs.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.ReadingOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arcs.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Arcs.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Arcs.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.Areas">
      <summary>A collection of the areas, or contiguous blocks of cells, within a selection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Areas._Default(System.Int32)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Areas.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Areas.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Areas.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Areas.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Areas.Item(System.Int32)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Integer. The index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Areas.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AutoCorrect">
      <summary>Contains Microsoft Excel AutoCorrect attributes (capitalization of names of days, correction of two initial capital letters, automatic correction list, and so on).</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AutoCorrect.AddReplacement(System.String,System.String)">
      <summary>Adds an entry to the array of AutoCorrect replacements.</summary>
      <param name="What">Required String. The text to be replaced. If this string already exists in the array of AutoCorrect replacements, the existing substitute text is replaced by the new text.</param>
      <param name="Replacement">Required String. The replacement text.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AutoCorrect.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AutoCorrect.AutoExpandListRange">
      <summary>A Boolean value indicating whether automatic expansion is enabled for lists.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AutoCorrect.AutoFillFormulasInLists">
      <summary>Affects the creation of calculated columns created by automatic fill-down lists. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AutoCorrect.CapitalizeNamesOfDays">
      <summary>True if the first letter of day names is capitalized automatically.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AutoCorrect.CorrectCapsLock">
      <summary>True if Microsoft Excel automatically corrects accidental use of the CAPS LOCK key.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AutoCorrect.CorrectSentenceCap">
      <summary>True if Microsoft Excel automatically corrects sentence (first word) capitalization.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AutoCorrect.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AutoCorrect.DeleteReplacement(System.String)">
      <summary>Deletes an entry from the array of AutoCorrect replacements.</summary>
      <param name="What">Required String. The text to be replaced, as it appears in the row to be deleted from the array of AutoCorrect replacements. If this string doesn't exist in the array of AutoCorrect replacements, this method fails.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AutoCorrect.DisplayAutoCorrectOptions">
      <summary>Allows the user to display or hide the AutoCorrect Options button. The default value is True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AutoCorrect.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AutoCorrect.ReplacementList(System.Object)">
      <summary>Returns the array of AutoCorrect replacements.</summary>
      <param name="Index">Optional Object. The row index of the array of AutoCorrect replacements to be returned. The row is returned as a one-dimensional array with two elements: The first element is the text in column 1, and the second element is the text in column 2.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AutoCorrect.ReplaceText">
      <summary>True if text in the list of AutoCorrect replacements is replaced automatically.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AutoCorrect.TwoInitialCapitals">
      <summary>True if words that begin with two capital letters are corrected automatically.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AutoFilter">
      <summary>Represents autofiltering for the specified worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AutoFilter.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object). Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AutoFilter.ApplyFilter">
      <summary>Applies the specified <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" />object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AutoFilter.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AutoFilter.FilterMode">
      <summary>Returns True if the worksheet is in the AutoFilter filter mode. Read-only Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AutoFilter.Filters">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Filters" /> collection that represents all the filters in an autofiltered range. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AutoFilter.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AutoFilter.Range">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range to which the specified AutoFilter applies.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AutoFilter.ShowAllData">
      <summary>Displays all the data returned by the <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" />object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AutoFilter.Sort">
      <summary>Gets the sort column or columns, and sort order for the <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> collection.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Sort" />
      </returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AutoRecover">
      <summary>Represents the automatic recovery features of a workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AutoRecover.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AutoRecover.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AutoRecover.Enabled">
      <summary>True if the object is enabled.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AutoRecover.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AutoRecover.Path">
      <summary>Sets or returns the complete path to where Microsoft Excel will store the AutoRecover temporary files.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AutoRecover.Time">
      <summary>Sets or returns the time interval for the <see cref="T:Microsoft.Office.Interop.Excel.AutoRecover" /> object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Axes">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Axis" /> objects in the specified chart.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Axes._Default(Microsoft.Office.Interop.Excel.XlAxisType,Microsoft.Office.Interop.Excel.XlAxisGroup)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axes.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axes.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axes.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Axes.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Axes.Item(Microsoft.Office.Interop.Excel.XlAxisType,Microsoft.Office.Interop.Excel.XlAxisGroup)">
      <summary>Returns a single <see cref="T:Microsoft.Office.Interop.Excel.Axis" /> object from an <see cref="T:Microsoft.Office.Interop.Excel.Axes" /> collection.</summary>
      <param name="Type">Required <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" />. The axis type.XlAxisType can be one of these constants:xlCategory.xlSeriesAxis Valid only for 3-D charts.xlValue.</param>
      <param name="AxisGroup">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" />. The axis.XlAxisGroup can be one of these constants:xlPrimary DefaultxlSecondary</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axes.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Axis">
      <summary>Represents a single axis in a chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.AxisBetweenCategories">
      <summary>True if the value axis crosses the category axis between categories.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.AxisGroup">
      <summary>Returns the group for the specified axis.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.AxisTitle">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.AxisTitle" /> object that represents the title of the specified axis.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.BaseUnit">
      <summary>Returns or sets the base unit for the specified category axis.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.BaseUnitIsAuto">
      <summary>True if Microsoft Excel chooses appropriate base units for the specified category axis. The default value is True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.CategoryNames">
      <summary>Returns or sets all the category names for the specified axis as a text array.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.CategoryType">
      <summary>Returns or sets the category axis type.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.Crosses">
      <summary>Returns or sets the point on the specified axis where the other axis crosses.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.CrossesAt">
      <summary>Returns or sets the point on the value axis where the category axis crosses it. Applies only to the value axis.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Axis.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.DisplayUnit">
      <summary>Returns or sets the unit label for the value axis.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.DisplayUnitCustom">
      <summary>If the value of the <see cref="P:Microsoft.Office.Interop.Excel.Axis.DisplayUnit" /> property is xlCustom, the DisplayUnitCustom property returns or sets the value of the displayed units. The value must be from 0 through 10E307.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.DisplayUnitLabel">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.DisplayUnitLabel" /> object for the specified axis. Returns Null if the <see cref="P:Microsoft.Office.Interop.Excel.Axis.HasDisplayUnitLabel" /> property is set to False.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.Format">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.HasDisplayUnitLabel">
      <summary>True if the label specified by the <see cref="P:Microsoft.Office.Interop.Excel.Axis.DisplayUnit" /> or <see cref="P:Microsoft.Office.Interop.Excel.Axis.DisplayUnitCustom" /> property is displayed on the specified axis. The default value is True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.HasMajorGridlines">
      <summary>True if the axis has major gridlines. Only axes in the primary axis group can have gridlines.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.HasMinorGridlines">
      <summary>True if the axis has minor gridlines. Only axes in the primary axis group can have gridlines.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.HasTitle">
      <summary>True if the axis or chart has a visible title.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.Height">
      <summary>The height, in points, of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.Left">
      <summary>The distance, in points, from the left edge of the object to the left edge of the chart area.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.LogBase">
      <summary>Returns or sets the base of the logarithm when you are using log scales. Read/write Double. </summary>
      <returns>Double</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.MajorGridlines">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Gridlines" /> object that represents the major gridlines for the specified axis. Only axes in the primary axis group can have gridlines.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.MajorTickMark">
      <summary>Returns or sets the type of major tick mark for the specified axis.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.MajorUnit">
      <summary>Returns or sets the major units for the value axis.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.MajorUnitIsAuto">
      <summary>True if Microsoft Excel calculates the major units for the value axis.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.MajorUnitScale">
      <summary>Returns or sets the major unit scale value for the category axis when the <see cref="P:Microsoft.Office.Interop.Excel.Axis.CategoryType" /> property is set to xlTimeScale.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.MaximumScale">
      <summary>Returns or sets the maximum value on the value axis.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.MaximumScaleIsAuto">
      <summary>True if Microsoft Excel calculates the maximum value for the value axis.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.MinimumScale">
      <summary>Returns or sets the minimum value on the value axis.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.MinimumScaleIsAuto">
      <summary>True if Microsoft Excel calculates the minimum value for the value axis.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.MinorGridlines">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Gridlines" /> object that represents the minor gridlines for the specified axis. Only axes in the primary axis group can have gridlines.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.MinorTickMark">
      <summary>Returns or sets the type of minor tick mark for the specified axis.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.MinorUnit">
      <summary>Returns or sets the minor units on the value axis.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.MinorUnitIsAuto">
      <summary>True if Microsoft Excel calculates minor units for the value axis.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.MinorUnitScale">
      <summary>Returns or sets the minor unit scale value for the category axis when the <see cref="P:Microsoft.Office.Interop.Excel.Axis.CategoryType" /> property is set to xlTimeScale.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.ReversePlotOrder">
      <summary>True if Microsoft Excel plots data points from last to first.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.ScaleType">
      <summary>Returns or sets the value axis scale type.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Axis.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.TickLabelPosition">
      <summary>Describes the position of tick-mark labels on the specified axis.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.TickLabels">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.TickLabels" /> object that represents the tick-mark labels for the specified axis.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.TickLabelSpacing">
      <summary>Returns or sets the number of categories or series between tick-mark labels. Applies only to category and series axes.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.TickLabelSpacingIsAuto">
      <summary>Returns or sets whether or not the tick label spacing is automatic. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.TickMarkSpacing">
      <summary>Returns or sets the number of categories or series between tick marks. Applies only to category and series axes.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.Top">
      <summary>The distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.Type">
      <summary>Returns the Axis type.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Axis.Width">
      <summary>The width, in points, of the object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.AxisTitle">
      <summary>Represents a chart axis title.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.AutoScaleFont">
      <summary>True if the text in the object changes font size when the object size changes. The default value is True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.Caption">
      <summary>The axis title text.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.Characters(System.Object,System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> object that represents a range of characters within the object text. You can use the Characters object to format characters within a text string.</summary>
      <param name="Start">Optional Object. The first character to be returned. If this argument is either 1 or omitted, this property returns a range of characters starting with the first character.</param>
      <param name="Length">Optional Object. The number of characters to be returned. If this argument is omitted, this property returns the remainder of the string (everything after the <paramref name="Start" /> character).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AxisTitle.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.Fill">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object that contains fill formatting properties for the specified chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.Font">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.Format">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.Formula">
      <summary>Gets or sets a value that represents the formula of the object using A1-style notation, in English.</summary>
      <returns>The formula of the object using A1-style notation, in English.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.FormulaLocal">
      <summary>Gets or sets a value that represents the formula of the object using A1-style notation, in the language of the user.</summary>
      <returns>The formula of the object using A1-style notation, in the language of the user.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.FormulaR1C1">
      <summary>Gets or sets a value that represents the formula of the object using R1C1-style notation, in English.</summary>
      <returns>The formula of the object using R1C1-style notation, in English.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.FormulaR1C1Local">
      <summary>Gets or sets a value that represents the formula of the object using R1C1-style notation, in the language of the user.</summary>
      <returns>The formula of the object using R1C1-style notation, in the language of the user.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.Height">
      <summary>Gets the height, in points, of the object.</summary>
      <returns>The height, in points, of the object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.HorizontalAlignment">
      <summary>Returns or sets the horizontal alignment for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.IncludeInLayout">
      <summary>True if an axis title  will occupy the chart layout space when a chart layout is being determined. The default value is True. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.Interior">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.Left">
      <summary>The distance, in points, from the left edge of the object to the left edge of the chart area.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.Orientation">
      <summary>The text orientation. Can be an integer value from –90 to 90 degrees.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.Position">
      <summary>Returns or sets the position of the axis title on the chart. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlChartElementPosition" />.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlChartElementPosition" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.ReadingOrder">
      <summary>Returns or sets the reading order for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.AxisTitle.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.Shadow">
      <summary>True if the font is a shadow font or if the object has a shadow.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.Text">
      <summary>Returns or sets the text for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.Top">
      <summary>The distance, in points, from the top of the chart area.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.VerticalAlignment">
      <summary>Returns or sets the vertical alignment of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.AxisTitle.Width">
      <summary>Gets the width, in points, of the object.</summary>
      <returns>The width, in points, of the object.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Border">
      <summary>Represents the border of an object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Border.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Border.Color">
      <summary>Returns or sets the primary color of the border.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Border.ColorIndex">
      <summary>Returns or sets the color of the border.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Border.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Border.LineStyle">
      <summary>Returns or sets the line style for the border.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Border.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Border.ThemeColor">
      <summary>Returns or sets the theme color in the applied color scheme that is associated with the specified object.  Read/write Object.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Border.TintAndShade">
      <summary>Returns or sets a Single that lightens or darkens a color.</summary>
      <returns>Single</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Border.Weight">
      <summary>Returns or sets the weight of the border.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Borders">
      <summary>A collection of four <see cref="T:Microsoft.Office.Interop.Excel.Border" /> objects that represent the four borders of a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> or <see cref="T:Microsoft.Office.Interop.Excel.Style" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Borders._Default(Microsoft.Office.Interop.Excel.XlBordersIndex)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Borders.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Borders.Color">
      <summary>Returns or sets the primary color of all four borders of a range. If they're not all the same color, returns 0 (zero).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Borders.ColorIndex">
      <summary>Returns or sets the color of all four borders. Returns Null if all four borders aren't the same color.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Borders.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Borders.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Borders.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Borders.Item(Microsoft.Office.Interop.Excel.XlBordersIndex)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents one of the borders of either a range of cells or a style.</summary>
      <param name="Index">Required <see cref="T:Microsoft.Office.Interop.Excel.XlBordersIndex" />.Can be one of these XlBordersIndex constants:xlDiagonalDownxlDiagonalUpxlEdgeBottomxlEdgeLeftxlEdgeRightxlEdgeTopxlInsideHorizontalxlInsideVertical</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Borders.LineStyle">
      <summary>Returns or sets the line style for the border.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Borders.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Borders.ThemeColor">
      <summary>Returns or sets the theme color in the applied color scheme that is associated with the specified object.  Read/write Object.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Borders.TintAndShade">
      <summary>Returns or sets a Single that lightens or darkens a color.</summary>
      <returns>Single</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Borders.Value">
      <summary>Returns or sets the line style for the border.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Borders.Weight">
      <summary>Returns or sets the weight of the border.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Button">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.Accelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Button.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.CancelButton"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Button.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Button.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Button.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Button.Cut"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.DefaultButton"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Button.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.DismissButton"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Button.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.HelpButton"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.PhoneticAccelerator">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" />
 object, which contains information about a specific phonetic text string in a cell.</summary>
      <returns>Phonetic</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.ReadingOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Button.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Button.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Button.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.Buttons">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Buttons._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Buttons._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Buttons._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Buttons._Dummy3"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.Accelerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Buttons.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.AutoSize"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Buttons.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.CancelButton"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Buttons.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Buttons.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Buttons.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Buttons.Cut"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.DefaultButton"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Buttons.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.DismissButton"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Buttons.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.Formula"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Buttons.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Buttons.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.HelpButton"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.HorizontalAlignment"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Buttons.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.PhoneticAccelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.ReadingOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Buttons.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Buttons.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Buttons.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.CalculatedFields">
      <summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> objects that represents all the calculated fields in the specified PivotTable report.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CalculatedFields._Add(System.String,System.String)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedFields._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CalculatedFields.Add(System.String,System.String,System.Object)">
      <summary>Creates a new calculated field. Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object.</summary>
      <param name="Name">Required String. The name of the field.</param>
      <param name="Formula">Required String. The formula for the field.</param>
      <param name="UseStandardFormula">Optional Object. False (default) for upward compatibility. True for strings contained in any arguments that are field names (will be interpreted as having been formatted in standard U.S. English instead of local settings).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedFields.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedFields.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedFields.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CalculatedFields.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CalculatedFields.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedFields.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.CalculatedItems">
      <summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> objects that represent all the calculated items in the specified PivotTable report.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CalculatedItems._Add(System.String,System.String)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedItems._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CalculatedItems.Add(System.String,System.String,System.Object)">
      <summary>Creates a new calculated item. Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> object.</summary>
      <param name="Name">Required String. The name of the item.</param>
      <param name="Formula">Required String. The formula for the item.</param>
      <param name="UseStandardFormula">Optional Object. False (default) for upward compatibility. True for strings contained in any arguments that are item names (will be interpreted as having been formatted in standard U.S. English instead of local settings).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedItems.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedItems.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedItems.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CalculatedItems.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CalculatedItems.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedItems.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.CalculatedMember">
      <summary>Represents the calculated fields and calculated items for PivotTables with Online Analytical Processing (OLAP) data sources.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedMember._Default">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedMember.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedMember.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CalculatedMember.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedMember.DisplayFolder">
      <summary>Gets the display folder name for a named set.</summary>
      <returns>The display folder name for a named set.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedMember.Dynamic">
      <summary>Gets whether the specified named set is recalculated with every update. </summary>
      <returns>true if the specified named set is recalculated with every update; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedMember.FlattenHierarchies">
      <summary>Gets or sets whether items from all levels of the hierarchy of the specified named set are displayed in the same field of a PivotTable report based on an OLAP cube.</summary>
      <returns>true if items from all levels of the hierarchy of the specified named set are displayed in the same field of a PivotTable report based on an OLAP cube; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedMember.Formula">
      <summary>Returns the member's formula in multidimensional expressions (MDX) syntax.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedMember.HierarchizeDistinct">
      <summary>Gets or sets whether to order and remove duplicates when displaying the hierarchy of the specified named set in a PivotTable report based on an OLAP cube.</summary>
      <returns>true if duplicates should be ordered and removed when displaying the hierarchy of the specified named set in a PivotTable report based on an OLAP cube; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedMember.IsValid">
      <summary>Returns a Boolean that indicates whether the specified calculated member has been successfully instantiated with the OLAP provider during the current session.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedMember.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedMember.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedMember.SolveOrder">
      <summary>Returns an Integer specifying the value of the calculated member's solve order MDX (multidimensional expression) argument. The default value is zero.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedMember.SourceName">
      <summary>Returns the specified object’s name as it appears in the original source data for the specified PivotTable report.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type">
      <summary>Returns the calculated member type.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.CalculatedMembers">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objects on the specified PivotTable.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedMembers._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CalculatedMembers.Add(System.String,System.String,System.Object,System.Object)">
      <summary>Adds a calculated field or calculated item to a PivotTable.</summary>
      <param name="Name">Required String. The name of the calculated member.</param>
      <param name="Formula">Required String. The formula of the calculated member.</param>
      <param name="SolveOrder">Optional Object. The solve order for the calculated member.</param>
      <param name="Type">Optional Object. The type of calculated member.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CalculatedMembers.Add2(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CalculatedMembers.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.CalloutFormat">
      <summary>Contains properties and methods that apply to line callouts.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalloutFormat.Accent">
      <summary>Allows the user to place a vertical accent bar to separate the callout text from the callout line.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalloutFormat.Angle">
      <summary>Returns or sets the angle of the callout line.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalloutFormat.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalloutFormat.AutoAttach">
      <summary>True if the place where the callout line attaches to the callout text box changes depending on whether the origin of the callout line (where the callout points to) is to the left or right of the callout text box.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalloutFormat.AutoLength">
      <summary>Applies only to callouts whose lines consist of more than one segment (types msoCalloutThree and msoCalloutFour).</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CalloutFormat.AutomaticLength">
      <summary>Specifies that the first segment of the callout line (the segment attached to the text callout box) be scaled automatically when the callout is moved.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalloutFormat.Border">
      <summary>Represents the visibility options for the border of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalloutFormat.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CalloutFormat.CustomDrop(System.Single)">
      <summary>Sets the vertical distance (in points) from the edge of the text bounding box to the place where the callout line attaches to the text box.</summary>
      <param name="Drop">Required Single. The drop distance, in points.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CalloutFormat.CustomLength(System.Single)">
      <summary>Specifies that the first segment of the callout line (the segment attached to the text callout box) retains a fixed length whenever the callout is moved.</summary>
      <param name="Length">Required Single. The length of the first segment of the callout in points.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalloutFormat.Drop">
      <summary>For callouts with an explicitly set drop value, returns the vertical distance (in points) from the edge of the text bounding box to the place where the callout line attaches to the text box.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalloutFormat.DropType">
      <summary>Returns a value that indicates where the callout line attaches to the callout text box.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalloutFormat.Gap">
      <summary>Returns or sets the horizontal distance (in points) between the end of the callout line and the text bounding box.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalloutFormat.Length">
      <summary>When the <see cref="P:Microsoft.Office.Interop.Excel.CalloutFormat.AutoLength" /> property of the specified callout is set to False, returns the length (in points) of the first segment of the callout line (the segment attached to the text callout box).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalloutFormat.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CalloutFormat.PresetDrop(Microsoft.Office.Core.MsoCalloutDropType)">
      <summary>Specifies whether the callout line attaches to the top, bottom, or center of the callout text box or whether it attaches at a point that’s a specified distance from the top or bottom of the text box.</summary>
      <param name="DropType">Required <see cref="T:Microsoft.Office.Interop.Office.MsoCalloutDropType" />. The starting position of the callout line relative to the text bounding box. Can be one of these MsoCalloutDropType constants:msoCalloutDropBottommsoCalloutDropCentermsoCalloutDropCustom Specifying msoCalloutDropCustom for this argument will cause your code to fail.msoCalloutDropMixedmsoCalloutDropTop</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CalloutFormat.Type">
      <summary>Returns or sets the callout format type.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.CellFormat">
      <summary>Represents the search criteria for the cell format.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CellFormat.AddIndent">
      <summary>True if text is automatically indented when the text alignment in a cell is set to equal distribution either horizontally or vertically.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CellFormat.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CellFormat.Borders">
      <summary>Allows the user to set or return the search criteria based on the cell's border format.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CellFormat.Clear">
      <summary>Clears the criteria set in the <see cref="P:Microsoft.Office.Interop.Excel._Application.FindFormat" /> and <see cref="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" /> properties.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CellFormat.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CellFormat.Font">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object, allowing the user to set or return the search criteria based on the cell's font format.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CellFormat.FormulaHidden">
      <summary>True if the formula will be hidden when the worksheet is protected. Returns Null if the specified range contains some cells with FormulaHidden equal to True and some cells with FormulaHidden equal to False.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CellFormat.HorizontalAlignment">
      <summary>Returns or sets the horizontal alignment for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CellFormat.IndentLevel">
      <summary>Returns or sets the indent level for the cell or range. Can be an integer from 0 to 15.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CellFormat.Interior">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object allowing the user to set or return the search criteria based on the cell's interior format.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CellFormat.Locked">
      <summary>True if the object is locked; False if the object can be modified when the sheet is protected. Returns Null if the specified range contains both locked and unlocked cells.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CellFormat.MergeCells">
      <summary>True if the range or style contains merged cells.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CellFormat.NumberFormat">
      <summary>Returns or sets the format code for the object. Returns Null if all cells in the specified range don't have the same number format.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CellFormat.NumberFormatLocal">
      <summary>Returns or sets the format code for the object as a string in the language of the user.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CellFormat.Orientation">
      <summary>The text orientation. Can be an integer value from –90 to 90 degrees.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CellFormat.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CellFormat.ShrinkToFit">
      <summary>True if text automatically shrinks to fit in the available column width. Returns Null if this property isn’t set to the same value for all cells in the specified range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CellFormat.VerticalAlignment">
      <summary>Returns or sets the vertical alignment of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CellFormat.WrapText">
      <summary>True if Microsoft Excel wraps the text in the object. Returns Null if the specified range contains some cells that wrap text and other cells that don’t.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Characters">
      <summary>Represents characters in an object that contains text. The Characters object lets you modify any sequence of characters contained in the full text string.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Characters.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Characters.Caption">
      <summary>The text of this range of characters.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Characters.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Characters.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Characters.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Characters.Font">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Characters.Insert(System.String)">
      <summary>Inserts a string preceding the selected characters.</summary>
      <param name="String">Required String. The string to insert.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Characters.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Characters.PhoneticCharacters">
      <summary>Returns or sets the phonetic text in the specified <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Characters.Text">
      <summary>Returns or sets the text for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Chart">
      <summary>Represents a chart in a workbook. The chart can be either an embedded chart (contained in a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" />) or a separate chart sheet.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartArea">
      <summary>Represents the chart area of a chart. The chart area on a 2-D chart contains the axes, the chart title, the axis titles, and the legend. The chart area on a 3-D chart contains the chart title and the legend; it doesn’t include the plot area (the area within the chart area where the data is plotted). For information about formatting the plot area, see the <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartArea.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartArea.AutoScaleFont">
      <summary>True if the text in the object changes font size when the object size changes. The default value is True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartArea.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartArea.Clear">
      <summary>Clears the entire object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartArea.ClearContents">
      <summary>Clears the data from a chart but leaves the formatting.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartArea.ClearFormats">
      <summary>Clears the formatting of the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartArea.Copy">
      <summary>Copies the object to the Clipboard.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartArea.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartArea.Fill">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object for a specified shape or a <see cref="T:Microsoft.Office.Interop.Excel.ChartFillFormat" /> object for a specified chart that contains fill formatting properties for the shape or chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartArea.Font">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartArea.Format">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartArea.Height">
      <summary>The height, in points, of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartArea.Interior">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartArea.Left">
      <summary>The distance, in points, from the left edge of the object to the left edge of the chart area.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartArea.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartArea.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartArea.RoundedCorners">
      <summary>True if the embedded chart has rounded corners. Read/write Boolean.</summary>
      <returns>Boolean.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartArea.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartArea.Shadow">
      <summary>True if the font is a shadow font or if the object has a shadow.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartArea.Top">
      <summary>The distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartArea.Width">
      <summary>The width, in points, of the object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartClass">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.#ctor"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass._CodeName"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass._Dummy23"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass._Evaluate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.Activate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_Activate(Microsoft.Office.Interop.Excel.ChartEvents_ActivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_BeforeDoubleClick(Microsoft.Office.Interop.Excel.ChartEvents_BeforeDoubleClickEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_BeforeRightClick(Microsoft.Office.Interop.Excel.ChartEvents_BeforeRightClickEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_Calculate(Microsoft.Office.Interop.Excel.ChartEvents_CalculateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_Deactivate(Microsoft.Office.Interop.Excel.ChartEvents_DeactivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_DragOver(Microsoft.Office.Interop.Excel.ChartEvents_DragOverEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_DragPlot(Microsoft.Office.Interop.Excel.ChartEvents_DragPlotEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_MouseDown(Microsoft.Office.Interop.Excel.ChartEvents_MouseDownEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_MouseMove(Microsoft.Office.Interop.Excel.ChartEvents_MouseMoveEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_MouseUp(Microsoft.Office.Interop.Excel.ChartEvents_MouseUpEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_Resize(Microsoft.Office.Interop.Excel.ChartEvents_ResizeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_Select(Microsoft.Office.Interop.Excel.ChartEvents_SelectEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_SeriesChange(Microsoft.Office.Interop.Excel.ChartEvents_SeriesChangeEventHandler)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.ApplyChartTemplate(System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.ApplyCustomType(Microsoft.Office.Interop.Excel.XlChartType,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.ApplyLayout(System.Int32,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.Arcs(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.Area3DGroup"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.AreaGroups(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.AutoFormat(System.Int32,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.AutoScaling"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.Axes(System.Object,Microsoft.Office.Interop.Excel.XlAxisGroup)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.BackWall"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.Bar3DGroup"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.BarGroups(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.BarShape"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartClass.BeforeDoubleClick"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartClass.BeforeRightClick"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.Buttons(System.Object)"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartClass.Calculate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.ChartArea"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartClass.ChartEvents_Event_Activate"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartClass.ChartEvents_Event_Select"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.ChartGroups(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.ChartObjects(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.ChartStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.ChartTitle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.ChartType"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.ChartWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.CheckBoxes(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.ClearToMatchStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.CodeName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.Column3DGroup"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.ColumnGroups(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.Copy(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.CopyChartBuild"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat,Microsoft.Office.Interop.Excel.XlPictureAppearance)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.Corners"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.DataTable"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartClass.Deactivate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.DepthPercent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.Deselect"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.DisplayBlanksAs"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.DoughnutGroups(System.Object)"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartClass.DragOver"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartClass.DragPlot"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.DrawingObjects(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.Drawings(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.DropDowns(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.Elevation"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.Evaluate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.Export(System.String,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.Floor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.GapDepth"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.GetChartElement(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.GroupBoxes(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.GroupObjects(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.HasAxis(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.HasDataTable"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.HasLegend"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.HasPivotFields"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.HasTitle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.HeightPercent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.Hyperlinks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.InDraftMode"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.Labels(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.Legend"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.Line3DGroup"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.LineGroups(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.Lines(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.ListBoxes(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.Location(Microsoft.Office.Interop.Excel.XlChartLocation,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.MailEnvelope"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartClass.MouseDown"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartClass.MouseMove"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartClass.MouseUp"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.Move(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.Next"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.OLEObjects(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.OnDoubleClick"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.OnSheetActivate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.OnSheetDeactivate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.OptionButtons(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.Ovals(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.PageSetup"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.Paste(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.Perspective"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.Pictures(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.Pie3DGroup"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.PieGroups(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.PivotLayout"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.PlotArea"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.PlotBy"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.PlotVisibleOnly"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.Previous"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.PrintedCommentPages"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.PrintPreview(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.ProtectContents"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.ProtectData"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.ProtectDrawingObjects"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.ProtectFormatting"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.ProtectGoalSeek"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.ProtectionMode"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.ProtectSelection"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.RadarGroups(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.Rectangles(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.Refresh"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_Activate(Microsoft.Office.Interop.Excel.ChartEvents_ActivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_BeforeDoubleClick(Microsoft.Office.Interop.Excel.ChartEvents_BeforeDoubleClickEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_BeforeRightClick(Microsoft.Office.Interop.Excel.ChartEvents_BeforeRightClickEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_Calculate(Microsoft.Office.Interop.Excel.ChartEvents_CalculateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_Deactivate(Microsoft.Office.Interop.Excel.ChartEvents_DeactivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_DragOver(Microsoft.Office.Interop.Excel.ChartEvents_DragOverEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_DragPlot(Microsoft.Office.Interop.Excel.ChartEvents_DragPlotEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_MouseDown(Microsoft.Office.Interop.Excel.ChartEvents_MouseDownEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_MouseMove(Microsoft.Office.Interop.Excel.ChartEvents_MouseMoveEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_MouseUp(Microsoft.Office.Interop.Excel.ChartEvents_MouseUpEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_Resize(Microsoft.Office.Interop.Excel.ChartEvents_ResizeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_Select(Microsoft.Office.Interop.Excel.ChartEvents_SelectEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_SeriesChange(Microsoft.Office.Interop.Excel.ChartEvents_SeriesChangeEventHandler)"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartClass.Resize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.RightAngleAxes"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.Rotation"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.SaveChartTemplate(System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.Scripts"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.ScrollBars(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.Select(System.Object)"></member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartClass.SeriesChange"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.SeriesCollection(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.SetBackgroundPicture(System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.SetDefaultChart(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.SetElement(Microsoft.Office.Core.MsoChartElementType)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.SetSourceData(Microsoft.Office.Interop.Excel.Range,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.Shapes"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.ShowAllFieldButtons"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.ShowAxisFieldButtons"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.ShowDataLabelsOverMaximum"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.ShowDraftModeButton"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.ShowLegendFieldButtons"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.ShowReportFilterFieldButtons"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.ShowValueFieldButtons"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.ShowWindow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.SideWall"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.SizeWithWindow"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.Spinners(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.SubType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.SurfaceGroup"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.Tab"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.TextBoxes(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.Type"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.Unprotect(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.Walls"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartClass.WallsAndGridlines2D"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartClass.XYGroups(System.Object)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartColorFormat">
      <summary>Used only with charts. Represents the color of a one-color object or the foreground or background color of an object with a gradient or patterned fill.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartColorFormat._Default">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartColorFormat.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartColorFormat.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartColorFormat.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartColorFormat.RGB">
      <summary>Returns the red-green-blue value of the specified color.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartColorFormat.SchemeColor">
      <summary>Returns or sets the color of a <see cref="T:Microsoft.Office.Interop.Excel.ChartColorFormat" /> object as an index in the current color scheme.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartColorFormat.Type">
      <summary>Returns whether the color is an RGB or scheme type.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartEvents">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents.Activate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents.BeforeDoubleClick(System.Int32,System.Int32,System.Int32,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents.BeforeRightClick(System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents.Calculate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents.Deactivate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents.DragOver"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents.DragPlot"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents.MouseDown(System.Int32,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents.MouseMove(System.Int32,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents.MouseUp(System.Int32,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents.Resize"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents.Select(System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents.SeriesChange(System.Int32,System.Int32)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartEvents_ActivateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.Activate" /> event. The Activate event occurs when a chart sheet or embedded chart is activated.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartEvents_BeforeDoubleClickEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.BeforeDoubleClick" /> event. The BeforeDoubleClick event occurs when an embedded chart is double-clicked, before the default double-click action.</summary>
      <param name="ElementID">Required. The double-clicked object.</param>
      <param name="Arg1">Depends on <paramref name="ElementID" />.</param>
      <param name="Arg2">Depends on <paramref name="ElementID" />.</param>
      <param name="Cancel">Optional. False when the event occurs. If the event procedure sets this argument to True, the default double-click action isn't performed when the procedure is finished.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartEvents_BeforeRightClickEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.BeforeRightClick" /> event. The BeforeRightClick event occurs when an embedded chart is right-clicked, before the default right-click action.</summary>
      <param name="Cancel">Required. False when the event occurs. If the event sets this argument to True, the default right-click action isn't performed when the procedure is finished.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartEvents_CalculateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.Calculate" /> event. The Calculate event occurs after the chart plots new or changed data.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartEvents_DeactivateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.Deactivate" /> event. The Deactivate event occurs when the chart is deactivated.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartEvents_DragOverEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.DragOver" /> event. The DragOver event occurs when a range of cells is dragged over a chart.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartEvents_DragPlotEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.DragPlot" /> event. The DragPlot event occurs when a range of cells is dragged and dropped on a chart.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartEvents_Event">
      <summary>Events interface for Microsoft Excel <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object events.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.Activate">
      <summary>Occurs when a chart sheet or embedded chart is activated.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.add_Activate(Microsoft.Office.Interop.Excel.ChartEvents_ActivateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.add_BeforeDoubleClick(Microsoft.Office.Interop.Excel.ChartEvents_BeforeDoubleClickEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.add_BeforeRightClick(Microsoft.Office.Interop.Excel.ChartEvents_BeforeRightClickEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.add_Calculate(Microsoft.Office.Interop.Excel.ChartEvents_CalculateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.add_Deactivate(Microsoft.Office.Interop.Excel.ChartEvents_DeactivateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.add_DragOver(Microsoft.Office.Interop.Excel.ChartEvents_DragOverEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.add_DragPlot(Microsoft.Office.Interop.Excel.ChartEvents_DragPlotEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.add_MouseDown(Microsoft.Office.Interop.Excel.ChartEvents_MouseDownEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.add_MouseMove(Microsoft.Office.Interop.Excel.ChartEvents_MouseMoveEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.add_MouseUp(Microsoft.Office.Interop.Excel.ChartEvents_MouseUpEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.add_Resize(Microsoft.Office.Interop.Excel.ChartEvents_ResizeEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.add_Select(Microsoft.Office.Interop.Excel.ChartEvents_SelectEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.add_SeriesChange(Microsoft.Office.Interop.Excel.ChartEvents_SeriesChangeEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.BeforeDoubleClick">
      <summary>Occurs when an embedded chart is double-clicked, before the default double-click action.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.BeforeRightClick">
      <summary>Occurs when an embedded chart is right-clicked, before the default right-click action.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.Calculate">
      <summary>Occurs after the chart plots new or changed data.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.Deactivate">
      <summary>Occurs when the chart is deactivated.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.DragOver">
      <summary>Occurs when a range of cells is dragged over a chart.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.DragPlot">
      <summary>Occurs when a range of cells is dragged and dropped on a chart.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.MouseDown">
      <summary>Occurs when a mouse button is pressed while the pointer is over a chart.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.MouseMove">
      <summary>Occurs when the position of the mouse pointer changes over a chart.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.MouseUp">
      <summary>Occurs when a mouse button is released while the pointer is over a chart.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.remove_Activate(Microsoft.Office.Interop.Excel.ChartEvents_ActivateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.remove_BeforeDoubleClick(Microsoft.Office.Interop.Excel.ChartEvents_BeforeDoubleClickEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.remove_BeforeRightClick(Microsoft.Office.Interop.Excel.ChartEvents_BeforeRightClickEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.remove_Calculate(Microsoft.Office.Interop.Excel.ChartEvents_CalculateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.remove_Deactivate(Microsoft.Office.Interop.Excel.ChartEvents_DeactivateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.remove_DragOver(Microsoft.Office.Interop.Excel.ChartEvents_DragOverEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.remove_DragPlot(Microsoft.Office.Interop.Excel.ChartEvents_DragPlotEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.remove_MouseDown(Microsoft.Office.Interop.Excel.ChartEvents_MouseDownEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.remove_MouseMove(Microsoft.Office.Interop.Excel.ChartEvents_MouseMoveEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.remove_MouseUp(Microsoft.Office.Interop.Excel.ChartEvents_MouseUpEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.remove_Resize(Microsoft.Office.Interop.Excel.ChartEvents_ResizeEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.remove_Select(Microsoft.Office.Interop.Excel.ChartEvents_SelectEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_Event.remove_SeriesChange(Microsoft.Office.Interop.Excel.ChartEvents_SeriesChangeEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.Resize">
      <summary>Occurs when the chart is resized.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.Select">
      <summary>Occurs when a chart element is selected.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.SeriesChange">
      <summary>Occurs when the user changes the value of a chart data point.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartEvents_MouseDownEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.MouseDown" /> event. The MouseDown event occurs when a mouse button is pressed while the pointer is over a chart.</summary>
      <param name="Button">The mouse button that was pressed. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlMouseButton" /> constants: xlNoButton, xlPrimaryButton, xlSecondaryButton, or xlMiddleButton.</param>
      <param name="Shift">The state of the SHIFT, CTRL, and ALT keys when the event occurred. Can be one of or a sum of the following values.ValueMeaning0 (zero)No keys1SHIFT key2CTRL key4ALT key</param>
      <param name="x">The X coordinate of the mouse pointer in chart object client coordinates.</param>
      <param name="y">The Y coordinate of the mouse pointer in chart object client coordinates.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartEvents_MouseMoveEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.MouseMove" /> event. The MouseMove event occurs when the position of the mouse pointer changes over a chart.</summary>
      <param name="Button">The mouse button that was pressed. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlMouseButton" /> constants: xlNoButton, xlPrimaryButton, xlSecondaryButton, or xlMiddleButton.</param>
      <param name="Shift">The state of the SHIFT, CTRL, and ALT keys when the event occurred. Can be one of or a sum of the following values.ValueMeaning0 (zero)No keys1SHIFT key2CTRL key4ALT key</param>
      <param name="x">The X coordinate of the mouse pointer in chart object client coordinates.</param>
      <param name="y">The Y coordinate of the mouse pointer in chart object client coordinates.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartEvents_MouseUpEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.MouseUp" /> event. The MouseUp event occurs when a mouse button is released while the pointer is over a chart.</summary>
      <param name="Button">The mouse button that was released. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlMouseButton" /> constants: xlNoButton, xlPrimaryButton, xlSecondaryButton, or xlMiddleButton.</param>
      <param name="Shift">The state of the SHIFT, CTRL, and ALT keys when the event occurred. Can be one of or a sum of the following values.ValueMeaning0 (zero)No keys1SHIFT key2CTRL key4ALT key</param>
      <param name="x">The X coordinate of the mouse pointer in chart object client coordinates.</param>
      <param name="y">The Y coordinate of the mouse pointer in chart object client coordinates.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartEvents_ResizeEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.Resize" /> event. The Resize event occurs when the chart is resized.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartEvents_SelectEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.Select" /> event. The Select event occurs when a chart element is selected.</summary>
      <param name="ElementID">Required. The double-clicked object.</param>
      <param name="Arg1">Depends on <paramref name="ElementID" />.</param>
      <param name="Arg2">Depends on <paramref name="ElementID" />.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartEvents_SeriesChangeEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.SeriesChange" /> event. The SeriesChange event occurs when the user changes the value of a chart data point.</summary>
      <param name="SeriesIndex">The offset within the <see cref="T:Microsoft.Office.Interop.Excel.Series" /> collection for the changed series.</param>
      <param name="PointIndex">The offset within the <see cref="T:Microsoft.Office.Interop.Excel.Points" /> collection for the changed point.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.Activate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.BeforeDoubleClick(System.Int32,System.Int32,System.Int32,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.BeforeRightClick(System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.Calculate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.Deactivate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.DragOver"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.DragPlot"></member>
    <member name="F:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.m_ActivateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.m_BeforeDoubleClickDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.m_BeforeRightClickDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.m_CalculateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.m_DeactivateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.m_DragOverDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.m_DragPlotDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.m_dwCookie"></member>
    <member name="F:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.m_MouseDownDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.m_MouseMoveDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.m_MouseUpDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.m_ResizeDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.m_SelectDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.m_SeriesChangeDelegate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.MouseDown(System.Int32,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.MouseMove(System.Int32,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.MouseUp(System.Int32,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.Resize"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.Select(System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartEvents_SinkHelper.SeriesChange(System.Int32,System.Int32)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartFillFormat">
      <summary>Used only with charts. Represents fill formatting for chart elements.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFillFormat.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFillFormat.BackColor">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartColorFormat" /> object that represents the specified fill background color.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFillFormat.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFillFormat.ForeColor">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartColorFormat" /> object that represents the specified foreground fill or solid color.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFillFormat.GradientColorType">
      <summary>Returns the gradient color type for the specified fill.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFillFormat.GradientDegree">
      <summary>Returns the gradient degree of the specified one-color shaded fill as a floating-point value from 0.0 (dark) through 1.0 (light).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFillFormat.GradientStyle">
      <summary>Returns the gradient style for the specified fill.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFillFormat.GradientVariant">
      <summary>Returns the shade variant for the specified fill as an integer value from 1 through 4.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartFillFormat.OneColorGradient(Microsoft.Office.Core.MsoGradientStyle,System.Int32,System.Single)">
      <summary>Sets the specified fill to a one-color gradient.</summary>
      <param name="Style">Required <see cref="T:Microsoft.Office.Core.MsoGradientStyle" />.Can be one of the following MsoGradientStyle constants:msoGradientDiagonalDownmsoGradientDiagonalUpmsoGradientFromCentermsoGradientFromCornermsoGradientFromTitlemsoGradientHorizontalmsoGradientMixedmsoGradientVertical</param>
      <param name="Variant">Required Integer. The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If <paramref name="GradientStyle" /> is msoGradientFromCenter, the <paramref name="Variant" /> argument can only be 1 or 2.</param>
      <param name="Degree">Required Single. The gradient degree. Can be a value from 0.0 (dark) through 1.0 (light).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFillFormat.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFillFormat.Pattern">
      <summary>Returns or sets the fill pattern.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartFillFormat.Patterned(Microsoft.Office.Core.MsoPatternType)">
      <summary>Sets the specified fill to a pattern.</summary>
      <param name="Pattern">Required <see cref="T:Microsoft.Office.Core.MsoPatternType" />.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartFillFormat.PresetGradient(Microsoft.Office.Core.MsoGradientStyle,System.Int32,Microsoft.Office.Core.MsoPresetGradientType)">
      <summary>Sets the specified fill to a preset gradient.</summary>
      <param name="Style">Required <see cref="T:Microsoft.Office.Core.MsoGradientStyle" />.Can be one of the following MsoGradientStyle constants.msoGradientDiagonalDownmsoGradientDiagonalUpmsoGradientFromCentermsoGradientFromCornermsoGradientFromTitlemsoGradientHorizontalmsoGradientMixedmsoGradientVertical</param>
      <param name="Variant">Required Integer. The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If <paramref name="GradientStyle" /> is msoGradientFromCenter, the <paramref name="Variant" /> argument can only be 1 or 2.</param>
      <param name="PresetGradientType">Required <see cref="T:Microsoft.Office.Core.MsoPresetGradientType" />.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFillFormat.PresetGradientType">
      <summary>Returns the preset gradient type for the specified fill.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFillFormat.PresetTexture">
      <summary>Returns the preset texture for the specified fill.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartFillFormat.PresetTextured(Microsoft.Office.Core.MsoPresetTexture)">
      <summary>Sets the specified fill format to a preset texture.</summary>
      <param name="PresetTexture">Required <see cref="T:Microsoft.Office.Core.MsoPresetTexture" />.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartFillFormat.Solid">
      <summary>Sets the specified fill to a uniform color.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFillFormat.TextureName">
      <summary>Returns the name of the custom texture file for the specified fill.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFillFormat.TextureType">
      <summary>Returns the texture type for the specified fill.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartFillFormat.TwoColorGradient(Microsoft.Office.Core.MsoGradientStyle,System.Int32)">
      <summary>Sets the specified fill to a two-color gradient.</summary>
      <param name="Style">Required <see cref="T:Microsoft.Office.Core.MsoGradientStyle" />.Can be one of the following MsoGradientStyle constants:msoGradientDiagonalDownmsoGradientDiagonalUpmsoGradientFromCentermsoGradientFromCornermsoGradientFromTitlemsoGradientHorizontalmsoGradientMixedmsoGradientVertical</param>
      <param name="Variant">Required Integer. The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If <paramref name="Style" /> is msoGradientFromCenter, the <paramref name="Variant" /> argument can only be 1 or 2.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFillFormat.Type">
      <summary>Returns the fill type.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartFillFormat.UserPicture(System.Object,System.Object,System.Object,System.Object)">
      <summary>Fills the specified shape with an image.</summary>
      <param name="PictureFile">Required Object.</param>
      <param name="PictureFormat">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlChartPictureType" />.Can be one of the following XlChartPictureType constants:xlStackxlStackScalexlStretch</param>
      <param name="PictureStackUnit">Optional Integer. The picture stack or scale unit (depends on the <paramref name="PictureFormat" /> argument).</param>
      <param name="PicturePlacement">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlChartPicturePlacement" />.Can be one of the following XlChartPicturePlacement constants:xlAllFacesxlEndxlEndSidesxlFrontxlFrontEndxlFrontSidesxlSides</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartFillFormat.UserTextured(System.String)">
      <summary>Fills the specified shape with small tiles of an image.</summary>
      <param name="TextureFile">Required String. The name of the picture file.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFillFormat.Visible">
      <summary>Determines whether the object is visible.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartFormat">
      <summary>Provides access to the Office Art formatting for chart elements. </summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFormat.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel._Application" />
 object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object). Read-only.</summary>
      <returns>Application (see above)</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFormat.Creator">
      <summary>Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created. Read-only Integer.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFormat.Fill">
      <summary>Returns a  <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object for the parent chart element that contains fill formatting properties for the   chart element. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFormat.Glow">
      <summary>Returns a  <see cref="T:Microsoft.Office.Core.GlowFormat" /> object for a specified chart that contains glow formatting properties for the   chart element. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.GlowFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFormat.Line">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.LineFormat" /> object that contains line formatting properties for the specified chart element. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.LineFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFormat.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFormat.PictureFormat">
      <summary>Returns a  <see cref="T:Microsoft.Office.Interop.Excel.PictureFormat" /> object for a specified chart that contains pictures. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.PictureFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFormat.Shadow">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ShadowFormat" /> object that contains shadow formatting properties for the chart element. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ShadowFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFormat.SoftEdge">
      <summary>Returns a <see cref="T:Microsoft.Office.Core.SoftEdgeFormat" /> object for a specified chart that contains soft edge formatting properties for the chart. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.SoftEdgeFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFormat.TextFrame2">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.TextFrame2" /> object that contains text formatting for the specified chart element. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.TextFrame2" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartFormat.ThreeD">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object that contains 3-D–effect formatting properties for the specified chart. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" />
      </returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartGroup">
      <summary>Represents one or more series plotted in a chart with the same format. The ChartGroup object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.AxisGroup">
      <summary>Returns the group for the specified chart group or series.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.BubbleScale">
      <summary>Returns or sets the scale factor for bubbles in the specified chart group. Can be an integer value from 0 (zero) to 300, corresponding to a percentage of the default size. Applies only to bubble charts.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.DoughnutHoleSize">
      <summary>Returns or sets the size of the hole in a doughnut chart group. The hole size is expressed as a percentage of the chart size, between 10 and 90 percent.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.DownBars">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.DownBars" /> object that represents the down bars on a line chart. Applies only to line charts.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.DropLines">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.DropLines" /> object that represents the drop lines for a series on a line chart or area chart. Applies only to line charts or area charts.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.FirstSliceAngle">
      <summary>Returns or sets the angle of the first pie-chart or doughnut-chart slice in degrees (clockwise from vertical). Applies only to pie, 3-D pie, and doughnut charts.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.GapWidth">
      <summary>Bar and Column charts: Returns or sets the space between bar or column clusters as a percentage of the bar or column width. Pie of Pie and Bar of Pie charts: Returns or sets the space between the primary and secondary sections of the chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.Has3DShading">
      <summary>True if the chart group has three-dimensional shading. This property only applies to surface charts and will return a run-time error if you try to set it to a non-surface chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.HasDropLines">
      <summary>True if the line chart or area chart has drop lines. Applies only to line and area charts.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.HasHiLoLines">
      <summary>True if the line chart has high-low lines. Applies only to line charts.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.HasRadarAxisLabels">
      <summary>True if a radar chart has axis labels. Applies only to radar charts.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.HasSeriesLines">
      <summary>True if a stacked column chart or bar chart has series lines or if a Pie of Pie chart or Bar of Pie chart has connector lines between the two sections. Applies only to stacked column charts, bar charts, Pie of Pie charts, or Bar of Pie charts.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.HasUpDownBars">
      <summary>True if a line chart has up and down bars. Applies only to line charts.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.HiLoLines">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.HiLoLines" /> object that represents the high-low lines for a series on a line chart. Applies only to line charts.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.Index">
      <summary>Returns the index number of the object within the collection of similar objects.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.Overlap">
      <summary>Specifies how bars and columns are positioned. Can be a value between –100 and 100. Applies only to 2-D bar and 2-D column charts.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.RadarAxisLabels">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.TickLabels" /> object that represents the radar axis labels for the specified chart group.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.SecondPlotSize">
      <summary>Returns or sets the size of the secondary section of either a Pie of Pie chart or a Bar of Pie chart, as a percentage of the size of the primary pie. Can be a value from 5 to 200.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartGroup.SeriesCollection(System.Object)">
      <summary>Returns an object that represents either a single series (a <see cref="T:Microsoft.Office.Interop.Excel.Series" /> object) or a collection of all the series (a <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> collection) in the chart or chart group.</summary>
      <param name="Index">Optional Object. The name or number of the series.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.SeriesLines">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.SeriesLines" /> object that represents the series lines for a stacked bar chart or a stacked column chart. Applies only to stacked bar and stacked column charts.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.ShowNegativeBubbles">
      <summary>True if negative bubbles are shown for the chart group. Valid only for bubble charts.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.SizeRepresents">
      <summary>Returns or sets what the bubble size represents on a bubble chart. Can be either of the following XlSizeRepresents constants: xlSizeIsArea or xlSizeIsWidth.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.SplitType">
      <summary>Returns or sets the way the two sections of either a Pie of Pie chart or a Bar of Pie chart are split.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.SplitValue">
      <summary>Returns or sets the threshold value separating the two sections of either a Pie of Pie chart or a Bar of Pie chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.SubType">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.Type">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.UpBars">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.UpBars" /> object that represents the up bars on a line chart. Applies only to line charts.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroup.VaryByCategories">
      <summary>True if Microsoft Excel assigns a different color or pattern to each data marker. The chart must contain only one series.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartGroups">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> objects in the specified chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroups.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object). Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroups.Count">
      <summary>Returns the number of objects in the collection. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroups.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartGroups.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartGroups.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartGroups.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartObject">
      <summary>Represents an embedded chart on a worksheet.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObject._Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObject.Activate">
      <summary>Makes the current chart the active chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObject.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObject.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObject.BottomRightCell">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell that lies under the lower-right corner of the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObject.BringToFront">
      <summary>Brings the object to the front of the z-order.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObject.Chart">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the chart contained in the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObject.Copy">
      <summary>Copies the object to the Clipboard. Copies a picture of the point or series to the Clipboard.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObject.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
      <summary>Copies the selected object to the Clipboard as a picture.</summary>
      <param name="Appearance">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />. Specifies how the picture should be copied.</param>
      <param name="Format">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />. The format of the picture.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObject.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObject.Cut">
      <summary>Cuts the object to the Clipboard or pastes it into a specified destination.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObject.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObject.Duplicate">
      <summary>Duplicates the object and returns a reference to the new copy.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObject.Enabled">
      <summary>True if the object is enabled.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObject.Height">
      <summary>The height of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObject.Index">
      <summary>Returns the index number of the object within the collection of similar objects.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObject.Interior">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObject.Left">
      <summary>The distance from the left edge of the object to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObject.Locked">
      <summary>True if the object is locked, False if the object can be modified when the sheet is protected.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObject.Name">
      <summary>Returns or sets the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObject.OnAction">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObject.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObject.Placement">
      <summary>Returns or sets the way the object is attached to the cells below it.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObject.PrintObject">
      <summary>True if the object will be printed when the document is printed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObject.ProtectChartObject">
      <summary>True if the embedded chart frame cannot be moved, resized, or deleted.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObject.RoundedCorners">
      <summary>True if the embedded chart has rounded corners.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObject.Select(System.Object)">
      <summary>Selects the object.</summary>
      <param name="Replace">Optional Object. True to replace the current selection with the specified object. False to extend the current selection to include any previously selected objects and the specified object.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObject.SendToBack">
      <summary>Sends the object to the back of the z-order.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObject.Shadow">
      <summary>True if the font is a shadow font or if the object has a shadow.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObject.ShapeRange">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object that represents the specified object or objects.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObject.Top">
      <summary>The distance from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObject.TopLeftCell">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell that lies under the upper-left corner of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObject.Visible">
      <summary>Determines whether the object is visible.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObject.Width">
      <summary>The width of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObject.ZOrder">
      <summary>Returns the z-order position of the object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartObjects">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> objects on the specified chart sheet, dialog sheet, or worksheet.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObjects._Copy">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObjects._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObjects._Dummy12">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObjects._Dummy15">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObjects._Dummy22">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObjects._Dummy25">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObjects._Dummy27">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObjects._Dummy28">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObjects._Dummy3">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObjects.Add(System.Double,System.Double,System.Double,System.Double)">
      <summary>Creates a new embedded chart. Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> object.</summary>
      <param name="Left">Required Double. The initial coordinates of the new object (in points), relative to the upper-left corner of cell A1 on a worksheet or to the upper-left corner of a chart.</param>
      <param name="Top">Required Double. The initial coordinates of the new object (in points), relative to the upper-left corner of cell A1 on a worksheet or to the upper-left corner of a chart.</param>
      <param name="Width">Required Double. The initial size of the new object in points.</param>
      <param name="Height">Required Double. The initial size of the new object in points.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObjects.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObjects.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObjects.BringToFront">
      <summary>Brings the object to the front of the z-order.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObjects.Copy">
      <summary>Copies the object to the Clipboard. Copies a picture of the point or series to the Clipboard.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObjects.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
      <summary>Copies the selected object to the Clipboard as a picture.</summary>
      <param name="Appearance">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />. Specifies how the picture should be copied.</param>
      <param name="Format">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />. The format of the picture.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObjects.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObjects.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObjects.Cut">
      <summary>Cuts the object to the Clipboard or pastes it into a specified destination.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObjects.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObjects.Duplicate">
      <summary>Duplicates the object and returns a reference to the new copy.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObjects.Enabled">
      <summary>True if the object is enabled.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObjects.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObjects.Group">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObjects.Height">
      <summary>The height of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObjects.Interior">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObjects.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObjects.Left">
      <summary>The distance from the left edge of the object to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObjects.Locked">
      <summary>True if the object is locked; False if the object can be modified when the sheet is protected.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObjects.OnAction">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObjects.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObjects.Placement">
      <summary>Returns or sets the way the object is attached to the cells below it.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObjects.PrintObject">
      <summary>True if the object will be printed when the document is printed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObjects.ProtectChartObject">
      <summary>True if the embedded chart frame cannot be moved, resized, or deleted through the user interface. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObjects.RoundedCorners">
      <summary>True if the embedded chart has rounded corners.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObjects.Select(System.Object)">
      <summary>Selects the object.</summary>
      <param name="Replace">Optional Object. True to replace the current selection with the specified object. False to extend the current selection to include any previously selected objects and the specified object.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartObjects.SendToBack">
      <summary>Sends the object to the back of the z-order.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObjects.Shadow">
      <summary>True if the object has a shadow</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObjects.ShapeRange">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object that represents the specified object or objects.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObjects.Top">
      <summary>The distance from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObjects.Visible">
      <summary>Determines whether the object is visible.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartObjects.Width">
      <summary>The width of the object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Charts">
      <summary>A collection of all the chart sheets in the specified or active workbook. Each chart sheet is represented by a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object. This doesn’t include charts embedded on worksheets or dialog sheets. For information about embedded charts, see the <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Charts._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Charts._Dummy7">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Charts._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Charts.Add(System.Object,System.Object,System.Object)">
      <summary>Creates a new chart sheet. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object.</summary>
      <param name="Before">Optional Object. An object that specifies the sheet before which the new sheet is added.</param>
      <param name="After">Optional Object. An object that specifies the sheet after which the new sheet is added.</param>
      <param name="Count">Optional Object. The number of sheets to be added. The default value is 1.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Charts.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Charts.Copy(System.Object,System.Object)">
      <summary>Copies the sheet to another location in the workbook.</summary>
      <param name="Before">Optional Object. The sheet before which the copied sheet will be placed. You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</param>
      <param name="After">Optional Object. The sheet after which the copied sheet will be placed. You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Charts.Count">
      <summary>Returns the number of objects in the collection. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Charts.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Charts.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Charts.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Charts.HPageBreaks">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> collection that represents the horizontal page breaks on the sheet. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Charts.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Charts.Move(System.Object,System.Object)">
      <summary>Moves the sheet to another location in the workbook.</summary>
      <param name="Before">Optional Object. The sheet before which the moved sheet will be placed. You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</param>
      <param name="After">Optional Object. The sheet after which the moved sheet will be placed. You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Charts.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Charts.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Prints the object.</summary>
      <param name="From">Optional Object. The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
      <param name="To">Optional Object. The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
      <param name="Copies">Optional Object. The number of copies to print. If this argument is omitted, one copy is printed.</param>
      <param name="Preview">Optional Object. True to have Microsoft Excel invoke print preview before printing the object. False (or omitted) to print the object immediately.</param>
      <param name="ActivePrinter">Optional Object. Sets the name of the active printer.</param>
      <param name="PrintToFile">Optional Object. True to print to a file. If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</param>
      <param name="Collate">Optional Object. True to collate multiple copies.</param>
      <param name="PrToFileName">Optional Object. If <paramref name="PrintToFile" /> is set to True, this argument specifies the name of the file you want to print to.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Charts.PrintOut_2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Charts.PrintPreview(System.Object)">
      <summary>Shows a preview of the object as it would look when printed.</summary>
      <param name="EnableChanges">Optional Object. True to enable changes to the specified charts.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Charts.Select(System.Object)">
      <summary>Selects the object.</summary>
      <param name="Replace">Optional Object. The object to replace.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Charts.Visible">
      <summary>Determines whether the object is visible. Read/write Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Charts.VPageBreaks">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection that represents the vertical page breaks on the sheet. Read-only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartTitle">
      <summary>Represents the chart title.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Application" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.AutoScaleFont">
      <summary>True if the text in the object changes font size when the object size changes. The default value is True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.Caption">
      <summary>The chart title text.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.Characters(System.Object,System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> object that represents a range of characters within the object text. You can use the Characters object to format characters within a text string.</summary>
      <param name="Start">Optional Object. The first character to be returned. If this argument is either 1 or omitted, this property returns a range of characters starting with the first character.</param>
      <param name="Length">Optional Object. The number of characters to be returned. If this argument is omitted, this property returns the remainder of the string (everything after the <paramref name="Start" /> character).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartTitle.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.Fill">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object for a specified shape or a <see cref="T:Microsoft.Office.Interop.Excel.ChartFillFormat" /> object for a specified chart that contains fill formatting properties for the shape or chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.Font">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.Format">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.Formula">
      <summary>Gets or sets a value that represents the formula of the object using A1-style notation, in English.</summary>
      <returns>The formula of the object using A1-style notation, in English.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.FormulaLocal">
      <summary>Gets or sets a value that represents the formula of the object using A1-style notation, in the language of the user.</summary>
      <returns>The formula of the object using A1-style notation, in the language of the user.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.FormulaR1C1">
      <summary>Gets or sets a value that represents the formula of the object using R1C1-style notation, in English.</summary>
      <returns>The formula of the object using R1C1-style notation, in English.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.FormulaR1C1Local">
      <summary>Gets or sets a value that represents the formula of the object using R1C1-style notation, in the language of the user.</summary>
      <returns>The formula of the object using R1C1-style notation, in the language of the user.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.Height">
      <summary>Gets the height, in points, of the object.</summary>
      <returns>The height, in points, of the object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.HorizontalAlignment">
      <summary>Returns or sets the horizontal alignment for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.IncludeInLayout">
      <summary>True if a chart title will occupy the chart layout space when a chart layout is being determined. The default value is True. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.Interior">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.Left">
      <summary>The distance, in points, from the left edge of the object to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.Orientation">
      <summary>The text orientation. Can be an integer value from –90 to 90 degrees.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.Parent">
      <summary>Returns the parent object for the specified object.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.Position">
      <summary>Returns or sets the position of the chart title on the chart. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlChartElementPosition" />.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlChartElementPosition" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.ReadingOrder">
      <summary>Returns or sets the reading order for the specified object. Can be one of the following constants: xlRTL (right-to-left), xlLTR (left-to-right), or xlContext.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ChartTitle.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.Shadow">
      <summary>True if the object has a shadow.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.Text">
      <summary>Returns or sets the text for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.Top">
      <summary>The distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.VerticalAlignment">
      <summary>Returns or sets the vertical alignment of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartTitle.Width">
      <summary>Gets the width, in points, of the object.</summary>
      <returns>The width, in points, of the object.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ChartView">
      <summary>Represents a view of a chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartView.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
      <returns>Application (see above)</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartView.Creator">
      <summary>Returns a constant from the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartView.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ChartView.Sheet">
      <summary>Returns the sheet name for the specified <see cref="T:Microsoft.Office.Interop.Excel.ChartView" /> object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.CheckBox">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.Accelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBox.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBox.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBox.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBox.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBox.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBox.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.Display3DShading"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBox.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.PhoneticAccelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBox.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBox.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBox.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.CheckBoxes">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBoxes._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBoxes._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBoxes._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBoxes._Dummy3"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.Accelerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBoxes.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBoxes.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBoxes.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBoxes.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBoxes.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBoxes.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBoxes.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.Display3DShading"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBoxes.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.Enabled"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBoxes.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBoxes.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBoxes.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.PhoneticAccelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBoxes.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CheckBoxes.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ColorFormat">
      <summary>Represents the color of a one-color object, the foreground or background color of an object with a gradient or patterned fill, or the pointer color.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorFormat.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorFormat.Brightness">
      <summary>Gets or sets the luminosity of the specified object.</summary>
      <returns>The luminosity of the specified object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorFormat.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorFormat.ObjectThemeColor">
      <summary>Returns or sets a color that is mapped to the theme color scheme. Read/write <see cref="T:Microsoft.Office.Core.MsoThemeColorIndex" />.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.MsoThemeColorIndex" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorFormat.Parent">
      <summary>Returns the parent object for the specified object.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorFormat.RGB">
      <summary>Returns or sets the red-green-blue value of the specified color.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorFormat.SchemeColor">
      <summary>Returns or sets the color of a color object as an index in the current color scheme.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorFormat.TintAndShade">
      <summary>Returns or sets a Single that lightens or darkens the color of a specified shape.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorFormat.Type">
      <summary>Returns or sets the callout format type.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ColorScale">
      <summary>Represents a color scale conditional formatting rule.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorScale.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
      <returns>Application (see above)</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorScale.AppliesTo">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object specifying the cell range to which the formatting rule is applied.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Range" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorScale.ColorScaleCriteria">
      <summary>Returns a   <see cref="T:Microsoft.Office.Interop.Excel.ColorScaleCriteria" /> object, which is a collection of individual <see cref="T:Microsoft.Office.Interop.Excel.ColorScaleCriterion" /> objects. The <see cref="T:Microsoft.Office.Interop.Excel.ColorScaleCriterion" /> object specifies the type, value, and color  of threshold criteria used in the color scale conditional format. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ColorScaleCriteria" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorScale.Creator">
      <summary>Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ColorScale.Delete">
      <summary>Deletes the specified conditional formatting rule object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorScale.Formula">
      <summary>Returns or sets a String representing a formula that determines the values to which the icon set will be applied.</summary>
      <returns>String</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ColorScale.ModifyAppliesToRange(Microsoft.Office.Interop.Excel.Range)">
      <summary>Sets the cell range to which this formatting rule applies.</summary>
      <param name="Range">The range to which this formatting rule will be applied.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorScale.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorScale.Priority">
      <summary>Returns or sets the priority value of the conditional formatting rule. The priority determines the order of evaluation when multiple conditional formatting rules exist in a worksheet.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorScale.PTCondition">
      <summary>Returns a Boolean value indicating if the conditional format is being applied to a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> chart. Read-only.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorScale.ScopeType">
      <summary>Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /> enumeration, which determines the scope of the conditional format when it is applied to a PivotTable chart.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ColorScale.SetFirstPriority">
      <summary>Sets the priority value for this conditional formatting rule to "1" so that it will be evaluated before all other rules on the worksheet.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ColorScale.SetLastPriority">
      <summary>Sets the evaluation order for this conditional formatting rule so it is evaluated after all other rules on the worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorScale.StopIfTrue">
      <summary>Returns or sets a Boolean value that determines if additional formatting rules on the cell should be evaluated if the current rule evaluates to True.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorScale.Type">
      <summary>Returns one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" /> enumeration, which specifies the type of conditional format. Read-only.</summary>
      <returns>Integer</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ColorScaleCriteria">
      <summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.ColorScaleCriterion" /> objects that represents all of the criteria for a color scale conditional format. Each criterion specifies the minimum, midpoint, or maximum threshold for the color scale.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorScaleCriteria._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorScaleCriteria.Count">
      <summary>Returns an Integer value that specifies the number of criteria for a color scale conditional format rule. Read-only.</summary>
      <returns>Integer</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ColorScaleCriteria.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorScaleCriteria.Item(System.Object)">
      <summary>Returns a single <see cref="T:Microsoft.Office.Interop.Excel.ColorScaleCriterion" /> object from the <see cref="T:Microsoft.Office.Interop.Excel.ColorScaleCriteria" />collection. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ColorScaleCriterion" />
      </returns>
      <param name="Index">The index number of the <see cref="T:Microsoft.Office.Interop.Excel.ColorScaleCriterion" /> object.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ColorScaleCriterion">
      <summary>Represents the criteria for the minimum, midpoint, or maximum thresholds for a color format conditional format.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorScaleCriterion.FormatColor">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.FormatColor" /> object, which specifies the color assigned to the threshold of a color scale conditional format. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.FormatColor" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorScaleCriterion.Index">
      <summary>Returns a Integer value indicating which threshold the criteria represents. Read-only.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorScaleCriterion.Type">
      <summary>Returns one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlConditionValueTypes" /> enumeration, which specifies how the threshold values for a data bar or color scale conditional format are determined. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlConditionValueTypes" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorScaleCriterion.Value">
      <summary>Returns or sets the minimum, midpoint, or maximum threshold value for a color scale conditional format. Read/write.</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ColorStop">
      <summary>Represents the color stop point for a gradient fill in an range or selection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorStop.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel._Application" />object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object). Read-only.</summary>
      <returns>Application (see above)</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorStop.Color">
      <summary>Returns or sets the color of the represented object. Read/write</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorStop.Creator">
      <summary>Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ColorStop.Delete">
      <summary>Deletes the represented object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorStop.Parent">
      <summary>Returns the parent object for the specified object. Read-only</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorStop.Position">
      <summary>Returns or sets the position of the <see cref="T:Microsoft.Office.Interop.Excel.ColorStop" />. Read/write</summary>
      <returns>Double</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorStop.ThemeColor">
      <summary>Returns or sets the theme color of the represented object. Read/write</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorStop.TintAndShade">
      <summary>Returns or sets the tint and shade of the represented object. Read/write</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ColorStops">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.ColorStop" /> objects for the specified series.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorStops._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ColorStops.Add(System.Double)">
      <summary>Adds a <see cref="T:Microsoft.Office.Interop.Excel.ColorStop" /> object to the specified collection.</summary>
      <returns>ColorStop</returns>
      <param name="Position">Represents the position in which to apply the ColorStop.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorStops.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel._Application" />object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object). Read-only.</summary>
      <returns>Application (see above)</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ColorStops.Clear">
      <summary>Clears the represented object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorStops.Count">
      <summary>Returns or sets the count of the represented object. Read-only</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorStops.Creator">
      <summary>Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ColorStops.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ColorStops.Item(System.Object)">
      <summary>Returns a single object from the represented collection.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ColorStop" />object contained by the collection.</returns>
      <param name="Index">The name or index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ColorStops.Parent">
      <summary>Returns the parent object for the specified object. Read-only</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Comment">
      <summary>Represents a cell comment.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Comment.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Comment.Author">
      <summary>Returns or sets the author of the comment.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Comment.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Comment.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Comment.Next">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> object that represents the next comment.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Comment.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Comment.Previous">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> object that represents the previous comment.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Comment.Shape">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the shape attached to the specified comment.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Comment.Text(System.Object,System.Object,System.Object)">
      <summary>Sets comment text.</summary>
      <param name="Text">Optional Object. The text to be added.</param>
      <param name="Start">Optional Object. The character number where the added text will be placed. If this argument is omitted, any existing text in the comment is deleted.</param>
      <param name="Overwrite">Optional Object. True to overwrite the existing text. The default value is False (text is inserted).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Comment.Visible">
      <summary>Determines whether the object is visible.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Comments">
      <summary>A collection of cell comments. Each comment is represented by a <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Comments._Default(System.Int32)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Comments.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Comments.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Comments.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Comments.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Comments.Item(System.Int32)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Integer. The index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Comments.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ConditionValue">
      <summary>Represents how the shortest bar or longest bar is evaluated for a data bar conditional formatting rule.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ConditionValue.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
      <returns>Application (see above)</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ConditionValue.Creator">
      <summary>Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created. Read-only Integer.</summary>
      <returns>
        <see cref="F:Microsoft.Office.Interop.Excel.XlCreator.xlCreatorCode" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ConditionValue.Modify(Microsoft.Office.Interop.Excel.XlConditionValueTypes,System.Object)">
      <summary>Modifies how the longest bar or shortest bar is evaluated for a data bar conditional formatting rule. </summary>
      <param name="newtype">Specifies how the shortest bar or longest bar is evaluated. The default value is <see cref="T:Microsoft.Office.Interop.Excel.XlConditionValueTypes.xlConditionLowestValue" />for the shortest bar and <see cref="T:Microsoft.Office.Interop.Excel.XlConditionValueTypes.xlConditionHighestValue" /> for the longest bar.</param>
      <param name="newvalue">The value assigned to the shortest or longest data bar. Depending on the <paramref name="newtype" /> argument, this can be a number or a formula that evaluates to a number.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ConditionValue.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ConditionValue.Type">
      <summary>Returns one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlConditionValueTypes" /> enumeration, which specifies how the threshold values for a data bar, color scale, or icon set conditional format are determined. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlConditionValueTypes" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ConditionValue.Value">
      <summary>Returns or sets the shortest bar or longest bar threshold value for a data bar conditional format. Read/write Object.</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Connections">
      <summary>A collection of Connection objects for the specified workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Connections._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Connections.Add(System.String,System.String,System.Object,System.Object,System.Object)">
      <summary>Adds a new connction to the workbook.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" />
      </returns>
      <param name="Name">Name of the connection.</param>
      <param name="Description">Brief description about the connection.</param>
      <param name="ConnectionString">The connection string.</param>
      <param name="CommandText">The command text to create the connection.</param>
      <param name="lCmdtype">Command type.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Connections.AddFromFile(System.String)">
      <summary>Adds a connection from the specified file.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" />
      </returns>
      <param name="Filename">Name of the file.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Connections.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
      <returns>Application (see above)</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Connections.Count">
      <summary>Returns the number of objects in the collection. Read-only Integer.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Connections.Creator">
      <summary>Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Connections.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Connections.Item(System.Object)">
      <summary>This method creates a connection item.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" />
      </returns>
      <param name="Index">Index value of the item.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Connections.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ConnectorFormat">
      <summary>Contains properties and methods that apply to connectors.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)">
      <summary>Attaches the beginning of the specified connector to a specified shape.</summary>
      <param name="ConnectedShape">Required <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object. The shape to attach the beginning of the connector to. The specified Shape object must be in the same <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection as the connector.</param>
      <param name="ConnectionSite">Required Integer. A connection site on the shape specified by <paramref name="ConnectedShape" />. Must be an integer between 1 and the integer returned by the <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount" /> property of the specified shape. If you want the connector to automatically find the shortest path between the two shapes it connects, specify any valid integer for this argument and then use the <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> method after the connector is attached to shapes at both ends.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnected">
      <summary>True if the beginning of the specified connector is connected to a shape.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnectedShape">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the shape that the beginning of the specified connector is attached to.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnectionSite">
      <summary>Returns an integer that specifies the connection site that the end of a connector is connected to.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginDisconnect">
      <summary>Detaches the beginning of the specified connector from the shape it’s attached to.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)">
      <summary>Attaches the end of the specified connector to a specified shape.</summary>
      <param name="ConnectedShape">Required <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object. The shape to attach the end of the connector to. The specified Shape object must be in the same <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection as the connector.</param>
      <param name="ConnectionSite">Required Integer. A connection site on the shape specified by <paramref name="ConnectedShape" />. Must be an integer between 1 and the integer returned by the <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount" /> property of the specified shape. If you want the connector to automatically find the shortest path between the two shapes it connects, specify any valid integer for this argument and then use the <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> method after the connector is attached to shapes at both ends.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnected">
      <summary>msoTrue if the end of the specified connector is connected to a shape.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnectedShape">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the shape that the end of the specified connector is attached to.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnectionSite">
      <summary>Returns an integer that specifies the connection site that the end of a connector is connected to.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndDisconnect">
      <summary>Detaches the end of the specified connector from the shape it’s attached to.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Type">
      <summary>Returns or sets the connector format type.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Constants">
      <summary>Specifies global constants used in Microsoft Excel.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlAll">
      <summary>-4104</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlAutomatic">
      <summary>-4105</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlBoth">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlCenter">
      <summary>-4108</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlChecker">
      <summary>9</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlCircle">
      <summary>8</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlCorner">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlCrissCross">
      <summary>16</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlCross">
      <summary>4</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlDiamond">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlDistributed">
      <summary>-4117</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlDoubleAccounting">
      <summary>5</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlFixedValue">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlFormats">
      <summary>-4122</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlGray16">
      <summary>17</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlGray8">
      <summary>18</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlGrid">
      <summary>15</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlHigh">
      <summary>-4127</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlInside">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlJustify">
      <summary>-4130</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlLightDown">
      <summary>13</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlLightHorizontal">
      <summary>11</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlLightUp">
      <summary>14</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlLightVertical">
      <summary>12</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlLow">
      <summary>-4134</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlManual">
      <summary>-4135</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlMinusValues">
      <summary>3</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlModule">
      <summary>-4141</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlNextToAxis">
      <summary>4</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlNone">
      <summary>-4142</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlNotes">
      <summary>-4144</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlOff">
      <summary>-4146</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlOn">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlPercent">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlPlus">
      <summary>9</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlPlusValues">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlSemiGray75">
      <summary>10</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlShowLabel">
      <summary>4</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlShowLabelAndPercent">
      <summary>5</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlShowPercent">
      <summary>3</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlShowValue">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlSimple">
      <summary>-4154</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlSingle">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlSingleAccounting">
      <summary>4</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlSolid">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlSquare">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlStar">
      <summary>5</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlStError">
      <summary>4</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlToolbarButton">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlTriangle">
      <summary>3</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlGray25">
      <summary>-4124</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlGray50">
      <summary>-4125</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlGray75">
      <summary>-4126</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlBottom">
      <summary>-4107</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlLeft">
      <summary>-4131</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlRight">
      <summary>-4152</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlTop">
      <summary>-4160</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xl3DBar">
      <summary>-4099</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xl3DSurface">
      <summary>-4103</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlBar">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlColumn">
      <summary>3</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlCombination">
      <summary>-4111</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlCustom">
      <summary>-4114</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlDefaultAutoFormat">
      <summary>-1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlMaximum">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlMinimum">
      <summary>4</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlOpaque">
      <summary>3</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlTransparent">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlBidi">
      <summary>-5000</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlLatin">
      <summary>-5001</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlContext">
      <summary>-5002</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlLTR">
      <summary>-5003</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlRTL">
      <summary>-5004</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlFullScript">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlPartialScript">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlMixedScript">
      <summary>3</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlMixedAuthorizedScript">
      <summary>4</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlVisualCursor">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlLogicalCursor">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlSystem">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlPartial">
      <summary>3</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlHindiNumerals">
      <summary>3</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlBidiCalendar">
      <summary>3</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlGregorian">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlComplete">
      <summary>4</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlScale">
      <summary>3</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlClosed">
      <summary>3</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlColor1">
      <summary>7</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlColor2">
      <summary>8</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlColor3">
      <summary>9</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlConstants">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlContents">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlBelow">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlCascade">
      <summary>7</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlCenterAcrossSelection">
      <summary>7</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlChart4">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlChartSeries">
      <summary>17</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlChartShort">
      <summary>6</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlChartTitles">
      <summary>18</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlClassic1">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlClassic2">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlClassic3">
      <summary>3</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xl3DEffects1">
      <summary>13</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xl3DEffects2">
      <summary>14</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlAbove">
      <summary>0</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlAccounting1">
      <summary>4</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlAccounting2">
      <summary>5</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlAccounting3">
      <summary>6</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlAccounting4">
      <summary>17</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlAdd">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlDebugCodePane">
      <summary>13</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlDesktop">
      <summary>9</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlDirect">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlDivide">
      <summary>5</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlDoubleClosed">
      <summary>5</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlDoubleOpen">
      <summary>4</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlDoubleQuote">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlEntireChart">
      <summary>20</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlExcelMenus">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlExtended">
      <summary>3</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlFill">
      <summary>5</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlFirst">
      <summary>0</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlFloating">
      <summary>5</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlFormula">
      <summary>5</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlGeneral">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlGridline">
      <summary>22</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlIcons">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlImmediatePane">
      <summary>12</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlInteger">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlLast">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlLastCell">
      <summary>11</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlList1">
      <summary>10</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlList2">
      <summary>11</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlList3">
      <summary>12</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlLocalFormat1">
      <summary>15</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlLocalFormat2">
      <summary>16</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlLong">
      <summary>3</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlLotusHelp">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlMacrosheetCell">
      <summary>7</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlMixed">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlMultiply">
      <summary>4</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlNarrow">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlNoDocuments">
      <summary>3</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlOpen">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlOutside">
      <summary>3</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlReference">
      <summary>4</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlSemiautomatic">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlShort">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlSingleQuote">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlStrict">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlSubtract">
      <summary>3</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlTextBox">
      <summary>16</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlTiled">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlTitleBar">
      <summary>8</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlToolbar">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlVisible">
      <summary>12</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlWatchPane">
      <summary>11</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlWide">
      <summary>3</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlWorkbookTab">
      <summary>6</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlWorksheet4">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlWorksheetCell">
      <summary>3</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlWorksheetShort">
      <summary>5</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlAllExceptBorders">
      <summary>7</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlLeftToRight">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlTopToBottom">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlVeryHidden">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.Constants.xlDrawingObject">
      <summary>14</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ControlFormat">
      <summary>Contains Microsoft Excel control properties.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ControlFormat._Default">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ControlFormat.AddItem(System.String,System.Object)">
      <summary>Adds an item to a list box or a combo box.</summary>
      <param name="Text">Required String. The text to be added</param>
      <param name="Index">Optional Object. The position of the new entry. If the list has fewer entries than the specified index, blank items from the end of the list are added to the specified position. If this argument is omitted, the item is appended to the existing list.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ControlFormat.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ControlFormat.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ControlFormat.DropDownLines">
      <summary>Returns or sets the number of list lines displayed in the drop-down portion of a combo box.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ControlFormat.Enabled">
      <summary>True if the object is enabled.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ControlFormat.LargeChange">
      <summary>Returns or sets the amount that the scroll box increments or decrements for a page scroll (when the user clicks in the scroll bar body region).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ControlFormat.LinkedCell">
      <summary>Returns or sets the worksheet range linked to the control's value.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ControlFormat.List(System.Object)">
      <summary>Returns or sets the text entries in the specified list box or a combo box, as an array of strings, or returns or sets a single text entry. An error occurs if there are no entries in the list.</summary>
      <param name="Index">Optional Object. The index number of a single text entry to be set or returned. If this argument is omitted, the entire list is returned or set as an array of strings.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ControlFormat.ListCount">
      <summary>Returns the number of entries in a list box or combo box. Returns 0 (zero) if there are no entries in the list.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ControlFormat.ListFillRange">
      <summary>Returns or sets the worksheet range used to fill the specified list box.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ControlFormat.ListIndex">
      <summary>Returns or sets the index number of the currently selected item in a list box or combo box.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ControlFormat.LockedText">
      <summary>True if the text in the specified object will be locked to prevent changes when the workbook is protected.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ControlFormat.Max">
      <summary>Returns or sets the maximum value of a scroll bar or spinner range. The scroll bar or spinner won’t take on values greater than this maximum value.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ControlFormat.Min">
      <summary>Returns or sets the minimum value of a scroll bar or spinner range. The scroll bar or spinner won’t take on values less than this minimum value.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ControlFormat.MultiSelect">
      <summary>Returns or sets the selection mode of the specified list box. Can be one of the following constants: xlNone, xlSimple, or xlExtended.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ControlFormat.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ControlFormat.PrintObject">
      <summary>True if the object will be printed when the document is printed.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ControlFormat.RemoveAllItems">
      <summary>Removes all entries from a Microsoft Excel list box or combo box.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ControlFormat.RemoveItem(System.Int32,System.Object)">
      <summary>Removes one or more items from a list box or combo box.</summary>
      <param name="Index">Required Integer. The number of the first item to be removed. Valid values are from 1 to the number of items in the list (returned by the <see cref="P:Microsoft.Office.Interop.Excel.ControlFormat.ListCount" /> property).</param>
      <param name="Count">Optional Object. The number of items to be removed, starting at item <paramref name="Index" />. If this argument is omitted, one item is removed. If <paramref name="Index" /> + <paramref name="Count" /> exceeds the number of items in the list, all items from <paramref name="Index" /> through the end of the list are removed without an error.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ControlFormat.SmallChange">
      <summary>Returns or sets the amount that the scroll bar or spinner is incremented or decremented for a line scroll (when the user clicks an arrow).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ControlFormat.Value">
      <summary>The name of specified control format.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Corners">
      <summary>Represents the corners of a 3-D chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Corners.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Corners.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Corners.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Corners.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Corners.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.CubeField">
      <summary>Represents a hierarchy or measure field from an OLAP cube.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField._Caption">
      <summary>Returns a String value that represents the label text for the cube field.</summary>
      <returns>String</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CubeField.AddMemberPropertyField(System.String,System.Object)">
      <summary>Adds a member property field to the display for the cube field.</summary>
      <param name="Property">Required String. The unique name of the member property. For balanced hierarchies, a unique name can be created by appending the "quoted" member property name to the unique name of the level the member property is associated with. For unbalanced hierarchies, a unique name can be created by appending the "quoted" member property name to the unique name of the hierarchy.</param>
      <param name="PropertyOrder">Optional Object. Sets the <see cref="P:Microsoft.Office.Interop.Excel.PivotField.PropertyOrder" /> property value for a <see cref="T:Microsoft.Office.Interop.Excel.CubeField" /> object. The actual position in the collection will be immediately before the PivotTable field that currently has the same <paramref name="PropertyOrder" /> value that is given in the argument. If no field has the given property order value, the range of acceptable values is from 1 to the number of member properties already showing for the hierarchy plus one. This argument is one-based. If omitted, the property goes to the end of the list.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CubeField.AddMemberPropertyFieldEx(System.String,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.AllItemsVisible">
      <summary>The <see cref="P:Microsoft.Office.Interop.Excel.CubeField.AllItemsVisible" /> property checks whether manual filtering is applied to a PivotField or CubeField. Read-only Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object). Read-only.</summary>
      <returns>Application (see above)</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.Caption">
      <summary>The label text for the cube field.</summary>
      <returns>String</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CubeField.ClearManualFilter">
      <summary>The <see cref="M:Microsoft.Office.Interop.Excel.CubeField.ClearManualFilter" /> method provides an easy way to set the Visible property to True for all items of a PivotField in PivotTables, and to empty the HiddenItemsInList/VisibleItemsList collections in OLAP PivotTables.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CubeField.CreatePivotFields">
      <summary>The  <see cref="M:Microsoft.Office.Interop.Excel.CubeField.CreatePivotFields" /> method is new in Microsoft Office Excel 2007. It enables users to apply a filter to PivotFields not yet added to the PivotTable by creating the corresponding <see cref="T:Microsoft.Office.Interop.Excel.PivotField" />object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.CubeFieldSubType">
      <summary>Specifies the type of a <see cref="P:Microsoft.Office.Interop.Excel.CubeField" />. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCubeFieldSubType" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.CubeFieldType">
      <summary>Indicates whether the OLAP cube field is a hierarchy field or a measure field.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.CurrentPageName">
      <summary>Returns or sets the page name for a CubeField. Read/write String.</summary>
      <returns>String</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CubeField.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.DragToColumn">
      <summary>True if the specified field can be dragged to the column position.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.DragToData">
      <summary>True if the specified field can be dragged to the data position.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.DragToHide">
      <summary>True if the field can be hidden by being dragged off the PivotTable report.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.DragToPage">
      <summary>True if the field can be dragged to the page position.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.DragToRow">
      <summary>True if the field can be dragged to the row position.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.EnableMultiplePageItems">
      <summary>True to allow multiple items in the page field area for OLAP PivotTables to be selected.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.FlattenHierarchies">
      <summary>Gets or sets whether items from all levels of hierarchies in a named set cube field are displayed in the same field of a PivotTable report based on an OLAP cube.</summary>
      <returns>true if items from all levels of hierarchies in a named set cube field are displayed in the same field of a PivotTable report based on an OLAP cube; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.HasMemberProperties">
      <summary>Returns True when there are member properties specified to be displayed for the cube field.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.HiddenLevels">
      <summary>Returns or sets the top levels of the specified hierarchy that are hidden.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.HierarchizeDistinct">
      <summary>Gets or sets whether to order and remove duplicates when displaying the specified named set in a PivotTable report based on an OLAP cube.</summary>
      <returns>true if duplicates should be ordered and removed when displaying the specified named set in a PivotTable report based on an OLAP cube; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.IncludeNewItemsInFilter">
      <summary>The <see cref="P:Microsoft.Office.Interop.Excel.CubeField.IncludeNewItemsInFilter" /> property is used to track included/excluded items in OLAP PivotTables. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.IsDate">
      <summary>Returns True if the CubeField is a date. Read-only Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.LayoutForm">
      <summary>Returns or sets the way the specified PivotTable items appear — in table format or in outline format.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.LayoutSubtotalLocation">
      <summary>Returns or sets the position of the PivotTable field subtotals in relation to (either above or below) the specified field.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.Orientation">
      <summary>The location of the field in the specified PivotTable report.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.PivotFields">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> collection. This collection contains all PivotTable fields, including those that aren’t currently visible on-screen.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.Position">
      <summary>Position of the item in its field if the item is currently showing.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.ShowInFieldList">
      <summary>When set to True (default), a <see cref="T:Microsoft.Office.Interop.Excel.CubeField" /> object will be shown in the field list.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.TreeviewControl">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.TreeviewControl" /> object, representing the cube manipulation control of an OLAP-based PivotTable report.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeField.Value">
      <summary>Returns the name of the specified field.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.CubeFields">
      <summary>A collection of all <see cref="T:Microsoft.Office.Interop.Excel.CubeField" /> objects in a PivotTable report that is based on an OLAP cube.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeFields._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CubeFields.AddSet(System.String,System.String)">
      <summary>Adds a new <see cref="T:Microsoft.Office.Interop.Excel.CubeField" /> object to the <see cref="T:Microsoft.Office.Interop.Excel.CubeFields" /> collection.</summary>
      <param name="Name">Required String. A valid name in the SETS schema rowset.</param>
      <param name="Caption">Required String. A string representing the field that will be displayed in the PivotTable view.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeFields.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeFields.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeFields.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CubeFields.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeFields.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CubeFields.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.CustomProperties">
      <summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.CustomProperty" /> objects that represent additional information. The information can be used as metadata for XML.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CustomProperties._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CustomProperties.Add(System.String,System.Object)">
      <summary>Adds custom property information. Returns a <see cref="T:Microsoft.Office.Interop.Excel.CustomProperty" /> object.</summary>
      <param name="Name">Required String. The name of the custom property.</param>
      <param name="Value">Required Object. The value of the custom property.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CustomProperties.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CustomProperties.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CustomProperties.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CustomProperties.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.CustomProperties.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CustomProperties.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.CustomProperty">
      <summary>Represents identifier information. Identifier information can be used as metadata for XML.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CustomProperty._Default">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CustomProperty.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CustomProperty.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CustomProperty.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CustomProperty.Name">
      <summary>Returns or sets the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CustomProperty.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CustomProperty.Value">
      <summary>Returns or sets the value of the custom property.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.CustomView">
      <summary>Represents a custom workbook view.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CustomView.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CustomView.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CustomView.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CustomView.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CustomView.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CustomView.PrintSettings">
      <summary>True if print settings are included in the custom view.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CustomView.RowColSettings">
      <summary>True if the custom view includes settings for hidden rows and columns (including filter information).</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CustomView.Show">
      <summary>Displays the custom view.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.CustomViews">
      <summary>A collection of custom workbook views. Each view is represented by a <see cref="T:Microsoft.Office.Interop.Excel.CustomView" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CustomViews._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CustomViews.Add(System.String,System.Object,System.Object)">
      <summary>Creates a new custom view. Returns a <see cref="T:Microsoft.Office.Interop.Excel.CustomView" /> object that represents the new view.</summary>
      <param name="ViewName">Required String. The name of the new view.</param>
      <param name="PrintSettings">Optional Object. True to include print settings in the custom view.</param>
      <param name="RowColSettings">Optional Object. True to include settings for hidden rows and columns (including filter information) in the custom view.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CustomViews.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CustomViews.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CustomViews.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.CustomViews.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.CustomViews.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="ViewName">Required Object. The name or index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.CustomViews.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Databar">
      <summary>Represents a data bar conditional formating rule. Applying a data bar to a range helps you see the value of a cell relative to other cells.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Databar.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
      <returns>Application (see above)</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Databar.AppliesTo">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object specifying the cell range to which the formatting rule is applied.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Range" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Databar.AxisColor">
      <summary>Gets the color of the axis for cells with conditional formatting as data bars.</summary>
      <returns>The color of the axis for cells with conditional formatting as data bars.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Databar.AxisPosition">
      <summary>Gets or sets the position of the axis of the data bars specified by a conditional formatting rule. </summary>
      <returns>The position of the axis of the data bars specified by a conditional formatting rule.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Databar.BarBorder">
      <summary>Gets an object that specifies the border of a data bar.</summary>
      <returns>An object that specifies the border of a data bar.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Databar.BarColor">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.FormatColor" /> object that you can use to modify the color of the bars in a data bar conditional format.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Databar.BarFillType">
      <summary>Gets or sets how a data bar is filled with color.</summary>
      <returns>Specifies how a data bar is filled with color.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Databar.Creator">
      <summary>Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Databar.Delete">
      <summary>Deletes the specified conditional formatting rule object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Databar.Direction">
      <summary>Gets or sets the direction the databar is displayed.</summary>
      <returns>The direction the databar is displayed.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Databar.Formula">
      <summary>Returns or sets a String representing a formula, which determines the values to which the icon set will be applied.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Databar.MaxPoint">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> object that specifies how the longest bar is evaluated for a data bar conditional format.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Databar.MinPoint">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> object that specifies how the shortest bar is evaluated for a data bar conditional format.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Databar.ModifyAppliesToRange(Microsoft.Office.Interop.Excel.Range)">
      <summary>Sets the cell range to which this formatting rule applies.</summary>
      <param name="Range">The range to which this formatting rule will be applied.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Databar.NegativeBarFormat">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.NegativeBarFormat" /> object associated with a data bar conditional formatting rule.</summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.NegativeBarFormat" /> object associated with a data bar conditional formatting rule.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Databar.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Databar.PercentMax">
      <summary>Returns or sets a Integer value that specifies the length of the longest data bar as a percentage of cell width.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Databar.PercentMin">
      <summary>Returns or sets a Integer value that specifies the length of the shortest data bar as a percentage of cell width.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Databar.Priority">
      <summary>Returns or sets the priority value of the conditional formatting rule. The priority determines the order of evaluation when multiple conditional formatting rules exist in a worksheet.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Databar.PTCondition">
      <summary>Returns a Boolean value indicating if the conditional format is being applied to a PivotTable chart. Read-only.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Databar.ScopeType">
      <summary>Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /> enumeration, which determines the scope of the conditional format when it is applied to a PivotTable chart.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Databar.SetFirstPriority">
      <summary>Sets the priority value for this conditional formatting rule to "1" so that it will be evaluated before all other rules on the worksheet.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Databar.SetLastPriority">
      <summary>Sets the evaluation order for this conditional formatting rule so it is evaluated after all other rules on the worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Databar.ShowValue">
      <summary>Returns or sets a Boolean value that specifies if the value in the cell is displayed if the data bar conditional format is applied to the range.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Databar.StopIfTrue">
      <summary>Returns or sets a Boolean value that determines if additional formatting rules on the cell should be evaluated if the current rule evaluates to True.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Databar.Type">
      <summary>Returns one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" /> enumeration, which specifies the type of conditional format. Read-only.</summary>
      <returns>Integer</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DataBarBorder">
      <summary>Represents the border of the data bars specified by a conditional formatting rule.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataBarBorder.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataBarBorder.Color">
      <summary>Gets an object that specifies the color of the border of data bars specified by a conditional formatting rule.</summary>
      <returns>An object that specifies the color of the border of data bars specified by a conditional formatting rule.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataBarBorder.Creator">
      <summary>Gets a 32-bit integer that indicates the application in which this object was created.</summary>
      <returns>A 32-bit integer that indicates the application in which this object was created.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataBarBorder.Parent">
      <summary>Gets the parent object for the specified object.</summary>
      <returns>The parent object for the specified object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataBarBorder.Type">
      <summary>Gets or sets the type of border for data bars specified by a conditional formatting rule.</summary>
      <returns>The type of border for data bars specified by a conditional formatting rule.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DataLabel">
      <summary>Represents the data label on a chart point or trendline.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.AutoScaleFont">
      <summary>True if the text in the object changes font size when the object size changes. The default value is True.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.AutoText">
      <summary>True if the object automatically generates appropriate text based on context. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Border" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.Caption">
      <summary>The data label text. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.Characters(System.Object,System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> object that represents a range of characters within the object text. You can use the Characters object to format characters within a text string.</summary>
      <param name="Start">Optional Object. The first character to be returned. If this argument is either 1 or omitted, this property returns a range of characters starting with the first character.</param>
      <param name="Length">Optional Object. The number of characters to be returned. If this argument is omitted, this property returns the remainder of the string (everything after the <paramref name="Start" /> character).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DataLabel.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.Fill">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object for a specified shape or a <see cref="T:Microsoft.Office.Interop.Excel.ChartFillFormat" /> object for a specified chart that contains fill formatting properties for the shape or chart. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.Font">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFont" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.Format">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.Formula">
      <summary>Gets or sets a value that represents the formula of the object using A1-style notation, in English.</summary>
      <returns>The formula of the object using A1-style notation, in English.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.FormulaLocal">
      <summary>Gets or sets a value that represents the formula of the object using A1-style notation, in the language of the user.</summary>
      <returns>The formula of the object using A1-style notation, in the language of the user.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.FormulaR1C1">
      <summary>Gets or sets a value that represents the formula of the object using R1C1-style notation, in English.</summary>
      <returns>The formula of the object using R1C1-style notation, in English.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.FormulaR1C1Local">
      <summary>Gets or sets a value that represents the formula of the object using R1C1-style notation, in the language of the user.</summary>
      <returns>The formula of the object using R1C1-style notation, in the language of the user.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.Height">
      <summary>Gets the height, in points, of the object.</summary>
      <returns>The height, in points, of the object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.HorizontalAlignment">
      <summary>Returns or sets the horizontal alignment for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.Interior">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Interior" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.Left">
      <summary>The distance, in points, from the left edge of the object to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart). Read/write Double.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.Name">
      <summary>Returns the name of the object. Read-only String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.NumberFormat">
      <summary>Returns or sets the format code for the object. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.NumberFormatLinked">
      <summary>True if the number format is linked to the cells (so that the number format changes in the labels when it changes in the cells). Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.NumberFormatLocal">
      <summary>Returns or sets the format code for the object as a string in the language of the user. Read/write Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.Orientation">
      <summary>The text orientation. Can be an integer value from –90 to 90 degrees.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.Position">
      <summary>Returns or sets the position of the data label. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelPosition" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.ReadingOrder">
      <summary>Returns or sets the reading order for the specified object. Can be one of the following constants: xlRTL (right-to-left), xlLTR (left-to-right), or xlContext. Read/write Integer.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DataLabel.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.Separator">
      <summary>Sets or returns an Object representing the separator used for the data labels on a chart. Read/write.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.Shadow">
      <summary>True if the object has a shadow. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.ShowBubbleSize">
      <summary>True to show the bubble size for the data labels on a chart. False to hide. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.ShowCategoryName">
      <summary>True to display the category name for the data labels on a chart. False to hide. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.ShowLegendKey">
      <summary>True if the data label legend key is visible. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.ShowPercentage">
      <summary>True to display the percentage value for the data labels on a chart. False to hide. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.ShowSeriesName">
      <summary>Returns or sets a Boolean to indicate the series name display behavior for the data labels on a chart. True to show the series name. False to hide. Read/write.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.ShowValue">
      <summary>Returns or sets a Boolean corresponding to a specified chart's data label values display behavior. True displays the values. False to hide. Read/write.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.Text">
      <summary>Returns or sets the text for the specified object. Read-only String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.Top">
      <summary>The distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart). Read/write Double.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.Type">
      <summary>Returns or sets the label type. Read/write Object.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.VerticalAlignment">
      <summary>Returns or sets the vertical alignment of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabel.Width">
      <summary>Gets the width, in points, of the object.</summary>
      <returns>The width, in points, of the object.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DataLabels">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.DataLabel" /> objects for the specified series. Each DataLabel object represents a data label for a point or trendline. For a series without definable points (such as an area series), the DataLabels collection contains a single data label.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DataLabels._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DataLabels._Dummy10">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DataLabels._Dummy13">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DataLabels._Dummy16">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DataLabels._Dummy17">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DataLabels._Dummy9">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.AutoScaleFont">
      <summary>True if the text in the object changes font size when the object size changes. The default value is True. Read/write Object.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.AutoText">
      <summary>True if the object automatically generates appropriate text based on context. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Border" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.Count">
      <summary>Returns the number of objects in the collection. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DataLabels.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.Fill">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object for a specified shape or a <see cref="T:Microsoft.Office.Interop.Excel.ChartFillFormat" /> object for a specified chart that contains fill formatting properties for the shape or chart. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFillFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.Font">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Font" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.Format">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DataLabels.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.HorizontalAlignment">
      <summary>Returns or sets the horizontal alignment for the specified object. Read/write Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.Interior">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Interior" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DataLabels.Item(System.Object)">
      <summary>Returns a single object from the collection.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.DataLabel" />
      </returns>
      <param name="Index">Required Object. The name or index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.Name">
      <summary>Returns the name of the object. Read-only String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.NumberFormat">
      <summary>Returns or sets the format code for the object. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.NumberFormatLinked">
      <summary>True if the number format is linked to the cells (so that the number format changes in the labels when it changes in the cells). Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.NumberFormatLocal">
      <summary>Returns or sets the format code for the object as a string in the language of the user. Read/write Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.Orientation">
      <summary>The text orientation. Can be an integer value from –90 to 90 degrees.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.Position">
      <summary>Returns or sets the position of the data label. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelPosition" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.ReadingOrder">
      <summary>Returns or sets the reading order for the specified object. Can be one of the following constants: xlRTL (right-to-left), xlLTR (left-to-right), or xlContext. Read/write Integer.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DataLabels.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.Separator">
      <summary>Sets or returns an Object representing the separator used for the data labels on a chart. Read/write.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.Shadow">
      <summary>True if the font is a shadow font or if the object has a shadow. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.ShowBubbleSize">
      <summary>True to show the bubble size for the data labels on a chart. False to hide. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.ShowCategoryName">
      <summary>True to display the category name for the data labels on a chart. False to hide. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.ShowLegendKey">
      <summary>True if the data label legend key is visible. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.ShowPercentage">
      <summary>True to display the percentage value for the data labels on a chart. False to hide. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.ShowSeriesName">
      <summary>Returns or sets a Boolean to indicate the series name display behavior for the data labels on a chart. True to show the series name. False to hide. Read/write.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.ShowValue">
      <summary>Returns or sets a Boolean corresponding to a specified chart's data label values display behavior. True displays the values. False to hide. Read/write.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.Type">
      <summary>Returns or sets the label type. Read/write Object.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataLabels.VerticalAlignment">
      <summary>Returns or sets the vertical alignment of the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DataTable">
      <summary>Represents a chart data table.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataTable.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataTable.AutoScaleFont">
      <summary>True if the text in the object changes font size when the object size changes. The default value is True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataTable.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataTable.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DataTable.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataTable.Font">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataTable.Format">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataTable.HasBorderHorizontal">
      <summary>True if the chart data table has horizontal cell borders.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataTable.HasBorderOutline">
      <summary>True if the chart data table has outline borders.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataTable.HasBorderVertical">
      <summary>True if the chart data table has vertical cell borders.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataTable.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DataTable.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DataTable.ShowLegendKey">
      <summary>True if the data label legend key is visible.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DefaultWebOptions">
      <summary>Contains global application-level attributes used by Microsoft Excel when you save a document as a Web page or open a Web page.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DefaultWebOptions.AllowPNG">
      <summary>True if PNG (Portable Network Graphics) is allowed as an image format when you save documents as a Web page. False if PNG is not allowed as an output format. The default value is False.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DefaultWebOptions.AlwaysSaveInDefaultEncoding">
      <summary>True if the default encoding is used when you save a Web page or plain text document, independent of the file's original encoding when opened. False if the original encoding of the file is used. The default value is False.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DefaultWebOptions.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DefaultWebOptions.CheckIfOfficeIsHTMLEditor">
      <summary>True if Microsoft Excel checks to see whether an Office application is the default HTML editor when you start Excel. False if Excel does not perform this check. The default value is True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DefaultWebOptions.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DefaultWebOptions.DownloadComponents">
      <summary>True if the necessary Microsoft Office Web components are downloaded when you view the saved document in a Web browser, but only if the components are not already installed. False if the components are not downloaded. The default value is False.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DefaultWebOptions.Encoding">
      <summary>Returns or sets the document encoding (code page or character set) to be used by the Web browser when you view the saved document. The default is the system code page.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DefaultWebOptions.FolderSuffix">
      <summary>Returns the folder suffix that Microsoft Excel uses when you save a document as a Web page, use long file names, and choose to save supporting files in a separate folder (that is, if the <see cref="P:Microsoft.Office.Interop.Excel.DefaultWebOptions.UseLongFileNames" /> and <see cref="P:Microsoft.Office.Interop.Excel.DefaultWebOptions.OrganizeInFolder" /> properties are set to True).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DefaultWebOptions.Fonts">
      <summary>Returns the <see cref="T:Microsoft.Office.Core.WebPageFonts" /> collection representing the set of fonts Microsoft Excel uses when you open a Web page in Excel and there is either no font information specified in the Web page, or the current default font can't display the character set in the Web page.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DefaultWebOptions.LoadPictures">
      <summary>True if images are loaded when you open a document in Microsoft Excel, usually when the images and document were not created in Microsoft Excel. False if the images are not loaded. The default value is True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DefaultWebOptions.LocationOfComponents">
      <summary>Returns or sets the central URL (on the intranet or Web) or path (local or network) to the location from which authorized users can download Microsoft Office Web components when viewing your saved document. The default value is the local or network installation path for Microsoft Office.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DefaultWebOptions.OrganizeInFolder">
      <summary>True if all supporting files, such as background textures and graphics, are organized in a separate folder when you save the specified document as a Web page. False if supporting files are saved in the same folder as the Web page. The default value is True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DefaultWebOptions.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DefaultWebOptions.PixelsPerInch">
      <summary>Returns or sets the density (pixels per inch) of graphics images and table cells on a Web page. The range of settings is usually from 19 to 480, and common settings for popular screen sizes are 72, 96, and 120. The default setting is 96.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DefaultWebOptions.RelyOnCSS">
      <summary>True if cascading style sheets (CSS) are used for font formatting when you view a saved document in a Web browser. Microsoft Excel creates a cascading style sheet file and saves it either to the specified folder or to the same folder as your Web page, depending on the value of the <see cref="P:Microsoft.Office.Interop.Excel.DefaultWebOptions.OrganizeInFolder" /> property. False if HTML &lt;FONT&gt; tags and cascading style sheets are used. The default value is True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DefaultWebOptions.RelyOnVML">
      <summary>True if image files are not generated from drawing objects when you save a document as a Web page. False if images are generated. The default value is False.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DefaultWebOptions.SaveHiddenData">
      <summary>True if data outside of the specified range is saved when you save the document as a Web page. This data may be necessary for maintaining formulas. False if data outside of the specified range is not saved with the Web page. The default value is True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DefaultWebOptions.SaveNewWebPagesAsWebArchives">
      <summary>True if new Web pages can be saved as Web archives.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DefaultWebOptions.ScreenSize">
      <summary>Returns or sets the ideal minimum screen size (width by height, in pixels) that you should use when viewing the saved document in a Web browser.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DefaultWebOptions.TargetBrowser">
      <summary>Returns or sets a constant indicating the browser version.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DefaultWebOptions.UpdateLinksOnSave">
      <summary>True if hyperlinks and paths to all supporting files are automatically updated before you save the document as a Web page, ensuring that the links are up-to-date at the time the document is saved. False if the links are not updated. The default value is True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DefaultWebOptions.UseLongFileNames">
      <summary>True if long file names are used when you save the document as a Web page. False if long file names are not used and the DOS file name format (8.3) is used. The default value is True.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Diagram">
      <summary>Represents a diagram.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Diagram.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Diagram.AutoFormat">
      <summary>Sets or returns a constant indicating the automatic formatting state for a diagram.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Diagram.AutoLayout">
      <summary>Returns or sets a constant which determines the automatic positioning of the nodes and connectors in a diagram.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Diagram.Convert(Microsoft.Office.Core.MsoDiagramType)">
      <summary>Converts the current diagram to a different diagram.</summary>
      <param name="Type">Required <see cref="T:Microsoft.Office.Core.MsoDiagramType" />. The type of diagram to convert to.MsoDiagramType can be one of these constants. msoDiagramCycle A process diagram with a continuous cycle diagram type.msoDiagramMixed A mixed diagram type.msoDiagramOrgChart A hierarchical relationship diagram type.msoDiagramPyramid A foundation based relationships diagram type.msoDiagramRadial A diagram type showing relationships of a core element.msoDiagramTarget A diagram type showing steps toward a goal.msoDiagramVenn A diagram type showing areas of overlap between elements.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Diagram.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Diagram.FitText">
      <summary>Adjusts the size of the text in the nodes in a diagram to fit within the boundaries of the nodes.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Diagram.Nodes">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNodes" /> object that contains a flat list of all the nodes in the specified diagram.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Diagram.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Diagram.Reverse">
      <summary>Reverses the nodes in a diagram.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Diagram.Type">
      <summary>Returns or sets the diagram type.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DiagramNode">
      <summary>Represents a node in a diagram.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DiagramNode.AddNode(Microsoft.Office.Core.MsoRelativeNodePosition,Microsoft.Office.Core.MsoDiagramNodeType)">
      <summary>Creates a diagram node. Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object that represents the new node.</summary>
      <param name="pos">Optional <see cref="T:Microsoft.Office.Interop.Office.MsoRelativeNodePosiiton" />. Where the node will be added, relative to another node.MsoRelativeNodePosition can be one of these constants:msoAfterLastSiblingmsoAfterNode DefaultmsoBeforeFirstSiblingmsoBeforeNode</param>
      <param name="nodeType">Optional <see cref="T:Microsoft.Office.Interop.Office.MsoDiagramNodeType" />. The type of node. Can be one of these MsoDiagramNodeType constants:msoDiagramAssistantmsoDiagramNode Default</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DiagramNode.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DiagramNode.Children">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNodeChildren" /> object, representing the collection of child nodes of a particular node.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DiagramNode.CloneNode(System.Boolean,Microsoft.Office.Interop.Excel.DiagramNode,Microsoft.Office.Core.MsoRelativeNodePosition)">
      <summary>Clones a diagram node. Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object representing the cloned node.</summary>
      <param name="copyChildren">Required Boolean. True to clone the diagram node's children as well.</param>
      <param name="pTargetNode">Required DiagramNode object. An expression that returns a DiagramNode object that represents the node where the new node will be placed.</param>
      <param name="pos">Optional <see cref="T:Microsoft.Office.Interop.Office.MsoRelativeNodePosiiton" />. If <paramref name="pTargetNode" /> is specified, indicates where the node will be added relative to <paramref name="pTargetNode" />.MsoRelativeNodePosition can be one of these constants:msoAfterLastSiblingmsoAfterNode DefaultmsoBeforeFirstSiblingmsoBeforeNode</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DiagramNode.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DiagramNode.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DiagramNode.Diagram">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Diagram" /> object representing a diagram.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DiagramNode.Layout">
      <summary>Returns or sets a constant to indicate the formatting of the child nodes of an organization chart.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DiagramNode.MoveNode(Microsoft.Office.Interop.Excel.DiagramNode,Microsoft.Office.Core.MsoRelativeNodePosition)">
      <summary>Moves a diagram node and any of its child nodes within a diagram.</summary>
      <param name="pTargetNode">Required <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object. The diagram node where the specified node will be moved.</param>
      <param name="pos">Required <see cref="T:Microsoft.Office.Interop.Office.MsoRelativeNodePosiiton" />. The position to move the node, relative to <paramref name="TargetNode" />.MsoRelativeNodePosition can be one of these constants:msoAfterLastSiblingmsoAfterNodemsoBeforeFirstSiblingmsoBeforeNode</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DiagramNode.NextNode">
      <summary>Selects the next diagram node in a series of nodes. Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object representing the newly-selected node.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DiagramNode.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DiagramNode.PrevNode">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object that represents the previous diagram node in a collection of diagram nodes.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DiagramNode.ReplaceNode(Microsoft.Office.Interop.Excel.DiagramNode)">
      <summary>Replaces a target diagram node with the source diagram node.</summary>
      <param name="pTargetNode">Required <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object. The target diagram node to be replaced.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DiagramNode.Root">
      <summary>Returns the root <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object which the root diagram node belongs.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DiagramNode.Shape">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the shape attached to the specified diagram node</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DiagramNode.SwapNode(Microsoft.Office.Interop.Excel.DiagramNode,System.Boolean)">
      <summary>Swaps the source diagram node with a target diagram node.</summary>
      <param name="pTargetNode">Required <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object. The target diagram node to be replaced.</param>
      <param name="swapChildren">Optional Boolean. The child nodes of the target and source nodes being swapped. Any child diagram nodes are moved along with their corresponding root nodes. Default is True, which swaps the child nodes.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DiagramNode.TextShape">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object representing the shape of the text box associated with a diagram node.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DiagramNode.TransferChildren(Microsoft.Office.Interop.Excel.DiagramNode)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object representing the shape of the text box associated with a diagram node.</summary>
      <param name="pReceivingNode">Required <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object. The diagram node receiving the child nodes being transferred from the specified node.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DiagramNodeChildren">
      <summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> objects that represents child nodes in a diagram.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DiagramNodeChildren.AddNode(System.Object,Microsoft.Office.Core.MsoDiagramNodeType)">
      <summary>Creates a diagram node. Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object that represents the new node.</summary>
      <param name="Index">Optional Object. The position of the node.</param>
      <param name="nodeType">Optional <see cref="T:Microsoft.Office.Interop.Office.MsoDiagramNodeType" />. The type of node.MsoDiagramNodeType can be one of these constants:msoDiagramAssistantmsoDiagramNode Default</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DiagramNodeChildren.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DiagramNodeChildren.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DiagramNodeChildren.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DiagramNodeChildren.FirstChild">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object that represents the first child node of a parent node.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DiagramNodeChildren.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DiagramNodeChildren.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DiagramNodeChildren.LastChild">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object that represents the last child node of a parent node.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DiagramNodeChildren.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DiagramNodeChildren.SelectAll">
      <summary>Selects all the shapes in the specified collection.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DiagramNodes">
      <summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> objects that represents all the nodes in a diagram.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DiagramNodes.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DiagramNodes.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DiagramNodes.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DiagramNodes.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DiagramNodes.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DiagramNodes.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DiagramNodes.SelectAll">
      <summary>Selects all the shapes in the specified collection.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Dialog">
      <summary>Represents a built-in Microsoft Excel dialog box.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Dialog.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Dialog.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Dialog.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Dialog.Show(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Displays the built-in dialog box and waits for the user to input data.</summary>
      <param name="Arg1">Optional Object. The initial arguments for the command.</param>
      <param name="Arg2">Optional Object. The initial arguments for the command.</param>
      <param name="Arg3">Optional Object. The initial arguments for the command.</param>
      <param name="Arg4">Optional Object. The initial arguments for the command.</param>
      <param name="Arg5">Optional Object. The initial arguments for the command.</param>
      <param name="Arg6">Optional Object. The initial arguments for the command.</param>
      <param name="Arg7">Optional Object. The initial arguments for the command.</param>
      <param name="Arg8">Optional Object. The initial arguments for the command.</param>
      <param name="Arg9">Optional Object. The initial arguments for the command.</param>
      <param name="Arg10">Optional Object. The initial arguments for the command.</param>
      <param name="Arg11">Optional Object. The initial arguments for the command.</param>
      <param name="Arg12">Optional Object. The initial arguments for the command.</param>
      <param name="Arg13">Optional Object. The initial arguments for the command.</param>
      <param name="Arg14">Optional Object. The initial arguments for the command.</param>
      <param name="Arg15">Optional Object. The initial arguments for the command.</param>
      <param name="Arg16">Optional Object. The initial arguments for the command.</param>
      <param name="Arg17">Optional Object. The initial arguments for the command.</param>
      <param name="Arg18">Optional Object. The initial arguments for the command.</param>
      <param name="Arg19">Optional Object. The initial arguments for the command.</param>
      <param name="Arg20">Optional Object. The initial arguments for the command.</param>
      <param name="Arg21">Optional Object. The initial arguments for the command.</param>
      <param name="Arg22">Optional Object. The initial arguments for the command.</param>
      <param name="Arg23">Optional Object. The initial arguments for the command.</param>
      <param name="Arg24">Optional Object. The initial arguments for the command.</param>
      <param name="Arg25">Optional Object. The initial arguments for the command.</param>
      <param name="Arg26">Optional Object. The initial arguments for the command.</param>
      <param name="Arg27">Optional Object. The initial arguments for the command.</param>
      <param name="Arg28">Optional Object. The initial arguments for the command.</param>
      <param name="Arg29">Optional Object. The initial arguments for the command.</param>
      <param name="Arg30">Optional Object. The initial arguments for the command.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DialogFrame">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogFrame._Dummy10"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogFrame._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogFrame._Dummy17"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogFrame._Dummy18"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogFrame._Dummy20"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogFrame._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogFrame._Dummy23"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogFrame._Dummy25"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogFrame._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogFrame._Dummy4"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogFrame._Dummy5"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogFrame._Dummy7"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogFrame._Dummy8"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogFrame._Dummy9"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogFrame.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogFrame.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogFrame.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogFrame.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogFrame.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogFrame.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogFrame.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogFrame.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogFrame.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogFrame.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogFrame.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogFrame.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogFrame.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogFrame.Select(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogFrame.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogFrame.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogFrame.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogFrame.Width"></member>
    <member name="T:Microsoft.Office.Interop.Excel.Dialogs">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Dialog" /> objects in Microsoft Excel.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Dialogs._Default(Microsoft.Office.Interop.Excel.XlBuiltInDialog)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Dialogs.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Dialogs.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Dialogs.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Dialogs.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Dialogs.Item(Microsoft.Office.Interop.Excel.XlBuiltInDialog)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Dialogs.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DialogSheet">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._CheckSpelling(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet._CodeName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet._DisplayRightToLeft"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy113"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy114"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy115"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy29"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy31"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy32"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy34"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy36"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy40"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy41"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy42"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy43"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy44"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy45"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy56"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy65"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy66"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy67"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy69"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy74"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy75"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy76"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy78"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy79"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy82"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy83"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy85"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy86"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy88"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy89"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Dummy90"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Evaluate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Activate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Arcs(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.AutoFilter"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Buttons(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.ChartObjects(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.CheckBoxes(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.CircleInvalid"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.ClearCircles"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.CodeName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.Comments"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Copy(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.CustomProperties"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.DefaultButton"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.DialogFrame"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.DisplayAutomaticPageBreaks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.DisplayPageBreaks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.DisplayRightToLeft"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.DrawingObjects(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Drawings(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.DropDowns(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.EditBoxes(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.EnableAutoFilter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.EnableCalculation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.EnableFormatConditionsCalculation">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.EnableOutlining"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.EnablePivotTable"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.EnableSelection"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Evaluate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.Focus"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.GroupBoxes(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.GroupObjects(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Hide(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.HPageBreaks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.Hyperlinks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.Index"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Labels(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Lines(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.ListBoxes(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.MailEnvelope"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Move(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.Names"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.Next"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.OLEObjects(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.OnDoubleClick"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.OnSheetActivate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.OnSheetDeactivate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.OptionButtons(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Ovals(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.PageSetup"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Paste(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Pictures(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.Previous"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.PrintedCommentPages">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.PrintPreview(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.ProtectContents"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.ProtectDrawingObjects"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.Protection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.ProtectionMode"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.ProtectScenarios"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.QueryTables"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Rectangles(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.ResetAllPageBreaks"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.Scripts"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.ScrollArea"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.ScrollBars(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Select(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.Shapes"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Show"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.SmartTags"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.Sort">
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.Sort" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Spinners(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.Tab"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.TextBoxes(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Unprotect(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheet.VPageBreaks"></member>
    <member name="T:Microsoft.Office.Interop.Excel.DialogSheets">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheets._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheets._Dummy7"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheets._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheets.Add(System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheets.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheets.Copy(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheets.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheets.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheets.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheets.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheets.HPageBreaks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheets.Item(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheets.Move(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheets.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheets.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheets.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheets.PrintPreview(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DialogSheets.Select(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheets.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheets.VPageBreaks"></member>
    <member name="T:Microsoft.Office.Interop.Excel.DialogSheetView">
      <summary>Represents the current <see cref="T:Microsoft.Office.Interop.Excel.Dialog" />sheet view in a workbook. </summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheetView.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
      <returns>Application (see above)</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheetView.Creator">
      <summary>Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheetView.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DialogSheetView.Sheet">
      <summary>Returns the sheet name for the specified <see cref="T:Microsoft.Office.Interop.Excel.DialogSheetView" /> object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DisplayFormat">
      <summary>Represents the display settings for an associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayFormat.AddIndent">
      <summary>Gets a value that indicates if Microsoft Excel automatically indents text of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object when the text alignment in a cell is set to equal distribution (either horizontally or vertically), as it is displayed in the current user interface.</summary>
      <returns>Indicates if Microsoft Excel automatically indents text of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object when the text alignment in a cell is set to equal distribution (either horizontally or vertically), as it is displayed in the current user interface.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayFormat.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayFormat.Borders">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> object that represents the borders of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> object that represents the borders of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayFormat.Characters(System.Object,System.Object)">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> object that represents a range of characters within the text of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> object that represents a range of characters within the text of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</returns>
      <param name="Start">The first character to be returned. If this argument is either 1 or omitted, this property returns a range of characters starting with the first character.</param>
      <param name="Length">The number of characters to be returned. If this argument is omitted, this property returns the remainder of the string (everything after the <paramref name="Start" /> character).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayFormat.Creator">
      <summary>Gets a 32-bit integer that indicates the application in which this object was created.</summary>
      <returns>A 32-bit integer that indicates the application in which this object was created.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayFormat.Font">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> as it is displayed in the current user interface.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> as it is displayed in the current user interface.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayFormat.FormulaHidden">
      <summary>Gets a value that indicates if the formula of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object is hidden when the worksheet is protected as it is displayed in the current user interface.</summary>
      <returns>Indicates if the formula of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object is hidden when the worksheet is protected as it is displayed in the current user interface.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayFormat.HorizontalAlignment">
      <summary>Gets a value that represents the horizontal alignment of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</summary>
      <returns>The horizontal alignment of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayFormat.IndentLevel">
      <summary>Gets a value that represents the indent level of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</summary>
      <returns>The indent level of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayFormat.Interior">
      <summary>Gets an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayFormat.Locked">
      <summary>Gets a value that indicates if the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object is locked as it is displayed in the current user interface.</summary>
      <returns>Indicates if the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object is locked as it is displayed in the current user interface.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayFormat.MergeCells">
      <summary>Gets a value that indicates if the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object contains merged cells as it is displayed in the current user interface.</summary>
      <returns>Indicates if the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object contains merged cells as it is displayed in the current user interface.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayFormat.NumberFormat">
      <summary>Gets a value that represents the format code of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</summary>
      <returns>The format code of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayFormat.NumberFormatLocal">
      <summary>Gets a value that represents the format code of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> as a string in the language of the user as it is displayed in the current user interface.</summary>
      <returns>The format code of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> as a string in the language of the user as it is displayed in the current user interface.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayFormat.Orientation">
      <summary>Gets a value that represents the text orientation of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</summary>
      <returns>The text orientation of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayFormat.Parent">
      <summary>Gets the parent object for the specified object.</summary>
      <returns>The parent object for the specified object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayFormat.ReadingOrder">
      <summary>Gets the reading order of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</summary>
      <returns>The reading order of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayFormat.ShrinkToFit">
      <summary>Gets a value that indicates if Microsoft Excel automatically shrinks text to fit in the available column width of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</summary>
      <returns>Indicates if Microsoft Excel automatically shrinks text to fit in the available column width of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayFormat.Style">
      <summary>Gets a value, containing a <see cref="T:Microsoft.Office.Interop.Excel.Style" /> object, that represents the style of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</summary>
      <returns>A value, containing a <see cref="T:Microsoft.Office.Interop.Excel.Style" /> object, that represents the style of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayFormat.VerticalAlignment">
      <summary>Gets a value that represents the vertical alignment of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</summary>
      <returns>The vertical alignment of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayFormat.WrapText">
      <summary>Gets a value that indicates if Microsoft Excel wraps the text of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface. </summary>
      <returns>Indicates if Microsoft Excel wraps the text of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DisplayUnitLabel">
      <summary>Represents a unit label on an axis in the specified chart.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DisplayUnitLabel._Dummy21">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.AutoScaleFont">
      <summary>True if the text in the object changes font size when the object size changes. The default value is True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.Caption">
      <summary>The display unit label text.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.Characters(System.Object,System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> object that represents a range of characters within the object text. You can use the Characters object to format characters within a text string.</summary>
      <param name="Start">Optional Object. The first character to be returned. If this argument is either 1 or omitted, this property returns a range of characters starting with the first character.</param>
      <param name="Length">Optional Object. The number of characters to be returned. If this argument is omitted, this property returns the remainder of the string (everything after the <paramref name="Start" /> character).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DisplayUnitLabel.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.Fill">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object for a specified shape or a <see cref="T:Microsoft.Office.Interop.Excel.ChartFillFormat" /> object for a specified chart that contains fill formatting properties for the shape or chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.Font">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.Format">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.Formula">
      <summary>Gets or sets a value that represents the formula of the object using A1-style notation, in English.</summary>
      <returns>The formula of the object using A1-style notation, in English.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.FormulaLocal">
      <summary>Gets or sets a value that represents the formula of the object using A1-style notation, in the language of the user.</summary>
      <returns>The formula of the object using A1-style notation, in the language of the user.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.FormulaR1C1">
      <summary>Gets or sets a value that represents the formula of the object using R1C1-style notation, in English.</summary>
      <returns>The formula of the object using R1C1-style notation, in English.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.FormulaR1C1Local">
      <summary>Gets or sets a value that represents the formula of the object using R1C1-style notation, in the language of the user.</summary>
      <returns>The formula of the object using R1C1-style notation, in the language of the user.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.Height">
      <summary>Gets the height, in points, of the object.</summary>
      <returns>The height, in points, of the object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.HorizontalAlignment">
      <summary>Returns or sets the horizontal alignment for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.Interior">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.Left">
      <summary>The distance, in points, from the left edge of the object to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.Orientation">
      <summary>The text orientation. Can be an integer value from –90 to 90 degrees.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.Position">
      <summary>Returns or sets the position of the unit label on an axis in the chart. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlChartElementPosition" />.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlChartElementPosition" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.ReadingOrder">
      <summary>Returns or sets the reading order for the specified object. Can be one of the following constants: xlRTL (right-to-left), xlLTR (left-to-right), or xlContext.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DisplayUnitLabel.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.Shadow">
      <summary>True if the font is a shadow font or if the object has a shadow.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.Text">
      <summary>Returns or sets the text for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.Top">
      <summary>The distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.VerticalAlignment">
      <summary>Returns or sets the vertical alignment of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.Width">
      <summary>Gets the width, in points, of the object.</summary>
      <returns>The width, in points, of the object.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DocEvents">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents.Activate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents.BeforeDoubleClick(Microsoft.Office.Interop.Excel.Range,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents.BeforeRightClick(Microsoft.Office.Interop.Excel.Range,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents.Calculate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents.Change(Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents.Deactivate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents.FollowHyperlink(Microsoft.Office.Interop.Excel.Hyperlink)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents.PivotTableAfterValueChange(Microsoft.Office.Interop.Excel.PivotTable,Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents.PivotTableBeforeAllocateChanges(Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents.PivotTableBeforeCommitChanges(Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents.PivotTableBeforeDiscardChanges(Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents.PivotTableChangeSync(Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents.PivotTableUpdate(Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents.SelectionChange(Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.DocEvents_ActivateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.DocEvents_Event.Activate" /> event. The Activate event occurs when a worksheet is activated.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DocEvents_BeforeDoubleClickEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.DocEvents_Event.BeforeDoubleClick" /> event. The BeforeDoubleClick event occurs when a worksheet is double-clicked, before the default double-click action.</summary>
      <param name="Target">Required. The cell nearest to the mouse pointer when the double-click occurs.</param>
      <param name="Cancel">Optional. False when the event occurs. If the event procedure sets this argument to True, the default double-click action isn't performed when the procedure is finished.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DocEvents_BeforeRightClickEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.DocEvents_Event.BeforeRightClick" /> event. The BeforeRightClick event occurs when a worksheet is right-clicked, before the default right-click action.</summary>
      <param name="Target">Required. The cell nearest to the mouse pointer when the right-click occurs.</param>
      <param name="Cancel">Optional. False when the event occurs. If the event procedure sets this argument to True, the default right-click action doesn't occur when the procedure is finished.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DocEvents_CalculateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.DocEvents_Event.Calculate" /> event. The Calculate event occurs after the worksheet is recalculated.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DocEvents_ChangeEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.DocEvents_Event.Change" /> event. The Change event occurs when cells on the worksheet are changed by the user or by an external link.</summary>
      <param name="Target">The changed range. Can be more than one cell.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DocEvents_DeactivateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.DocEvents_Event.Deactivate" /> event. The Deactivate event occurs when the worksheet is deactivated.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DocEvents_Event">
      <summary>Events interface for Microsoft Excel <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object events.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.DocEvents_Event.Activate">
      <summary>Occurs when a worksheet is activated.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.add_Activate(Microsoft.Office.Interop.Excel.DocEvents_ActivateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.add_BeforeDoubleClick(Microsoft.Office.Interop.Excel.DocEvents_BeforeDoubleClickEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.add_BeforeRightClick(Microsoft.Office.Interop.Excel.DocEvents_BeforeRightClickEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.add_Calculate(Microsoft.Office.Interop.Excel.DocEvents_CalculateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.add_Change(Microsoft.Office.Interop.Excel.DocEvents_ChangeEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.add_Deactivate(Microsoft.Office.Interop.Excel.DocEvents_DeactivateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.add_FollowHyperlink(Microsoft.Office.Interop.Excel.DocEvents_FollowHyperlinkEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.add_PivotTableAfterValueChange(Microsoft.Office.Interop.Excel.DocEvents_PivotTableAfterValueChangeEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.add_PivotTableBeforeAllocateChanges(Microsoft.Office.Interop.Excel.DocEvents_PivotTableBeforeAllocateChangesEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.add_PivotTableBeforeCommitChanges(Microsoft.Office.Interop.Excel.DocEvents_PivotTableBeforeCommitChangesEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.add_PivotTableBeforeDiscardChanges(Microsoft.Office.Interop.Excel.DocEvents_PivotTableBeforeDiscardChangesEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.add_PivotTableChangeSync(Microsoft.Office.Interop.Excel.DocEvents_PivotTableChangeSyncEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.add_PivotTableUpdate(Microsoft.Office.Interop.Excel.DocEvents_PivotTableUpdateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.add_SelectionChange(Microsoft.Office.Interop.Excel.DocEvents_SelectionChangeEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.DocEvents_Event.BeforeDoubleClick">
      <summary>Occurs when a worksheet is double-clicked, before the default double-click action.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.DocEvents_Event.BeforeRightClick">
      <summary>Occurs when a worksheet is right-clicked, before the default right-click action.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.DocEvents_Event.Calculate">
      <summary>Occurs after the worksheet is recalculated.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.DocEvents_Event.Change">
      <summary>Occurs when cells on the worksheet are changed by the user or by an external link.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.DocEvents_Event.Deactivate">
      <summary>Occurs when the worksheet is deactivated.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.DocEvents_Event.FollowHyperlink">
      <summary>Occurs when you click any hyperlink on a worksheet. For application- and workbook-level events, see the SheetFollowHyperlink event.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.DocEvents_Event.PivotTableAfterValueChange">
      <summary>Occurs after a cell or range of cells inside a PivotTable are edited or recalculated (for cells that contain formulas).</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.DocEvents_Event.PivotTableBeforeAllocateChanges">
      <summary>Occurs before changes are applied to a PivotTable.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.DocEvents_Event.PivotTableBeforeCommitChanges">
      <summary>Occurs before changes are committed against the OLAP data source for a PivotTable.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.DocEvents_Event.PivotTableBeforeDiscardChanges">
      <summary>Occurs before changes to a PivotTable are discarded.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.DocEvents_Event.PivotTableChangeSync">
      <summary>Occurs after changes to a PivotTable.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.DocEvents_Event.PivotTableUpdate">
      <summary>Occurs after a PivotTable report is updated on a worksheet.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.remove_Activate(Microsoft.Office.Interop.Excel.DocEvents_ActivateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.remove_BeforeDoubleClick(Microsoft.Office.Interop.Excel.DocEvents_BeforeDoubleClickEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.remove_BeforeRightClick(Microsoft.Office.Interop.Excel.DocEvents_BeforeRightClickEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.remove_Calculate(Microsoft.Office.Interop.Excel.DocEvents_CalculateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.remove_Change(Microsoft.Office.Interop.Excel.DocEvents_ChangeEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.remove_Deactivate(Microsoft.Office.Interop.Excel.DocEvents_DeactivateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.remove_FollowHyperlink(Microsoft.Office.Interop.Excel.DocEvents_FollowHyperlinkEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.remove_PivotTableAfterValueChange(Microsoft.Office.Interop.Excel.DocEvents_PivotTableAfterValueChangeEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.remove_PivotTableBeforeAllocateChanges(Microsoft.Office.Interop.Excel.DocEvents_PivotTableBeforeAllocateChangesEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.remove_PivotTableBeforeCommitChanges(Microsoft.Office.Interop.Excel.DocEvents_PivotTableBeforeCommitChangesEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.remove_PivotTableBeforeDiscardChanges(Microsoft.Office.Interop.Excel.DocEvents_PivotTableBeforeDiscardChangesEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.remove_PivotTableChangeSync(Microsoft.Office.Interop.Excel.DocEvents_PivotTableChangeSyncEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.remove_PivotTableUpdate(Microsoft.Office.Interop.Excel.DocEvents_PivotTableUpdateEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_Event.remove_SelectionChange(Microsoft.Office.Interop.Excel.DocEvents_SelectionChangeEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.DocEvents_Event.SelectionChange">
      <summary>Occurs when the selection changes on a worksheet.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DocEvents_FollowHyperlinkEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.DocEvents_Event.FollowHyperlink" /> event. The FollowHyperlink event occurs when you click any hyperlink on a worksheet.</summary>
      <param name="Target">Required <see cref="T:Microsoft.Office.Interop.Excel.Hyperlink" />. A Hyperlink object that represents the destination of the hyperlink.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DocEvents_PivotTableAfterValueChangeEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.DocEvents_Event.PivotTableAfterValueChange" /> event. The PivotTableAfterValueChange event occurs after a cell or range of cells inside a PivotTable are edited or recalculated (for cells that contain formulas).</summary>
      <param name="TargetPivotTable">The PivotTable that contains the edited or recalculated cells.</param>
      <param name="TargetRange">The range that contains all the edited or recalcuated cells.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DocEvents_PivotTableBeforeAllocateChangesEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.DocEvents_Event.PivotTableBeforeAllocateChanges" /> event. The PivotTableBeforeAllocateChanges event occurs before changes are applied to a PivotTable.</summary>
      <param name="TargetPivotTable">The PivotTable that contains the changes to apply.</param>
      <param name="ValueChangeStart">The index to the first change in the associated <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection. The index is specified by the <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.Order" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> object in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection.</param>
      <param name="ValueChangeEnd">The index to the last change in the associated <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection. The index is specified by the <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.Order" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> object in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection.</param>
      <param name="Cancel">false when the event occurs. If the event procedure sets this parameter to true, the changes are not applied to the PivotTable and all edits are lost.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DocEvents_PivotTableBeforeCommitChangesEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.DocEvents_Event.PivotTableBeforeCommitChanges" /> event. The PivotTableBeforeCommitChanges event occurs before changes are committed against the OLAP data source for a PivotTable.</summary>
      <param name="TargetPivotTable">The PivotTable that contains the changes to commit</param>
      <param name="ValueChangeStart">The index to the first change in the associated <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> object. The index is specified by the <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.Order" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> object in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection.</param>
      <param name="ValueChangeEnd">The index to the last change in the associated <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> object. The index is specified by the <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.Order" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> object in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection.</param>
      <param name="Cancel">false when the event occurs. If the event procedure sets this parameter to true, the changes are not committed against the OLAP data source of the PivotTable.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DocEvents_PivotTableBeforeDiscardChangesEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.DocEvents_Event.PivotTableBeforeDiscardChanges" /> event. The PivotTableBeforeDiscardChanges event occurs before changes to a PivotTable are discarded.</summary>
      <param name="TargetPivotTable">The PivotTable that contains the changes to discard.</param>
      <param name="ValueChangeStart">The index to the first change in the associated <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> object. The index is specified by the <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.Order" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> object in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection.</param>
      <param name="ValueChangeEnd">The index to the last change in the associated <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> object. The index is specified by the <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.Order" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> object in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DocEvents_PivotTableChangeSyncEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.DocEvents_Event.PivotTableChangeSync" /> event. The PivotTableChangeSync event occurs after changes to a PivotTable.</summary>
      <param name="Target">The PivotTable that was changed.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DocEvents_PivotTableUpdateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.DocEvents_Event.PivotTableUpdate" /> event. The PivotTableUpdate event occurs after a PivotTable report is updated on a worksheet.</summary>
      <param name="Target">Required. The selected PivotTable report.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DocEvents_SelectionChangeEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.DocEvents_Event.SelectionChange" /> event. The SelectionChange event occurs when the selection changes on a worksheet.</summary>
      <param name="Target">The new selected range.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.Activate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.BeforeDoubleClick(Microsoft.Office.Interop.Excel.Range,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.BeforeRightClick(Microsoft.Office.Interop.Excel.Range,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.Calculate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.Change(Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.Deactivate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.FollowHyperlink(Microsoft.Office.Interop.Excel.Hyperlink)"></member>
    <member name="F:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.m_ActivateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.m_BeforeDoubleClickDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.m_BeforeRightClickDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.m_CalculateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.m_ChangeDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.m_DeactivateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.m_dwCookie"></member>
    <member name="F:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.m_FollowHyperlinkDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.m_PivotTableAfterValueChangeDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.m_PivotTableBeforeAllocateChangesDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.m_PivotTableBeforeCommitChangesDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.m_PivotTableBeforeDiscardChangesDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.m_PivotTableChangeSyncDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.m_PivotTableUpdateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.m_SelectionChangeDelegate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.PivotTableAfterValueChange(Microsoft.Office.Interop.Excel.PivotTable,Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.PivotTableBeforeAllocateChanges(Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.PivotTableBeforeCommitChanges(Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.PivotTableBeforeDiscardChanges(Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.PivotTableChangeSync(Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.PivotTableUpdate(Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DocEvents_SinkHelper.SelectionChange(Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.DownBars">
      <summary>Represents the down bars in a chart group.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DownBars.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DownBars.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DownBars.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DownBars.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DownBars.Fill">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object for a specified shape or a <see cref="T:Microsoft.Office.Interop.Excel.ChartFillFormat" /> object for a specified chart that contains fill formatting properties for the shape or chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DownBars.Format">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DownBars.Interior">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DownBars.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DownBars.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DownBars.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Drawing">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.AddIndent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawing.AddVertex(System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawing.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawing.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawing.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawing.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawing.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawing.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawing.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.ReadingOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawing.Reshape(System.Int32,System.Boolean,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawing.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawing.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.Vertices(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawing.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.DrawingObjects">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects._Dummy28"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects._Dummy47"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects._Dummy54"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects._Dummy56"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Accelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.AddIndent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.AddItem(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.ArrowHeadLength"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.ArrowHeadStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.ArrowHeadWidth"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.CancelButton"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.Cut"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.DefaultButton"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.DismissButton"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Display3DShading"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.DisplayVerticalScrollBar"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.DropDownLines"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Font"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.HelpButton"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.InputType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.LargeChange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Left"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.LinkCombo(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.LinkedCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.List(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.ListFillRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.ListIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Max"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Min"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.MultiLine"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.MultiSelect"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.PhoneticAccelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.ReadingOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.RemoveAllItems"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.RemoveItem(System.Int32,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.Reshape(System.Int32,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.RoundedCorners"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.Selected(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.SmallChange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Top"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.Ungroup"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.VerticalAlignment"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.Vertices(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.Drawings">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawings._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawings._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawings._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawings._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawings._Dummy44"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawings._Dummy46"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawings.Add(System.Double,System.Double,System.Double,System.Double,System.Boolean)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawings.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawings.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawings.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawings.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawings.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawings.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawings.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.Formula"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawings.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawings.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawings.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.ReadingOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawings.Reshape(System.Int32,System.Boolean,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawings.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Drawings.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Drawings.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.DropDown">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDown._Dummy36"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDown.AddItem(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDown.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDown.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDown.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDown.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDown.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.Display3DShading"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.DropDownLines"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDown.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.LinkedObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.List(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.ListCount"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.ListFillRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.ListIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDown.RemoveAllItems"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDown.RemoveItem(System.Int32,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDown.Select(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.Selected(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDown.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDown.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.DropDowns">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDowns._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDowns._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDowns._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDowns._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDowns._Dummy31"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDowns._Dummy33"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDowns._Dummy36"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDowns.Add(System.Double,System.Double,System.Double,System.Double,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDowns.AddItem(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDowns.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDowns.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDowns.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDowns.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDowns.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.Display3DShading"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.DropDownLines"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDowns.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.Enabled"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDowns.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDowns.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.Height"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDowns.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.List(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.ListFillRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.ListIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDowns.RemoveAllItems"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDowns.RemoveItem(System.Int32,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDowns.Select(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.Selected(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.DropDowns.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.DropDowns.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.DropLines">
      <summary>Represents the drop lines in a chart group.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DropLines.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DropLines.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DropLines.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DropLines.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DropLines.Format">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DropLines.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.DropLines.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.DropLines.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.EditBox">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBox.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBox.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBox.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBox.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBox.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBox.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.DisplayVerticalScrollBar"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBox.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.InputType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.LinkedObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.MultiLine"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.PasswordEdit"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBox.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBox.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBox.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.EditBoxes">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBoxes._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBoxes._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBoxes._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBoxes._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBoxes._Dummy34"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBoxes.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBoxes.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBoxes.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBoxes.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBoxes.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBoxes.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBoxes.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBoxes.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBoxes.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBoxes.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBoxes.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBoxes.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBoxes.DisplayVerticalScrollBar"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBoxes.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBoxes.Enabled"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBoxes.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBoxes.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBoxes.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBoxes.InputType"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBoxes.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBoxes.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBoxes.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBoxes.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBoxes.MultiLine"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBoxes.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBoxes.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBoxes.PasswordEdit"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBoxes.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBoxes.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBoxes.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.EditBoxes.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBoxes.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBoxes.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBoxes.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBoxes.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBoxes.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.EditBoxes.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.Error">
      <summary>Represents a spreadsheet error for a range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Error.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Error.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Error.Ignore">
      <summary>Allows the user to set or return the state of an error checking option for a range. False enables an error checking option for a range. True disables an error checking option for a range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Error.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Error.Value">
      <summary>True if all the validation criteria are met (that is, if the range contains valid data).</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ErrorBars">
      <summary>Represents the error bars on a chart series.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ErrorBars.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ErrorBars.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ErrorBars.ClearFormats">
      <summary>Clears the formatting of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ErrorBars.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ErrorBars.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ErrorBars.EndStyle">
      <summary>Returns or sets the end style for the error bars.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ErrorBars.Format">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ErrorBars.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ErrorBars.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ErrorBars.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ErrorCheckingOptions">
      <summary>Represents the error-checking options for an application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ErrorCheckingOptions.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ErrorCheckingOptions.BackgroundChecking">
      <summary>Alerts the user for all cells that violate enabled error-checking rules.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ErrorCheckingOptions.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ErrorCheckingOptions.EmptyCellReferences">
      <summary>When set to True (default), Microsoft Excel identifies, with an AutoCorrect Options button, selected cells containing formulas that refer to empty cells. False disables empty cell reference checking.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ErrorCheckingOptions.EvaluateToError">
      <summary>When set to True (default), Microsoft Excel identifies, with an AutoCorrect Options button, selected cells that contain formulas evaluating to an error. False disables error checking for cells that evaluate to an error value.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ErrorCheckingOptions.InconsistentFormula">
      <summary>When set to True (default), Microsoft Excel identifies cells containing an inconsistent formula in a region. False disables the inconsistent formula check.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ErrorCheckingOptions.InconsistentTableFormula">
      <summary>Returns True if the table formula is inconsistent. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ErrorCheckingOptions.IndicatorColorIndex">
      <summary>Returns or sets the color of the indicator for error checking options.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ErrorCheckingOptions.ListDataValidation">
      <summary>A Boolean value that is True if data validation is enabled in a list.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ErrorCheckingOptions.NumberAsText">
      <summary>When set to True (default), Microsoft Excel identifies, with an AutoCorrect Options button, selected cells that contain numbers written as text. False disables error checking for numbers written as text.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ErrorCheckingOptions.OmittedCells">
      <summary>When set to True (default), Microsoft Excel identifies, with an AutoCorrect Options button, the selected cells that contain formulas referring to a range that omits adjacent cells that could be included. False disables error checking for omitted cells.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ErrorCheckingOptions.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ErrorCheckingOptions.TextDate">
      <summary>When set to True (default), Microsoft Excel identifies, with an AutoCorrect Options button, cells that contain a text date with a two-digit year. False disables error checking for cells containing a text date with a two-digit year.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ErrorCheckingOptions.UnlockedFormulaCells">
      <summary>When set to True (default), Microsoft Excel identifies selected cells that are unlocked and contain a formula. False disables error checking for unlocked cells that contain formulas.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Errors">
      <summary>Represents the various spreadsheet errors for a range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Errors._Default(System.Object)">
      <summary>Allows the user to to access error checking options.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Errors.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Errors.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Errors.Item(System.Object)">
      <summary>Returns a single member of the <see cref="T:Microsoft.Office.Interop.Excel.Error" /> object.</summary>
      <param name="Index">Required Object. The <paramref name="Index" /> can also be one of these constants:xlEvaluateToError The cell evaluates to an error value.xlTextDate The cell contains a text date with 2 digit years.xlNumberAsText The cell contains a number stored as text.xlInconsistentFormula The cell contains an inconsistent formula for a region.xlOmittedCells The cell contains a formula omitting a cell for a region.xlUnlockedFormulaCells The cell which is unlocked contains a formula.xlEmptyCellReferences The cell contains a formula referring to empty cells.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Errors.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.FileExportConverter">
      <summary>Represents a file converter that is used to save files.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FileExportConverter.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Application" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FileExportConverter.Creator">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> that indicates the application in which the specified object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FileExportConverter.Description">
      <summary>Returns the description for the file converter. Read-only String.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FileExportConverter.Extensions">
      <summary>Returns the file name extensions associated with the specified <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverter" /> object. Read-only String.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FileExportConverter.FileFormat">
      <summary>Returns an integer that identifies the file format associated with the specified <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverter" /> object. Read-only.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FileExportConverter.Parent">
      <summary>Returns an Object that represents the parent object of the specified <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverter" /> object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.FileExportConverters">
      <summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverter" /> objects that represent all the file converters available for saving files.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FileExportConverters._Default(System.Object)">
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverter" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FileExportConverters.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Application" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FileExportConverters.Count">
      <summary>Returns an Integer that represents the number of file converters in the collection. Read-only.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FileExportConverters.Creator">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> constant that indicates the application in which the specified object was created. Read-only Long.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FileExportConverters.GetEnumerator">
      <returns>
        <see cref="T:System.Collections.IEnumerator" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FileExportConverters.Item(System.Object)">
      <summary>Returns an individual <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverter" /> object from a collection.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverter" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FileExportConverters.Parent">
      <summary>Returns an Object that represents the parent object of the specified <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" /> collection. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.FillFormat">
      <summary>Represents fill formatting for a shape.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.BackColor">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ColorFormat" /> object that represents the specified fill background color.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FillFormat.Background">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.ForeColor">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ColorFormat" /> object that represents the specified foreground fill or solid color.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.GradientAngle">
      <summary>Gets or sets the angle of the gradient fill for the specified fill format.</summary>
      <returns>The angle of the gradient fill for the specified fill format.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.GradientColorType">
      <summary>Returns the gradient color type for the specified fill.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.GradientDegree">
      <summary>Returns the gradient degree of the specified one-color shaded fill as a floating-point value from 0.0 (dark) through 1.0 (light).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.GradientStops">
      <summary>Returns the end point for the gradient fill. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.GradientStops" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.GradientStyle">
      <summary>Returns the gradient style for the specified fill.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.GradientVariant">
      <summary>Returns the shade variant for the specified fill as an integer value from 1 through 4.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FillFormat.OneColorGradient(Microsoft.Office.Core.MsoGradientStyle,System.Int32,System.Single)">
      <summary>Sets the specified fill to a one-color gradient.</summary>
      <param name="Style">Required <see cref="T:Microsoft.Office.Core.MsoGradientStyle" />.Can be one of the following MsoGradientStyle constants:msoGradientDiagonalDownmsoGradientDiagonalUpmsoGradientFromCentermsoGradientFromCornermsoGradientFromTitlemsoGradientHorizontalmsoGradientMixedmsoGradientVertical</param>
      <param name="Variant">Required Integer. The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If <paramref name="GradientStyle" /> is msoGradientFromCenter, the <paramref name="Variant" /> argument can only be 1 or 2.</param>
      <param name="Degree">Required Single. The gradient degree. Can be a value from 0.0 (dark) through 1.0 (light).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.Pattern">
      <summary>Returns or sets the fill pattern.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FillFormat.Patterned(Microsoft.Office.Core.MsoPatternType)">
      <summary>Sets the specified fill to a pattern.</summary>
      <param name="Pattern">Required <see cref="T:Microsoft.Office.Core.MsoPatternType" />.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.PictureEffects">
      <summary>Gets an object that represents the picture or texture fill for the specified fill format.</summary>
      <returns>Represents the picture or texture fill for the specified fill format.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FillFormat.PresetGradient(Microsoft.Office.Core.MsoGradientStyle,System.Int32,Microsoft.Office.Core.MsoPresetGradientType)">
      <summary>Sets the specified fill to a preset gradient.</summary>
      <param name="Style">Required <see cref="T:Microsoft.Office.Core.MsoGradientStyle" />.Can be one of the following MsoGradientStyle constants:msoGradientDiagonalDownmsoGradientDiagonalUpmsoGradientFromCentermsoGradientFromCornermsoGradientFromTitlemsoGradientHorizontalmsoGradientMixedmsoGradientVertical</param>
      <param name="Variant">Required Integer. The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If <paramref name="GradientStyle" /> is msoGradientFromCenter, the <paramref name="Variant" /> argument can only be 1 or 2.</param>
      <param name="PresetGradientType">Required <see cref="T:Microsoft.Office.Core.MsoPresetGradientType" />.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.PresetGradientType">
      <summary>Returns the preset gradient type for the specified fill.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.PresetTexture">
      <summary>Returns the preset texture for the specified fill.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FillFormat.PresetTextured(Microsoft.Office.Core.MsoPresetTexture)">
      <summary>Sets the specified fill format to a preset texture.</summary>
      <param name="PresetTexture">Required <see cref="T:Microsoft.Office.Core.MsoPresetTexture" />.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.RotateWithObject">
      <summary>Returns or sets if the fill style should rotate with the object. Read/write <see cref="T:Microsoft.Office.Core.MsoTriState" />.</summary>
      <returns>Returns <see cref="T:Microsoft.Office.Core.MsoTriState" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FillFormat.Solid">
      <summary>Sets the specified fill to a uniform color.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.TextureAlignment">
      <summary>Returns or sets the text alignment for the specified <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" />object. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.TextureHorizontalScale">
      <summary>Returns or sets the value for horizontally scaling the text for the <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object. Read/write Single.</summary>
      <returns>Single</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.TextureName">
      <summary>Returns the name of the custom texture file for the specified fill.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.TextureOffsetX">
      <summary>Returns the offset X value for the specified fill. Read/write Single.</summary>
      <returns>Single</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.TextureOffsetY">
      <summary>Returns the offset Y value for the specified fill. Read/write Single.</summary>
      <returns>Single</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.TextureTile">
      <summary>Returns the texture tile style for the specified fill. Read/write <see cref="T:Microsoft.Office.Core.MsoTriState" />.</summary>
      <returns>Returns <see cref="T:Microsoft.Office.Core.MsoTriState" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.TextureType">
      <summary>Returns the texture type for the specified fill. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.MsoTextureType" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.TextureVerticalScale">
      <summary>Returns the texture vertical scale for the specified fill. Read/write Single.</summary>
      <returns>Single</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.Transparency">
      <summary>Returns or sets the degree of transparency of the specified fill as a value from 0.0 (opaque) through 1.0 (clear).</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FillFormat.TwoColorGradient(Microsoft.Office.Core.MsoGradientStyle,System.Int32)">
      <summary>Sets the specified fill to a two-color gradient.</summary>
      <param name="Style">Required <see cref="T:Microsoft.Office.Core.MsoGradientStyle" />.Can be one of the following MsoGradientStyle constants:msoGradientDiagonalDownmsoGradientDiagonalUpmsoGradientFromCentermsoGradientFromCornermsoGradientFromTitlemsoGradientHorizontalmsoGradientMixedmsoGradientVertical</param>
      <param name="Variant">Required Integer. The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If <paramref name="Style" /> is msoGradientFromCenter, the <paramref name="Variant" /> argument can only be 1 or 2.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.Type">
      <summary>Returns the fill type.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FillFormat.UserPicture(System.String)">
      <summary>Fills the specified shape with an image.</summary>
      <param name="PictureFile">Required String. The name of the picture file.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FillFormat.UserTextured(System.String)">
      <summary>Fills the specified shape with small tiles of an image.</summary>
      <param name="TextureFile">Required String. The name of the picture file.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FillFormat.Visible">
      <summary>Determines whether the object is visible.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Filter">
      <summary>Represents a filter for a single column. The Filter object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.Filters" /> collection. The Filters collection contains all the filters in an autofiltered range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Filter._Operator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Filter.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Filter.Count">
      <summary>Returns the number of objects in the collection. Read-only Integer.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Filter.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Filter.Criteria1">
      <summary>Returns the first filtered value for the specified column in a filtered range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Filter.Criteria2">
      <summary>Returns the second filtered value for the specified column in a filtered range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Filter.On">
      <summary>True if the specified filter is on.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Filter.Operator">
      <summary>Returns the operator that associates the two criteria applied by the specified filter.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Filter.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Filters">
      <summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.Filter" /> objects that represents all the filters in an autofiltered range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Filters._Default(System.Int32)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Filters.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Filters.Count">
      <summary>Returns the number of objects in the collection. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Filters.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Filters.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Filters.Item(System.Int32)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Integer. The index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Filters.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Floor">
      <summary>Represents the floor of a 3-D chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Floor.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Floor.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Floor.ClearFormats">
      <summary>Clears the formatting of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Floor.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Floor.Fill">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object for a specified shape or a <see cref="T:Microsoft.Office.Interop.Excel.ChartFillFormat" /> object for a specified chart that contains fill formatting properties for the shape or chart.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> or <see cref="T:Microsoft.Office.Interop.Excel.ChartFillFormat" /></returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Floor.Format">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Floor.Interior">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Floor.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Floor.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Floor.Paste">
      <summary>Pastes a picture from the Clipboard on the floor of the specified chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Floor.PictureType">
      <summary>Returns or sets the way pictures are displayed on the walls and faces of a 3-D chart. Can be set to one of the following constants: xlStack or xlStretch.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Floor.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Floor.Thickness">
      <summary>Returns or sets a Integer, specifying the thickness of the floor. Read/write.</summary>
      <returns>Integer</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Font">
      <summary>Contains the font attributes (font name, font size, color, and so on) for an object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Font.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Font.Background">
      <summary>Returns or sets the type of background for text used in charts. Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlBackground" /> constants.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Font.Bold">
      <summary>True if the font is bold.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Font.Color">
      <summary>Returns or sets the primary color of the font.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Font.ColorIndex">
      <summary>Returns or sets the color of the font.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Font.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Font.FontStyle">
      <summary>Returns or sets the font style.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Font.Italic">
      <summary>True if the font style is italic.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Font.Name">
      <summary>Returns or sets the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Font.OutlineFont">
      <summary>True if the font is an outline font.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Font.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Font.Shadow">
      <summary>True if the font is a shadow font or if the object has a shadow.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Font.Size">
      <summary>Returns or sets the size of the font.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Font.Strikethrough">
      <summary>True if the font is struck through with a horizontal line.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Font.Subscript">
      <summary>True if the font is formatted as subscript. False by default.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Font.Superscript">
      <summary>True if the font is formatted as superscript. False by default.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Font.ThemeColor">
      <summary>Returns or sets the theme color in the applied color scheme that is associated with the specified object.  Read/write Object.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Font.ThemeFont">
      <summary>Returns or sets the theme font in the applied font scheme that is associated with the specified object.  Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlThemeFont" />.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlThemeFont" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Font.TintAndShade">
      <summary>Returns or sets a Single that lightens or darkens a color.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Font.Underline">
      <summary>Returns or sets the type of underline applied to the font.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.FormatColor">
      <summary>Represents the fill color specified for a threshold of  a color scale conditional format or the color of the bar in a data bar conditional format.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatColor.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
      <returns>Application (see above)</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatColor.Color">
      <summary>Returns or sets the fill color associated with a threshold for a data bar or color scale conditional formatting rule.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatColor.ColorIndex">
      <summary>Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> enumeration, specifying if the fill color is expressed as an index value into the current color palette.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatColor.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. Read-only Integer.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatColor.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatColor.ThemeColor">
      <summary>Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlThemeColor" /> enumeration, specifying the theme color used in a threshold of a data bar or color scale conditional format.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatColor.TintAndShade">
      <summary>Returns or sets a Single that lightens or darkens the fill color of a cell for a threshold of a data bar or color scale conditional formatting rule.</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.FormatCondition">
      <summary>Represents a conditional format.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatCondition.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatCondition.AppliesTo">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object specifying the cell range to which the formatting rule is applied.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Range" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatCondition.Borders">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> collection that represents the borders of a style or a range of cells (including a range defined as part of a conditional format).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatCondition.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatCondition.DateOperator">
      <summary>Specifies the <see cref="T:Microsoft.Office.Interop.Excel.XlTimePeriods" /> Date operator used in the format condition. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlTimePeriods" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FormatCondition.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatCondition.Font">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatCondition.Formula1">
      <summary>Returns the value or expression associated with the conditional format or data validation.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatCondition.Formula2">
      <summary>Returns the value or expression associated with the second part of a conditional format or data validation.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatCondition.Interior">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FormatCondition.Modify(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object)">
      <summary>Modifies an existing conditional format.</summary>
      <param name="Type">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" />. Specifies whether the conditional format is based on a cell value or an expression. Can be one of the following XlFormatCondition constants:xlCellValuexlExpression</param>
      <param name="Operator">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" />. The conditional format operator. Can be one of the following XlFormatConditionOperator constants:xlBetweenxlEqualxlGreaterxlGreaterEqualxlLessxlLessEqualxlNotBetweenxlNotEqualIf <paramref name="Type" />, is xlExpression, the <paramref name="Operator" /> argument is ignored.</param>
      <param name="Formula1">Optional Object. The value or expression associated with the conditional format. Can be a constant value, a string value, a cell reference, or a formula.</param>
      <param name="Formula2">Optional Object. The value or expression associated with the conditional format. Can be a constant value, a string value, a cell reference, or a formula.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FormatCondition.ModifyAppliesToRange(Microsoft.Office.Interop.Excel.Range)">
      <summary>Sets the cell range to which this formatting rule applies.</summary>
      <param name="Range">The range to which this formatting rule will be applied.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FormatCondition.ModifyEx(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatCondition.NumberFormat">
      <summary>Returns or sets the number format applied to a cell if the conditional formatting rule evaluates to True. Read/write Object.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatCondition.Operator">
      <summary>Returns the operator for the conditional format.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatCondition.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatCondition.Priority">
      <summary>Returns or sets the priority value of the conditional formatting rule. The priority determines the order of evaluation when multiple conditional formatting rules exist in a worksheet.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatCondition.PTCondition">
      <summary>Returns a Boolean value indicating if the conditional format is being applied to a PivotTable chart. Read-only.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatCondition.ScopeType">
      <summary>Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /> enumeration, which determines the scope of the conditional format when it is applied to a PivotTable chart.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FormatCondition.SetFirstPriority">
      <summary>Sets the priority value for this conditional formatting rule to "1" so that it will be evaluated before all other rules on the worksheet.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FormatCondition.SetLastPriority">
      <summary>Sets the evaluation order for this conditional formatting rule so it is evaluated after all other rules on the worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatCondition.StopIfTrue">
      <summary>Returns or sets a Boolean value that determines if additional formatting rules on the cell should be evaluated if the current rule evaluates to True.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatCondition.Text">
      <summary>Returns or sets a String value specifying the text used by the conditional formatting rule.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatCondition.TextOperator">
      <summary>Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlContainsOperator" /> enumeration, specifying the text search performed by the conditional formatting rule.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlContainsOperator" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatCondition.Type">
      <summary>Returns the object type.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.FormatConditions">
      <summary>Represents the collection of conditional formats for a single range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatConditions._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Adds a new conditional format.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.FormatCondition" /> object that represents the new conditional format.</returns>
      <param name="Type">. (<see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" />. Specifies whether the conditional format is based on a cell value or an expression.</param>
      <param name="Operator">The conditional format operator. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlBetween" />, <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlEqual" />, <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlGreater" />, <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlGreaterEqual" />, <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlLess" />, <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlLessEqual" />, <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlNotBetween" />, or <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlNotEqual" />. If <paramref name="Type" /> is <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlExpression" />, the <paramref name="Operator" /> argument is ignored.</param>
      <param name="Formula1">The value or expression associated with the conditional format. Can be a constant value, a String value, a cell reference, or a formula.</param>
      <param name="Formula2">The value or expression associated with the second part of the conditional format when <paramref name="Operator" /> is <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlBetween" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlNotBetween" /> (otherwise, this argument is ignored). Can be a constant value, a string value, a cell reference, or a formula.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FormatConditions.AddAboveAverage">
      <summary>Returns a new <see cref="T:Microsoft.Office.Interop.Excel.AboveAverage" /> object representing a conditional formatting rule for the specified range. </summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.AboveAverage" /> object</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FormatConditions.AddColorScale(System.Int32)">
      <summary>Returns a new <see cref="T:Microsoft.Office.Interop.Excel.ColorScale" /> object representing a conditional formatting rule that uses gradations in cell colors to indicate relative differences in the values of cells included in a selected range.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ColorScale" /> object</returns>
      <param name="ColorScaleType">The type of color scale.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FormatConditions.AddDatabar">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Databar" /> object representing a data bar conditional formatting rule for the specified range.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Databar" /> object</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FormatConditions.AddIconSetCondition">
      <summary>Returns a new <see cref="T:Microsoft.Office.Interop.Excel.IconSetCondition" /> object which represents an icon set conditional formatting rule for the specified range.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.IconSetCondition" /> object</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FormatConditions.AddTop10">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Top10" /> object representing a conditional formatting rule for the specified range.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Top10" /> object</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FormatConditions.AddUniqueValues">
      <summary>Returns a new <see cref="T:Microsoft.Office.Interop.Excel.UniqueValues" /> object representing a conditional formatting rule for the specified range.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.UniqueValues" /> object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatConditions.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatConditions.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatConditions.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FormatConditions.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FormatConditions.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.FormatConditions.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <returns>Object</returns>
      <param name="Index">Required Object. The index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FormatConditions.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.FreeformBuilder">
      <summary>Represents the geometry of a freeform while it’s being built.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)">
      <summary>Adds a node to a freeform.</summary>
      <param name="SegmentType">Required <see cref="T:Microsoft.Office.Interop.Office.MsoSegmentType" />. The type of segment to be added.MsoSegmentType can be one of these constants:msoSegmentLinemsoSegmentCurve</param>
      <param name="EditingType">Required <see cref="T:Microsoft.Office.Interop.Office.MsoEditingType" />. The editing property of the vertex.MsoEditingType can be one of these constants:msoEditingAutomsoEditingCornerCannot be msoEditingSmooth or msoEditingSymmetric.If <paramref name="SegmentType" /> is msoSegmentLine, <paramref name="EditingType" /> must be msoEditingAuto.</param>
      <param name="X1">Required Single.If the <paramref name="EditingType" /> of the new segment is msoEditingAuto, this argument specifies the horizontal distance (in points) from the upper-left corner of the document to the end point of the new segment.If the <paramref name="EditingType" /> of the new node is msoEditingCorner, this argument specifies the horizontal distance (in points) from the upper-left corner of the document to the first control point for the new segment.</param>
      <param name="Y1">Required Single.If the <paramref name="EditingType" /> of the new segment is msoEditingAuto, this argument specifies the horizontal distance (in points) from the upper-left corner of the document to the end point of the new segment.If the <paramref name="EditingType" /> of the new node is msoEditingCorner, this argument specifies the horizontal distance (in points) from the upper-left corner of the document to the first control point for the new segment.</param>
      <param name="X2">Optional Object.If the <paramref name="EditingType" /> of the new segment is msoEditingCorner, this argument specifies the horizontal distance (in points) from the upper-left corner of the document to the second control point for the new segment.If the <paramref name="EditingType" /> of the new segment is msoEditingAuto, don't specify a value for this argument.</param>
      <param name="Y2">Optional Object.If the <paramref name="EditingType" /> of the new segment is msoEditingCorner, this argument specifies the horizontal distance (in points) from the upper-left corner of the document to the second control point for the new segment.If the <paramref name="EditingType" /> of the new segment is msoEditingAuto, don't specify a value for this argument.</param>
      <param name="X3">Optional Object.If the <paramref name="EditingType" /> of the new segment is msoEditingCorner, this argument specifies the horizontal distance (in points) from the upper-left corner of the document to the end point of the new segment.If the <paramref name="EditingType" /> of the new segment is msoEditingAuto, don't specify a value for this argument.</param>
      <param name="Y3">Optional Object.If the <paramref name="EditingType" /> of the new segment is msoEditingCorner, this argument specifies the vertical distance (in points) from the upper-left corner of the document to the end point of the new segment.If the <paramref name="EditingType" /> of the new segment is msoEditingAuto, don't specify a value for this argument.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FreeformBuilder.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.FreeformBuilder.ConvertToShape">
      <summary>Creates a shape that has the geometric characteristics of the specified <see cref="T:Microsoft.Office.Interop.Excel.FreeformBuilder" /> object. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the new shape.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FreeformBuilder.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.FreeformBuilder.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Global">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.GlobalClass">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.GlobalClass.#ctor"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GlobalClass._Evaluate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GlobalClass._Run2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.ActiveCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.ActiveChart"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.ActiveDialog"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.ActiveMenuBar"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.ActivePrinter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.ActiveSheet"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.ActiveWindow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.ActiveWorkbook"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.AddIns"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.Assistant"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GlobalClass.Calculate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.Cells"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.Charts"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.Columns"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.CommandBars"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.DDEAppReturnCode"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GlobalClass.DDEExecute(System.Int32,System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GlobalClass.DDEInitiate(System.String,System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GlobalClass.DDEPoke(System.Int32,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GlobalClass.DDERequest(System.Int32,System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GlobalClass.DDETerminate(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.DialogSheets"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GlobalClass.Evaluate(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.Excel4IntlMacroSheets"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.Excel4MacroSheets"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GlobalClass.ExecuteExcel4Macro(System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GlobalClass.Intersect(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.MenuBars"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.Modules"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.Names"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.Range(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.Rows"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GlobalClass.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.Selection"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GlobalClass.SendKeys(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.Sheets"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.ShortcutMenus(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.ThisWorkbook"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.Toolbars"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GlobalClass.Union(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.Windows"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.Workbooks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.WorksheetFunction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GlobalClass.Worksheets"></member>
    <member name="T:Microsoft.Office.Interop.Excel.Graphic">
      <summary>Contains properties that apply to header and footer picture objects.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Graphic.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Graphic.Brightness">
      <summary>Returns or sets the brightness of the specified picture or OLE object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Graphic.ColorType">
      <summary>Returns or sets the type of color transformation applied to the specified picture or OLE object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Graphic.Contrast">
      <summary>Returns or sets the contrast for the specified picture or OLE object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Graphic.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Graphic.CropBottom">
      <summary>Returns or sets the number of points that are cropped off the bottom of the specified picture or OLE object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Graphic.CropLeft">
      <summary>Returns or sets the number of points that are cropped off the left side of the specified picture or OLE object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Graphic.CropRight">
      <summary>Returns or sets the number of points that are cropped off the right side of the specified picture or OLE object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Graphic.CropTop">
      <summary>Returns or sets the number of points that are cropped off the top of the specified picture or OLE object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Graphic.Filename">
      <summary>Returns or sets the URL (on the intranet or the Web) or path (local or network) to the location where the specified source object was saved.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Graphic.Height">
      <summary>The height, in points, of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Graphic.LockAspectRatio">
      <summary>True if the specified shape retains its original proportions when you resize it. False if you can change the height and width of the shape independently of one another when you resize it.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Graphic.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Graphic.Width">
      <summary>The width, in points, of the object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Gridlines">
      <summary>Represents major or minor gridlines on a chart axis.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Gridlines.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Gridlines.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Gridlines.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Gridlines.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Gridlines.Format">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Gridlines.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Gridlines.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Gridlines.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.GroupBox">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.Accelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBox.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBox.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBox.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBox.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBox.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBox.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.Display3DShading"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBox.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.PhoneticAccelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBox.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBox.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBox.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.GroupBoxes">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBoxes._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBoxes._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBoxes._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBoxes._Dummy3"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBoxes.Accelerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBoxes.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBoxes.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBoxes.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBoxes.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBoxes.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBoxes.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBoxes.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBoxes.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBoxes.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBoxes.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBoxes.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBoxes.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBoxes.Display3DShading"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBoxes.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBoxes.Enabled"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBoxes.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBoxes.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBoxes.Height"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBoxes.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBoxes.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBoxes.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBoxes.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBoxes.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBoxes.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBoxes.PhoneticAccelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBoxes.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBoxes.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBoxes.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupBoxes.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBoxes.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBoxes.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBoxes.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBoxes.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBoxes.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupBoxes.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.GroupObject">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy27"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy28"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy30"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy36"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy37"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy38"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy41"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy42"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy43"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy44"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy45"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy47"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy48"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy50"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy52"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy53"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy54"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy55"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy56"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy57"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy58"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy59"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy60"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy61"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy62"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy63"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy65"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy66"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy67"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy68"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy70"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy72"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy73"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy75"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject._Dummy77"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.ArrowHeadLength"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.ArrowHeadStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.ArrowHeadWidth"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.ReadingOrder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.RoundedCorners"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.TopLeftCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObject.Ungroup"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObject.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.GroupObjects">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy27"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy28"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy30"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy36"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy37"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy38"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy41"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy42"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy43"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy44"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy45"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy47"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy48"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy50"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy52"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy53"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy54"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy55"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy56"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy57"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy58"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy59"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy60"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy61"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy62"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy63"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy65"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy66"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy67"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy68"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy70"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy72"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy73"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy75"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects._Dummy77"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.ArrowHeadLength"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.ArrowHeadStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.ArrowHeadWidth"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.Font"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.ReadingOrder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.RoundedCorners"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.Top"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupObjects.Ungroup"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupObjects.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.GroupShapes">
      <summary>Represents the individual shapes within a grouped shape.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupShapes._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupShapes.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupShapes.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupShapes.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupShapes.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.GroupShapes.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupShapes.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.GroupShapes.Range(System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object that represents a subset of the shapes in a <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection.</summary>
      <param name="Index">Required Object. The individual shapes to be included in the range. Can be an integer that specifies the index number of the shape, a string that specifies the name of the shape, or an array that contains either integers or strings.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.HeaderFooter">
      <summary>Represents a single header or footer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.HeaderFooter.Picture">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Graphic" />
 object that represents a picture field included in the specified header or footer. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Graphic" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.HeaderFooter.Text">
      <summary>Returns or sets a String
 that represents text included in the specified header or footer. Read/write.</summary>
      <returns>String</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.HiLoLines">
      <summary>Represents the high-low lines in a chart group.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.HiLoLines.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.HiLoLines.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.HiLoLines.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.HiLoLines.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.HiLoLines.Format">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.HiLoLines.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.HiLoLines.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.HiLoLines.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.HPageBreak">
      <summary>Represents a horizontal page break.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.HPageBreak.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.HPageBreak.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.HPageBreak.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.HPageBreak.DragOff(Microsoft.Office.Interop.Excel.XlDirection,System.Int32)">
      <summary>Drags a page break out of the print area.</summary>
      <param name="Direction">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />. The direction in which the page break is dragged. XlDirection can be one of these constants:xlDownxlToRightxlToLeftxlUp</param>
      <param name="RegionIndex">Required Integer. The print-area region index for the page break (the region where the mouse pointer is located when the mouse button is pressed if the user drags the page break). If the print area is contiguous, there’s only one print region. If the print area is noncontiguous, there’s more than one print region.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.HPageBreak.Extent">
      <summary>Returns the type of the specified page break: full-screen or only within a print area.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.HPageBreak.Location">
      <summary>Returns or sets the cell (a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object) that defines the page-break location.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.HPageBreak.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.HPageBreak.Type">
      <summary>Returns or sets the page break type.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.HPageBreaks">
      <summary>The collection of horizontal page breaks within the print area. Each horizontal page break is represented by an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreak" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.HPageBreaks._Default(System.Int32)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.HPageBreaks.Add(System.Object)">
      <summary>Adds a horizontal page break. Returns an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreak" /> object.</summary>
      <param name="Before">Required Object. A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object. The range above which the new page break will be added.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.HPageBreaks.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.HPageBreaks.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.HPageBreaks.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.HPageBreaks.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.HPageBreaks.Item(System.Int32)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Integer. The index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.HPageBreaks.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Hyperlink">
      <summary>Represents a hyperlink.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Hyperlink.Address">
      <summary>Returns or sets the address of the target document.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Hyperlink.AddToFavorites">
      <summary>Adds a shortcut to the workbook or hyperlink to the Favorites folder.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Hyperlink.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Hyperlink.CreateNewDocument(System.String,System.Boolean,System.Boolean)">
      <summary>Creates a new document linked to the specified hyperlink.</summary>
      <param name="Filename">Required String. The file name of the specified document.</param>
      <param name="EditNow">Required Boolean. True to have the specified document open immediately in its associated editing environment. The default value is True.</param>
      <param name="Overwrite">Required Boolean. True to overwrite any existing file of the same name in the same folder. False if any existing file of the same name is preserved and the <paramref name="Filename" /> argument specifies a new file name. The default value is False.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Hyperlink.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Hyperlink.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Hyperlink.EmailSubject">
      <summary>Returns or sets the text string of the specified hyperlink’s e-mail subject line. The subject line is appended to the hyperlink’s address.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Hyperlink.Follow(System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Displays a cached document if it’s already been downloaded. Otherwise, this method resolves the hyperlink, downloads the target document, and displays the document in the appropriate application.</summary>
      <param name="NewWindow">Optional Object. True to display the target application in a new window. The default value is False.</param>
      <param name="AddHistory">Optional Object. Not used. Reserved for future use.</param>
      <param name="ExtraInfo">Optional Object. A String or byte array that specifies additional information for HTTP to use to resolve the hyperlink. For example, you can use <paramref name="ExtraInfo" /> to specify the coordinates of an image map, the contents of a form, or a FAT file name.</param>
      <param name="Method">Optional Object. Specifies the way <paramref name="ExtraInfo" /> is attached. Can be one of the following <see cref="T:Microsoft.Office.Core.MsoExtraInfoMethod" /> constants.</param>
      <param name="HeaderInfo">Optional Object. A String that specifies header information for the HTTP request. The default value is an empty string.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Hyperlink.Name">
      <summary>Returns the name of the object. Read-only String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Hyperlink.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Hyperlink.Range">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range the specified hyperlink is attached to.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Hyperlink.ScreenTip">
      <summary>Returns or sets the ScreenTip text for the specified hyperlink.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Hyperlink.Shape">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the shape attached to the specified comment, diagram node, or hyperlink.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Hyperlink.SubAddress">
      <summary>Returns or sets the location within the document associated with the hyperlink.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Hyperlink.TextToDisplay">
      <summary>Returns or sets the text to be displayed for the specified hyperlink. The default value is the address of the hyperlink.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Hyperlink.Type">
      <summary>Returns the location of the HTML frame.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Hyperlinks">
      <summary>Represents the collection of hyperlinks for a worksheet or range. Each hyperlink is represented by a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlink" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Hyperlinks._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Hyperlinks.Add(System.Object,System.String,System.Object,System.Object,System.Object)">
      <summary>Adds a hyperlink to the specified range or shape. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlink" /> object.</summary>
      <param name="Anchor">Required Object. The anchor for the hyperlink. Can be either a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> or <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object.</param>
      <param name="Address">Required String. The address of the hyperlink.</param>
      <param name="SubAddress">Optional Object. The subaddress of the hyperlink.</param>
      <param name="ScreenTip">Optional Object. The screen tip to be displayed when the mouse pointer is paused over the hyperlink.</param>
      <param name="TextToDisplay">Optional Object. The text to be displayed for the hyperlink.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Hyperlinks.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Hyperlinks.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Hyperlinks.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Hyperlinks.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Hyperlinks.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Hyperlinks.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Hyperlinks.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.IAboveAverage">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IAboveAverage.AboveBelow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAboveAverage.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAboveAverage.AppliesTo"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAboveAverage.Borders"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAboveAverage.CalcFor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAboveAverage.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAboveAverage.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAboveAverage.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAboveAverage.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAboveAverage.ModifyAppliesToRange(Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAboveAverage.NumberFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAboveAverage.NumStdDev"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAboveAverage.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAboveAverage.Priority"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAboveAverage.PTCondition"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAboveAverage.ScopeType"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAboveAverage.SetFirstPriority"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAboveAverage.SetLastPriority"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAboveAverage.StopIfTrue"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAboveAverage.Type"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IAction">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IAction.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAction.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAction.Content"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAction.Coordinate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAction.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAction.Execute"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAction.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAction.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAction.Type"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IActions">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IActions._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IActions.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IActions.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IActions.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IActions.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IActions.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IActions.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IAddIn">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIn.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIn.Author"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIn.CLSID"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIn.Comments"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIn.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIn.FullName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIn.Installed"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIn.IsOpen"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIn.Keywords"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIn.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIn.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIn.Path"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIn.progID"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIn.Subject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIn.Title"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IAddIns">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIns._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAddIns.Add(System.String,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIns.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIns.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIns.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAddIns.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIns.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIns.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IAddIns2">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIns2._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAddIns2.Add(System.String,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIns2.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIns2.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIns2.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAddIns2.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIns2.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAddIns2.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IAllowEditRange">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IAllowEditRange.ChangePassword(System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAllowEditRange.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAllowEditRange.Range"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAllowEditRange.Title"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAllowEditRange.Unprotect(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAllowEditRange.Users"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IAllowEditRanges">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IAllowEditRanges._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAllowEditRanges.Add(System.String,Microsoft.Office.Interop.Excel.Range,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAllowEditRanges.Count"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAllowEditRanges.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAllowEditRanges.Item(System.Object)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IAppEvents">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.AfterCalculate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.NewWorkbook(Microsoft.Office.Interop.Excel.Workbook)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.ProtectedViewWindowActivate(Microsoft.Office.Interop.Excel.ProtectedViewWindow)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.ProtectedViewWindowBeforeClose(Microsoft.Office.Interop.Excel.ProtectedViewWindow,Microsoft.Office.Interop.Excel.XlProtectedViewCloseReason,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.ProtectedViewWindowBeforeEdit(Microsoft.Office.Interop.Excel.ProtectedViewWindow,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.ProtectedViewWindowDeactivate(Microsoft.Office.Interop.Excel.ProtectedViewWindow)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.ProtectedViewWindowOpen(Microsoft.Office.Interop.Excel.ProtectedViewWindow)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.ProtectedViewWindowResize(Microsoft.Office.Interop.Excel.ProtectedViewWindow)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.SheetActivate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.SheetBeforeDoubleClick(System.Object,Microsoft.Office.Interop.Excel.Range,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.SheetBeforeRightClick(System.Object,Microsoft.Office.Interop.Excel.Range,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.SheetCalculate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.SheetChange(System.Object,Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.SheetDeactivate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.SheetFollowHyperlink(System.Object,Microsoft.Office.Interop.Excel.Hyperlink)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.SheetPivotTableAfterValueChange(System.Object,Microsoft.Office.Interop.Excel.PivotTable,Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.SheetPivotTableBeforeAllocateChanges(System.Object,Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.SheetPivotTableBeforeCommitChanges(System.Object,Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.SheetPivotTableBeforeDiscardChanges(System.Object,Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.SheetPivotTableUpdate(System.Object,Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.SheetSelectionChange(System.Object,Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WindowActivate(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.Window)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WindowDeactivate(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.Window)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WindowResize(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.Window)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookActivate(Microsoft.Office.Interop.Excel.Workbook)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookAddinInstall(Microsoft.Office.Interop.Excel.Workbook)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookAddinUninstall(Microsoft.Office.Interop.Excel.Workbook)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookAfterSave(Microsoft.Office.Interop.Excel.Workbook,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookAfterXmlExport(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.XmlMap,System.String,Microsoft.Office.Interop.Excel.XlXmlExportResult)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookAfterXmlImport(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.XmlMap,System.Boolean,Microsoft.Office.Interop.Excel.XlXmlImportResult)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookBeforeClose(Microsoft.Office.Interop.Excel.Workbook,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookBeforePrint(Microsoft.Office.Interop.Excel.Workbook,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookBeforeSave(Microsoft.Office.Interop.Excel.Workbook,System.Boolean,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookBeforeXmlExport(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookBeforeXmlImport(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Boolean,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookDeactivate(Microsoft.Office.Interop.Excel.Workbook)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookNewChart(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.Chart)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookNewSheet(Microsoft.Office.Interop.Excel.Workbook,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookOpen(Microsoft.Office.Interop.Excel.Workbook)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookPivotTableCloseConnection(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookPivotTableOpenConnection(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookRowsetComplete(Microsoft.Office.Interop.Excel.Workbook,System.String,System.String,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookSync(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Core.MsoSyncEventType)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IArc">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IArc._Dummy43"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArc.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArc.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArc.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArc.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArc.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArc.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArc.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.ReadingOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArc.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArc.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArc.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IArcs">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IArcs._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArcs._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArcs._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArcs._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArcs._Dummy43"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArcs.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArcs.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArcs.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArcs.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArcs.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArcs.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArcs.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArcs.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.Formula"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArcs.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArcs.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArcs.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.ReadingOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArcs.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IArcs.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IArcs.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IAreas">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IAreas._Default(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAreas.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAreas.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAreas.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAreas.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAreas.Item(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAreas.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IAutoCorrect">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IAutoCorrect.AddReplacement(System.String,System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAutoCorrect.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAutoCorrect.AutoExpandListRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAutoCorrect.AutoFillFormulasInLists"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAutoCorrect.CapitalizeNamesOfDays"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAutoCorrect.CorrectCapsLock"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAutoCorrect.CorrectSentenceCap"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAutoCorrect.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAutoCorrect.DeleteReplacement(System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAutoCorrect.DisplayAutoCorrectOptions"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAutoCorrect.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAutoCorrect.ReplacementList(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAutoCorrect.ReplaceText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAutoCorrect.TwoInitialCapitals"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IAutoFilter">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IAutoFilter.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAutoFilter.ApplyFilter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAutoFilter.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAutoFilter.FilterMode"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAutoFilter.Filters"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAutoFilter.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAutoFilter.Range"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAutoFilter.ShowAllData"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAutoFilter.Sort"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IAutoRecover">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IAutoRecover.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAutoRecover.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAutoRecover.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAutoRecover.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAutoRecover.Path"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAutoRecover.Time"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IAxes">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IAxes._Default(Microsoft.Office.Interop.Excel.XlAxisType,Microsoft.Office.Interop.Excel.XlAxisGroup)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxes.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxes.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxes.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAxes.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAxes.Item(Microsoft.Office.Interop.Excel.XlAxisType,Microsoft.Office.Interop.Excel.XlAxisGroup)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxes.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IAxis">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.AxisBetweenCategories"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.AxisGroup"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.AxisTitle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.BaseUnit"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.BaseUnitIsAuto"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.CategoryNames"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.CategoryType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.Crosses"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.CrossesAt"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAxis.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.DisplayUnit"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.DisplayUnitCustom"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.DisplayUnitLabel"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.Format"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.HasDisplayUnitLabel"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.HasMajorGridlines"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.HasMinorGridlines"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.HasTitle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.LogBase"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.MajorGridlines"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.MajorTickMark"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.MajorUnit"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.MajorUnitIsAuto"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.MajorUnitScale"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.MaximumScale"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.MaximumScaleIsAuto"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.MinimumScale"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.MinimumScaleIsAuto"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.MinorGridlines"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.MinorTickMark"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.MinorUnit"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.MinorUnitIsAuto"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.MinorUnitScale"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.ReversePlotOrder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.ScaleType"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAxis.Select"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.TickLabelPosition"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.TickLabels"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.TickLabelSpacing"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.TickLabelSpacingIsAuto"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.TickMarkSpacing"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.Type"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxis.Width"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IAxisTitle">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.Characters(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAxisTitle.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.Fill"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.Format"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.FormulaLocal"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.FormulaR1C1"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.FormulaR1C1Local"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.IncludeInLayout"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.Position"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.ReadingOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IAxisTitle.Select"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.Width"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IBorder">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IBorder.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IBorder.Color"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IBorder.ColorIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IBorder.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IBorder.LineStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IBorder.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IBorder.ThemeColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IBorder.TintAndShade"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IBorder.Weight"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IBorders">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IBorders._Default(Microsoft.Office.Interop.Excel.XlBordersIndex)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IBorders.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IBorders.Color"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IBorders.ColorIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IBorders.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IBorders.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IBorders.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IBorders.Item(Microsoft.Office.Interop.Excel.XlBordersIndex)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IBorders.LineStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IBorders.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IBorders.ThemeColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IBorders.TintAndShade"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IBorders.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IBorders.Weight"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IButton">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.Accelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IButton.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.CancelButton"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IButton.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IButton.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IButton.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IButton.Cut"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.DefaultButton"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IButton.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.DismissButton"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IButton.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.HelpButton"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.PhoneticAccelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.ReadingOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IButton.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IButton.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButton.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IButtons">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IButtons._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IButtons._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IButtons._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IButtons._Dummy3"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.Accelerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IButtons.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.AutoSize"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IButtons.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.CancelButton"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IButtons.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IButtons.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IButtons.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IButtons.Cut"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.DefaultButton"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IButtons.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.DismissButton"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IButtons.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.Formula"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IButtons.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IButtons.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.HelpButton"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.HorizontalAlignment"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IButtons.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.PhoneticAccelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.ReadingOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IButtons.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IButtons.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IButtons.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ICalculatedFields">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ICalculatedFields._Add(System.String,System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedFields._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICalculatedFields.Add(System.String,System.String,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedFields.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedFields.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedFields.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICalculatedFields.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICalculatedFields.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedFields.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ICalculatedItems">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ICalculatedItems._Add(System.String,System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedItems._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICalculatedItems.Add(System.String,System.String,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedItems.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedItems.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedItems.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICalculatedItems.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICalculatedItems.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedItems.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ICalculatedMember">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedMember._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedMember.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedMember.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICalculatedMember.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedMember.DisplayFolder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedMember.Dynamic"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedMember.FlattenHierarchies"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedMember.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedMember.HierarchizeDistinct"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedMember.IsValid"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedMember.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedMember.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedMember.SolveOrder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedMember.SourceName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedMember.Type"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ICalculatedMembers">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedMembers._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICalculatedMembers.Add(System.String,System.String,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICalculatedMembers.Add2(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedMembers.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedMembers.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedMembers.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICalculatedMembers.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedMembers.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICalculatedMembers.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ICanvasShapes">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ICellFormat">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ICellFormat.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICellFormat.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICellFormat.Borders"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICellFormat.Clear"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICellFormat.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICellFormat.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICellFormat.FormulaHidden"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICellFormat.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICellFormat.IndentLevel"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICellFormat.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICellFormat.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICellFormat.MergeCells"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICellFormat.NumberFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICellFormat.NumberFormatLocal"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICellFormat.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICellFormat.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICellFormat.ShrinkToFit"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICellFormat.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICellFormat.WrapText"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ICharacters">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ICharacters.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICharacters.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICharacters.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICharacters.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICharacters.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICharacters.Font"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICharacters.Insert(System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICharacters.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICharacters.PhoneticCharacters"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICharacters.Text"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IChartArea">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartArea.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartArea.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartArea.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartArea.Clear"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartArea.ClearContents"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartArea.ClearFormats"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartArea.Copy"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartArea.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartArea.Fill"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartArea.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartArea.Format"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartArea.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartArea.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartArea.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartArea.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartArea.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartArea.RoundedCorners"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartArea.Select"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartArea.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartArea.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartArea.Width"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IChartColorFormat">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartColorFormat._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartColorFormat.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartColorFormat.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartColorFormat.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartColorFormat.RGB"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartColorFormat.SchemeColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartColorFormat.Type"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IChartEvents">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartEvents.Activate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartEvents.BeforeDoubleClick(System.Int32,System.Int32,System.Int32,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartEvents.BeforeRightClick(System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartEvents.Calculate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartEvents.Deactivate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartEvents.DragOver"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartEvents.DragPlot"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartEvents.MouseDown(System.Int32,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartEvents.MouseMove(System.Int32,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartEvents.MouseUp(System.Int32,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartEvents.Resize"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartEvents.Select(System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartEvents.SeriesChange(System.Int32,System.Int32)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IChartFillFormat">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFillFormat.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFillFormat.BackColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFillFormat.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFillFormat.ForeColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFillFormat.GradientColorType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFillFormat.GradientDegree"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFillFormat.GradientStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFillFormat.GradientVariant"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartFillFormat.OneColorGradient(Microsoft.Office.Core.MsoGradientStyle,System.Int32,System.Single)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFillFormat.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFillFormat.Pattern"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartFillFormat.Patterned(Microsoft.Office.Core.MsoPatternType)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartFillFormat.PresetGradient(Microsoft.Office.Core.MsoGradientStyle,System.Int32,Microsoft.Office.Core.MsoPresetGradientType)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFillFormat.PresetGradientType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFillFormat.PresetTexture"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartFillFormat.PresetTextured(Microsoft.Office.Core.MsoPresetTexture)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartFillFormat.Solid"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFillFormat.TextureName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFillFormat.TextureType"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartFillFormat.TwoColorGradient(Microsoft.Office.Core.MsoGradientStyle,System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFillFormat.Type"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartFillFormat.UserPicture(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartFillFormat.UserTextured(System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFillFormat.Visible"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IChartFormat">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFormat.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFormat.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFormat.Fill"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFormat.Glow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFormat.Line"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFormat.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFormat.PictureFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFormat.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFormat.SoftEdge"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFormat.TextFrame2"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartFormat.ThreeD"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IChartGroup">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.AxisGroup"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.BubbleScale"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.DoughnutHoleSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.DownBars"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.DropLines"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.FirstSliceAngle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.GapWidth"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.Has3DShading"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.HasDropLines"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.HasHiLoLines"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.HasRadarAxisLabels"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.HasSeriesLines"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.HasUpDownBars"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.HiLoLines"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.Overlap"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.RadarAxisLabels"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.SecondPlotSize"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartGroup.SeriesCollection(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.SeriesLines"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.ShowNegativeBubbles"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.SizeRepresents"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.SplitType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.SplitValue"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.SubType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.Type"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.UpBars"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroup.VaryByCategories"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IChartGroups">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroups.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroups.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroups.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartGroups.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartGroups.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartGroups.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IChartObject">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObject._Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObject.Activate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObject.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObject.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObject.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObject.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObject.Chart"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObject.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObject.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObject.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObject.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObject.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObject.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObject.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObject.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObject.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObject.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObject.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObject.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObject.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObject.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObject.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObject.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObject.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObject.ProtectChartObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObject.RoundedCorners"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObject.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObject.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObject.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObject.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObject.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObject.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObject.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObject.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObject.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IChartObjects">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObjects._Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObjects._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObjects._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObjects._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObjects._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObjects._Dummy25"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObjects._Dummy27"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObjects._Dummy28"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObjects._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObjects.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObjects.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObjects.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObjects.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObjects.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObjects.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObjects.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObjects.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObjects.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObjects.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObjects.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObjects.Enabled"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObjects.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObjects.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObjects.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObjects.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObjects.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObjects.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObjects.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObjects.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObjects.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObjects.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObjects.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObjects.ProtectChartObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObjects.RoundedCorners"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObjects.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartObjects.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObjects.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObjects.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObjects.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObjects.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartObjects.Width"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ICharts">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ICharts._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICharts._Dummy7"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICharts._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICharts.Add(System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICharts.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICharts.Copy(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICharts.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICharts.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICharts.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICharts.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICharts.HPageBreaks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICharts.Item(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICharts.Move(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICharts.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICharts.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICharts.PrintOut_2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICharts.PrintPreview(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICharts.Select(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICharts.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICharts.VPageBreaks"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IChartTitle">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.Characters(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartTitle.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.Fill"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.Format"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.FormulaLocal"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.FormulaR1C1"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.FormulaR1C1Local"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.IncludeInLayout"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.Position"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.ReadingOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IChartTitle.Select"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartTitle.Width"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IChartView">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartView.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartView.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartView.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IChartView.Sheet"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ICheckBox">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.Accelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBox.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBox.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBox.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBox.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBox.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBox.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.Display3DShading"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBox.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.PhoneticAccelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBox.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBox.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBox.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ICheckBoxes">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBoxes._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBoxes._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBoxes._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBoxes._Dummy3"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.Accelerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBoxes.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBoxes.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBoxes.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBoxes.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBoxes.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBoxes.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBoxes.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.Display3DShading"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBoxes.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.Enabled"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBoxes.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBoxes.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBoxes.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.PhoneticAccelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBoxes.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICheckBoxes.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IColorScale">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorScale.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorScale.AppliesTo"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorScale.ColorScaleCriteria"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorScale.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IColorScale.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorScale.Formula"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IColorScale.ModifyAppliesToRange(Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorScale.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorScale.Priority"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorScale.PTCondition"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorScale.ScopeType"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IColorScale.SetFirstPriority"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IColorScale.SetLastPriority"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorScale.StopIfTrue"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorScale.Type"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IColorScaleCriteria">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorScaleCriteria._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorScaleCriteria.Count"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IColorScaleCriteria.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorScaleCriteria.Item(System.Object)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IColorScaleCriterion">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorScaleCriterion.FormatColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorScaleCriterion.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorScaleCriterion.Type"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorScaleCriterion.Value"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IColorStop">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorStop.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorStop.Color"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorStop.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IColorStop.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorStop.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorStop.Position"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorStop.ThemeColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorStop.TintAndShade"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IColorStops">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorStops._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IColorStops.Add(System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorStops.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IColorStops.Clear"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorStops.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorStops.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IColorStops.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IColorStops.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IColorStops.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IComment">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IComment.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IComment.Author"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IComment.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IComment.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IComment.Next"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IComment.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IComment.Previous"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IComment.Shape"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IComment.Text(System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IComment.Visible"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IComments">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IComments._Default(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IComments.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IComments.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IComments.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IComments.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IComments.Item(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IComments.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.Icon">
      <summary>Represents a single icon in an icon set used in a conditional formatting rule.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Icon.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Icon.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. Read-only Long.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Icon.Index">
      <summary>Gets a value specifying the index number of the Icon object within the <see cref="T:Microsoft.Office.Interop.Excel.IconSet" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Icon.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.IconCriteria">
      <summary>Represents the collection of <see cref="T:Microsoft.Office.Interop.Excel.IconCriterion" /> objects. Each IconCriterion represents the values and threshold type for each icon in an icon set conditional formatting rule.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconCriteria._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconCriteria.Count">
      <summary>Returns a Long value that specifies the number of criteria for an icon set conditional format rule. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IconCriteria.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IconCriteria.Item(System.Object)">
      <summary>Returns a single <see cref="T:Microsoft.Office.Interop.Excel.IconCriterion" /> object from the IconCriteria collection. Read-only.</summary>
      <param name="Index">The index number of the IconCriterion object.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.IconCriterion">
      <summary>Represents the criterion for an individual icon in an icon set. The criterion specifies the range of values and the threshold type associated with the icon in an icon set conditional formatting rule.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconCriterion.Icon">
      <summary>Gets or sets the icon for a criterion in an icon set conditional formatting rule.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconCriterion.Index">
      <summary>Gets a value indicating which threshold the criteria represents.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconCriterion.Operator">
      <summary>Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" /> enumeration, which specifes if the threshold is "greater than" or "greater than or equal to" the threshold value.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconCriterion.Type">
      <summary>Returns one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlConditionValueTypes" /> enumeration, which specifies how the threshold value for an icon set is determined. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconCriterion.Value">
      <summary>Returns or sets the threshold value for an icon in a conditional format. Read/write Variant.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.IConditionValue">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IConditionValue.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IConditionValue.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IConditionValue.Modify(Microsoft.Office.Interop.Excel.XlConditionValueTypes,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IConditionValue.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IConditionValue.Type"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IConditionValue.Value"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IConnections">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IConnections._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IConnections.Add(System.String,System.String,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IConnections.AddFromFile(System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IConnections.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IConnections.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IConnections.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IConnections.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IConnections.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IConnections.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IConnectorFormat">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IConnectorFormat.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IConnectorFormat.BeginConnected"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IConnectorFormat.BeginConnectedShape"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IConnectorFormat.BeginConnectionSite"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IConnectorFormat.BeginDisconnect"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IConnectorFormat.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IConnectorFormat.EndConnected"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IConnectorFormat.EndConnectedShape"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IConnectorFormat.EndConnectionSite"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IConnectorFormat.EndDisconnect"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IConnectorFormat.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IConnectorFormat.Type"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IconSet">
      <summary>Represents a single set of icons that are used in an icon set conditional formatting rule.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSet._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSet.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
      <returns>Application (see above)</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSet.Count">
      <summary>Returns a Integer value that specifies the number of icons in the icon set. Read-only.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSet.Creator">
      <summary>Returns a 32-bit integer equivalent to a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IconSet.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSet.ID">
      <summary>Returns one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlIconSet" /> enumeration, which specifies the name of the icon set used in an icon set conditional formatting rule.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlIconSet" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSet.Item(System.Object)">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Icon" /> object that represents a single icon from an icon set. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Icon" />
      </returns>
      <param name="Index">The index number of the Icon object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSet.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.IconSetCondition">
      <summary>Represents an icon set conditional formatting rule.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSetCondition.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
      <returns>Application (see above)</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSetCondition.AppliesTo">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object specifying the cell range to which the formatting rule is applied.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Range" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSetCondition.Creator">
      <summary>Returns a 32-bit integer equivalent to an <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> value that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IconSetCondition.Delete">
      <summary>Deletes the specified conditional formatting rule object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSetCondition.Formula">
      <summary>Returns or sets a String representing a formula, which determines the values to which the icon set will be applied.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSetCondition.IconCriteria">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /> collection, which represents the set of criteria for an icon set conditional formatting rule.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSetCondition.IconSet">
      <summary>Returns or sets an <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> collection, which specifies the icon set used in the conditional format.</summary>
      <returns>Object</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IconSetCondition.ModifyAppliesToRange(Microsoft.Office.Interop.Excel.Range)">
      <summary>Sets the cell range to which this formatting rule applies.</summary>
      <param name="Range">The range to which this formatting rule will be applied.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSetCondition.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSetCondition.PercentileValues">
      <summary>Returns or sets a Boolean value indicating if the thresholds for an icon set conditional format are determined by using percentiles.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSetCondition.Priority">
      <summary>Returns or sets the priority value of the conditional formatting rule. The priority determines the order of evaluation when multiple conditional formatting rules exist in a worksheet.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSetCondition.PTCondition">
      <summary>Returns a Boolean value indicating if the conditional format is being applied to a PivotTable chart. Read-only.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSetCondition.ReverseOrder">
      <summary>Returns or sets a Boolean value indicating if the order of icons is reversed for an icon set.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSetCondition.ScopeType">
      <summary>Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /> enumeration, which determines the scope of the conditional format when it is applied to a PivotTable chart.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IconSetCondition.SetFirstPriority">
      <summary>Sets the priority value for this conditional formatting rule to "1" so that it will be evaluated before all other rules on the worksheet.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IconSetCondition.SetLastPriority">
      <summary>Sets the evaluation order for this conditional formatting rule so it is evaluated after all other rules on the worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSetCondition.ShowIconOnly">
      <summary>Returns or sets a Boolean value indicating if only the icon is displayed for an icon set conditional format.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSetCondition.StopIfTrue">
      <summary>Returns or sets a Boolean value that determines if additional formatting rules on the cell should be evaluated if the current rule evaluates to True.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSetCondition.Type">
      <summary>Returns one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" /> enumeration, which specifies the type of conditional format. Read-only.</summary>
      <returns>Integer</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.IconSets">
      <summary>Represents a collection of icon sets used in an icon set conditional formatting rule.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSets._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSets.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
      <returns>Application (see above)</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSets.Count">
      <summary>Returns an Integer value that specifies the number of icon sets available in the workbook. Read-only.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSets.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. Read-only Integer.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IconSets.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSets.Item(System.Object)">
      <summary>Returns a single <see cref="T:Microsoft.Office.Interop.Excel.IconSet" /> object from the <see cref="T:Microsoft.Office.Interop.Excel.IconSets" />collection. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.IconSet" />
      </returns>
      <param name="Index">The index number of the <see cref="T:Microsoft.Office.Interop.Excel.IconSet" /> object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IconSets.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.IControlFormat">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IControlFormat._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IControlFormat.AddItem(System.String,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IControlFormat.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IControlFormat.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IControlFormat.DropDownLines"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IControlFormat.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IControlFormat.LargeChange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IControlFormat.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IControlFormat.List(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IControlFormat.ListCount"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IControlFormat.ListFillRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IControlFormat.ListIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IControlFormat.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IControlFormat.Max"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IControlFormat.Min"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IControlFormat.MultiSelect"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IControlFormat.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IControlFormat.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IControlFormat.RemoveAllItems"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IControlFormat.RemoveItem(System.Int32,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IControlFormat.SmallChange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IControlFormat.Value"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ICorners">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ICorners.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICorners.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICorners.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICorners.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICorners.Select"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ICustomProperties">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ICustomProperties._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICustomProperties.Add(System.String,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICustomProperties.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICustomProperties.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICustomProperties.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICustomProperties.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICustomProperties.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICustomProperties.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ICustomProperty">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ICustomProperty._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICustomProperty.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICustomProperty.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICustomProperty.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICustomProperty.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICustomProperty.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICustomProperty.Value"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ICustomView">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ICustomView.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICustomView.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICustomView.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICustomView.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICustomView.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICustomView.PrintSettings"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICustomView.RowColSettings"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICustomView.Show"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ICustomViews">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ICustomViews._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICustomViews.Add(System.String,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICustomViews.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICustomViews.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICustomViews.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICustomViews.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ICustomViews.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ICustomViews.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IDatabar">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IDatabar.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDatabar.AppliesTo"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDatabar.AxisColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDatabar.AxisPosition"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDatabar.BarBorder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDatabar.BarColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDatabar.BarFillType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDatabar.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDatabar.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDatabar.Direction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDatabar.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDatabar.MaxPoint"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDatabar.MinPoint"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDatabar.ModifyAppliesToRange(Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDatabar.NegativeBarFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDatabar.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDatabar.PercentMax"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDatabar.PercentMin"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDatabar.Priority"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDatabar.PTCondition"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDatabar.ScopeType"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDatabar.SetFirstPriority"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDatabar.SetLastPriority"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDatabar.ShowValue"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDatabar.StopIfTrue"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDatabar.Type"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IDataBarBorder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataBarBorder.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataBarBorder.Color"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataBarBorder.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataBarBorder.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataBarBorder.Type"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IDataLabel">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.AutoText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.Characters(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDataLabel.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.Fill"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.Format"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.FormulaLocal"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.FormulaR1C1"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.FormulaR1C1Local"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.NumberFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.NumberFormatLinked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.NumberFormatLocal"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.Position"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.ReadingOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDataLabel.Select"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.Separator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.ShowBubbleSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.ShowCategoryName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.ShowLegendKey"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.ShowPercentage"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.ShowSeriesName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.ShowValue"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.Type"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabel.Width"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IDataLabels">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IDataLabels._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDataLabels._Dummy10"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDataLabels._Dummy13"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDataLabels._Dummy16"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDataLabels._Dummy17"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDataLabels._Dummy9"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.AutoText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDataLabels.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.Fill"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.Format"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDataLabels.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDataLabels.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.NumberFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.NumberFormatLinked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.NumberFormatLocal"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.Position"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.ReadingOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDataLabels.Select"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.Separator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.ShowBubbleSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.ShowCategoryName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.ShowLegendKey"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.ShowPercentage"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.ShowSeriesName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.ShowValue"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.Type"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataLabels.VerticalAlignment"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IDataTable">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataTable.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataTable.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataTable.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataTable.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDataTable.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataTable.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataTable.Format"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataTable.HasBorderHorizontal"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataTable.HasBorderOutline"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataTable.HasBorderVertical"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataTable.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDataTable.Select"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDataTable.ShowLegendKey"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IDiagram">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IDiagram.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDiagram.AutoFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDiagram.AutoLayout"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDiagram.Convert(Microsoft.Office.Core.MsoDiagramType)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDiagram.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDiagram.FitText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDiagram.Nodes"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDiagram.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDiagram.Reverse"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDiagram.Type"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IDialog">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialog.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialog.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialog.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialog.Show(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IDialogFrame">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogFrame._Dummy10"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogFrame._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogFrame._Dummy17"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogFrame._Dummy18"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogFrame._Dummy20"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogFrame._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogFrame._Dummy23"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogFrame._Dummy25"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogFrame._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogFrame._Dummy4"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogFrame._Dummy5"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogFrame._Dummy7"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogFrame._Dummy8"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogFrame._Dummy9"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogFrame.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogFrame.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogFrame.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogFrame.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogFrame.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogFrame.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogFrame.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogFrame.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogFrame.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogFrame.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogFrame.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogFrame.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogFrame.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogFrame.Select(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogFrame.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogFrame.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogFrame.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogFrame.Width"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IDialogs">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogs._Default(Microsoft.Office.Interop.Excel.XlBuiltInDialog)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogs.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogs.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogs.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogs.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogs.Item(Microsoft.Office.Interop.Excel.XlBuiltInDialog)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogs.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IDialogSheet">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._CheckSpelling(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet._CodeName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet._DisplayRightToLeft"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy113"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy114"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy115"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy29"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy31"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy32"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy34"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy36"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy40"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy41"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy42"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy43"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy44"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy45"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy56"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy65"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy66"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy67"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy69"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy74"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy75"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy76"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy78"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy79"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy82"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy83"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy85"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy86"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy88"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy89"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Dummy90"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Evaluate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Activate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Arcs(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.AutoFilter"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Buttons(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.ChartObjects(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.CheckBoxes(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.CircleInvalid"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.ClearCircles"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.CodeName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.Comments"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Copy(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.CustomProperties"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.DefaultButton"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.DialogFrame"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.DisplayAutomaticPageBreaks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.DisplayPageBreaks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.DisplayRightToLeft"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.DrawingObjects(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Drawings(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.DropDowns(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.EditBoxes(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.EnableAutoFilter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.EnableCalculation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.EnableFormatConditionsCalculation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.EnableOutlining"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.EnablePivotTable"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.EnableSelection"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Evaluate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.Focus"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.GroupBoxes(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.GroupObjects(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Hide(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.HPageBreaks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.Hyperlinks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.Index"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Labels(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Lines(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.ListBoxes(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.MailEnvelope"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Move(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.Names"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.Next"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.OLEObjects(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.OnDoubleClick"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.OnSheetActivate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.OnSheetDeactivate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.OptionButtons(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Ovals(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.PageSetup"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Paste(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Pictures(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.Previous"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.PrintedCommentPages"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.PrintPreview(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.ProtectContents"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.ProtectDrawingObjects"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.Protection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.ProtectionMode"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.ProtectScenarios"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.QueryTables"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Rectangles(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.ResetAllPageBreaks"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.Scripts"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.ScrollArea"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.ScrollBars(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Select(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.Shapes"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Show"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.SmartTags"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.Sort"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Spinners(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.Tab"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.TextBoxes(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Unprotect(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheet.VPageBreaks"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IDialogSheets">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheets._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheets._Dummy7"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheets._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheets.Add(System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheets.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheets.Copy(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheets.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheets.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheets.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheets.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheets.HPageBreaks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheets.Item(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheets.Move(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheets.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheets.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheets.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheets.PrintPreview(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDialogSheets.Select(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheets.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheets.VPageBreaks"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IDialogSheetView">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheetView.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheetView.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheetView.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDialogSheetView.Sheet"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IDisplayFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayFormat.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayFormat.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayFormat.Borders"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayFormat.Characters(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayFormat.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayFormat.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayFormat.FormulaHidden"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayFormat.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayFormat.IndentLevel"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayFormat.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayFormat.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayFormat.MergeCells"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayFormat.NumberFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayFormat.NumberFormatLocal"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayFormat.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayFormat.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayFormat.ReadingOrder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayFormat.ShrinkToFit"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayFormat.Style"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayFormat.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayFormat.WrapText"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IDisplayUnitLabel">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IDisplayUnitLabel._Dummy21"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.Characters(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.Fill"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.Format"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.FormulaLocal"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.FormulaR1C1"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.FormulaR1C1Local"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.Position"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.ReadingOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.Select"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.Width"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IDocEvents">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IDocEvents.Activate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDocEvents.BeforeDoubleClick(Microsoft.Office.Interop.Excel.Range,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDocEvents.BeforeRightClick(Microsoft.Office.Interop.Excel.Range,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDocEvents.Calculate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDocEvents.Change(Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDocEvents.Deactivate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDocEvents.FollowHyperlink(Microsoft.Office.Interop.Excel.Hyperlink)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDocEvents.PivotTableAfterValueChange(Microsoft.Office.Interop.Excel.PivotTable,Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDocEvents.PivotTableBeforeAllocateChanges(Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDocEvents.PivotTableBeforeCommitChanges(Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDocEvents.PivotTableBeforeDiscardChanges(Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDocEvents.PivotTableChangeSync(Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDocEvents.PivotTableUpdate(Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDocEvents.SelectionChange(Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IDownBars">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IDownBars.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDownBars.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDownBars.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDownBars.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDownBars.Fill"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDownBars.Format"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDownBars.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDownBars.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDownBars.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDownBars.Select"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IDrawing">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.AddIndent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawing.AddVertex(System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawing.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawing.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawing.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawing.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawing.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawing.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawing.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.ReadingOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawing.Reshape(System.Int32,System.Boolean,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawing.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawing.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.Vertices(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawing.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IDrawingObjects">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects._Dummy28"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects._Dummy47"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects._Dummy54"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects._Dummy56"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Accelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.AddIndent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.AddItem(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.ArrowHeadLength"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.ArrowHeadStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.ArrowHeadWidth"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.CancelButton"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.Cut"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.DefaultButton"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.DismissButton"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Display3DShading"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.DisplayVerticalScrollBar"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.DropDownLines"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Font"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.HelpButton"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.InputType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.LargeChange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Left"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.LinkCombo(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.LinkedCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.List(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.ListFillRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.ListIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Max"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Min"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.MultiLine"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.MultiSelect"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.PhoneticAccelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.ReadingOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.RemoveAllItems"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.RemoveItem(System.Int32,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.Reshape(System.Int32,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.RoundedCorners"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.Selected(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.SmallChange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Top"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.Ungroup"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.VerticalAlignment"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.Vertices(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IDrawings">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawings._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawings._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawings._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawings._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawings._Dummy44"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawings._Dummy46"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawings.Add(System.Double,System.Double,System.Double,System.Double,System.Boolean)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawings.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawings.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawings.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawings.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawings.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawings.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawings.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.Formula"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawings.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawings.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawings.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.ReadingOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawings.Reshape(System.Int32,System.Boolean,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawings.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDrawings.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDrawings.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IDropDown">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDown._Dummy36"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDown.AddItem(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDown.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDown.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDown.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDown.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDown.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.Display3DShading"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.DropDownLines"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDown.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.LinkedObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.List(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.ListCount"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.ListFillRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.ListIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDown.RemoveAllItems"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDown.RemoveItem(System.Int32,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDown.Select(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.Selected(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDown.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDown.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IDropDowns">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDowns._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDowns._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDowns._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDowns._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDowns._Dummy31"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDowns._Dummy33"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDowns._Dummy36"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDowns.Add(System.Double,System.Double,System.Double,System.Double,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDowns.AddItem(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDowns.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDowns.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDowns.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDowns.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDowns.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.Display3DShading"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.DropDownLines"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDowns.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.Enabled"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDowns.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDowns.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.Height"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDowns.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.List(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.ListFillRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.ListIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDowns.RemoveAllItems"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDowns.RemoveItem(System.Int32,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDowns.Select(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.Selected(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropDowns.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropDowns.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IDropLines">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropLines.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropLines.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropLines.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropLines.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropLines.Format"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropLines.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDropLines.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDropLines.Select"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IDummy">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IDummy._ActiveSheetOrChart"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDummy.AddNonVisibleSignature(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDummy.AddSignatureLine(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDummy.ChDir"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDummy.DirectObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDummy.DoScript"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDummy.Load"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDummy.RefreshDocument"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDummy.RGB"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IDummy.ShowSignaturesPane"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDummy.ThemeColorScheme"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDummy.ThemeEffectScheme"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IDummy.ThemeFontScheme"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IEditBox">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBox.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBox.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBox.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBox.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBox.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBox.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.DisplayVerticalScrollBar"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBox.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.InputType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.LinkedObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.MultiLine"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.PasswordEdit"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBox.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBox.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBox.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IEditBoxes">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBoxes._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBoxes._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBoxes._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBoxes._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBoxes._Dummy34"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBoxes.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBoxes.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBoxes.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBoxes.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBoxes.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBoxes.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBoxes.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBoxes.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBoxes.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBoxes.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBoxes.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBoxes.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBoxes.DisplayVerticalScrollBar"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBoxes.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBoxes.Enabled"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBoxes.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBoxes.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBoxes.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBoxes.InputType"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBoxes.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBoxes.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBoxes.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBoxes.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBoxes.MultiLine"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBoxes.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBoxes.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBoxes.PasswordEdit"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBoxes.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBoxes.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBoxes.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IEditBoxes.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBoxes.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBoxes.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBoxes.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBoxes.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBoxes.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IEditBoxes.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IError">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IError.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IError.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IError.Ignore"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IError.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IError.Value"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IErrorBars">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrorBars.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrorBars.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IErrorBars.ClearFormats"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrorBars.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IErrorBars.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrorBars.EndStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrorBars.Format"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrorBars.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrorBars.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IErrorBars.Select"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IErrorCheckingOptions">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrorCheckingOptions.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrorCheckingOptions.BackgroundChecking"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrorCheckingOptions.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrorCheckingOptions.EmptyCellReferences"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrorCheckingOptions.EvaluateToError"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrorCheckingOptions.InconsistentFormula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrorCheckingOptions.InconsistentTableFormula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrorCheckingOptions.IndicatorColorIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrorCheckingOptions.ListDataValidation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrorCheckingOptions.NumberAsText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrorCheckingOptions.OmittedCells"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrorCheckingOptions.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrorCheckingOptions.TextDate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrorCheckingOptions.UnlockedFormulaCells"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IErrors">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrors._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrors.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrors.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrors.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IErrors.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IFileExportConverter">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IFileExportConverter.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFileExportConverter.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFileExportConverter.Description"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFileExportConverter.Extensions"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFileExportConverter.FileFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFileExportConverter.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IFileExportConverters">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IFileExportConverters._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFileExportConverters.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFileExportConverters.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFileExportConverters.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IFileExportConverters.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFileExportConverters.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFileExportConverters.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IFilter">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IFilter._Operator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFilter.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFilter.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFilter.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFilter.Criteria1"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFilter.Criteria2"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFilter.On"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFilter.Operator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFilter.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IFilters">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IFilters._Default(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFilters.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFilters.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFilters.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IFilters.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFilters.Item(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFilters.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IFloor">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IFloor.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFloor.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IFloor.ClearFormats"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFloor.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFloor.Fill"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFloor.Format"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFloor.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFloor.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFloor.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IFloor.Paste"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFloor.PictureType"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IFloor.Select"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFloor.Thickness"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IFont">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IFont.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFont.Background"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFont.Bold"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFont.Color"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFont.ColorIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFont.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFont.FontStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFont.Italic"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFont.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFont.OutlineFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFont.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFont.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFont.Size"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFont.Strikethrough"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFont.Subscript"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFont.Superscript"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFont.ThemeColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFont.ThemeFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFont.TintAndShade"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFont.Underline"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IFormatColor">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatColor.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatColor.Color"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatColor.ColorIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatColor.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatColor.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatColor.ThemeColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatColor.TintAndShade"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IFormatCondition">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatCondition.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatCondition.AppliesTo"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatCondition.Borders"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatCondition.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatCondition.DateOperator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IFormatCondition.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatCondition.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatCondition.Formula1"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatCondition.Formula2"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatCondition.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IFormatCondition.Modify(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IFormatCondition.ModifyAppliesToRange(Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IFormatCondition.ModifyEx(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatCondition.NumberFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatCondition.Operator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatCondition.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatCondition.Priority"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatCondition.PTCondition"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatCondition.ScopeType"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IFormatCondition.SetFirstPriority"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IFormatCondition.SetLastPriority"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatCondition.StopIfTrue"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatCondition.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatCondition.TextOperator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatCondition.Type"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IFormatConditions">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatConditions._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IFormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IFormatConditions.AddAboveAverage"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IFormatConditions.AddColorScale(System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IFormatConditions.AddDatabar"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IFormatConditions.AddIconSetCondition"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IFormatConditions.AddTop10"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IFormatConditions.AddUniqueValues"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatConditions.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatConditions.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatConditions.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IFormatConditions.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IFormatConditions.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IFormatConditions.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFormatConditions.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IFreeformBuilder">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IFreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFreeformBuilder.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IFreeformBuilder.ConvertToShape"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFreeformBuilder.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IFreeformBuilder.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IGraphic">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IGraphic.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGraphic.Brightness"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGraphic.ColorType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGraphic.Contrast"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGraphic.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGraphic.CropBottom"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGraphic.CropLeft"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGraphic.CropRight"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGraphic.CropTop"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGraphic.Filename"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGraphic.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGraphic.LockAspectRatio"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGraphic.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGraphic.Width"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IGridlines">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IGridlines.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGridlines.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGridlines.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGridlines.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGridlines.Format"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGridlines.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGridlines.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGridlines.Select"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IGroupBox">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.Accelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBox.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBox.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBox.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBox.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBox.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBox.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.Display3DShading"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBox.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.PhoneticAccelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBox.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBox.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBox.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IGroupBoxes">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBoxes._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBoxes._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBoxes._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBoxes._Dummy3"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBoxes.Accelerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBoxes.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBoxes.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBoxes.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBoxes.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBoxes.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBoxes.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBoxes.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBoxes.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBoxes.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBoxes.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBoxes.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBoxes.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBoxes.Display3DShading"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBoxes.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBoxes.Enabled"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBoxes.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBoxes.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBoxes.Height"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBoxes.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBoxes.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBoxes.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBoxes.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBoxes.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBoxes.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBoxes.PhoneticAccelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBoxes.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBoxes.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBoxes.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupBoxes.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBoxes.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBoxes.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBoxes.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBoxes.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBoxes.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupBoxes.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IGroupObject">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy27"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy28"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy30"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy36"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy37"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy38"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy41"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy42"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy43"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy44"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy45"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy47"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy48"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy50"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy52"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy53"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy54"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy55"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy56"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy57"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy58"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy59"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy60"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy61"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy62"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy63"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy65"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy66"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy67"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy68"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy70"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy72"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy73"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy75"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject._Dummy77"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.ArrowHeadLength"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.ArrowHeadStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.ArrowHeadWidth"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.ReadingOrder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.RoundedCorners"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.TopLeftCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObject.Ungroup"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObject.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IGroupObjects">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy27"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy28"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy30"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy36"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy37"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy38"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy41"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy42"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy43"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy44"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy45"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy47"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy48"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy50"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy52"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy53"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy54"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy55"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy56"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy57"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy58"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy59"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy60"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy61"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy62"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy63"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy65"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy66"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy67"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy68"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy70"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy72"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy73"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy75"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects._Dummy77"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.ArrowHeadLength"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.ArrowHeadStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.ArrowHeadWidth"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.Font"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.ReadingOrder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.RoundedCorners"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.Top"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupObjects.Ungroup"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupObjects.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IGroupShapes">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupShapes._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupShapes.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupShapes.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupShapes.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupShapes.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IGroupShapes.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupShapes.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IGroupShapes.Range(System.Object)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IHeaderFooter">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IHeaderFooter.Picture"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHeaderFooter.Text"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IHiLoLines">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IHiLoLines.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHiLoLines.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHiLoLines.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IHiLoLines.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHiLoLines.Format"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHiLoLines.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHiLoLines.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IHiLoLines.Select"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IHPageBreak">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IHPageBreak.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHPageBreak.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IHPageBreak.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IHPageBreak.DragOff(Microsoft.Office.Interop.Excel.XlDirection,System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHPageBreak.Extent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHPageBreak.Location"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHPageBreak.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHPageBreak.Type"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IHPageBreaks">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IHPageBreaks._Default(System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IHPageBreaks.Add(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHPageBreaks.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHPageBreaks.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHPageBreaks.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IHPageBreaks.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHPageBreaks.Item(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHPageBreaks.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IHyperlink">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IHyperlink.Address"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IHyperlink.AddToFavorites"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHyperlink.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IHyperlink.CreateNewDocument(System.String,System.Boolean,System.Boolean)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHyperlink.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IHyperlink.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHyperlink.EmailSubject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IHyperlink.Follow(System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHyperlink.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHyperlink.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHyperlink.Range"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHyperlink.ScreenTip"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHyperlink.Shape"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHyperlink.SubAddress"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHyperlink.TextToDisplay"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHyperlink.Type"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IHyperlinks">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IHyperlinks._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IHyperlinks.Add(System.Object,System.String,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHyperlinks.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHyperlinks.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHyperlinks.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IHyperlinks.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IHyperlinks.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHyperlinks.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IHyperlinks.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IIcon">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IIcon.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIcon.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIcon.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIcon.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IIconCriteria">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconCriteria._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconCriteria.Count"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IIconCriteria.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconCriteria.Item(System.Object)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IIconCriterion">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconCriterion.Icon"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconCriterion.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconCriterion.Operator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconCriterion.Type"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconCriterion.Value"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IIconSet">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSet._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSet.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSet.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSet.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IIconSet.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSet.ID"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSet.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSet.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IIconSetCondition">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSetCondition.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSetCondition.AppliesTo"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSetCondition.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IIconSetCondition.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSetCondition.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSetCondition.IconCriteria"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSetCondition.IconSet"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IIconSetCondition.ModifyAppliesToRange(Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSetCondition.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSetCondition.PercentileValues"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSetCondition.Priority"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSetCondition.PTCondition"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSetCondition.ReverseOrder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSetCondition.ScopeType"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IIconSetCondition.SetFirstPriority"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IIconSetCondition.SetLastPriority"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSetCondition.ShowIconOnly"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSetCondition.StopIfTrue"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSetCondition.Type"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IIconSets">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSets._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSets.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSets.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSets.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IIconSets.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSets.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IIconSets.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IInterior">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IInterior.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IInterior.Color"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IInterior.ColorIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IInterior.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IInterior.Gradient"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IInterior.InvertIfNegative"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IInterior.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IInterior.Pattern"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IInterior.PatternColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IInterior.PatternColorIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IInterior.PatternThemeColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IInterior.PatternTintAndShade"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IInterior.ThemeColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IInterior.TintAndShade"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ILabel">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabel._Dummy33"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabel.Accelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabel.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabel.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabel.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabel.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabel.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabel.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabel.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabel.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabel.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabel.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabel.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabel.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabel.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabel.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabel.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabel.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabel.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabel.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabel.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabel.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabel.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabel.PhoneticAccelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabel.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabel.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabel.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabel.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabel.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabel.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabel.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabel.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabel.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabel.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabel.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ILabels">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabels._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabels._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabels._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabels._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabels._Dummy33"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabels.Accelerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabels.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabels.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabels.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabels.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabels.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabels.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabels.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabels.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabels.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabels.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabels.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabels.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabels.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabels.Enabled"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabels.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabels.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabels.Height"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabels.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabels.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabels.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabels.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabels.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabels.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabels.PhoneticAccelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabels.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabels.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabels.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILabels.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabels.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabels.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabels.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabels.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabels.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILabels.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ILeaderLines">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ILeaderLines.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILeaderLines.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILeaderLines.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILeaderLines.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILeaderLines.Format"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILeaderLines.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILeaderLines.Select"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ILegend">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegend.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegend.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegend.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILegend.Clear"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegend.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILegend.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegend.Fill"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegend.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegend.Format"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegend.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegend.IncludeInLayout"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegend.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegend.Left"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILegend.LegendEntries(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegend.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegend.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegend.Position"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILegend.Select"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegend.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegend.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegend.Width"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ILegendEntries">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ILegendEntries._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendEntries.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendEntries.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendEntries.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILegendEntries.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILegendEntries.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendEntries.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ILegendEntry">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendEntry.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendEntry.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendEntry.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILegendEntry.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendEntry.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendEntry.Format"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendEntry.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendEntry.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendEntry.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendEntry.LegendKey"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendEntry.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILegendEntry.Select"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendEntry.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendEntry.Width"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ILegendKey">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendKey.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendKey.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILegendKey.ClearFormats"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendKey.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILegendKey.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendKey.Fill"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendKey.Format"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendKey.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendKey.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendKey.InvertIfNegative"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendKey.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendKey.MarkerBackgroundColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendKey.MarkerBackgroundColorIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendKey.MarkerForegroundColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendKey.MarkerForegroundColorIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendKey.MarkerSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendKey.MarkerStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendKey.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendKey.PictureType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendKey.PictureUnit"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendKey.PictureUnit2"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILegendKey.Select"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendKey.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendKey.Smooth"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendKey.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILegendKey.Width"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ILine">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ILine.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILine.ArrowHeadLength"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILine.ArrowHeadStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILine.ArrowHeadWidth"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILine.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILine.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILine.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILine.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILine.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILine.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILine.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILine.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILine.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILine.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILine.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILine.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILine.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILine.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILine.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILine.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILine.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILine.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILine.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILine.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILine.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILine.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILine.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILine.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILine.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILine.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILine.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ILinearGradient">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ILinearGradient.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILinearGradient.ColorStops"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILinearGradient.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILinearGradient.Degree"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILinearGradient.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ILines">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ILines._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILines._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILines._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILines._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILines.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILines.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILines.ArrowHeadLength"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILines.ArrowHeadStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILines.ArrowHeadWidth"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILines.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILines.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILines.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILines.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILines.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILines.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILines.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILines.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILines.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILines.Enabled"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILines.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILines.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILines.Height"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILines.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILines.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILines.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILines.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILines.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILines.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILines.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILines.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILines.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILines.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILines.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILines.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILines.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILines.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ILinkFormat">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ILinkFormat.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILinkFormat.AutoUpdate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILinkFormat.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILinkFormat.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ILinkFormat.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ILinkFormat.Update"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IListBox">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBox.AddItem(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBox.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBox.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBox.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBox.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBox.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.Display3DShading"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBox.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.LinkedObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.List(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.ListCount"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.ListFillRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.ListIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.MultiSelect"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBox.RemoveAllItems"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBox.RemoveItem(System.Int32,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBox.Select(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.Selected(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBox.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBox.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IListBoxes">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBoxes._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBoxes._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBoxes._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBoxes._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBoxes._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBoxes._Dummy31"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBoxes._Dummy33"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBoxes.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBoxes.AddItem(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBoxes.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBoxes.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBoxes.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBoxes.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBoxes.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBoxes.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBoxes.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBoxes.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBoxes.Display3DShading"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBoxes.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBoxes.Enabled"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBoxes.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBoxes.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBoxes.Height"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBoxes.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBoxes.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBoxes.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBoxes.List(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBoxes.ListFillRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBoxes.ListIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBoxes.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBoxes.MultiSelect"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBoxes.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBoxes.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBoxes.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBoxes.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBoxes.RemoveAllItems"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBoxes.RemoveItem(System.Int32,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBoxes.Select(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBoxes.Selected(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListBoxes.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBoxes.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBoxes.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBoxes.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBoxes.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBoxes.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListBoxes.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IListColumn">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IListColumn._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListColumn.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListColumn.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListColumn.DataBodyRange"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListColumn.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListColumn.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListColumn.ListDataFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListColumn.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListColumn.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListColumn.Range"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListColumn.SharePointFormula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListColumn.Total"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListColumn.TotalsCalculation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListColumn.XPath"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IListColumns">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IListColumns._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListColumns.Add(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListColumns.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListColumns.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListColumns.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListColumns.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListColumns.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListColumns.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IListDataFormat">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IListDataFormat._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListDataFormat.AllowFillIn"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListDataFormat.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListDataFormat.Choices"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListDataFormat.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListDataFormat.DecimalPlaces"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListDataFormat.DefaultValue"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListDataFormat.IsPercent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListDataFormat.lcid"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListDataFormat.MaxCharacters"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListDataFormat.MaxNumber"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListDataFormat.MinNumber"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListDataFormat.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListDataFormat.ReadOnly"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListDataFormat.Required"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListDataFormat.Type"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IListObject">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.Active"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.AlternativeText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.AutoFilter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.Comment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.DataBodyRange"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListObject.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.DisplayName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.DisplayRightToLeft"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListObject.ExportToVisio"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.HeaderRowRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.InsertRowRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.ListColumns"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.ListRows"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListObject.Publish(System.Object,System.Boolean)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.QueryTable"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.Range"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListObject.Refresh"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListObject.Resize(Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.SharePointURL"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.ShowAutoFilter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.ShowHeaders"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.ShowTableStyleColumnStripes"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.ShowTableStyleFirstColumn"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.ShowTableStyleLastColumn"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.ShowTableStyleRowStripes"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.ShowTotals"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.Sort"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.SourceType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.Summary"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.TableStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.TotalsRowRange"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListObject.Unlink"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListObject.Unlist"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListObject.UpdateChanges(Microsoft.Office.Interop.Excel.XlListConflict)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObject.XmlMap"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IListObjects">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObjects._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListObjects.Add(Microsoft.Office.Interop.Excel.XlListObjectSourceType,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListObjects.AddEx(Microsoft.Office.Interop.Excel.XlListObjectSourceType,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObjects.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObjects.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObjects.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListObjects.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObjects.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListObjects.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IListRow">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IListRow.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListRow.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListRow.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListRow.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListRow.InvalidData"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListRow.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListRow.Range"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IListRows">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IListRows._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListRows.Add(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListRows.AddEx(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListRows.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListRows.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListRows.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IListRows.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListRows.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IListRows.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IMailer">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IMailer.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMailer.BCCRecipients"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMailer.CCRecipients"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMailer.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMailer.Enclosures"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMailer.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMailer.Received"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMailer.SendDateTime"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMailer.Sender"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMailer.Subject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMailer.ToRecipients"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMailer.WhichAddress"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IMenu">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenu.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenu.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenu.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IMenu.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenu.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenu.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenu.MenuItems"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenu.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IMenuBar">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IMenuBar.Activate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuBar.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuBar.BuiltIn"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuBar.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuBar.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IMenuBar.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuBar.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuBar.Menus"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuBar.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IMenuBar.Reset"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IMenuBars">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuBars._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IMenuBars.Add(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuBars.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuBars.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuBars.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IMenuBars.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuBars.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuBars.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IMenuItem">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuItem.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuItem.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuItem.Checked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuItem.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IMenuItem.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuItem.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuItem.HelpContextID"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuItem.HelpFile"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuItem.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuItem.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuItem.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuItem.StatusBar"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IMenuItems">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuItems._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IMenuItems.Add(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IMenuItems.AddMenu(System.String,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuItems.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuItems.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuItems.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IMenuItems.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuItems.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenuItems.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IMenus">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenus._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IMenus.Add(System.String,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenus.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenus.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenus.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IMenus.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenus.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMenus.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IModule">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IModule._CodeName"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModule._Dummy18"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModule._Dummy21"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModule._Dummy23"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModule._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModule._PrintOut_2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModule._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModule._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModule.Activate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModule.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModule.CodeName"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModule.Copy(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModule.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModule.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModule.Index"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModule.InsertFile(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModule.Move(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModule.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModule.Next"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModule.OnDoubleClick"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModule.OnSheetActivate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModule.OnSheetDeactivate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModule.PageSetup"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModule.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModule.Previous"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModule.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModule.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModule.ProtectContents"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModule.ProtectionMode"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModule.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModule.Select(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModule.Shapes"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModule.Unprotect(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModule.Visible"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IModules">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IModules._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModules._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModules._Dummy7"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModules._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModules.Add(System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModules.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModules.Copy(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModules.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModules.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModules.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModules.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModules.HPageBreaks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModules.Item(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModules.Move(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModules.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModules.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModules.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IModules.Select(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModules.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModules.VPageBreaks"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IModuleView">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IModuleView.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModuleView.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModuleView.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IModuleView.Sheet"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IMultiThreadedCalculation">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IMultiThreadedCalculation.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMultiThreadedCalculation.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMultiThreadedCalculation.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMultiThreadedCalculation.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMultiThreadedCalculation.ThreadCount"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IMultiThreadedCalculation.ThreadMode"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IName">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IName._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IName.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IName.Category"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IName.CategoryLocal"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IName.Comment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IName.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IName.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IName.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IName.MacroType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IName.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IName.NameLocal"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IName.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IName.RefersTo"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IName.RefersToLocal"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IName.RefersToR1C1"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IName.RefersToR1C1Local"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IName.RefersToRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IName.ShortcutKey"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IName.ValidWorkbookParameter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IName.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IName.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IName.WorkbookParameter"></member>
    <member name="T:Microsoft.Office.Interop.Excel.INames">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.INames._Default(System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.INames.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.INames.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.INames.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.INames.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.INames.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.INames.Item(System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.INames.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.INegativeBarFormat">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.INegativeBarFormat.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.INegativeBarFormat.BorderColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.INegativeBarFormat.BorderColorType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.INegativeBarFormat.Color"></member>
    <member name="P:Microsoft.Office.Interop.Excel.INegativeBarFormat.ColorType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.INegativeBarFormat.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.INegativeBarFormat.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.Interior">
      <summary>Represents the interior of an object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Interior.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Interior.Color">
      <summary>Returns or sets the primary cell shading color or drawing object fill color.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Interior.ColorIndex">
      <summary>Returns or sets the color of the interior.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Interior.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Interior.Gradient">
      <summary>Gets or sets the Gradient property of an Interior object of a selection. </summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Interior.InvertIfNegative">
      <summary>True if Microsoft Excel inverts the pattern in the item when it corresponds to a negative number.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Interior.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Interior.Pattern">
      <summary>Returns or sets the interior pattern.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Interior.PatternColor">
      <summary>Returns or sets the color of the interior pattern as an RGB value.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Interior.PatternColorIndex">
      <summary>Returns or sets the color of the interior pattern as an index into the current color palette, or as one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> constants: xlColorIndexAutomatic or xlColorIndexNone.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Interior.PatternThemeColor">
      <summary>Gets or sets a theme color pattern for an Interior object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Interior.PatternTintAndShade">
      <summary>Gets or sets a tint and shade pattern for an Interior object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Interior.ThemeColor">
      <summary>Gets or sets the theme color in the applied color scheme that is associated with the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Interior.TintAndShade">
      <summary>Gets or sets a value that lightens or darkens a color.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.IODBCConnection">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCConnection.AlwaysUseConnectionFile"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCConnection.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCConnection.BackgroundQuery"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IODBCConnection.CancelRefresh"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCConnection.CommandText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCConnection.CommandType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCConnection.Connection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCConnection.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCConnection.EnableRefresh"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCConnection.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IODBCConnection.Refresh"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCConnection.RefreshDate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCConnection.Refreshing"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCConnection.RefreshOnFileOpen"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCConnection.RefreshPeriod"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCConnection.RobustConnect"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IODBCConnection.SaveAsODC(System.String,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCConnection.SavePassword"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCConnection.ServerCredentialsMethod"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCConnection.ServerSSOApplicationID"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCConnection.SourceConnectionFile"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCConnection.SourceData"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCConnection.SourceDataFile"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IODBCError">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCError.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCError.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCError.ErrorString"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCError.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCError.SqlState"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IODBCErrors">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCErrors._Default(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCErrors.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCErrors.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCErrors.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IODBCErrors.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IODBCErrors.Item(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IODBCErrors.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IOLEDBConnection">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.ADOConnection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.AlwaysUseConnectionFile"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.BackgroundQuery"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.CalculatedMembers"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEDBConnection.CancelRefresh"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.CommandText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.CommandType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.Connection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.EnableRefresh"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.IsConnected"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.LocalConnection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.LocaleID"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.MaintainConnection"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEDBConnection.MakeConnection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.MaxDrillthroughRecords"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.OLAP"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEDBConnection.Reconnect"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEDBConnection.Refresh"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.RefreshDate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.Refreshing"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.RefreshOnFileOpen"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.RefreshPeriod"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.RetrieveInOfficeUILang"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.RobustConnect"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEDBConnection.SaveAsODC(System.String,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.SavePassword"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.ServerCredentialsMethod"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.ServerFillColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.ServerFontStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.ServerNumberFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.ServerSSOApplicationID"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.ServerTextColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.SourceConnectionFile"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.SourceDataFile"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBConnection.UseLocalConnection"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IOLEDBError">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBError.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBError.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBError.ErrorString"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBError.Native"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBError.Number"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBError.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBError.SqlState"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBError.Stage"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IOLEDBErrors">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBErrors._Default(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBErrors.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBErrors.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBErrors.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEDBErrors.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEDBErrors.Item(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEDBErrors.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IOLEFormat">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEFormat.Activate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEFormat.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEFormat.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEFormat.Object"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEFormat.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEFormat.progID"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEFormat.Verb(System.Object)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IOLEObjectEvents">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjectEvents.GotFocus"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjectEvents.LostFocus"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IOLEObjects">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects._Dummy30"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects._Dummy32"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects._Dummy33"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects._Dummy34"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects._Dummy36"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects._Dummy37"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects._Dummy38"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects._Dummy39"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects._Dummy40"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects._Dummy41"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEObjects.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEObjects.AutoLoad"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEObjects.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEObjects.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEObjects.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEObjects.Enabled"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEObjects.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEObjects.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEObjects.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEObjects.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEObjects.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEObjects.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEObjects.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEObjects.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOLEObjects.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEObjects.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEObjects.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEObjects.SourceName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEObjects.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEObjects.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEObjects.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOLEObjects.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IOptionButton">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.Accelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButton.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButton.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButton.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButton.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButton.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButton.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.Display3DShading"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButton.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.GroupBox"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.PhoneticAccelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButton.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButton.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButton.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IOptionButtons">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButtons._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButtons._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButtons._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButtons._Dummy3"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.Accelerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButtons.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButtons.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButtons.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButtons.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButtons.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButtons.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButtons.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.Display3DShading"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButtons.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.Enabled"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButtons.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButtons.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.GroupBox"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButtons.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.PhoneticAccelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButtons.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOptionButtons.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IOutline">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IOutline.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOutline.AutomaticStyles"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOutline.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOutline.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOutline.ShowLevels(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOutline.SummaryColumn"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOutline.SummaryRow"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IOval">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOval.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOval.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOval.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOval.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOval.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOval.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOval.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.ReadingOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOval.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOval.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOval.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IOvals">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IOvals._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOvals._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOvals._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOvals._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOvals.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOvals.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOvals.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOvals.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOvals.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOvals.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOvals.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOvals.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.Formula"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOvals.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOvals.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOvals.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.ReadingOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOvals.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IOvals.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IOvals.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPage">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IPage.CenterFooter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPage.CenterHeader"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPage.LeftFooter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPage.LeftHeader"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPage.RightFooter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPage.RightHeader"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPages">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IPages._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPages.Count"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPages.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPages.Item(System.Object)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPageSetup">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.AlignMarginsHeaderFooter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.BlackAndWhite"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.BottomMargin"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.CenterFooter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.CenterFooterPicture"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.CenterHeader"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.CenterHeaderPicture"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.CenterHorizontally"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.CenterVertically"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.ChartSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.DifferentFirstPageHeaderFooter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.Draft"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.EvenPage"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.FirstPage"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.FirstPageNumber"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.FitToPagesTall"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.FitToPagesWide"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.FooterMargin"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.HeaderMargin"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.LeftFooter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.LeftFooterPicture"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.LeftHeader"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.LeftHeaderPicture"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.LeftMargin"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.OddAndEvenPagesHeaderFooter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.Order"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.Pages"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.PaperSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.PrintArea"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.PrintComments"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.PrintErrors"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.PrintGridlines"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.PrintHeadings"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.PrintNotes"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.PrintQuality(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.PrintTitleColumns"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.PrintTitleRows"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.RightFooter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.RightFooterPicture"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.RightHeader"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.RightHeaderPicture"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.RightMargin"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.ScaleWithDocHeaderFooter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.TopMargin"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPageSetup.Zoom"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPane">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IPane.Activate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPane.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPane.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPane.Index"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPane.LargeScroll(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPane.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPane.PointsToScreenPixelsX(System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPane.PointsToScreenPixelsY(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPane.ScrollColumn"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPane.ScrollIntoView(System.Int32,System.Int32,System.Int32,System.Int32,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPane.ScrollRow"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPane.SmallScroll(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPane.VisibleRange"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPanes">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IPanes._Default(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPanes.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPanes.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPanes.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPanes.Item(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPanes.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IParameter">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IParameter.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IParameter.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IParameter.DataType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IParameter.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IParameter.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IParameter.PromptString"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IParameter.RefreshOnChange"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IParameter.SetParam(Microsoft.Office.Interop.Excel.XlParameterType,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IParameter.SourceRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IParameter.Type"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IParameter.Value"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IParameters">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IParameters._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IParameters.Add(System.String,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IParameters.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IParameters.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IParameters.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IParameters.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IParameters.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IParameters.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IParameters.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPhonetic">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IPhonetic.Alignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPhonetic.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPhonetic.CharacterType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPhonetic.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPhonetic.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPhonetic.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPhonetic.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPhonetic.Visible"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPhonetics">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IPhonetics._Default(System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPhonetics.Add(System.Int32,System.Int32,System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPhonetics.Alignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPhonetics.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPhonetics.CharacterType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPhonetics.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPhonetics.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPhonetics.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPhonetics.Font"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPhonetics.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPhonetics.Item(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPhonetics.Length"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPhonetics.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPhonetics.Start"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPhonetics.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPhonetics.Visible"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPicture">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IPicture.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPicture.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPicture.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPicture.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPicture.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPicture.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPicture.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPicture.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPicture.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPicture.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPicture.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPicture.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPicture.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPicture.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPicture.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPicture.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPicture.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPicture.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPicture.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPicture.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPicture.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPicture.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPicture.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPicture.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPicture.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPicture.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPicture.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPicture.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPicture.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPicture.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPicture.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPictures">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IPictures._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPictures._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPictures._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPictures._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPictures.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPictures.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPictures.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPictures.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPictures.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPictures.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPictures.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPictures.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPictures.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPictures.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPictures.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPictures.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPictures.Formula"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPictures.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPictures.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPictures.Height"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPictures.Insert(System.String,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPictures.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPictures.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPictures.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPictures.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPictures.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPictures.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPictures.Paste(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPictures.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPictures.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPictures.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPictures.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPictures.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPictures.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPictures.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPictures.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPictures.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPictures.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPivotAxis">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotAxis.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotAxis.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotAxis.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotAxis.PivotLines"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPivotCache">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.ADOConnection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.BackgroundQuery"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.CommandText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.CommandType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.Connection"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotCache.CreatePivotTable(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.EnableRefresh"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.IsConnected"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.LocalConnection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.MaintainConnection"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotCache.MakeConnection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.MemoryUsed"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.MissingItemsLimit"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.OLAP"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.OptimizeCache"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.QueryType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.RecordCount"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.Recordset"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotCache.Refresh"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.RefreshDate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.RefreshName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.RefreshOnFileOpen"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.RefreshPeriod"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotCache.ResetTimer"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.RobustConnect"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotCache.SaveAsODC(System.String,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.SavePassword"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.SourceConnectionFile"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.SourceData"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.SourceDataFile"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.SourceType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.Sql"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.UpgradeOnRefresh"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.UseLocalConnection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.Version"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCache.WorkbookConnection"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPivotCaches">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCaches._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotCaches.Add(Microsoft.Office.Interop.Excel.XlPivotTableSourceType,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCaches.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCaches.Count"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotCaches.Create(Microsoft.Office.Interop.Excel.XlPivotTableSourceType,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCaches.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotCaches.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotCaches.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCaches.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPivotCell">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotCell.AllocateChange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCell.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCell.CellChanged"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCell.ColumnItems"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCell.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCell.CustomSubtotalFunction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCell.DataField"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCell.DataSourceValue"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotCell.DiscardChange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCell.Dummy18"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCell.MDX"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCell.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCell.PivotCellType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCell.PivotColumnLine"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCell.PivotField"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCell.PivotItem"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCell.PivotRowLine"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCell.PivotTable"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCell.Range"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotCell.RowItems"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPivotField">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotField.AddPageItem(System.String,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.AllItemsVisible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotField.AutoShow(System.Int32,System.Int32,System.Int32,System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.AutoShowCount"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.AutoShowField"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.AutoShowRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.AutoShowType"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotField.AutoSort(System.Int32,System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.AutoSortCustomSubtotal"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotField.AutoSortEx(System.Int32,System.String,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.AutoSortField"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.AutoSortOrder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.AutoSortPivotLine"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.BaseField"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.BaseItem"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotField.CalculatedItems"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.Calculation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.ChildField"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.ChildItems(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotField.ClearAllFilters"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotField.ClearLabelFilters"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotField.ClearManualFilter"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotField.ClearValueFilters"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.CubeField"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.CurrentPage"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.CurrentPageList"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.CurrentPageName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.DatabaseSort"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.DataRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.DataType"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotField.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.DisplayAsCaption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.DisplayAsTooltip"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.DisplayInReport"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.DragToColumn"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.DragToData"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.DragToHide"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.DragToPage"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.DragToRow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.DrilledDown"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotField.DrillTo(System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.EnableItemSelection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.EnableMultiplePageItems"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.Function"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.GroupLevel"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.Hidden"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.HiddenItems(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.HiddenItemsList"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.IncludeNewItemsInFilter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.IsCalculated"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.IsMemberProperty"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.LabelRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.LayoutBlankLine"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.LayoutCompactRow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.LayoutForm"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.LayoutPageBreak"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.LayoutSubtotalLocation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.MemberPropertyCaption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.MemoryUsed"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.NumberFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.ParentField"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.ParentItems(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.PivotFilters"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotField.PivotItems(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.Position"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.PropertyOrder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.PropertyParentField"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.RepeatLabels"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.ServerBased"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.ShowAllItems"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.ShowDetail"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.ShowingInAxis"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.SourceCaption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.SourceName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.StandardFormula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.SubtotalName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.Subtotals(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.TotalLevels"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.UseMemberPropertyAsCaption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.VisibleItems(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotField.VisibleItemsList"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPivotFields">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFields.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFields.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFields.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotFields.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotFields.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFields.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPivotFilter">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFilter.Active"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFilter.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFilter.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFilter.DataCubeField"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFilter.DataField"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotFilter.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFilter.Description"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFilter.FilterType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFilter.IsMemberPropertyFilter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFilter.MemberPropertyField"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFilter.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFilter.Order"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFilter.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFilter.PivotField"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFilter.Value1"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFilter.Value2"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPivotFilters">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFilters._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotFilters.Add(Microsoft.Office.Interop.Excel.XlPivotFilterType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFilters.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFilters.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFilters.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotFilters.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFilters.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFilters.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPivotFormula">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFormula._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFormula.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFormula.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotFormula.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFormula.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFormula.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFormula.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFormula.StandardFormula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFormula.Value"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPivotFormulas">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotFormulas._Add(System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFormulas._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotFormulas.Add(System.String,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFormulas.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFormulas.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFormulas.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotFormulas.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotFormulas.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotFormulas.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPivotItem">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItem._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItem.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItem.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItem.ChildItems(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItem.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItem.DataRange"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotItem.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItem.DrilledDown"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotItem.DrillTo(System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItem.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItem.IsCalculated"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItem.LabelRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItem.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItem.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItem.ParentItem"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItem.ParentShowDetail"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItem.Position"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItem.RecordCount"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItem.ShowDetail"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItem.SourceName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItem.SourceNameStandard"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItem.StandardFormula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItem.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItem.Visible"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPivotItemList">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItemList._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItemList.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItemList.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItemList.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotItemList.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotItemList.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItemList.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPivotItems">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotItems.Add(System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItems.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItems.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItems.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotItems.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotItems.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotItems.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPivotLayout">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotLayout.AddFields(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLayout.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLayout.ColumnFields(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLayout.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLayout.CubeFields"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLayout.DataFields(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLayout.HiddenFields(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLayout.InnerDetail"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLayout.PageFields(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLayout.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLayout.PivotCache"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLayout.PivotFields(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLayout.PivotTable"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLayout.RowFields(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLayout.VisibleFields(System.Object)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPivotLine">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLine.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLine.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLine.LineType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLine.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLine.PivotLineCells"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLine.Position"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPivotLineCells">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLineCells._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLineCells.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLineCells.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLineCells.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotLineCells.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLineCells.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLineCells.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPivotLines">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLines._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLines.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLines.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLines.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotLines.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLines.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotLines.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPivotTable">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable._PivotSelect(System.String,Microsoft.Office.Interop.Excel.XlPTSelectionMode)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.ActiveFilters"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.AddDataField(System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.AddFields(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.AllocateChanges"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.Allocation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.AllocationMethod"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.AllocationValue"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.AllocationWeightExpression"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.AllowMultipleFilters"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.AlternativeText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.CacheIndex"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.CalculatedFields"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.CalculatedMembers"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.CalculatedMembersInFilters"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.ChangeConnection(Microsoft.Office.Interop.Excel.WorkbookConnection)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.ChangeList"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.ChangePivotCache(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.ClearAllFilters"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.ClearTable"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.ColumnFields(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.ColumnGrand"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.ColumnRange"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.CommitChanges"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.CompactLayoutColumnHeader"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.CompactLayoutRowHeader"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.CompactRowIndent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.ConvertToFormulas(System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.CreateCubeFile(System.String,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.CubeFields"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.DataBodyRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.DataFields(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.DataLabelRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.DataPivotField"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.DiscardChanges"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.DisplayContextTooltips"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.DisplayEmptyColumn"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.DisplayEmptyRow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.DisplayErrorString"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.DisplayFieldCaptions"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.DisplayImmediateItems"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.DisplayMemberPropertyTooltips"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.DisplayNullString"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.Dummy15(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.EnableDataValueEditing"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.EnableDrilldown"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.EnableFieldDialog"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.EnableFieldList"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.EnableWizard"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.EnableWriteback"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.ErrorString"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.FieldListSortAscending"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.Format(Microsoft.Office.Interop.Excel.XlPivotFormatType)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.GetData(System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.GetPivotData(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.GrandTotalName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.HasAutoFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.HiddenFields(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.InGridDropZones"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.InnerDetail"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.LayoutRowDefault"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.ListFormulas"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.Location"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.ManualUpdate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.MDX"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.MergeLabels"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.NullString"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.PageFieldOrder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.PageFields(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.PageFieldStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.PageFieldWrapCount"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.PageRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.PageRangeCells"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.PivotCache"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.PivotColumnAxis"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.PivotFields(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.PivotFormulas"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.PivotRowAxis"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.PivotSelect(System.String,Microsoft.Office.Interop.Excel.XlPTSelectionMode,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.PivotSelection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.PivotSelectionStandard"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.PreserveFormatting"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.PrintDrillIndicators"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.PrintTitles"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.RefreshDataSourceValues"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.RefreshDate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.RefreshName"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.RefreshTable"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.RepeatAllLabels(Microsoft.Office.Interop.Excel.XlPivotFieldRepeatLabels)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.RepeatItemsOnEachPrintedPage"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.RowAxisLayout(Microsoft.Office.Interop.Excel.XlLayoutRowType)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.RowFields(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.RowGrand"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.RowRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.SaveData"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.SelectionMode"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.ShowCellBackgroundFromOLAP"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.ShowDrillIndicators"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.ShowPageMultipleItemLabel"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.ShowPages(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.ShowTableStyleColumnHeaders"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.ShowTableStyleColumnStripes"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.ShowTableStyleLastColumn"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.ShowTableStyleRowHeaders"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.ShowTableStyleRowStripes"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.ShowValuesRow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.Slicers"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.SmallGrid"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.SortUsingCustomLists"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.SourceData"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.SubtotalHiddenPageItems"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.SubtotalLocation(Microsoft.Office.Interop.Excel.XlSubtototalLocationType)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.Summary"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.TableRange1"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.TableRange2"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.TableStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.TableStyle2"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.Tag"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.TotalsAnnotation"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTable.Update"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.VacatedStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.Version"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.ViewCalculatedMembers"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.VisibleFields(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.VisualTotals"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTable.VisualTotalsForSets"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPivotTableChangeList"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTableChangeList._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTableChangeList.Add(System.String,System.Double,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTableChangeList.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTableChangeList.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTableChangeList.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTableChangeList.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTableChangeList.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTableChangeList.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPivotTables">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTables.Add(Microsoft.Office.Interop.Excel.PivotCache,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTables.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTables.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTables.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTables.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPivotTables.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPivotTables.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPlotArea">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IPlotArea._InsideHeight"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPlotArea._InsideLeft"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPlotArea._InsideTop"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPlotArea._InsideWidth"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPlotArea.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPlotArea.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPlotArea.ClearFormats"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPlotArea.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPlotArea.Fill"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPlotArea.Format"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPlotArea.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPlotArea.InsideHeight"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPlotArea.InsideLeft"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPlotArea.InsideTop"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPlotArea.InsideWidth"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPlotArea.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPlotArea.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPlotArea.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPlotArea.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPlotArea.Position"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPlotArea.Select"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPlotArea.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPlotArea.Width"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPoint">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IPoint._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPoint.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.ApplyPictToEnd"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.ApplyPictToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.ApplyPictToSides"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPoint.ClearFormats"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPoint.Copy"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.DataLabel"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPoint.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.Explosion"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.Fill"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.Format"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.Has3DEffect"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.HasDataLabel"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.InvertIfNegative"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.MarkerBackgroundColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.MarkerBackgroundColorIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.MarkerForegroundColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.MarkerForegroundColorIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.MarkerSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.MarkerStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPoint.Paste"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.PictureType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.PictureUnit"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.PictureUnit2"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPoint.PieSliceLocation(Microsoft.Office.Interop.Excel.XlPieSliceLocation,Microsoft.Office.Interop.Excel.XlPieSliceIndex)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.SecondaryPlot"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPoint.Select"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoint.Width"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPoints">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IPoints._Default(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoints.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoints.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoints.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPoints.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPoints.Item(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPoints.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IProtectedViewWindow">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtectedViewWindow._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IProtectedViewWindow.Activate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtectedViewWindow.Caption"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IProtectedViewWindow.Close"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IProtectedViewWindow.Edit(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtectedViewWindow.EnableResize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtectedViewWindow.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtectedViewWindow.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtectedViewWindow.SourceName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtectedViewWindow.SourcePath"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtectedViewWindow.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtectedViewWindow.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtectedViewWindow.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtectedViewWindow.WindowState"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtectedViewWindow.Workbook"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IProtectedViewWindows">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtectedViewWindows._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtectedViewWindows.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtectedViewWindows.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtectedViewWindows.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IProtectedViewWindows.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtectedViewWindows.Item(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IProtectedViewWindows.Open(System.String,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtectedViewWindows.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IProtection">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtection.AllowDeletingColumns"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtection.AllowDeletingRows"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtection.AllowEditRanges"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtection.AllowFiltering"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtection.AllowFormattingCells"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtection.AllowFormattingColumns"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtection.AllowFormattingRows"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtection.AllowInsertingColumns"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtection.AllowInsertingHyperlinks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtection.AllowInsertingRows"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtection.AllowSorting"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IProtection.AllowUsingPivotTables"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IPublishObjects">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IPublishObjects._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPublishObjects.Add(Microsoft.Office.Interop.Excel.XlSourceType,System.String,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPublishObjects.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPublishObjects.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPublishObjects.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPublishObjects.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPublishObjects.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPublishObjects.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IPublishObjects.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IPublishObjects.Publish"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IQueryTables">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IQueryTables._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IQueryTables.Add(System.Object,Microsoft.Office.Interop.Excel.Range,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IQueryTables.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IQueryTables.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IQueryTables.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IQueryTables.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IQueryTables.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IQueryTables.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IRange">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange._Default(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange._PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.Activate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.AddComment(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.AddressLocal(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.AdvancedFilter(Microsoft.Office.Interop.Excel.XlFilterAction,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.AllocateChanges"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.AllowEdit"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.ApplyNames(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlApplyNamesOrder,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.ApplyOutlineStyles"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Areas"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.AutoComplete(System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.AutoFill(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlAutoFillType)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.AutoFit"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.AutoFormat(Microsoft.Office.Interop.Excel.XlRangeAutoFormat,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.AutoOutline"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.BorderAround(System.Object,Microsoft.Office.Interop.Excel.XlBorderWeight,Microsoft.Office.Interop.Excel.XlColorIndex,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.BorderAround2(System.Object,Microsoft.Office.Interop.Excel.XlBorderWeight,Microsoft.Office.Interop.Excel.XlColorIndex,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Borders"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.Calculate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.CalculateRowMajorOrder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Cells"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.Clear"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.ClearComments"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.ClearContents"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.ClearFormats"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.ClearHyperlinks"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.ClearNotes"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.ClearOutline"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Column"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.ColumnDifferences(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Columns"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.ColumnWidth"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Comment"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.Consolidate(System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.Copy(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.CopyFromRecordset(System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.CountLarge"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.CreateNames(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.CurrentArray"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.CurrentRegion"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.Cut(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.DataSeries(System.Object,Microsoft.Office.Interop.Excel.XlDataSeriesType,Microsoft.Office.Interop.Excel.XlDataSeriesDate,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.Delete(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Dependents"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.DialogBox"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.DirectDependents"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.DirectPrecedents"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.Dirty"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.DiscardChanges"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.DisplayFormat"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.EditionOptions(Microsoft.Office.Interop.Excel.XlEditionType,Microsoft.Office.Interop.Excel.XlEditionOptionsOption,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.End(Microsoft.Office.Interop.Excel.XlDirection)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.EntireColumn"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.EntireRow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Errors"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.FillDown"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.FillLeft"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.FillRight"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.FillUp"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.FindNext(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.FindPrevious(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.FormatConditions"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.FormulaArray"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.FormulaHidden"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.FormulaLabel"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.FormulaLocal"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.FormulaR1C1"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.FormulaR1C1Local"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.FunctionWizard"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.GoalSeek(System.Object,Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.Group(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.HasArray"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.HasFormula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Hidden"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Hyperlinks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.ID"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.IndentLevel"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.Insert(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.InsertIndent(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Item(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.Justify"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.ListHeaderRows"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.ListNames"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.ListObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.LocationInTable"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.MDX"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.Merge(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.MergeArea"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.MergeCells"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Name"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.NavigateArrow(System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Next"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.NoteText(System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.NumberFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.NumberFormatLocal"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Offset(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.OutlineLevel"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.PageBreak"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.Parse(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Phonetic"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Phonetics"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.PivotCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.PivotField"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.PivotItem"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.PivotTable"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Precedents"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.PrefixCharacter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Previous"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.PrintPreview(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.QueryTable"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Range(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.ReadingOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.RemoveDuplicates(System.Object,Microsoft.Office.Interop.Excel.XlYesNoGuess)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.RemoveSubtotal"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Resize(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Row"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.RowDifferences(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.RowHeight"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Rows"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.Select"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.ServerActions"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.SetPhonetic"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.Show"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.ShowDependents(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.ShowDetail"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.ShowErrors"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.ShowPrecedents(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.ShrinkToFit"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.SmartTags"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.Sort(System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrientation,Microsoft.Office.Interop.Excel.XlSortMethod,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.SortSpecial(Microsoft.Office.Interop.Excel.XlSortMethod,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrientation,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.SoundNote"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.SparklineGroups"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.Speak(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.SpecialCells(Microsoft.Office.Interop.Excel.XlCellType,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Style"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.SubscribeTo(System.String,Microsoft.Office.Interop.Excel.XlSubscribeToFormat)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.Subtotal(System.Int32,Microsoft.Office.Interop.Excel.XlConsolidationFunction,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSummaryRow)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Summary"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.Table(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Text"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.TextToColumns(System.Object,Microsoft.Office.Interop.Excel.XlTextParsingType,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Top"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.Ungroup"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRange.UnMerge"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.UseStandardHeight"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.UseStandardWidth"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Validation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Value(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Value2"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.Worksheet"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.WrapText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRange.XPath"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IRanges">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IRanges._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRanges.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRanges.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRanges.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRanges.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRanges.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRanges.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IRecentFile">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IRecentFile.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRecentFile.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRecentFile.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRecentFile.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRecentFile.Name"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRecentFile.Open"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRecentFile.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRecentFile.Path"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IRecentFiles">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IRecentFiles._Default(System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRecentFiles.Add(System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRecentFiles.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRecentFiles.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRecentFiles.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRecentFiles.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRecentFiles.Item(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRecentFiles.Maximum"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRecentFiles.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IRectangle">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangle.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangle.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangle.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangle.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangle.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangle.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangle.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.ReadingOrder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.RoundedCorners"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangle.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangle.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangle.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IRectangles">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangles._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangles._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangles._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangles._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangles.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangles.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangles.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangles.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangles.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangles.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangles.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangles.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.Formula"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangles.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangles.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangles.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.ReadingOrder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.RoundedCorners"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangles.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRectangles.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangles.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IRectangularGradient">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangularGradient.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangularGradient.ColorStops"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangularGradient.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangularGradient.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangularGradient.RectangleBottom"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangularGradient.RectangleLeft"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangularGradient.RectangleRight"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRectangularGradient.RectangleTop"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IRefreshEvents">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IRefreshEvents.AfterRefresh(System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRefreshEvents.BeforeRefresh(System.Boolean@)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IResearch">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IResearch.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IResearch.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IResearch.IsResearchService(System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IResearch.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IResearch.Query(System.String,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IResearch.SetLanguagePair(System.Int32,System.Int32)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IRoutingSlip">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IRoutingSlip.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRoutingSlip.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRoutingSlip.Delivery"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRoutingSlip.Message"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRoutingSlip.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRoutingSlip.Recipients(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRoutingSlip.Reset"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRoutingSlip.ReturnWhenDone"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRoutingSlip.Status"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRoutingSlip.Subject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRoutingSlip.TrackStatus"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IRTD">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IRTD.RefreshData"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IRTD.RestartServers"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IRTD.ThrottleInterval"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IRtdServer">
      <summary>Represents an interface for a real-time data server.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IRtdServer.ConnectData(System.Int32,System.Array@,System.Boolean@)">
      <summary>Adds new topics from a real-time data server. The ConnectData method is called when a file is opened that contains real-time data functions or when a user types in a new formula which contains the RTD function.</summary>
      <param name="TopicID">Required Integer. A unique value, assigned by Microsoft Excel, which identifies the topic.</param>
      <param name="Strings">Required Object. A single-dimensional array of strings identifying the topic.</param>
      <param name="GetNewValues">Required Boolean. True to determine if new values are to be acquired.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IRtdServer.DisconnectData(System.Int32)">
      <summary>Notifies a real-time data (RTD) server application that a topic is no longer in use.</summary>
      <param name="TopicID">Required Integer. A unique value assigned to the topic assigned by Microsoft Excel.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IRtdServer.Heartbeat">
      <summary>Determines if the real-time data server is still active. Zero or a negative number indicates failure; a positive number indicates that the server is active.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IRtdServer.RefreshData(System.Int32@)">
      <summary>This method is called by Microsoft Excel to get new data.</summary>
      <param name="TopicCount">Required Integer. The RTD server must change the value of the <paramref name="TopicCount" /> to the number of elements in the array returned.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IRtdServer.ServerStart(Microsoft.Office.Interop.Excel.IRTDUpdateEvent)">
      <summary>The ServerStart method is called immediately after a real-time data server is instantiated. Negative value or zero indicates failure to start the server; positive value indicates success.</summary>
      <param name="CallbackObject">Required <see cref="T:Microsoft.Office.Interop.Excel.IRTDUpdateEvent" /> object. The callback object.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IRtdServer.ServerTerminate">
      <summary>Terminates the connection to the real-time data server.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.IRTDUpdateEvent">
      <summary>Represents real-time data update events.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IRTDUpdateEvent.Disconnect">
      <summary>Instructs the real-time data server (RTD) to disconnect from the specified <see cref="T:Microsoft.Office.Interop.Excel.IRTDUpdateEvent" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IRTDUpdateEvent.HeartbeatInterval">
      <summary>Returns or sets an Integer for the interval between updates for real-time data. Read/write.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IRTDUpdateEvent.UpdateNotify">
      <summary>The real-time data (RTD) server uses this method to notify Microsoft Excel that new data has been received.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.IScenario">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IScenario.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScenario.ChangeScenario(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScenario.ChangingCells"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScenario.Comment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScenario.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScenario.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScenario.Hidden"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScenario.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScenario.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScenario.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScenario.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScenario.Show"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScenario.Values(System.Object)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IScenarios">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IScenarios.Add(System.String,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScenarios.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScenarios.Count"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScenarios.CreateSummary(Microsoft.Office.Interop.Excel.XlSummaryReportType,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScenarios.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScenarios.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScenarios.Item(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScenarios.Merge(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScenarios.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IScrollBar">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScrollBar.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScrollBar.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScrollBar.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScrollBar.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScrollBar.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.Display3DShading"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScrollBar.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.LargeChange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.Max"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.Min"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScrollBar.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScrollBar.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.SmallChange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBar.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IScrollBars">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBars._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScrollBars._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScrollBars._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScrollBars._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScrollBars._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScrollBars.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBars.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScrollBars.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScrollBars.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScrollBars.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBars.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBars.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScrollBars.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScrollBars.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBars.Display3DShading"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScrollBars.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBars.Enabled"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScrollBars.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScrollBars.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBars.Height"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScrollBars.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBars.LargeChange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBars.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBars.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBars.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBars.Max"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBars.Min"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBars.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBars.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBars.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBars.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScrollBars.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IScrollBars.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBars.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBars.SmallChange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBars.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBars.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBars.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBars.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IScrollBars.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISeries">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ISeries._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISeries.ApplyCustomType(Microsoft.Office.Interop.Excel.XlChartType)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISeries.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.ApplyPictToEnd"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.ApplyPictToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.ApplyPictToSides"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.AxisGroup"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.BarShape"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.BubbleSizes"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.ChartType"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISeries.ClearFormats"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISeries.Copy"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISeries.DataLabels(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISeries.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISeries.ErrorBar(Microsoft.Office.Interop.Excel.XlErrorBarDirection,Microsoft.Office.Interop.Excel.XlErrorBarInclude,Microsoft.Office.Interop.Excel.XlErrorBarType,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.ErrorBars"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.Explosion"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.Fill"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.Format"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.FormulaLocal"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.FormulaR1C1"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.FormulaR1C1Local"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.Has3DEffect"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.HasDataLabels"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.HasErrorBars"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.HasLeaderLines"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.InvertColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.InvertColorIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.InvertIfNegative"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.LeaderLines"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.MarkerBackgroundColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.MarkerBackgroundColorIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.MarkerForegroundColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.MarkerForegroundColorIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.MarkerSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.MarkerStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISeries.Paste"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.PictureType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.PictureUnit"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.PictureUnit2"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.PlotColorIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.PlotOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISeries.Points(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISeries.Select"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.Smooth"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISeries.Trendlines(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.Type"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.Values"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeries.XValues"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISeriesCollection">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ISeriesCollection._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISeriesCollection.Add(System.Object,Microsoft.Office.Interop.Excel.XlRowCol,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeriesCollection.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeriesCollection.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeriesCollection.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISeriesCollection.Extend(System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISeriesCollection.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISeriesCollection.Item(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISeriesCollection.NewSeries"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeriesCollection.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISeriesCollection.Paste(Microsoft.Office.Interop.Excel.XlRowCol,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISeriesLines">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeriesLines.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeriesLines.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeriesLines.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISeriesLines.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeriesLines.Format"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeriesLines.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISeriesLines.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISeriesLines.Select"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IServerViewableItems">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IServerViewableItems._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IServerViewableItems.Add(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IServerViewableItems.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IServerViewableItems.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IServerViewableItems.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IServerViewableItems.Delete(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IServerViewableItems.DeleteAll"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IServerViewableItems.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IServerViewableItems.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IServerViewableItems.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IShape">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Adjustments"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.AlternativeText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShape.Apply"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.AutoShapeType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.BackgroundStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.BlackWhiteMode"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.BottomRightCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Callout"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShape.CanvasCropBottom(System.Single)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShape.CanvasCropLeft(System.Single)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShape.CanvasCropRight(System.Single)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShape.CanvasCropTop(System.Single)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.CanvasItems"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Chart"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Child"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.ConnectionSiteCount"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Connector"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.ConnectorFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.ControlFormat"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShape.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShape.CopyPicture(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShape.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShape.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Diagram"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.DiagramNode"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.DrawingObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShape.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Fill"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShape.Flip(Microsoft.Office.Core.MsoFlipCmd)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.FormControlType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Glow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.GroupItems"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.HasChart"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.HasDiagram"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.HasDiagramNode"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.HasSmartArt"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.HorizontalFlip"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Hyperlink"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.ID"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShape.IncrementLeft(System.Single)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShape.IncrementRotation(System.Single)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShape.IncrementTop(System.Single)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Line"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.LinkFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.LockAspectRatio"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Nodes"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.OLEFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.ParentGroup"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShape.PickUp"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.PictureFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Reflection"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShape.RerouteConnections"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Rotation"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShape.ScaleHeight(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShape.ScaleWidth(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Script"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShape.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShape.SetShapesDefaultProperties"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.ShapeStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.SmartArt"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.SoftEdge"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.TextEffect"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.TextFrame"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.TextFrame2"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.ThreeD"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Title"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Type"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShape.Ungroup"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.VerticalFlip"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Vertices"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.Width"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShape.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShape.ZOrderPosition"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IShapeRange">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Adjustments"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange.Align(Microsoft.Office.Core.MsoAlignCmd,Microsoft.Office.Core.MsoTriState)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.AlternativeText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange.Apply"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.AutoShapeType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.BackgroundStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.BlackWhiteMode"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Callout"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange.CanvasCropBottom(System.Single)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange.CanvasCropLeft(System.Single)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange.CanvasCropRight(System.Single)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange.CanvasCropTop(System.Single)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.CanvasItems"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Chart"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Child"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.ConnectionSiteCount"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Connector"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.ConnectorFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Diagram"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.DiagramNode"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange.Distribute(Microsoft.Office.Core.MsoDistributeCmd,Microsoft.Office.Core.MsoTriState)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Fill"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange.Flip(Microsoft.Office.Core.MsoFlipCmd)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Glow"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.GroupItems"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.HasChart"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.HasDiagram"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.HasDiagramNode"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.HorizontalFlip"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.ID"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange.IncrementLeft(System.Single)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange.IncrementRotation(System.Single)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange.IncrementTop(System.Single)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Line"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.LockAspectRatio"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Nodes"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.ParentGroup"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange.PickUp"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.PictureFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Reflection"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange.Regroup"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange.RerouteConnections"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Rotation"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange.ScaleHeight(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange.ScaleWidth(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange.SetShapesDefaultProperties"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.ShapeStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.SoftEdge"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.TextEffect"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.TextFrame"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.TextFrame2"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.ThreeD"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Title"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Type"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange.Ungroup"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.VerticalFlip"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Vertices"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.Width"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapeRange.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapeRange.ZOrderPosition"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IShapes">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapes._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapes.AddCallout(Microsoft.Office.Core.MsoCalloutType,System.Single,System.Single,System.Single,System.Single)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapes.AddCanvas(System.Single,System.Single,System.Single,System.Single)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapes.AddChart(System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapes.AddConnector(Microsoft.Office.Core.MsoConnectorType,System.Single,System.Single,System.Single,System.Single)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapes.AddCurve(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapes.AddDiagram(Microsoft.Office.Core.MsoDiagramType,System.Single,System.Single,System.Single,System.Single)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapes.AddFormControl(Microsoft.Office.Interop.Excel.XlFormControl,System.Int32,System.Int32,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapes.AddLabel(Microsoft.Office.Core.MsoTextOrientation,System.Single,System.Single,System.Single,System.Single)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapes.AddLine(System.Single,System.Single,System.Single,System.Single)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapes.AddOLEObject(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapes.AddPicture(System.String,Microsoft.Office.Core.MsoTriState,Microsoft.Office.Core.MsoTriState,System.Single,System.Single,System.Single,System.Single)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapes.AddPolyline(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapes.AddShape(Microsoft.Office.Core.MsoAutoShapeType,System.Single,System.Single,System.Single,System.Single)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapes.AddSmartArt(Microsoft.Office.Core.SmartArtLayout,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapes.AddTextbox(Microsoft.Office.Core.MsoTextOrientation,System.Single,System.Single,System.Single,System.Single)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapes.AddTextEffect(Microsoft.Office.Core.MsoPresetTextEffect,System.String,System.String,System.Single,Microsoft.Office.Core.MsoTriState,Microsoft.Office.Core.MsoTriState,System.Single,System.Single)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapes.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapes.BuildFreeform(Microsoft.Office.Core.MsoEditingType,System.Single,System.Single)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapes.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapes.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapes.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapes.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapes.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IShapes.Range(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IShapes.SelectAll"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISheetViews">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISheetViews._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISheetViews.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISheetViews.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISheetViews.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISheetViews.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISheetViews.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISheetViews.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISlicer">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicer.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicer.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicer.ColumnWidth"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicer.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISlicer.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicer.DisableMoveResizeUI"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicer.DisplayHeader"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicer.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicer.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicer.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicer.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicer.NumberOfColumns"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicer.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicer.RowHeight"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicer.Shape"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicer.SlicerCache"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicer.SlicerCacheLevel"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicer.Style"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicer.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicer.Width"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISlicerCache">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCache.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISlicerCache.ClearManualFilter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCache.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCache.CrossFilterType"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISlicerCache.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCache.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCache.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCache.OLAP"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCache.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCache.PivotTables"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCache.ShowAllItems"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCache.SlicerCacheLevels"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCache.SlicerItems"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCache.Slicers"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCache.SortItems"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCache.SortUsingCustomLists"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCache.SourceName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCache.SourceType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCache.VisibleSlicerItems"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCache.VisibleSlicerItemsList"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCache.WorkbookConnection"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISlicerCacheLevel">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCacheLevel.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCacheLevel.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCacheLevel.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCacheLevel.CrossFilterType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCacheLevel.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCacheLevel.Ordinal"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCacheLevel.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCacheLevel.SlicerItems"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCacheLevel.SortItems"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCacheLevel.VisibleSlicerItemsList"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISlicerCacheLevels">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCacheLevels._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCacheLevels.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCacheLevels.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCacheLevels.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISlicerCacheLevels.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCacheLevels.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCacheLevels.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISlicerCaches">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCaches._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISlicerCaches.Add(System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCaches.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCaches.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCaches.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISlicerCaches.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCaches.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerCaches.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISlicerItem">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerItem.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerItem.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerItem.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerItem.HasData"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerItem.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerItem.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerItem.Selected"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerItem.SourceName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerItem.SourceNameStandard"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerItem.Value"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISlicerItems">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerItems._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerItems.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerItems.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerItems.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISlicerItems.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerItems.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerItems.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISlicerPivotTables">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerPivotTables._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISlicerPivotTables.AddPivotTable(Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerPivotTables.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerPivotTables.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerPivotTables.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISlicerPivotTables.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerPivotTables.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicerPivotTables.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISlicerPivotTables.RemovePivotTable(System.Object)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISlicers">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicers._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISlicers.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicers.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicers.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicers.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISlicers.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicers.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISlicers.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISmartTag">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTag._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTag.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTag.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISmartTag.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTag.DownloadURL"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTag.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTag.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTag.Properties"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTag.Range"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTag.SmartTagActions"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTag.XML"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISmartTagAction">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagAction._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagAction.ActiveXControl"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagAction.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagAction.CheckboxState"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagAction.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISmartTagAction.Execute"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagAction.ExpandHelp"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagAction.ListSelection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagAction.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagAction.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagAction.PresentInPane"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagAction.RadioGroupSelection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagAction.TextboxText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagAction.Type"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISmartTagActions">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagActions._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagActions.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagActions.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagActions.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISmartTagActions.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagActions.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagActions.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISmartTagOptions">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagOptions.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagOptions.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagOptions.DisplaySmartTags"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagOptions.EmbedSmartTags"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagOptions.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISmartTagRecognizer">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagRecognizer._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagRecognizer.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagRecognizer.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagRecognizer.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagRecognizer.FullName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagRecognizer.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagRecognizer.progID"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISmartTagRecognizers">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagRecognizers._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagRecognizers.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagRecognizers.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagRecognizers.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISmartTagRecognizers.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagRecognizers.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagRecognizers.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTagRecognizers.Recognize"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISmartTags">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTags._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISmartTags.Add(System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTags.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTags.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTags.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISmartTags.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISmartTags.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISort">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISort.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISort.Apply"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISort.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISort.Header"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISort.MatchCase"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISort.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISort.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISort.Rng"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISort.SetRange(Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISort.SortFields"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISort.SortMethod"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISortField">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISortField.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISortField.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISortField.CustomOrder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISortField.DataOption"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISortField.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISortField.Key"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISortField.ModifyKey(Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISortField.Order"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISortField.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISortField.Priority"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISortField.SetIcon(Microsoft.Office.Interop.Excel.Icon)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISortField.SortOn"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISortField.SortOnValue"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISortFields">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISortFields._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISortFields.Add(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISortFields.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISortFields.Clear"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISortFields.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISortFields.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISortFields.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISortFields.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISortFields.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISoundNote">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISoundNote.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISoundNote.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISoundNote.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISoundNote.Import(System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISoundNote.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISoundNote.Play"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISoundNote.Record"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISparkAxes">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkAxes.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkAxes.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkAxes.Horizontal"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkAxes.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkAxes.Vertical"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISparkColor">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkColor.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkColor.Color"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkColor.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkColor.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkColor.Visible"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISparkHorizontalAxis">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkHorizontalAxis.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkHorizontalAxis.Axis"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkHorizontalAxis.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkHorizontalAxis.IsDateAxis"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkHorizontalAxis.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkHorizontalAxis.RightToLeftPlotOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISparkline">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkline.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkline.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkline.Location"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISparkline.ModifyLocation(Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISparkline.ModifySourceData(System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkline.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkline.SourceData"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISparklineGroup">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparklineGroup.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparklineGroup.Axes"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparklineGroup.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparklineGroup.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparklineGroup.DateRange"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISparklineGroup.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparklineGroup.DisplayBlanksAs"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparklineGroup.DisplayHidden"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISparklineGroup.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparklineGroup.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparklineGroup.LineWeight"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparklineGroup.Location"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISparklineGroup.Modify(Microsoft.Office.Interop.Excel.Range,System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISparklineGroup.ModifyDateRange(System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISparklineGroup.ModifyLocation(Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISparklineGroup.ModifySourceData(System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparklineGroup.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparklineGroup.PlotBy"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparklineGroup.Points"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparklineGroup.SeriesColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparklineGroup.SourceData"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparklineGroup.Type"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISparklineGroups">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparklineGroups._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISparklineGroups.Add(Microsoft.Office.Interop.Excel.XlSparkType,System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparklineGroups.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISparklineGroups.Clear"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISparklineGroups.ClearGroups"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparklineGroups.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparklineGroups.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISparklineGroups.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISparklineGroups.Group(Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparklineGroups.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparklineGroups.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISparklineGroups.Ungroup"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISparkPoints">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkPoints.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkPoints.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkPoints.Firstpoint"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkPoints.Highpoint"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkPoints.Lastpoint"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkPoints.Lowpoint"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkPoints.Markers"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkPoints.Negative"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkPoints.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISparkVerticalAxis">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkVerticalAxis.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkVerticalAxis.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkVerticalAxis.CustomMaxScaleValue"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkVerticalAxis.CustomMinScaleValue"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkVerticalAxis.MaxScaleType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkVerticalAxis.MinScaleType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISparkVerticalAxis.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISpeech">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpeech.Direction"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISpeech.Speak(System.String,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpeech.SpeakCellOnEnter"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISpellingOptions">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpellingOptions.ArabicModes"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpellingOptions.ArabicStrictAlefHamza"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpellingOptions.ArabicStrictFinalYaa"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpellingOptions.ArabicStrictTaaMarboota"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpellingOptions.BrazilReform"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpellingOptions.DictLang"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpellingOptions.GermanPostReform"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpellingOptions.HebrewModes"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpellingOptions.IgnoreCaps"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpellingOptions.IgnoreFileNames"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpellingOptions.IgnoreMixedDigits"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpellingOptions.KoreanCombineAux"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpellingOptions.KoreanProcessCompound"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpellingOptions.KoreanUseAutoChangeList"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpellingOptions.PortugalReform"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpellingOptions.RussianStrictE"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpellingOptions.SpanishModes"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpellingOptions.SuggestMainOnly"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpellingOptions.UserDict"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISpinner">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISpinner.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISpinner.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISpinner.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISpinner.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISpinner.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner.Display3DShading"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISpinner.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner.Max"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner.Min"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISpinner.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISpinner.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner.SmallChange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinner.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ISpinners">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinners._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISpinners._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISpinners._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISpinners._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISpinners._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISpinners.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinners.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISpinners.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISpinners.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISpinners.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinners.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinners.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISpinners.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISpinners.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinners.Display3DShading"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISpinners.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinners.Enabled"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISpinners.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISpinners.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinners.Height"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISpinners.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinners.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinners.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinners.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinners.Max"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinners.Min"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinners.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinners.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinners.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinners.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISpinners.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ISpinners.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinners.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinners.SmallChange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinners.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinners.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinners.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinners.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ISpinners.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IStyle">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.Borders"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.BuiltIn"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IStyle.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.FormulaHidden"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.IncludeAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.IncludeBorder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.IncludeFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.IncludeNumber"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.IncludePatterns"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.IncludeProtection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.IndentLevel"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.MergeCells"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.NameLocal"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.NumberFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.NumberFormatLocal"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.ReadingOrder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.ShrinkToFit"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyle.WrapText"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IStyles">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyles._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IStyles.Add(System.String,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyles.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyles.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyles.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IStyles.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyles.Item(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IStyles.Merge(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IStyles.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ITab">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ITab.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITab.Color"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITab.ColorIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITab.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITab.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITab.ThemeColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITab.TintAndShade"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ITableStyle">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyle._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyle.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyle.BuiltIn"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyle.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITableStyle.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITableStyle.Duplicate(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyle.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyle.NameLocal"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyle.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyle.ShowAsAvailablePivotTableStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyle.ShowAsAvailableSlicerStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyle.ShowAsAvailableTableStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyle.TableStyleElements"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ITableStyleElement">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyleElement.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyleElement.Borders"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITableStyleElement.Clear"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyleElement.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyleElement.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyleElement.HasFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyleElement.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyleElement.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyleElement.StripeSize"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ITableStyleElements">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyleElements._Default(Microsoft.Office.Interop.Excel.XlTableStyleElementType)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyleElements.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyleElements.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyleElements.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITableStyleElements.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITableStyleElements.Item(Microsoft.Office.Interop.Excel.XlTableStyleElementType)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyleElements.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ITableStyles">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyles._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITableStyles.Add(System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyles.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyles.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyles.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITableStyles.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITableStyles.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITableStyles.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ITextBox">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBox.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBox.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBox.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBox.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBox.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBox.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBox.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.ReadingOrder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.RoundedCorners"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBox.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBox.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBox.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ITextBoxes">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBoxes._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBoxes._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBoxes._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBoxes._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBoxes.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBoxes.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBoxes.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBoxes.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBoxes.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBoxes.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBoxes.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBoxes.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.Formula"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBoxes.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBoxes.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBoxes.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.ReadingOrder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.RoundedCorners"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBoxes.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextBoxes.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ITextFrame">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextFrame.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextFrame.AutoMargins"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextFrame.AutoSize"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITextFrame.Characters(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextFrame.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextFrame.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextFrame.HorizontalOverflow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextFrame.MarginBottom"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextFrame.MarginLeft"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextFrame.MarginRight"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextFrame.MarginTop"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextFrame.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextFrame.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextFrame.ReadingOrder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextFrame.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITextFrame.VerticalOverflow"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ITickLabels">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ITickLabels.Alignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITickLabels.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITickLabels.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITickLabels.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITickLabels.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITickLabels.Depth"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITickLabels.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITickLabels.Format"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITickLabels.MultiLevel"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITickLabels.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITickLabels.NumberFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITickLabels.NumberFormatLinked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITickLabels.NumberFormatLocal"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITickLabels.Offset"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITickLabels.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITickLabels.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITickLabels.ReadingOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITickLabels.Select"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IToolbar">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbar.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbar.BuiltIn"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbar.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IToolbar.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbar.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbar.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbar.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbar.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbar.Position"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbar.Protection"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IToolbar.Reset"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbar.ToolbarButtons"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbar.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbar.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbar.Width"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IToolbarButton">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbarButton.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbarButton.BuiltIn"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbarButton.BuiltInFace"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IToolbarButton.Copy(Microsoft.Office.Interop.Excel.Toolbar,System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IToolbarButton.CopyFace"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbarButton.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IToolbarButton.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IToolbarButton.Edit"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbarButton.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbarButton.HelpContextID"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbarButton.HelpFile"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbarButton.ID"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbarButton.IsGap"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IToolbarButton.Move(Microsoft.Office.Interop.Excel.Toolbar,System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbarButton.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbarButton.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbarButton.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IToolbarButton.PasteFace"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbarButton.Pushed"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IToolbarButton.Reset"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbarButton.StatusBar"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbarButton.Width"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IToolbarButtons">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbarButtons._Default(System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IToolbarButtons.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbarButtons.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbarButtons.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbarButtons.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IToolbarButtons.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbarButtons.Item(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbarButtons.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IToolbars">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbars._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IToolbars.Add(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbars.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbars.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbars.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IToolbars.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbars.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IToolbars.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ITop10">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ITop10.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITop10.AppliesTo"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITop10.Borders"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITop10.CalcFor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITop10.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITop10.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITop10.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITop10.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITop10.ModifyAppliesToRange(Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITop10.NumberFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITop10.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITop10.Percent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITop10.Priority"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITop10.PTCondition"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITop10.Rank"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITop10.ScopeType"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITop10.SetFirstPriority"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITop10.SetLastPriority"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITop10.StopIfTrue"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITop10.TopBottom"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITop10.Type"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ITrendline">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ITrendline.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITrendline.Backward"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITrendline.Backward2"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITrendline.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITrendline.ClearFormats"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITrendline.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITrendline.DataLabel"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITrendline.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITrendline.DisplayEquation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITrendline.DisplayRSquared"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITrendline.Format"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITrendline.Forward"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITrendline.Forward2"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITrendline.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITrendline.Intercept"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITrendline.InterceptIsAuto"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITrendline.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITrendline.NameIsAuto"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITrendline.Order"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITrendline.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITrendline.Period"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITrendline.Select"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITrendline.Type"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ITrendlines">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ITrendlines._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITrendlines.Add(Microsoft.Office.Interop.Excel.XlTrendlineType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITrendlines.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITrendlines.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITrendlines.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITrendlines.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ITrendlines.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ITrendlines.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IUniqueValues">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IUniqueValues.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUniqueValues.AppliesTo"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUniqueValues.Borders"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUniqueValues.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IUniqueValues.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUniqueValues.DupeUnique"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUniqueValues.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUniqueValues.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IUniqueValues.ModifyAppliesToRange(Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUniqueValues.NumberFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUniqueValues.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUniqueValues.Priority"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUniqueValues.PTCondition"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUniqueValues.ScopeType"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IUniqueValues.SetFirstPriority"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IUniqueValues.SetLastPriority"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUniqueValues.StopIfTrue"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUniqueValues.Type"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IUpBars">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IUpBars.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUpBars.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUpBars.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IUpBars.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUpBars.Fill"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUpBars.Format"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUpBars.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUpBars.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUpBars.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IUpBars.Select"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IUsedObjects">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IUsedObjects._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUsedObjects.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUsedObjects.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUsedObjects.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IUsedObjects.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUsedObjects.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUsedObjects.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IUserAccess">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IUserAccess.AllowEdit"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IUserAccess.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUserAccess.Name"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IUserAccessList">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IUserAccessList._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IUserAccessList.Add(System.String,System.Boolean)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUserAccessList.Count"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IUserAccessList.DeleteAll"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IUserAccessList.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IUserAccessList.Item(System.Object)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IValidation">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IValidation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValidation.AlertStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValidation.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValidation.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IValidation.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValidation.ErrorMessage"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValidation.ErrorTitle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValidation.Formula1"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValidation.Formula2"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValidation.IgnoreBlank"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValidation.IMEMode"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValidation.InCellDropdown"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValidation.InputMessage"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValidation.InputTitle"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IValidation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValidation.Operator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValidation.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValidation.ShowError"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValidation.ShowInput"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValidation.Type"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValidation.Value"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IValueChange">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IValueChange.AllocationMethod"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValueChange.AllocationValue"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValueChange.AllocationWeightExpression"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValueChange.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValueChange.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IValueChange.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValueChange.Order"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValueChange.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValueChange.PivotCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValueChange.Tuple"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValueChange.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IValueChange.VisibleInPivotTable"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IVPageBreak">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IVPageBreak.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IVPageBreak.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IVPageBreak.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IVPageBreak.DragOff(Microsoft.Office.Interop.Excel.XlDirection,System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IVPageBreak.Extent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IVPageBreak.Location"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IVPageBreak.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IVPageBreak.Type"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IVPageBreaks">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IVPageBreaks._Default(System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IVPageBreaks.Add(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IVPageBreaks.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IVPageBreaks.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IVPageBreaks.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IVPageBreaks.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IVPageBreaks.Item(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IVPageBreaks.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IWalls">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IWalls.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWalls.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWalls.ClearFormats"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWalls.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWalls.Fill"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWalls.Format"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWalls.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWalls.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWalls.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWalls.Paste"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWalls.PictureType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWalls.PictureUnit"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWalls.Select"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWalls.Thickness"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IWatch">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IWatch.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWatch.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWatch.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWatch.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWatch.Source"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IWatches">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IWatches._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWatches.Add(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWatches.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWatches.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWatches.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWatches.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWatches.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWatches.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWatches.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IWindow">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow._DisplayRightToLeft"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWindow._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWindow.Activate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWindow.ActivateNext"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWindow.ActivatePrevious"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.ActiveCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.ActiveChart"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.ActivePane"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.ActiveSheet"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.ActiveSheetView"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.AutoFilterDateGrouping"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.Caption"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWindow.Close(System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.DisplayFormulas"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.DisplayGridlines"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.DisplayHeadings"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.DisplayHorizontalScrollBar"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.DisplayOutline"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.DisplayRightToLeft"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.DisplayRuler"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.DisplayVerticalScrollBar"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.DisplayWhitespace"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.DisplayWorkbookTabs"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.DisplayZeros"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.EnableResize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.FreezePanes"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.GridlineColor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.GridlineColorIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.Index"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWindow.LargeScroll(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.Left"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWindow.NewWindow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.OnWindow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.Panes"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWindow.PointsToScreenPixelsX(System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWindow.PointsToScreenPixelsY(System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWindow.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWindow.PrintPreview(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWindow.RangeFromPoint(System.Int32,System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.RangeSelection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.ScrollColumn"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWindow.ScrollIntoView(System.Int32,System.Int32,System.Int32,System.Int32,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.ScrollRow"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWindow.ScrollWorkbookTabs(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.SelectedSheets"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.Selection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.SheetViews"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWindow.SmallScroll(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.Split"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.SplitColumn"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.SplitHorizontal"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.SplitRow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.SplitVertical"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.TabRatio"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.Type"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.UsableHeight"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.UsableWidth"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.View"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.VisibleRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.WindowNumber"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.WindowState"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindow.Zoom"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IWindows">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindows._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindows.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWindows.Arrange(Microsoft.Office.Interop.Excel.XlArrangeStyle,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWindows.BreakSideBySide"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWindows.CompareSideBySideWith(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindows.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindows.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWindows.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindows.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindows.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWindows.ResetPositionsSideBySide"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWindows.SyncScrollingSideBySide"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IWorkbookConnection">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorkbookConnection._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorkbookConnection.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorkbookConnection.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookConnection.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorkbookConnection.Description"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorkbookConnection.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorkbookConnection.ODBCConnection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorkbookConnection.OLEDBConnection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorkbookConnection.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorkbookConnection.Ranges"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookConnection.Refresh"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorkbookConnection.Type"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IWorkbookEvents">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.Activate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.AddinInstall"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.AddinUninstall"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.AfterSave(System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.AfterXmlExport(Microsoft.Office.Interop.Excel.XmlMap,System.String,Microsoft.Office.Interop.Excel.XlXmlExportResult)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.AfterXmlImport(Microsoft.Office.Interop.Excel.XmlMap,System.Boolean,Microsoft.Office.Interop.Excel.XlXmlImportResult)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.BeforeClose(System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.BeforePrint(System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.BeforeSave(System.Boolean,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.BeforeXmlExport(Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.BeforeXmlImport(Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Boolean,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.Deactivate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.NewChart(Microsoft.Office.Interop.Excel.Chart)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.NewSheet(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.Open"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.PivotTableCloseConnection(Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.PivotTableOpenConnection(Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.RowsetComplete(System.String,System.String,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetActivate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetBeforeDoubleClick(System.Object,Microsoft.Office.Interop.Excel.Range,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetBeforeRightClick(System.Object,Microsoft.Office.Interop.Excel.Range,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetCalculate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetChange(System.Object,Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetDeactivate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetFollowHyperlink(System.Object,Microsoft.Office.Interop.Excel.Hyperlink)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetPivotTableAfterValueChange(System.Object,Microsoft.Office.Interop.Excel.PivotTable,Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetPivotTableBeforeAllocateChanges(System.Object,Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetPivotTableBeforeCommitChanges(System.Object,Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetPivotTableBeforeDiscardChanges(System.Object,Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetPivotTableChangeSync(System.Object,Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetPivotTableUpdate(System.Object,Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetSelectionChange(System.Object,Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.Sync(Microsoft.Office.Core.MsoSyncEventType)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.WindowActivate(Microsoft.Office.Interop.Excel.Window)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.WindowDeactivate(Microsoft.Office.Interop.Excel.Window)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.WindowResize(Microsoft.Office.Interop.Excel.Window)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IWorksheetFunction">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction._WSFunction(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.AccrInt(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.AccrIntM(System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Acos(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Acosh(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Aggregate(System.Double,System.Double,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.AmorDegrc(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.AmorLinc(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.And(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorksheetFunction.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Asc(System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Asin(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Asinh(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Atan2(System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Atanh(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.AveDev(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Average(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.AverageIf(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.AverageIfs(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.BahtText(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.BesselI(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.BesselJ(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.BesselK(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.BesselY(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Beta_Inv(System.Double,System.Double,System.Double,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.BetaDist(System.Double,System.Double,System.Double,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.BetaInv(System.Double,System.Double,System.Double,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Bin2Dec(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Bin2Hex(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Bin2Oct(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Binom_Dist(System.Double,System.Double,System.Double,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Binom_Inv(System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.BinomDist(System.Double,System.Double,System.Double,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Ceiling(System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Ceiling_Precise(System.Double,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ChiDist(System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ChiInv(System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ChiSq_Dist(System.Double,System.Double,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ChiSq_Dist_RT(System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ChiSq_Inv(System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ChiSq_Inv_RT(System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ChiSq_Test(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ChiTest(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Choose(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Clean(System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Combin(System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Complex(System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Confidence(System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Confidence_Norm(System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Confidence_T(System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Convert(System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Correl(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Cosh(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Count(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.CountA(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.CountBlank(Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.CountIf(Microsoft.Office.Interop.Excel.Range,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.CountIfs(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.CoupDayBs(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.CoupDays(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.CoupDaysNc(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.CoupNcd(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.CoupNum(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.CoupPcd(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Covar(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Covariance_P(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Covariance_S(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorksheetFunction.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.CritBinom(System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.CumIPmt(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.CumPrinc(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DAverage(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Days360(System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Db(System.Double,System.Double,System.Double,System.Double,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Dbcs(System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DCount(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DCountA(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Ddb(System.Double,System.Double,System.Double,System.Double,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Dec2Bin(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Dec2Hex(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Dec2Oct(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Degrees(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Delta(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DevSq(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DGet(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Disc(System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DMax(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DMin(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Dollar(System.Double,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DollarDe(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DollarFr(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DProduct(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DStDev(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DStDevP(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DSum(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Dummy19(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Dummy21(System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Duration(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DVar(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DVarP(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.EDate(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Effect(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.EoMonth(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Erf(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Erf_Precise(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ErfC(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ErfC_Precise(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Even(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Expon_Dist(System.Double,System.Double,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ExponDist(System.Double,System.Double,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.F_Dist(System.Double,System.Double,System.Double,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.F_Dist_RT(System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.F_Inv(System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.F_Inv_RT(System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.F_Test(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Fact(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.FactDouble(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.FDist(System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Find(System.String,System.String,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.FindB(System.String,System.String,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.FInv(System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Fisher(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.FisherInv(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Fixed(System.Double,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Floor(System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Floor_Precise(System.Double,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Forecast(System.Double,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Frequency(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.FTest(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Fv(System.Double,System.Double,System.Double,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.FVSchedule(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Gamma_Dist(System.Double,System.Double,System.Double,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Gamma_Inv(System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.GammaDist(System.Double,System.Double,System.Double,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.GammaInv(System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.GammaLn(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.GammaLn_Precise(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Gcd(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.GeoMean(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.GeStep(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Growth(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.HarMean(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Hex2Bin(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Hex2Dec(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Hex2Oct(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.HypGeom_Dist(System.Double,System.Double,System.Double,System.Double,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.HypGeomDist(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.IfError(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ImAbs(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Imaginary(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ImArgument(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ImConjugate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ImCos(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ImDiv(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ImExp(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ImLn(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ImLog10(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ImLog2(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ImPower(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ImProduct(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ImReal(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ImSin(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ImSqrt(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ImSub(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ImSum(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Index(System.Object,System.Double,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Intercept(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.IntRate(System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Ipmt(System.Double,System.Double,System.Double,System.Double,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Irr(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.IsErr(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.IsError(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.IsEven(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.IsLogical(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.IsNA(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.IsNonText(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.IsNumber(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ISO_Ceiling(System.Double,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.IsOdd(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Ispmt(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.IsText(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.IsThaiDigit(System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Kurt(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Large(System.Object,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Lcm(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Ln(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Log(System.Double,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Log10(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.LogEst(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.LogInv(System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.LogNorm_Dist(System.Double,System.Double,System.Double,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.LogNorm_Inv(System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.LogNormDist(System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Lookup(System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Match(System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Max(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.MDeterm(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.MDuration(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Median(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Min(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.MInverse(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.MIrr(System.Object,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.MMult(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Mode(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Mode_Mult(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Mode_Sngl(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.MRound(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.MultiNomial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.NegBinom_Dist(System.Double,System.Double,System.Double,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.NegBinomDist(System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.NetworkDays(System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.NetworkDays_Intl(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Nominal(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Norm_Dist(System.Double,System.Double,System.Double,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Norm_Inv(System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Norm_S_Dist(System.Double,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Norm_S_Inv(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.NormDist(System.Double,System.Double,System.Double,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.NormInv(System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.NormSDist(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.NormSInv(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.NPer(System.Double,System.Double,System.Double,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Npv(System.Double,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Oct2Bin(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Oct2Dec(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Oct2Hex(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Odd(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.OddFPrice(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.OddFYield(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.OddLPrice(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.OddLYield(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Or(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorksheetFunction.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Pearson(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Percentile(System.Object,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Percentile_Exc(System.Object,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Percentile_Inc(System.Object,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.PercentRank(System.Object,System.Double,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.PercentRank_Exc(System.Object,System.Double,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.PercentRank_Inc(System.Object,System.Double,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Permut(System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Phonetic(Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Pi"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Pmt(System.Double,System.Double,System.Double,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Poisson(System.Double,System.Double,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Poisson_Dist(System.Double,System.Double,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Power(System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Ppmt(System.Double,System.Double,System.Double,System.Double,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Price(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.PriceDisc(System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.PriceMat(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Prob(System.Object,System.Object,System.Double,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Product(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Proper(System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Quartile(System.Object,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Quartile_Exc(System.Object,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Quartile_Inc(System.Object,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Quotient(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Radians(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.RandBetween(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Rank(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Rank_Avg(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Rank_Eq(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Rate(System.Double,System.Double,System.Double,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Received(System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ReplaceB(System.String,System.Double,System.Double,System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Rept(System.String,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Roman(System.Double,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Round(System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.RoundBahtDown(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.RoundBahtUp(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.RoundDown(System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.RoundUp(System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.RSq(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.RTD(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Search(System.String,System.String,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.SearchB(System.String,System.String,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.SeriesSum(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Sinh(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Skew(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Sln(System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Slope(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Small(System.Object,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.SqrtPi(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Standardize(System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.StDev(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.StDev_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.StDev_S(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.StDevP(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.StEyx(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Substitute(System.String,System.String,System.String,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Subtotal(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Sum(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.SumIf(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.SumIfs(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.SumProduct(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.SumSq(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.SumX2MY2(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.SumX2PY2(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.SumXMY2(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Syd(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.T_Dist(System.Double,System.Double,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.T_Dist_2T(System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.T_Dist_RT(System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.T_Inv(System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.T_Inv_2T(System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.T_Test(System.Object,System.Object,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Tanh(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.TBillEq(System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.TBillPrice(System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.TBillYield(System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.TDist(System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Text(System.Object,System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ThaiDayOfWeek(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ThaiDigit(System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ThaiMonthOfYear(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ThaiNumSound(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ThaiNumString(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ThaiStringLength(System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ThaiYear(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.TInv(System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Transpose(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Trend(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Trim(System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.TrimMean(System.Object,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.TTest(System.Object,System.Object,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.USDollar(System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Var(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Var_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Var_S(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.VarP(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Vdb(System.Double,System.Double,System.Double,System.Double,System.Double,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Weekday(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.WeekNum(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Weibull(System.Double,System.Double,System.Double,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Weibull_Dist(System.Double,System.Double,System.Double,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.WorkDay(System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.WorkDay_Intl(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Xirr(System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Xnpv(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.YearFrac(System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.YieldDisc(System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.YieldMat(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Z_Test(System.Object,System.Double,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ZTest(System.Object,System.Double,System.Object)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IWorksheets">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorksheets._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheets._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheets.Add(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorksheets.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheets.Copy(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorksheets.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorksheets.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheets.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheets.FillAcrossSheets(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlFillWith)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheets.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorksheets.HPageBreaks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorksheets.Item(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheets.Move(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorksheets.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheets.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheets.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheets.PrintPreview(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IWorksheets.Select(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorksheets.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorksheets.VPageBreaks"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IWorksheetView">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorksheetView.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorksheetView.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorksheetView.DisplayFormulas"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorksheetView.DisplayGridlines"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorksheetView.DisplayHeadings"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorksheetView.DisplayOutline"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorksheetView.DisplayZeros"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorksheetView.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IWorksheetView.Sheet"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IXmlDataBinding">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlDataBinding._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlDataBinding.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IXmlDataBinding.ClearSettings"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlDataBinding.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IXmlDataBinding.LoadSettings(System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlDataBinding.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IXmlDataBinding.Refresh"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlDataBinding.SourceUrl"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IXmlMap">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlMap._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlMap.AdjustColumnWidth"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlMap.AppendOnImport"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlMap.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlMap.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlMap.DataBinding"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IXmlMap.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IXmlMap.Export(System.String,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IXmlMap.ExportXml(System.String@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IXmlMap.Import(System.String,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IXmlMap.ImportXml(System.String,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlMap.IsExportable"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlMap.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlMap.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlMap.PreserveColumnFilter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlMap.PreserveNumberFormatting"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlMap.RootElementName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlMap.RootElementNamespace"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlMap.SaveDataSourceDefinition"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlMap.Schemas"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlMap.ShowImportExportValidationErrors"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlMap.WorkbookConnection"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IXmlMaps">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlMaps._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IXmlMaps.Add(System.String,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlMaps.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlMaps.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlMaps.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IXmlMaps.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlMaps.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlMaps.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IXmlNamespace">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlNamespace._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlNamespace.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlNamespace.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlNamespace.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlNamespace.Prefix"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlNamespace.Uri"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IXmlNamespaces">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlNamespaces._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlNamespaces.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlNamespaces.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlNamespaces.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IXmlNamespaces.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IXmlNamespaces.InstallManifest(System.String,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlNamespaces.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlNamespaces.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlNamespaces.Value"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IXmlSchema">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlSchema.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlSchema.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlSchema.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlSchema.Namespace"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlSchema.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlSchema.XML"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IXmlSchemas">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlSchemas._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlSchemas.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlSchemas.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlSchemas.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IXmlSchemas.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlSchemas.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXmlSchemas.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.IXPath">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IXPath._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXPath.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IXPath.Clear"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXPath.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXPath.Map"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXPath.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXPath.Repeating"></member>
    <member name="M:Microsoft.Office.Interop.Excel.IXPath.SetValue(Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.IXPath.Value"></member>
    <member name="T:Microsoft.Office.Interop.Excel.Label">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Label._Dummy33"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Label.Accelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Label.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Label.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Label.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Label.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Label.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Label.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Label.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Label.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Label.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Label.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Label.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Label.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Label.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Label.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Label.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Label.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Label.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Label.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Label.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Label.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Label.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Label.PhoneticAccelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Label.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Label.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Label.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Label.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Label.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Label.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Label.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Label.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Label.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Label.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Label.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.Labels">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Labels._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Labels._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Labels._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Labels._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Labels._Dummy33"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Labels.Accelerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Labels.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Labels.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Labels.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Labels.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Labels.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Labels.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Labels.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Labels.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Labels.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Labels.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Labels.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Labels.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Labels.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Labels.Enabled"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Labels.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Labels.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Labels.Height"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Labels.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Labels.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Labels.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Labels.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Labels.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Labels.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Labels.PhoneticAccelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Labels.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Labels.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Labels.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Labels.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Labels.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Labels.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Labels.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Labels.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Labels.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Labels.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.LeaderLines">
      <summary>Represents leader lines on a chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LeaderLines.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LeaderLines.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LeaderLines.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.LeaderLines.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LeaderLines.Format">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LeaderLines.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.LeaderLines.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Legend">
      <summary>Represents the legend in a chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Legend.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Legend.AutoScaleFont">
      <summary>True if the text in the object changes font size when the object size changes. The default value is True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Legend.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Legend.Clear">
      <summary>Clears the entire object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Legend.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Legend.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Legend.Fill">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartFillFormat" /> object that contains fill formatting properties for the specified chart legend.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Legend.Font">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Legend.Format">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Legend.Height">
      <summary>The height, in points, of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Legend.IncludeInLayout">
      <summary>True if a legend will occupy the chart layout space when a chart layout is being determined. The default value is True. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Legend.Interior">
      <summary>Returns an Interior object that represents the interior of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Legend.Left">
      <summary>The distance, in points, from the left edge of the object to the left edge of the chart area.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Legend.LegendEntries(System.Object)">
      <summary>Returns an object that represents either a single legend entry (a <see cref="T:Microsoft.Office.Interop.Excel.LegendEntry" /> object) or a collection of legend entries (a <see cref="T:Microsoft.Office.Interop.Excel.LegendEntries" /> object) for the legend.</summary>
      <param name="Index">Optional Object. The number of the legend entry.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Legend.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Legend.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Legend.Position">
      <summary>Returns or sets the position of the legend on the chart.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Legend.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Legend.Shadow">
      <summary>True if the font is a shadow font or if the object has a shadow.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Legend.Top">
      <summary>The distance, in points, from the top edge of the object to the top of the chart area.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Legend.Width">
      <summary>The width, in points, of the object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.LegendEntries">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.LegendEntry" /> objects in the specified chart legend.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.LegendEntries._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendEntries.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendEntries.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendEntries.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.LegendEntries.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.LegendEntries.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendEntries.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.LegendEntry">
      <summary>Represents a legend entry in a chart legend.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendEntry.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendEntry.AutoScaleFont">
      <summary>True if the text in the object changes font size when the object size changes. The default value is True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendEntry.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.LegendEntry.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendEntry.Font">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendEntry.Format">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendEntry.Height">
      <summary>The height, in points, of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendEntry.Index">
      <summary>Returns the index number of the object within the collection of similar objects.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendEntry.Left">
      <summary>The distance, in points, from the left edge of the object to the left edge of the chart area.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendEntry.LegendKey">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.LegendKey" /> object that represents the legend key associated with the entry.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendEntry.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.LegendEntry.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendEntry.Top">
      <summary>The distance, in points, from the top edge of the object to the top of the chart area.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendEntry.Width">
      <summary>The width, in points, of the object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.LegendKey">
      <summary>Represents a legend key in a chart legend.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendKey.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendKey.Border">
      <summary>Returns a Border object that represents the border of the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.LegendKey.ClearFormats">
      <summary>Clears the formatting of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendKey.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.LegendKey.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendKey.Fill">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object for a specified shape or a <see cref="T:Microsoft.Office.Interop.Excel.ChartFillFormat" /> object for a specified chart that contains fill formatting properties for the shape or chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendKey.Format">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendKey.Height">
      <summary>The height, in points, of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendKey.Interior">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendKey.InvertIfNegative">
      <summary>True if Microsoft Excel inverts the pattern in the item when it corresponds to a negative number.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendKey.Left">
      <summary>The distance, in points, from the left edge of the object to the left edge of the chart area.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendKey.MarkerBackgroundColor">
      <summary>Sets the marker background color as an RGB value or returns the corresponding color index value. Applies only to line, scatter, and radar charts.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendKey.MarkerBackgroundColorIndex">
      <summary>Returns or sets the marker background color as an index into the current color palette, or as one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> constants: xlColorIndexAutomatic or xlColorIndexNone. Applies only to line, scatter, and radar charts.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendKey.MarkerForegroundColor">
      <summary>Sets the marker background color as an RGB value or returns the corresponding color index value. Applies only to line, scatter, and radar charts.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendKey.MarkerForegroundColorIndex">
      <summary>Returns or sets the marker foreground color as an index into the current color palette, or as one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> constants: xlColorIndexAutomatic or xlColorIndexNone. Applies only to line, scatter, and radar charts.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendKey.MarkerSize">
      <summary>Returns or sets the data-marker size, in points.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendKey.MarkerStyle">
      <summary>Returns or sets the marker style for a legend key in a line chart, scatter chart, or radar chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendKey.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendKey.PictureType">
      <summary>Returns or sets the way pictures are displayed on a legend key.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendKey.PictureUnit">
      <summary>Returns or sets the unit for each picture on the chart if the <see cref="P:Microsoft.Office.Interop.Excel.LegendKey.PictureType" /> property is set to xlStackScale (if not, this property is ignored).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendKey.PictureUnit2">
      <summary>Returns or sets the unit for each picture on the chart if the <see cref="P:Microsoft.Office.Interop.Excel.LegendKey.PictureType" /> property is set to <see cref="F:Microsoft.Office.Interop.Excel.XlChartPictureType.xlStackScale" />(if not, this property is ignored). Read/write Double.</summary>
      <returns>Double</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.LegendKey.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendKey.Shadow">
      <summary>True if the font is a shadow font or if the object has a shadow.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendKey.Smooth">
      <summary>True if curve smoothing is turned on for the line chart or scatter chart. Applies only to line and scatter charts.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendKey.Top">
      <summary>The distance, in points, from the top of the chart area.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LegendKey.Width">
      <summary>The width, in points, of the object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Line">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Line.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Line.ArrowHeadLength"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Line.ArrowHeadStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Line.ArrowHeadWidth"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Line.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Line.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Line.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Line.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Line.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Line.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Line.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Line.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Line.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Line.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Line.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Line.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Line.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Line.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Line.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Line.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Line.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Line.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Line.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Line.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Line.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Line.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Line.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Line.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Line.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Line.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Line.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.LinearGradient">
      <summary>The <see cref="T:Microsoft.Office.Interop.Excel.LinearGradient" /> object transitions through a series of colors in a linear manner along a specific angle.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LinearGradient.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
      <returns>Application (see above)</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LinearGradient.ColorStops">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.ColorStops" /> for the <see cref="T:Microsoft.Office.Interop.Excel.LinearGradient" /> object. Read-only</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ColorStops" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LinearGradient.Creator">
      <summary>Returns a 32-bit integer equivalent to a value in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LinearGradient.Degree">
      <summary>The angle of the linear gradient fill within a selection. Read/write</summary>
      <returns>Double</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LinearGradient.Parent">
      <summary>Returns the parent object for the specified object. Read-only</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.LineFormat">
      <summary>Represents line and arrowhead formatting.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LineFormat.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LineFormat.BackColor">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ColorFormat" /> object that represents the specified fill background color.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LineFormat.BeginArrowheadLength">
      <summary>Returns or sets the length of the arrowhead at the beginning of the specified line.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LineFormat.BeginArrowheadStyle">
      <summary>Returns or sets the style of the arrowhead at the beginning of the specified line.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LineFormat.BeginArrowheadWidth">
      <summary>Returns or sets the width of the arrowhead at the beginning of the specified line.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LineFormat.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LineFormat.DashStyle">
      <summary>Returns or sets the dash style for the specified line. Can be one of the <see cref="T:Microsoft.Office.Core.MsoLineDashStyle" /> constants.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LineFormat.EndArrowheadLength">
      <summary>Returns or sets the length of the arrowhead at the end of the specified line.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LineFormat.EndArrowheadStyle">
      <summary>Returns or sets the style of the arrowhead at the end of the specified line.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LineFormat.EndArrowheadWidth">
      <summary>Returns or sets the width of the arrowhead at the end of the specified line.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LineFormat.ForeColor">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ColorFormat" /> object that represents the specified foreground fill or solid color.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LineFormat.InsetPen">
      <summary>Gets or sets whether lines are drawn inside the specified shape's boundaries.</summary>
      <returns>A <see cref="T:Microsoft.Office.Core.MsoTriState" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LineFormat.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LineFormat.Pattern">
      <summary>Returns or sets the fill pattern.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LineFormat.Style">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Style" /> object that represents the style of the specified range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LineFormat.Transparency">
      <summary>Returns or sets the degree of transparency of the specified fill as a value from 0.0 (opaque) through 1.0 (clear).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LineFormat.Visible">
      <summary>Determines whether the object is visible.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LineFormat.Weight">
      <summary>Returns or sets the weight of the line.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Lines">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Lines._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Lines._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Lines._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Lines._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Lines.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Lines.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Lines.ArrowHeadLength"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Lines.ArrowHeadStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Lines.ArrowHeadWidth"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Lines.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Lines.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Lines.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Lines.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Lines.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Lines.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Lines.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Lines.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Lines.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Lines.Enabled"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Lines.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Lines.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Lines.Height"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Lines.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Lines.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Lines.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Lines.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Lines.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Lines.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Lines.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Lines.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Lines.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Lines.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Lines.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Lines.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Lines.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Lines.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.LinkFormat">
      <summary>Contains linked OLE object properties.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LinkFormat.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LinkFormat.AutoUpdate">
      <summary>True if the OLE object is updated automatically when the source changes. Valid only if the object is linked (its <see cref="P:Microsoft.Office.Interop.Excel._IOLEObject.OLEType" /> property must be xlOLELink).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LinkFormat.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LinkFormat.Locked">
      <summary>True if the object is locked; False if the object can be modified when the sheet is protected.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.LinkFormat.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.LinkFormat.Update">
      <summary>Updates the link.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ListBox">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBox.AddItem(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBox.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBox.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBox.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBox.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBox.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.Display3DShading"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBox.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.LinkedObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.List(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.ListCount"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.ListFillRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.ListIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.MultiSelect"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBox.RemoveAllItems"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBox.RemoveItem(System.Int32,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBox.Select(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.Selected(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBox.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBox.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ListBoxes">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBoxes._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBoxes._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBoxes._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBoxes._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBoxes._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBoxes._Dummy31"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBoxes._Dummy33"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBoxes.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBoxes.AddItem(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBoxes.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBoxes.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBoxes.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBoxes.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBoxes.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBoxes.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBoxes.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBoxes.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBoxes.Display3DShading"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBoxes.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBoxes.Enabled"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBoxes.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBoxes.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBoxes.Height"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBoxes.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBoxes.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBoxes.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBoxes.List(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBoxes.ListFillRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBoxes.ListIndex"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBoxes.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBoxes.MultiSelect"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBoxes.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBoxes.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBoxes.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBoxes.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBoxes.RemoveAllItems"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBoxes.RemoveItem(System.Int32,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBoxes.Select(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBoxes.Selected(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ListBoxes.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBoxes.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBoxes.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBoxes.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBoxes.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBoxes.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListBoxes.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ListColumn">
      <summary>Represents a column in a list. The <see cref="T:Microsoft.Office.Interop.Excel.ListColumn" /> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.ListColumns" /> collection. The <see cref="T:Microsoft.Office.Interop.Excel.ListColumns" /> collection contains all the columns in a list (<see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListColumn._Default">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListColumn.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListColumn.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListColumn.DataBodyRange">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that is the size of the data portion of a column. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Range" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ListColumn.Delete">
      <summary>Deletes the column of data in the list. Does not remove the column from the sheet. If the list is linked to a Microsoft Windows SharePoint Services site, the column cannot be removed from the server and an error is generated.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListColumn.Index">
      <summary>Returns the index number of the <see cref="T:Microsoft.Office.Interop.Excel.ListColumn" /> object within the <see cref="T:Microsoft.Office.Interop.Excel.ListColumns" /> collection. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListColumn.ListDataFormat">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ListDataFormat" /> object for the <see cref="T:Microsoft.Office.Interop.Excel.ListColumn" /> object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListColumn.Name">
      <summary>Returns or sets the name of the list column. This is also used as the display name of the list column. This name must be unique within the list. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListColumn.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListColumn.Range">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range to which the specified list object in the above list applies. Read-Only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListColumn.SharePointFormula">
      <summary>Returns a String representing the formula in a calculated column. The formula is expressed in Excel syntax (US English locale, A1 notation). Read-only String.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListColumn.Total">
      <summary>Returns the Total row for a <see cref="T:Microsoft.Office.Interop.Excel.ListColumn" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Range" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListColumn.TotalsCalculation">
      <summary>Determines the type of calculation in the Totals row of the list column based on the value of the <see cref="T:Microsoft.Office.Interop.Excel.XlTotalsCalculation" /> enumeration. Read/write.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListColumn.XPath">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> object that represents the Xpath of the element mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object. Read-only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ListColumns">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.ListColumn" /> objects in the specified <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object. Each ListColumn object represents a column in the list.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListColumns._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ListColumns.Add(System.Object)">
      <summary>Adds a new column to the list object. Returns a <see cref="T:Microsoft.Office.Interop.Excel.ListColumn" /> object.</summary>
      <param name="Position">Optional Object. Specifies the relative position of the new column that starts at 1. The previous column at this position is shifted outward.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListColumns.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListColumns.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListColumns.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ListColumns.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListColumns.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListColumns.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ListDataFormat">
      <summary>The ListDataFormat object holds all the data type properties of the <see cref="T:Microsoft.Office.Interop.Excel.ListColumn" /> object. These properties are read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListDataFormat._Default">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListDataFormat.AllowFillIn">
      <summary>Returns a Boolean value indicating whether users can provide their own data for cells in a column (rather than being restricted to a list of values) for those columns that supply a list of values. Returns False for lists that are not linked to a SharePoint site. Also returns False if the column is not a specified as choice or multi-choice. Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListDataFormat.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListDataFormat.Choices">
      <summary>Returns an Array of String values that contains the choices offered to the user by the ListLookUp, ChoiceMulti, and Choice data types of the <see cref="P:Microsoft.Office.Interop.Excel.ListDataFormat.DefaultValue" /> property. Read-only Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListDataFormat.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListDataFormat.DecimalPlaces">
      <summary>Returns an Integer value that represents the number of decimal places to show for the numbers in the <see cref="T:Microsoft.Office.Interop.Excel.ListColumn" /> object. Returns 0 if the <see cref="P:Microsoft.Office.Interop.Excel.ListDataFormat.Type" /> property setting is not appropriate for decimal places. Returns xlAutomatic (-4105 decimal) if the Microsoft Windows SharePoint Services site is automatically determining the number of decimal places to show in the SharePoint list. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListDataFormat.DefaultValue">
      <summary>Returns an Object representing the default data type value for a new row in a column. The Nothing object is returned when the schema does not specify a default value. Read-only Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListDataFormat.IsPercent">
      <summary>Returns a Boolean value. Returns True only if the number data for the <see cref="T:Microsoft.Office.Interop.Excel.ListColumn" /> object will be shown in percentage formatting. Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListDataFormat.lcid">
      <summary>Returns an Integer value that represents the LCID for the <see cref="T:Microsoft.Office.Interop.Excel.ListColumn" /> object that is specified in the schema definition. In Microsoft Excel, the LCID indicates the currency symbol to be used when this is an xlListDataTypeCurrency type. Returns 0 (which is the Language Neutral LCID) when no locale is set for the data type of the column. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListDataFormat.MaxCharacters">
      <summary>Returns an Integer containing the maximum number of characters allowed in the <see cref="T:Microsoft.Office.Interop.Excel.ListColumn" /> object if the <see cref="P:Microsoft.Office.Interop.Excel.ListDataFormat.Type" /> property is set to xlListDataTypeText or xlListDataTypeMultiLineText. Returns -1 for columns whose Type property is set to a non-text value. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListDataFormat.MaxNumber">
      <summary>Returns an Object containing the maximum value allowed in this field in the list column. The Nothing object is returned if a maximum value number has not been specified or if the <see cref="P:Microsoft.Office.Interop.Excel.ListDataFormat.Type" /> property setting is such that a maximum value for the column is not applicable. Read-only Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListDataFormat.MinNumber">
      <summary>Returns an Object containing the minimum value allowed in this field in the list column. This can be a negative floating point number. This property will return the Nothing object if no value has been specified for this field or if the setting of the Type property is such that a minimum value is not applicable to the column. Read-only Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListDataFormat.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListDataFormat.ReadOnly">
      <summary>Returns True if the object has been opened as read-only. Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListDataFormat.Required">
      <summary>Returns a Boolean value indicating whether the schema definition of a column requires data before the row is committed. Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListDataFormat.Type">
      <summary>Indicates the data type of the list column. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlListDataType" />.</summary>
      <returns>Required. An expression that returns a <see cref="T:Microsoft.Office.Interop.Excel.ListDataFormat" /> object.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ListObject">
      <summary>Represents a list object on a worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject._Default">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.Active">
      <summary>Returns a Boolean value indicating whether a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object in a worksheet is active — that is, whether the active cell is inside the range of the ListObject object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.AlternativeText">
      <summary>Gets or sets the descriptive (alternative) text string for the specified table.</summary>
      <returns>The descriptive (alternative) text string for the specified table.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.AutoFilter">
      <summary>Filters a list using the <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" />. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.Comment">
      <summary>Returns or sets the comment associated with the list object. Read/write String.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.DataBodyRange">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range that contains the data area in the list between the header row and the insert row.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ListObject.Delete">
      <summary>Deletes the <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object and clears the cell data from the worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.DisplayName">
      <summary>Returns or sets the display name for the specified <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object. Read/write String.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.DisplayRightToLeft">
      <summary>Determines if the specified window, worksheet, or <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object is displayed from right to left instead of from left to right.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ListObject.ExportToVisio">
      <summary>Exports a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object to Visio.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.HeaderRowRange">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range of the header row for a list.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.InsertRowRange">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object representing the Insert row, if any, of a specified <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.ListColumns">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ListColumns" /> collection that represents all the columns in a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.ListRows">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ListRows" /> object that represents all the rows of data in the <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.Name">
      <summary>Returns or sets the name of the <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.Parent">
      <summary>Returns the parent object for the specified object. </summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ListObject.Publish(System.Object,System.Boolean)">
      <summary>Publishes the <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object to a server that is running Microsoft Windows SharePoint Services.</summary>
      <param name="Target">Required Object. Contains an Array of Strings. The following table describes the elements of this array:Element#Contents0URL of SharePoint server1ListName (Display Name)2Description of the list. Optional.</param>
      <param name="LinkSource">Required Boolean.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.QueryTable">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> object that provides a link for the <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object to the list server.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.Range">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range to which the specified list object applies.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ListObject.Refresh">
      <summary>Returns the current data and schema for the list from the server that is running Microsoft Windows SharePoint Services.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ListObject.Resize(Microsoft.Office.Interop.Excel.Range)">
      <summary>The Resize method allows a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object to be resized over a new range.</summary>
      <param name="Range">Required Range.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.SharePointURL">
      <summary>Returns a String representing the URL of the SharePoint list for a given <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.ShowAutoFilter">
      <summary>Returns a Boolean value indicating whether the AutoFilter will be displayed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.ShowHeaders">
      <summary>Returns or sets if the header information should be displayed for the specified <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.ShowTableStyleColumnStripes">
      <summary>Returns or sets if the Column Stripes table style is used for the specified <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.ShowTableStyleFirstColumn">
      <summary>Returns or sets if the first column is formatted for the specified <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.ShowTableStyleLastColumn">
      <summary>Returns or sets if the last column is displayed for the specified <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.ShowTableStyleRowStripes">
      <summary>Returns or sets if the Row Stripes table style is used for the specified <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.ShowTotals">
      <summary>Returns or sets a Boolean value to indicate whether the Total row is visible.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.Sort">
      <summary>Gets or sets the sort column or columns, and sort order for the <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> collection.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Sort" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.SourceType">
      <summary>Returns one of the <see cref="T:Microsoft.Office.Interop.Excel.XlListObjectSourceType" /> constants indicating the current source of the list.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.Summary">
      <summary>Gets or sets the description associated with the alternative text string for the specified table.</summary>
      <returns>The description associated with the alternative text string for the specified table.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.TableStyle">
      <summary>Gets or sets the table style for the specified <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object. Read/write Object.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.TotalsRowRange">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object representing the Total row, if any, from a specified <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ListObject.Unlink">
      <summary>Removes the link to a Microsoft Windows SharePoint Services site from a list.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ListObject.Unlist">
      <summary>Removes the list functionality from a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ListObject.UpdateChanges(Microsoft.Office.Interop.Excel.XlListConflict)">
      <summary>Updates the list on a Microsoft Windows SharePoint Services site with the changes made to the list in the worksheet.</summary>
      <param name="iConflictType">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlListConflict" />. Conflict resolution options.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObject.XmlMap">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object that represents the schema map used for the specified list.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ListObjects">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> objects on a worksheet. Each <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object represents a list in the worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObjects._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ListObjects.Add(Microsoft.Office.Interop.Excel.XlListObjectSourceType,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object)">
      <summary>Creates a new list object. Returns a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object.</summary>
      <param name="SourceType">Optional XlListObjectSourceType. Indicates the kind of source for the query. Can be one of the following XlListObjectSourceType constants: xlSrcExternal or xlSrcRange. If omitted, the <paramref name="SourceType" /> will default to xlSrcRange.</param>
      <param name="Source">Optional when <paramref name="SourceType" /> is xlSrcRange. A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object representing the data source. If omitted, the <paramref name="Source" /> will default to the range returned by list range detection code. Required when <paramref name="SourceType" /> is xlSrcExternal. An array of String values specifying a connection to the source.Element#Contents0URL to SharePoint site 1ListName 2ViewGUID</param>
      <param name="LinkSource">Optional Boolean. Indicates whether an external data source is to be linked to the ListObject object. If <paramref name="SourceType" /> is xlSrcExternal, default is True. Invalid if <paramref name="SourceType" /> is xlSrcRange, and will return an error if not omitted.</param>
      <param name="XlListObjectHasHeaders">Optional Object. An <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> constant that indicates whether the data being imported has column labels. If the Source does not contain headers, Excel will automatically generate headers.</param>
      <param name="Destination">Optional Object. A Range object specifying a single-cell reference as the destination for the top-left corner of the new list object. If the Range object refers to more than one cell, an error is generated. The <paramref name="Destination" /> argument must be specified when <paramref name="SourceType" /> is set to xlSrcExternal. The <paramref name="Destination" /> argument is ignored if <paramref name="SourceType" /> is set to xlSrcRange. The destination range must be on the worksheet that contains the specified <see cref="T:Microsoft.Office.Interop.Excel.ListObjects" /> collection. New columns will be inserted at the <paramref name="Destination" /> to fit the new list. Therefore, existing data will not be overwritten.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ListObjects.AddEx(Microsoft.Office.Interop.Excel.XlListObjectSourceType,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObjects.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObjects.Count">
      <summary>Returns the number of objects in the collection. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObjects.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ListObjects.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObjects.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListObjects.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ListRow">
      <summary>Represents a row in a List object. The ListRow object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.ListRows" /> collection. The ListRows collection contains all the rows in a list object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListRow.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListRow.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ListRow.Delete">
      <summary>Deletes the cells of the list row and shifts upward any remaining cells below the deleted row. You can delete rows in the list even when the list is linked to a SharePoint site. The list on the SharePoint site will not be updated, however, until you synchronize your changes.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListRow.Index">
      <summary>Returns the index number of the <see cref="T:Microsoft.Office.Interop.Excel.ListRow" /> object within the <see cref="T:Microsoft.Office.Interop.Excel.ListRows" /> collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListRow.InvalidData">
      <summary>Returns a Boolean value that indicates if a row in a list contains cells that don't pass data validation and need to be fixed before any changes can be committed to the Microsoft Windows SharePoint Services site.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListRow.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListRow.Range">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range to which the specified list object applies.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ListRows">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.ListRow" /> objects in the specified <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object. Each ListRow object represents a row in the list.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListRows._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ListRows.Add(System.Object)">
      <summary>Adds a new row to the list object. Returns a <see cref="T:Microsoft.Office.Interop.Excel.ListRow" /> object.</summary>
      <param name="Position">Optional Integer. Specifies the relative position of the new row.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ListRows.AddEx(System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListRows.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListRows.Count">
      <summary>Returns the number of objects in the collection. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListRows.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ListRows.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ListRows.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ListRows.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Mailer">
      <summary>You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Mailer.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Mailer.BCCRecipients">
      <summary>You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Mailer.CCRecipients">
      <summary>You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Mailer.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Mailer.Enclosures">
      <summary>You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Mailer.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Mailer.Received">
      <summary>You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Mailer.SendDateTime">
      <summary>You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Mailer.Sender">
      <summary>You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Mailer.Subject">
      <summary>Returns or sets the subject for the mailer or routing slip.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Mailer.ToRecipients">
      <summary>You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Mailer.WhichAddress">
      <summary>You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Menu">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Menu.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Menu.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Menu.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Menu.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Menu.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Menu.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Menu.MenuItems"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Menu.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.MenuBar">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.MenuBar.Activate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuBar.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuBar.BuiltIn"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuBar.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuBar.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.MenuBar.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuBar.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuBar.Menus"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuBar.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.MenuBar.Reset"></member>
    <member name="T:Microsoft.Office.Interop.Excel.MenuBars">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuBars._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.MenuBars.Add(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuBars.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuBars.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuBars.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.MenuBars.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuBars.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuBars.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.MenuItem">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuItem.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuItem.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuItem.Checked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuItem.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.MenuItem.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuItem.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuItem.HelpContextID"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuItem.HelpFile"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuItem.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuItem.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuItem.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuItem.StatusBar"></member>
    <member name="T:Microsoft.Office.Interop.Excel.MenuItems">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuItems._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.MenuItems.Add(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.MenuItems.AddMenu(System.String,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuItems.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuItems.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuItems.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.MenuItems.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuItems.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.MenuItems.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.Menus">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Menus._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Menus.Add(System.String,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Menus.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Menus.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Menus.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Menus.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Menus.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Menus.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.Module">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Module._CodeName"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Module._Dummy18"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Module._Dummy21"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Module._Dummy23"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Module._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Module._PrintOut_2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Module._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Module._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Module.Activate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Module.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Module.CodeName"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Module.Copy(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Module.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Module.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Module.Index"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Module.InsertFile(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Module.Move(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Module.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Module.Next"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Module.OnDoubleClick"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Module.OnSheetActivate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Module.OnSheetDeactivate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Module.PageSetup"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Module.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Module.Previous"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Module.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Module.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Module.ProtectContents"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Module.ProtectionMode"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Module.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Module.Select(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Module.Shapes"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Module.Unprotect(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Module.Visible"></member>
    <member name="T:Microsoft.Office.Interop.Excel.Modules">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Modules._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Modules._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Modules._Dummy7"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Modules._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Modules.Add(System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Modules.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Modules.Copy(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Modules.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Modules.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Modules.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Modules.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Modules.HPageBreaks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Modules.Item(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Modules.Move(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Modules.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Modules.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Modules.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Modules.Select(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Modules.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Modules.VPageBreaks"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ModuleView">
      <summary>Represents existing <see cref="T:Microsoft.Office.Interop.Excel.Module" />views in the workbook. </summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ModuleView.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
      <returns>Application (see above)</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ModuleView.Creator">
      <summary>Returns a 32-bit integer equivalent to a <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> constant that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ModuleView.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ModuleView.Sheet">
      <summary>Returns the sheet name for the specified <see cref="T:Microsoft.Office.Interop.Excel.ModuleView" /> object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation">
      <summary>Returns or sets the concurrent calculation mode.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.MultiThreadedCalculation.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
      <returns>Application (see above)</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.MultiThreadedCalculation.Creator">
      <summary>Returns a 32-bit integer corresponding to a constant in <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.MultiThreadedCalculation.Enabled">
      <summary>The Enabled property allows MultiThreadedCalculation objects to be enabled or disabled at run time. Read/write.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.MultiThreadedCalculation.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.MultiThreadedCalculation.ThreadCount">
      <summary>Gets the total count of the process threads that are a part of the specified <see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" /> object.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.MultiThreadedCalculation.ThreadMode">
      <summary>Returns or sets the thread mode for the specified <see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" /> object. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlThreadMode" />.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlThreadMode" />
      </returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Name">
      <summary>Represents a defined name for a range of cells.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Name._Default">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Name.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Name.Category">
      <summary>Returns or sets the category for the specified name in the language of the macro.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Name.CategoryLocal">
      <summary>Returns or sets the category for the specified name, in the language of the user, if the name refers to a custom function or command.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Name.Comment">
      <summary>Returns or sets the comment associated with the name. Read/write String.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Name.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Name.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Name.Index">
      <summary>Returns the index number of the object within the collection of similar objects.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Name.MacroType">
      <summary>Returns or sets what the name refers to.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Name.Name">
      <summary>Returns or sets the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Name.NameLocal">
      <summary>Returns or sets the name of the object in the language of the user.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Name.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Name.RefersTo">
      <summary>Returns or sets the formula that the name is defined to refer to, in the language of the macro and in A1-style notation, beginning with an equal sign.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Name.RefersToLocal">
      <summary>Returns or sets the formula that the name refers to.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Name.RefersToR1C1">
      <summary>Returns or sets the formula that the name refers to.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Name.RefersToR1C1Local">
      <summary>Returns or sets the formula that the name refers to.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Name.RefersToRange">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object referred to by a <see cref="T:Microsoft.Office.Interop.Excel.Name" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Name.ShortcutKey">
      <summary>Returns or sets the shortcut key for a name defined as a custom Microsoft Excel 4.0 macro command.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Name.ValidWorkbookParameter">
      <summary>Returns True if the specified Name object is a valid workbook parameter. Read-only Boolen.</summary>
      <returns>Boolen</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Name.Value">
      <summary>Returns a string containing the formula that the name is defined to refer to.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Name.Visible">
      <summary>Determines whether the object is visible.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Name.WorkbookParameter">
      <summary>Returns or sets the specified <see cref="T:Microsoft.Office.Interop.Excel.Name" /> object as a workbook parameter. Read/write</summary>
      <returns>Boolean</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Names">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Name" /> objects in the application or workbook. Each Name object represents a defined name for a range of cells. Names can be either built-in names — such as Database, Print_Area, and Auto_Open — or custom names.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Names._Default(System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Names.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Defines a new name. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Name" /> object.</summary>
      <param name="Name">Optional Object. Required if <paramref name="NameLocal" /> isn't specified. The text to use as the name. Names cannot include spaces and cannot look like cell references.</param>
      <param name="RefersTo">Optional Object. Required unless one of the other <paramref name="RefersTo" /> arguments is specified. Describes what the name refers to (using A1-style notation). Note Nothing is returned if the reference does not exist.</param>
      <param name="Visible">Optional Object. True to define the name normally. False to define the name as a hidden name (that is, it doesn't appear in either the Define Name, Paste Name, or Goto dialog box). The default value is True.</param>
      <param name="MacroType">Optional Object. The macro type, as shown in the following table.ValueMeaning1User-defined function (Function procedure)2Macro (also known as Sub procedure)3 or omittedNone (that is, the name doesn't refer to a user-defined function or macro)</param>
      <param name="ShortcutKey">Optional Object. The macro shortcut key. Must be a single letter, such as "z" or "Z". Applies only for command macros.</param>
      <param name="Category">Optional Object. The category of the macro or function if <paramref name="MacroType" /> is 1 or 2. The category is used in the Function Wizard. Existing categories can be referred to either by number (starting at 1) or by name (in the language of the macro). Microsoft Excel creates a new category if the specified category doesn't already exist.</param>
      <param name="NameLocal">Optional Object. Required if <paramref name="Name" /> isn't specified. The text to use as the name (in the language of the user). Names cannot include spaces and cannot look like cell references.</param>
      <param name="RefersToLocal">Optional Object. Required unless one of the other <paramref name="RefersTo" /> arguments is specified. Describes what the name refers to (in the language of the user, using A1-style notation).</param>
      <param name="CategoryLocal">Optional Object. Required if <paramref name="Category" /> isn't specified. Text identifying the category of a custom function in the language of the user.</param>
      <param name="RefersToR1C1">Optional Object. Required unless one of the other <paramref name="RefersTo" /> arguments is specified. Describes what the name refers to (using R1C1-style notation).</param>
      <param name="RefersToR1C1Local">Optional Object. Required unless one of the other <paramref name="RefersTo" /> arguments is specified. Describes what the name refers to (in the language of the user, using R1C1-style notation).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Names.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Names.Count">
      <summary>Returns the number of objects in the collection. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Names.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Names.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Names.Item(System.Object,System.Object,System.Object)">
      <summary>Returns a single <see cref="T:Microsoft.Office.Interop.Excel.Name" /> object from a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection.</summary>
      <param name="Index">Optional Object. The name or number of the defined name to be returned.</param>
      <param name="IndexLocal">Optional Object. The name of the defined name in the language of the user. No names will be translated if you use this argument.</param>
      <param name="RefersTo">Optional Object. What the name refers to. You use this argument to identify a name by what it refers to.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Names.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.NegativeBarFormat">
      <summary>Represents the color settings of the data bars for negative values that are defined by a data bar conditional formating rule.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.NegativeBarFormat.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.NegativeBarFormat.BorderColor">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.FormatColor" /> object that you can use to specify the border color for negative data bars.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.FormatColor" /> object that you can use to specify the border color for negative data bars.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.NegativeBarFormat.BorderColorType">
      <summary>Gets whether to use the same border color as positive data bars.</summary>
      <returns>Specifies whether to use the same border color as positive data bars.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.NegativeBarFormat.Color">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.FormatColor" /> object that you can use to specify the fill color for negative data bars.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.FormatColor" /> object that you can use to specify the fill color for negative data bars.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.NegativeBarFormat.ColorType">
      <summary>Gets or sets whether to use the same fill color as positive data bars.</summary>
      <returns>Specifies whether to use the same fill color as positive data bars.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.NegativeBarFormat.Creator">
      <summary>Gets a 32-bit integer that indicates the application in which this object was created.</summary>
      <returns>A 32-bit integer that indicates the application in which this object was created.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.NegativeBarFormat.Parent">
      <summary>Gets the parent object for the specified object.</summary>
      <returns>The parent object for the specified object.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ODBCConnection">
      <summary>Represents the ODBC connection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCConnection.AlwaysUseConnectionFile">
      <summary>True if the connection file is always used to establish connection to the data source. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCConnection.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
      <returns>Application (see above)</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCConnection.BackgroundQuery">
      <summary>True if queries for the ODBC connection are performed asynchronously (in the background). Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ODBCConnection.CancelRefresh">
      <summary>Cancels all refresh operations in progress for the specified ODBC connection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCConnection.CommandText">
      <summary>Returns or sets the command string for the specified data source. Read/write Object.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCConnection.CommandType">
      <summary>Returns or sets one of the <see cref="T:Microsoft.Office.Interop.Excel.XlCmdType" /> constants. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlCmdType" />. </summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCmdType" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCConnection.Connection">
      <summary>Returns or sets a string that contains ODBC settings that enable Microsoft Excel to connect to an ODBC data source. Read/write Object.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCConnection.Creator">
      <summary>Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCConnection.EnableRefresh">
      <summary>True if the connection can be refreshed by the user. The default value is True. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCConnection.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ODBCConnection.Refresh">
      <summary>Refreshes an ODBC connection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCConnection.RefreshDate">
      <summary>Returns the date on which the ODBC connection was last refreshed. Read-only DateTime.</summary>
      <returns>DateTime</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCConnection.Refreshing">
      <summary>True if a background ODBC query is in progress for the specified ODBC connection. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCConnection.RefreshOnFileOpen">
      <summary>True if the connection is automatically updated each time the workbook is opened. The default value is False. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCConnection.RefreshPeriod">
      <summary>Returns or sets the number of minutes between refreshes. Read/write Integer.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCConnection.RobustConnect">
      <summary>Returns or sets how ODBC connection connects to its data source. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlRobustConnect" />.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlRobustConnect" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ODBCConnection.SaveAsODC(System.String,System.Object,System.Object)">
      <summary>Saves the ODBC connection as a Microsoft Office Data Connection file.</summary>
      <param name="ODCFileName">Location to save the file.</param>
      <param name="Description">Description that will be saved in the file.</param>
      <param name="Keywords">Space-separated keywords that can be used to search for this file.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCConnection.SavePassword">
      <summary>True if password information in an ODBC connection string is saved in the connection string. False if the password is removed. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCConnection.ServerCredentialsMethod">
      <summary>Returns or sets the type of credentials that should be used for server authentication. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlCredentialsMethod" />.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCredentialsMethod" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCConnection.ServerSSOApplicationID">
      <summary>Returns or sets a single sign-on application (SSO) identifier that is used to do a lookup in the SSO database for credentials. Read/write String.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCConnection.SourceConnectionFile">
      <summary>Returns or sets a String indicating the Microsoft Office Data Connection file or similar file that was used to create the connection. Read/write.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCConnection.SourceData">
      <summary>Returns the data source for the ODBC connection, as shown in the table. Read/write Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCConnection.SourceDataFile">
      <summary>Returns or sets a String indicating the source data file for an ODBC connection.  Read/write.</summary>
      <returns>String</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ODBCError">
      <summary>Represents an ODBC error generated by the most recent ODBC query.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCError.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCError.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCError.ErrorString">
      <summary>Returns the ODBC error string.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCError.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCError.SqlState">
      <summary>Returns the SQL state error.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ODBCErrors">
      <summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.ODBCError" /> objects.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCErrors._Default(System.Int32)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCErrors.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCErrors.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCErrors.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ODBCErrors.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ODBCErrors.Item(System.Int32)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Integer. The index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ODBCErrors.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.OLEDBConnection">
      <summary>Represents the OLE DB connection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.ADOConnection">
      <summary>Returns an ADO connection object if the PivotTable cache is connected to an OLE DB data source. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.AlwaysUseConnectionFile">
      <summary>Trueif the connection file is always used to establish connection to the data source. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
      <returns>Application</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.BackgroundQuery">
      <summary>True if queries for the OLE DB connection are performed asynchronously (in the background). Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.CalculatedMembers">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMembers" /> collection for the specified connection.</summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMembers" /> collection for the specified connection.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEDBConnection.CancelRefresh">
      <summary>Cancels all refresh operations in progress for the specified OLE DB connection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.CommandText">
      <summary>Returns or sets the command string for the specified data source. Read/write Object.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.CommandType">
      <summary>Returns or sets one of the XlCmdType constants. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlCmdType" />. </summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCmdType" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Connection">
      <summary>Returns or sets a string that contains OLE DB settings that enable Microsoft Excel to connect to an OLE DB data source. Read/write Object.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Creator">
      <summary>Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.EnableRefresh">
      <summary>True if the connection can be refreshed by the user. The default value is True. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.IsConnected">
      <summary>Returns True if the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.MaintainConnection" /> property isTrue. Returns False if it is not currently connected to its source. Read-only Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.LocalConnection">
      <summary>Returns or sets the connection string to an offline cube file. Read/write Object.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.LocaleID">
      <summary>Gets or sets the locale identifier for the specified connection.</summary>
      <returns>The locale identifier for the specified connection.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.MaintainConnection">
      <summary>Returns True if the connection to the specified data source is maintained after the refresh operation and until the workbook is closed. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEDBConnection.MakeConnection">
      <summary>Establishes a connection for the specified OLE DB connection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.MaxDrillthroughRecords">
      <summary>Returns or sets the maximum number of records to retrieve. Read/write Integer.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.OLAP">
      <summary>Returns True if the OLE DB connection is connected to an Online Analytical Processing (OLAP) server. Read-only Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEDBConnection.Reconnect">
      <summary>Drops and then reconnects the specified connection.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEDBConnection.Refresh">
      <summary>Refreshes an OLE DB connection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.RefreshDate">
      <summary>Returns the date on which the OLE DB connection was last refreshed. Read-only DateTime.</summary>
      <returns>DateTime</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Refreshing">
      <summary>True if a background OLE DB query is in progress for the specified OLE DB connection. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.RefreshOnFileOpen">
      <summary>True if the connection is automatically updated each time the workbook is opened. The default value is False. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.RefreshPeriod">
      <summary>Returns or sets the number of minutes between refreshes. Read/write Integer.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.RetrieveInOfficeUILang">
      <summary>True if the data and errors are to be retrieved in the Office user interface display language when available.  Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.RobustConnect">
      <summary>Returns or sets how OLE DB connection connects to its data source. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlRobustConnect" />.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlRobustConnect" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEDBConnection.SaveAsODC(System.String,System.Object,System.Object)">
      <summary>Saves the OLE DB connection as an Microsoft Office Data Connection file.</summary>
      <param name="ODCFileName">Location to save the file.</param>
      <param name="Description">Description that will be saved in the file.</param>
      <param name="Keywords">Space-separated keywords that can be used to search for this file.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.SavePassword">
      <summary>True if password information in an OLE DB connection string is saved in the connection string. False if the password is removed. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.ServerCredentialsMethod">
      <summary>Returns or sets the type of credentials that should be used for server authentication. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlCredentialsMethod" />.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCredentialsMethod" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.ServerFillColor">
      <summary>True if the fill color format for the OLAP server is retrieved from the server when using the specified connection.  Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.ServerFontStyle">
      <summary>True if the font style format for the OLAP server is retrieved from the server when using the specified connection.  Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.ServerNumberFormat">
      <summary>True if the number format for the OLAP server is retrieved from the server when using the specified connection.  Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.ServerSSOApplicationID">
      <summary>Returns or sets a single sign-on application (SSO) identifier that is used to perform a lookup in the SSO database for credentials. Read/write String.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.ServerTextColor">
      <summary>True if the text color format for the OLAP server is retrieved from the server when using the specified connection.  Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.SourceConnectionFile">
      <summary>Returns or sets a String indicating the Microsoft Office Data Connection file or similar file that was used to create the connection. Read/write.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.SourceDataFile">
      <summary>Returns or sets a String indicating the source data file for an OLE DB connection. Read/write.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBConnection.UseLocalConnection">
      <summary>True if the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.LocalConnection" /> property is used to specify the string that enables Microsoft Excel to connect to a data source. False if the connection string specified by the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Connection" /> property is used. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.OLEDBError">
      <summary>Represents an OLE DB error returned by the most recent OLE DB query.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBError.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBError.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBError.ErrorString">
      <summary>Returns the ODBC error string.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBError.Native">
      <summary>Returns a provider-specific numeric value that specifies an error. The error number corresponds to an error condition that resulted after the most recent OLE DB query.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBError.Number">
      <summary>Returns a numeric value that specifies an error. The error number corresponds to a unique trap number corresponding to an error condition that resulted after the most recent OLE DB query.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBError.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBError.SqlState">
      <summary>Returns the SQL state error.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBError.Stage">
      <summary>Returns a numeric value specifying the stage of an error that resulted after the most recent OLE DB query.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.OLEDBErrors">
      <summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.OLEDBError" /> objects.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBErrors._Default(System.Int32)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBErrors.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBErrors.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBErrors.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEDBErrors.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEDBErrors.Item(System.Int32)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Integer. The index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEDBErrors.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.OLEFormat">
      <summary>Contains OLE object properties.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEFormat.Activate">
      <summary>Activates the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEFormat.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEFormat.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEFormat.Object">
      <summary>Returns the OLE Automation object associated with this OLE object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEFormat.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEFormat.progID">
      <summary>Returns the programmatic identifiers for the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEFormat.Verb(System.Object)">
      <summary>Sends a verb to the server of the specified OLE object.</summary>
      <param name="Verb">Optional Object. The verb that the server of the OLE object should act on. If this argument is omitted, the default verb is sent. The available verbs are determined by the object's source application. Typical verbs for an OLE object are Open and Primary (represented by the <see cref="T:Microsoft.Office.Interop.Excel.XlOLEVerb" /> constants xlOpen and xlPrimary).</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.OLEObject">
      <summary>Represents an ActiveX control or a linked or embedded OLE object on a worksheet. The OLEObject object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> collection. The OLEObjects collection contains all the OLE objects on a single worksheet.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.OLEObjectClass">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjectClass.#ctor"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjectClass.Activate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjectClass.add_GotFocus(Microsoft.Office.Interop.Excel.OLEObjectEvents_GotFocusEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjectClass.add_LostFocus(Microsoft.Office.Interop.Excel.OLEObjectEvents_LostFocusEventHandler)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.AltHTML"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.AutoLoad"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.AutoUpdate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjectClass.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjectClass.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjectClass.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjectClass.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjectClass.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjectClass.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.Enabled"></member>
    <member name="E:Microsoft.Office.Interop.Excel.OLEObjectClass.GotFocus"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.ListFillRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.Locked"></member>
    <member name="E:Microsoft.Office.Interop.Excel.OLEObjectClass.LostFocus"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.Object"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.OLEType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.progID"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjectClass.remove_GotFocus(Microsoft.Office.Interop.Excel.OLEObjectEvents_GotFocusEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjectClass.remove_LostFocus(Microsoft.Office.Interop.Excel.OLEObjectEvents_LostFocusEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjectClass.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjectClass.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.SourceName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.TopLeftCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjectClass.Update"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjectClass.Verb(Microsoft.Office.Interop.Excel.XlOLEVerb)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjectClass.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.OLEObjectEvents">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjectEvents.GotFocus"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjectEvents.LostFocus"></member>
    <member name="T:Microsoft.Office.Interop.Excel.OLEObjectEvents_Event">
      <summary>Events interface for Microsoft Excel <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" /> object events.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjectEvents_Event.add_GotFocus(Microsoft.Office.Interop.Excel.OLEObjectEvents_GotFocusEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjectEvents_Event.add_LostFocus(Microsoft.Office.Interop.Excel.OLEObjectEvents_LostFocusEventHandler)"></member>
    <member name="E:Microsoft.Office.Interop.Excel.OLEObjectEvents_Event.GotFocus"></member>
    <member name="E:Microsoft.Office.Interop.Excel.OLEObjectEvents_Event.LostFocus"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjectEvents_Event.remove_GotFocus(Microsoft.Office.Interop.Excel.OLEObjectEvents_GotFocusEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjectEvents_Event.remove_LostFocus(Microsoft.Office.Interop.Excel.OLEObjectEvents_LostFocusEventHandler)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.OLEObjectEvents_GotFocusEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.OLEObjectEvents_Event.GotFocus" /> event. The GotFocus event occurs when an ActiveX control gets input focus.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.OLEObjectEvents_LostFocusEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.OLEObjectEvents_Event.LostFocus" /> event. The LostFocus event occurs when an ActiveX control loses input focus.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.OLEObjectEvents_SinkHelper">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjectEvents_SinkHelper.GotFocus"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjectEvents_SinkHelper.LostFocus"></member>
    <member name="F:Microsoft.Office.Interop.Excel.OLEObjectEvents_SinkHelper.m_dwCookie"></member>
    <member name="F:Microsoft.Office.Interop.Excel.OLEObjectEvents_SinkHelper.m_GotFocusDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.OLEObjectEvents_SinkHelper.m_LostFocusDelegate"></member>
    <member name="T:Microsoft.Office.Interop.Excel.OLEObjects">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" /> objects on the specified worksheet. Each OLEObject object represents an ActiveX control or a linked or embedded OLE object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy12">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy15">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy22">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy3">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy30">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy32">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy33">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy34">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy36">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy37">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy38">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy39">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy40">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy41">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Adds a new OLE object to a sheet. Returns an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" /> object.</summary>
      <param name="ClassType">Optional Object. (You must specify either <paramref name="ClassType" /> or <paramref name="FileName" />.) A string that contains the programmatic identifier for the object to be created. If <paramref name="ClassType" /> is specified, <paramref name="FileName" /> and <paramref name="Link" /> are ignored.</param>
      <param name="Filename">Optional Object. (You must specify either <paramref name="ClassType" /> or <paramref name="FileName" />.) A string that specifies the file to be used to create the OLE object.</param>
      <param name="Link">Optional Object. True to have the new OLE object based on <paramref name="FileName" /> be linked to that file. If the object isn't linked, the object is created as a copy of the file. The default value is False.</param>
      <param name="DisplayAsIcon">Optional Object. True to display the new OLE object either as an icon or as its regular picture. If this argument is True, <paramref name="IconFileName" /> and <paramref name="IconIndex" /> can be used to specify an icon.</param>
      <param name="IconFileName">Optional Object. A string that specifies the file that contains the icon to be displayed. This argument is used only if <paramref name="DisplayAsIcon" /> is True. If this argument isn't specified or the file contains no icons, the default icon for the OLE class is used</param>
      <param name="IconIndex">Optional Object. The number of the icon in the icon file. This is used only if <paramref name="DisplayAsIcon" /> is True and <paramref name="IconFileName" /> refers to a valid file that contains icons. If an icon with the given index number doesn't exist in the file specified by <paramref name="IconFileName" />, the first icon in the file is used.</param>
      <param name="IconLabel">Optional Object. A string that specifies a label to display beneath the icon. This is used only if <paramref name="DisplayAsIcon" /> is True. If this argument is omitted or is an empty string (""), no caption is displayed.</param>
      <param name="Left">Optional Object. The initial coordinates of the new object in points, relative to the upper-left corner of cell A1 on a worksheet, or to the upper-left corner of a chart.</param>
      <param name="Top">Optional Object. The initial coordinates of the new object in points, relative to the upper-left corner of cell A1 on a worksheet, or to the upper-left corner of a chart.</param>
      <param name="Width">Optional Object. The initial size of the new object in points.</param>
      <param name="Height">Optional Object. The initial size of the new object, in points.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjects.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjects.AutoLoad">
      <summary>True if the OLE object is automatically loaded when the workbook that contains it is opened.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjects.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects.BringToFront">
      <summary>Brings the object to the front of the z-order.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects.Copy">
      <summary>Copies the object to the Clipboard.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
      <summary>Copies the selected object to the Clipboard as a picture.</summary>
      <param name="Appearance">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />. Specifies how the picture should be copied.</param>
      <param name="Format">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />. The format of the picture.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjects.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjects.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects.Cut">
      <summary>Cuts the object to the Clipboard or pastes it into a specified destination.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects.Duplicate">
      <summary>Duplicates the object and returns a reference to the new copy.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjects.Enabled">
      <summary>True if the object is enabled.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects.Group">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjects.Height">
      <summary>The height, in points, of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjects.Interior">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjects.Left">
      <summary>The distance, in points, from the left edge of the object to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjects.Locked">
      <summary>True if the object is locked; False if the object can be modified when the sheet is protected.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjects.OnAction">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjects.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjects.Placement">
      <summary>Returns or sets the way the object is attached to the cells below it.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjects.PrintObject">
      <summary>True if the object will be printed when the document is printed.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects.Select(System.Object)">
      <summary>Selects the object.</summary>
      <param name="Replace">Optional Object. True to replace the current selection with the specified object. False to extend the current selection to include any previously selected objects and the specified object.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.OLEObjects.SendToBack">
      <summary>Sends the object to the back of the z-order.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjects.Shadow">
      <summary>True if the font is a shadow font or if the object has a shadow.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjects.ShapeRange">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object that represents the specified object or objects.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjects.SourceName">
      <summary>Returns or sets the specified object's link source name.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjects.Top">
      <summary>The distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjects.Visible">
      <summary>Determines whether the object is visible.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjects.Width">
      <summary>The width, in points, of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OLEObjects.ZOrder">
      <summary>Returns the z-order position of the object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.OptionButton">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.Accelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButton.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButton.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButton.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButton.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButton.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButton.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.Display3DShading"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButton.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.GroupBox"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.PhoneticAccelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButton.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButton.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButton.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.OptionButtons">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButtons._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButtons._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButtons._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButtons._Dummy3"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.Accelerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButtons.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButtons.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButtons.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButtons.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButtons.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButtons.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButtons.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.Display3DShading"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButtons.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.Enabled"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButtons.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButtons.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.GroupBox"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButtons.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.PhoneticAccelerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButtons.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.OptionButtons.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.OptionButtons.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.Outline">
      <summary>Represents an outline on a worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Outline.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Outline.AutomaticStyles">
      <summary>True if the outline uses automatic styles.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Outline.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Outline.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Outline.ShowLevels(System.Object,System.Object)">
      <summary>Displays the specified number of row and/or column levels of an outline.</summary>
      <param name="RowLevels">Optional Object. Specifies the number of row levels of an outline to display. If the outline has fewer levels than the number specified, Microsoft Excel displays all the levels. If this argument is 0 (zero) or is omitted, no action is taken on rows.</param>
      <param name="ColumnLevels">Optional Object. Specifies the number of column levels of an outline to display. If the outline has fewer levels than the number specified, Microsoft Excel displays all the levels. If this argument is 0 (zero) or is omitted, no action is taken on columns.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Outline.SummaryColumn">
      <summary>Returns or sets the location of the summary columns in the outline.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Outline.SummaryRow">
      <summary>Returns or sets the location of the summary rows in the outline.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Oval">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Oval.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Oval.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Oval.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Oval.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Oval.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Oval.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Oval.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.ReadingOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Oval.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Oval.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Oval.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.Ovals">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Ovals._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Ovals._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Ovals._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Ovals._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Ovals.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Ovals.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Ovals.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Ovals.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Ovals.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Ovals.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Ovals.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Ovals.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.Formula"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Ovals.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Ovals.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Ovals.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.ReadingOrder"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Ovals.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Ovals.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ovals.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.Page">
      <summary>Represents a page in a workbook. Use the <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> object and the related methods and properties for programmatically defining page layout in a workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Page.CenterFooter">
      <summary>Specifies a picture or text to be center aligned in the page footer.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.HeaderFooter" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Page.CenterHeader">
      <summary>Specifies a picture or text to be center aligned in the page header.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.HeaderFooter" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Page.LeftFooter">
      <summary>Specifies a picture or text to be left aligned in the page footer.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.HeaderFooter" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Page.LeftHeader">
      <summary>Specifies a picture or text to be left aligned in the page header.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.HeaderFooter" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Page.RightFooter">
      <summary>Specifies a picture or text to be right aligned in the page footer.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.HeaderFooter" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Page.RightHeader">
      <summary>Specifies a picture or text to be right aligned in the page header.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.HeaderFooter" />
      </returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Pages">
      <summary>A collection of pages in a document. Use the <see cref="T:Microsoft.Office.Interop.Excel.Pages" /> collection and the related objects and properties for programmatically defining page layout in a workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Pages._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Pages.Count">
      <summary>Returns the number of objects in the collection. Read-only Integer.</summary>
      <returns>Integer</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Pages.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Pages.Item(System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Page" /> object that represents a collection of pages in a workbook. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Page" />
      </returns>
      <param name="Index">Index value of the page.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.PageSetup">
      <summary>Represents the page setup description. The <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> object contains all page setup attributes (left margin, bottom margin, paper size, and so on) as properties.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.AlignMarginsHeaderFooter">
      <summary>Returns True for Excel to align the header and the footer with the margins set in the page setup options. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.BlackAndWhite">
      <summary>True if elements of the document will be printed in black and white.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.BottomMargin">
      <summary>Returns or sets the size of the bottom margin in points.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.CenterFooter">
      <summary>Returns or sets the center part of the footer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.CenterFooterPicture">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Graphic" /> object that represents the picture for the center section of the footer. Used to set attributes about the picture.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.CenterHeader">
      <summary>Returns or sets the center part of the header.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.CenterHeaderPicture">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Graphic" /> object that represents the picture for the center section of the header. Used to set attributes about the picture.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.CenterHorizontally">
      <summary>True if the sheet is centered horizontally on the page when it's printed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.CenterVertically">
      <summary>True if the sheet is centered vertically on the page when it's printed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.ChartSize">
      <summary>Returns or sets the way a chart is scaled to fit on a page.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.DifferentFirstPageHeaderFooter">
      <summary>True if a different header or footer is used on the first page. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.Draft">
      <summary>True if the sheet will be printed without graphics.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.EvenPage">
      <summary>Returns or sets the alignment of text on the even page of a workbook or section.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Page" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.FirstPage">
      <summary>Returns or sets the alignment of text on the first page of a workbook or section.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Page" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.FirstPageNumber">
      <summary>Returns or sets the first page number that will be used when this sheet is printed. If xlAutomatic, Microsoft Excel chooses the first page number. The default is xlAutomatic.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.FitToPagesTall">
      <summary>Returns or sets the number of pages tall the worksheet will be scaled to when it's printed. Applies only to worksheets.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.FitToPagesWide">
      <summary>Returns or sets the number of pages wide the worksheet will be scaled to when it's printed. Applies only to worksheets.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.FooterMargin">
      <summary>Returns or sets the distance from the bottom of the page to the footer, in points.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.HeaderMargin">
      <summary>Returns or sets the distance from the top of the page to the header, in points.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.LeftFooter">
      <summary>Returns or sets the left part of the footer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.LeftFooterPicture">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Graphic" /> object that represents the picture for the left section of the footer. Used to set attributes about the picture.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.LeftHeader">
      <summary>Returns or sets the left part of the header.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.LeftHeaderPicture">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Graphic" /> object that represents the picture for the left section of the header. Used to set attributes about the picture.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.LeftMargin">
      <summary>Returns or sets the size of the left margin in points.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.OddAndEvenPagesHeaderFooter">
      <summary>True if the specified PageSetup object has different headers and footers for odd-numbered and even-numbered pages. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.Order">
      <summary>Returns or sets the order that Microsoft Excel uses to number pages when printing a large worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.Orientation">
      <summary>Portrait or landscape printing mode.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.Pages">
      <summary>Returns or sets the the count or item number of the pages in <see cref="T:Microsoft.Office.Interop.Excel.Pages" /> collection.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Pages" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.PaperSize">
      <summary>Returns or sets the size of the paper.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.PrintArea">
      <summary>Returns or sets the range to be printed, as a string using A1-style references in the language of the macro.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.PrintComments">
      <summary>Returns or sets the way comments are printed with the sheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.PrintErrors">
      <summary>Sets or returns an <see cref="T:Microsoft.Office.Interop.Excel.XlPrintErrors" /> constant specifying the type of print error displayed. This feature allows users to suppress the display of error values when printing a worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.PrintGridlines">
      <summary>True if cell gridlines are printed on the page. Applies only to worksheets.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.PrintHeadings">
      <summary>True if row and column headings are printed with this page. Applies only to worksheets.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.PrintNotes">
      <summary>True if cell notes are printed as end notes with the sheet. Applies only to worksheets.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.PrintQuality(System.Object)">
      <summary>Returns or sets the print quality.</summary>
      <param name="Index">Optional Object. Horizontal print quality (1) or vertical print quality (2). Some printers may not support vertical print quality. If you don’t specify this argument, the PrintQuality property returns (or can be set to) a two-element array that contains both horizontal and vertical print quality.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.PrintTitleColumns">
      <summary>Returns or sets the columns that contain the cells to be repeated on the left side of each page as a string in A1-style notation in the language of the macro.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.PrintTitleRows">
      <summary>Returns or sets the rows that contain the cells to be repeated at the top of each page as a string in A1-style notation in the language of the macro.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.RightFooter">
      <summary>Returns or sets the right part of the footer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.RightFooterPicture">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Graphic" /> object that represents the picture for the right section of the footer. Used to set attributes of the picture.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.RightHeader">
      <summary>Returns or sets the right part of the header.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.RightHeaderPicture">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Graphic" /> object that represents the picture for the right section of the header. Used to set attributes about the picture.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.RightMargin">
      <summary>Returns or sets the size of the right margin in points.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.ScaleWithDocHeaderFooter">
      <summary>Returns or sets if the header and footer should be scaled with the document when the size of the document changes. Read/write Boolean.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.TopMargin">
      <summary>Returns or sets the size of the top margin in points.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PageSetup.Zoom">
      <summary>Returns or sets a percentage (between 10 and 400 percent) by which Microsoft Excel will scale the worksheet for printing. Applies only to worksheets.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Pane">
      <summary>Represents a pane of a window.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Pane.Activate">
      <summary>Activates the pane.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Pane.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Pane.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Pane.Index">
      <summary>Returns the index number of the object within the collection of similar objects.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Pane.LargeScroll(System.Object,System.Object,System.Object,System.Object)">
      <summary>Scrolls the contents of the window by pages.</summary>
      <param name="Down">Optional Object. The number of pages to scroll the contents down.</param>
      <param name="Up">Optional Object. The number of pages to scroll the contents up.</param>
      <param name="ToRight">Optional Object. The number of pages to scroll the contents to the right.</param>
      <param name="ToLeft">Optional Object. The number of pages to scroll the contents to the left.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Pane.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Pane.PointsToScreenPixelsX(System.Int32)">
      <summary>Returns or sets a pixel point on the screen.</summary>
      <returns>Integer</returns>
      <param name="Points">Location of the pixel on the screen.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Pane.PointsToScreenPixelsY(System.Int32)">
      <summary>Returns or sets the location of the pixel on the screen.</summary>
      <returns>Integer</returns>
      <param name="Points">Location of the starting point.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Pane.ScrollColumn">
      <summary>Returns or sets the number of the leftmost column in the pane.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Pane.ScrollIntoView(System.Int32,System.Int32,System.Int32,System.Int32,System.Object)">
      <summary>Scrolls the pane so that the contents of a specified rectangular area are displayed in either the upper-left or lower-right corner of the pane.</summary>
      <param name="Left">Required Integer. The horizontal position of the rectangle (in points) from the left edge of the pane.</param>
      <param name="Top">Required Integer. The vertical position of the rectangle (in points) from the top of the pane.</param>
      <param name="Width">Required Integer. The width of the rectangle in points.</param>
      <param name="Height">Required Integer. The height of the rectangle in points.</param>
      <param name="Start">Optional Object. True to have the upper-left corner of the rectangle appear in the upper-left corner of the pane. False to have the lower-right corner of the rectangle appear in the lower-right corner of the pane. The default value is True.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Pane.ScrollRow">
      <summary>Returns or sets the number of the row that appears at the top of the pane.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Pane.SmallScroll(System.Object,System.Object,System.Object,System.Object)">
      <summary>Scrolls the contents of the window by rows or columns.</summary>
      <param name="Down">Optional Object. The number of rows to scroll the contents down.</param>
      <param name="Up">Optional Object. The number of rows to scroll the contents up.</param>
      <param name="ToRight">Optional Object. The number of columns to scroll the contents to the right.</param>
      <param name="ToLeft">Optional Object. The number of columns to scroll the contents to the left.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Pane.VisibleRange">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range of cells that are visible in the pane. If a column or row is partially visible, it's included in the range.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Panes">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Pane" /> objects shown in the specified window.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Panes._Default(System.Int32)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Panes.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Panes.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Panes.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Panes.Item(System.Int32)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Integer. The index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Panes.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Parameter">
      <summary>Represents a single parameter used in a parameter query. The Parameter object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.Parameters" /> collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Parameter.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Parameter.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Parameter.DataType">
      <summary>Returns or sets the data type of the specified query parameter. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlParameterDataType" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Parameter.Name">
      <summary>Returns or sets the name of the object. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Parameter.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Parameter.PromptString">
      <summary>Returns the phrase that prompts the user for a parameter value in a parameter query. Read-only String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Parameter.RefreshOnChange">
      <summary>True if the specified query table is refreshed whenever you change the parameter value of a parameter query. Read/write Boolean.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Parameter.SetParam(Microsoft.Office.Interop.Excel.XlParameterType,System.Object)">
      <summary>Defines a parameter for the specified query table.</summary>
      <param name="Type">Required <see cref="T:Microsoft.Office.Interop.Excel.XlParameterType" />.</param>
      <param name="Value">Required Object. The value of the specified parameter, as shown in the description of the <paramref name="Type" /> argument.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Parameter.SourceRange">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell that contains the value of the specified query parameter. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Parameter.Type">
      <summary>Returns or sets the parameter type. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlParameterType" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Parameter.Value">
      <summary>The parameter value. For more information, see the <see cref="T:Microsoft.Office.Interop.Excel.Parameter" /> object. Read-only Object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Parameters">
      <summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.Parameter" /> objects for the specified query table. Each Parameter object represents a single query parameter. Every query table contains a Parameters collection, but the collection is empty unless the query table is using a parameter query.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Parameters._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Parameters.Add(System.String,System.Object)">
      <summary>Creates a new query parameter. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Parameter" /> object.</summary>
      <param name="Name">Required String. The name of the specified parameter. The parameter name should match the parameter clause in the SQL statement.</param>
      <param name="iDataType">Optional Object. The data type of the parameter. Can be any <see cref="T:Microsoft.Office.Interop.Excel.XlParameterDataType" /> constant.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Parameters.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Parameters.Count">
      <summary>Returns the number of objects in the collection. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Parameters.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Parameters.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Parameters.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Parameters.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Parameters.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Phonetic">
      <summary>Contains information about a specific phonetic text string in a cell.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Phonetic.Alignment">
      <summary>Returns or sets the alignment for the specified phonetic text.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Phonetic.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Phonetic.CharacterType">
      <summary>Returns or sets the type of phonetic text in the specified cell.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Phonetic.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Phonetic.Font">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Phonetic.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Phonetic.Text">
      <summary>Returns or sets the text for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Phonetic.Visible">
      <summary>Determines whether the object is visible.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Phonetics">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> objects in the specified range. Each Phonetic object contains information about a specific phonetic text string.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Phonetics._Default(System.Int32)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Phonetics.Add(System.Int32,System.Int32,System.String)">
      <summary>Adds phonetic text to the specified cell.</summary>
      <param name="Start">Required Integer. The position that represents the first character in the specified cell.</param>
      <param name="Length">Required Integer. The number of characters from the <paramref name="Start" /> position to the end of the text in the cell.</param>
      <param name="Text">Required String. Collectively, the characters that represent the phonetic text in the cell.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Phonetics.Alignment">
      <summary>Returns or sets the alignment for the specified phonetic text.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Phonetics.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Phonetics.CharacterType">
      <summary>Returns or sets the type of phonetic text in the specified cell.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Phonetics.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Phonetics.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Phonetics.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Phonetics.Font">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Phonetics.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Phonetics.Item(System.Int32)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Integer. The index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Phonetics.Length">
      <summary>Returns the number of characters of phonetic text from the position you've specified with the <see cref="P:Microsoft.Office.Interop.Excel.Phonetics.Start" /> property.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Phonetics.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Phonetics.Start">
      <summary>Returns the position that represents the first character of a phonetic text string in the specified cell.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Phonetics.Text">
      <summary>Returns or sets the text for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Phonetics.Visible">
      <summary>Determines whether the object is visible.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Picture">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Picture.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Picture.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Picture.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Picture.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Picture.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Picture.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Picture.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Picture.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Picture.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Picture.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Picture.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Picture.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Picture.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Picture.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Picture.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Picture.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Picture.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Picture.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Picture.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Picture.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Picture.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Picture.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Picture.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Picture.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Picture.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Picture.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Picture.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Picture.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Picture.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Picture.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Picture.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.PictureFormat">
      <summary>Contains properties and methods that apply to pictures and OLE objects.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PictureFormat.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PictureFormat.Brightness">
      <summary>Returns or sets the brightness of the specified picture or OLE object. The value for this property must be a number from 0.0 (dimmest) to 1.0 (brightest).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PictureFormat.ColorType">
      <summary>Returns or sets the type of color transformation applied to the specified picture or OLE object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PictureFormat.Contrast">
      <summary>Returns or sets the contrast for the specified picture or OLE object. The value for this property must be a number from 0.0 (the least contrast) to 1.0 (the greatest contrast).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PictureFormat.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PictureFormat.Crop">
      <summary>Gets a <see cref="T:Microsoft.Office.Core.Crop" /> object that represents the cropping settings for the specified <see cref="T:Microsoft.Office.Interop.Excel.PictureFormat" /> object. </summary>
      <returns>A <see cref="T:Microsoft.Office.Core.Crop" /> object that represents the cropping settings for the specified <see cref="T:Microsoft.Office.Interop.Excel.PictureFormat" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PictureFormat.CropBottom">
      <summary>Returns or sets the number of points that are cropped off the bottom of the specified picture or OLE object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PictureFormat.CropLeft">
      <summary>Returns or sets the number of points that are cropped off the left side of the specified picture or OLE object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PictureFormat.CropRight">
      <summary>Returns or sets the number of points that are cropped off the right side of the specified picture or OLE object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PictureFormat.CropTop">
      <summary>Returns or sets the number of points that are cropped off the top of the specified picture or OLE object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PictureFormat.IncrementBrightness(System.Single)">
      <summary>Changes the brightness of the picture by the specified amount.</summary>
      <param name="Increment">Required Single. Specifies how much to change the value of the <see cref="P:Microsoft.Office.Interop.Excel.PictureFormat.Brightness" /> property for the picture. A positive value makes the picture brighter; a negative value makes the picture darker.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PictureFormat.IncrementContrast(System.Single)">
      <summary>Changes the contrast of the picture by the specified amount.</summary>
      <param name="Increment">Required Single. Specifies how much to change the value of the <see cref="P:Microsoft.Office.Interop.Excel.PictureFormat.Contrast" /> property for the picture. A positive value increases the contrast; a negative value decreases the contrast.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PictureFormat.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PictureFormat.TransparencyColor">
      <summary>Returns or sets the transparent color for the specified picture as a red-green-blue (RGB) value. Applies to bitmaps only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PictureFormat.TransparentBackground">
      <summary>Returns or sets whether the specified picture format uses a transparent background.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Pictures">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Pictures._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Pictures._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Pictures._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Pictures._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Pictures.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Pictures.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Pictures.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Pictures.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Pictures.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Pictures.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Pictures.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Pictures.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Pictures.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Pictures.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Pictures.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Pictures.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Pictures.Formula"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Pictures.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Pictures.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Pictures.Height"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Pictures.Insert(System.String,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Pictures.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Pictures.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Pictures.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Pictures.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Pictures.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Pictures.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Pictures.Paste(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Pictures.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Pictures.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Pictures.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Pictures.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Pictures.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Pictures.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Pictures.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Pictures.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Pictures.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Pictures.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.PivotAxis"></member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotAxis.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel._Application" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotAxis.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotAxis.Parent">
      <summary>Returns the parent for the specified <see cref="T:Microsoft.Office.Interop.Excel.PivotAxis" /> object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotAxis.PivotLines">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.PivotLines" /> attached to the specified <see cref="T:Microsoft.Office.Interop.Excel.PivotAxis" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.PivotLines" />
      </returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.PivotCache">
      <summary>Represents the memory cache for a PivotTable report.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.ADOConnection">
      <summary>Returns an ADO connection object if the PivotTable cache is connected to an OLE DB data source.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.BackgroundQuery">
      <summary>True if queries for the PivotTable report or query table are performed asynchronously (in the background).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.CommandText">
      <summary>Returns or sets the command string for the specified data source.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.CommandType">
      <summary>Returns or sets a constant describing the value type of the <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.CommandText" /> property. The default value is xlCmdSQL.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.Connection">
      <summary>Returns or sets connection information for a PivotTable cache.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotCache.CreatePivotTable(System.Object,System.Object,System.Object,System.Object)">
      <summary>Creates a PivotTable report based on a <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> object.</summary>
      <param name="TableDestination">Required Object. The cell in the upper-left corner of the PivotTable report’s destination range (the range on the worksheet where the resulting PivotTable report will be placed). The destination range must be on a worksheet in the workbook that contains the PivotCache object specified by expression.</param>
      <param name="TableName">Optional Object. The name of the new PivotTable report.</param>
      <param name="ReadData">Optional Object. True to create a PivotTable cache that contains all of the records from the external database; this cache can be very large. False to enable setting some of the fields as server-based page fields before the data is actually read.</param>
      <param name="DefaultVersion">Optional Object. The default version of the PivotTable report.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.EnableRefresh">
      <summary>True if the PivotTable cache or query table can be refreshed by the user. The default value is True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.Index">
      <summary>Returns the index number of the object within the collection of similar objects.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.IsConnected">
      <summary>Returns True if the <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.MaintainConnection" /> property is True and the PivotTable cache is currently connected to its source. Returns False if it is not currently connected to its source.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.LocalConnection">
      <summary>Returns or sets the connection string to an offline cube file.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.MaintainConnection">
      <summary>True if the connection to the specified data source is maintained after the refresh and until the workbook is closed. The default value is True.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotCache.MakeConnection">
      <summary>Establishes a connection for the specified PivotTable cache.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.MemoryUsed">
      <summary>Returns the amount of memory in bytes currently being used by the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.MissingItemsLimit">
      <summary>Returns or sets the maximum quantity of unique items per PivotTable field that are retained even when they have no supporting data in the cache records.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.OLAP">
      <summary>Returns True if the PivotTable cache is connected to an Online Analytical Processing (OLAP) server.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.OptimizeCache">
      <summary>True if the PivotTable cache is optimized when it’s constructed. The default value is False.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.QueryType">
      <summary>Indicates the type of query used by Microsoft Excel to populate the PivotTable cache.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.RecordCount">
      <summary>Returns the number of records in the PivotTable cache or the number of cache records that contain the specified item.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.Recordset">
      <summary>Returns or sets a Recordset object that’s used as the data source for the specified query table or PivotTable cache.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotCache.Refresh">
      <summary>Updates the cache of the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.RefreshDate">
      <summary>Returns the date on which the PivotTable cache was last refreshed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.RefreshName">
      <summary>Returns the name of the person who last refreshed the PivotTable cache.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.RefreshOnFileOpen">
      <summary>True if the PivotTable cache is automatically updated each time the workbook is opened. The default value is False.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.RefreshPeriod">
      <summary>Returns or sets the number of minutes between refreshes.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotCache.ResetTimer">
      <summary>Resets the refresh timer for the specified PivotTable report to the last interval you set using the <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.RefreshPeriod" /> property.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.RobustConnect">
      <summary>Returns or sets how the PivotTable cache connects to its data source.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotCache.SaveAsODC(System.String,System.Object,System.Object)">
      <summary>Saves the PivotTable cache source as a Microsoft Office Data Connection file.</summary>
      <param name="ODCFileName">Required String. Location to save the file.</param>
      <param name="Description">Optional Object. Description that will be saved in the file.</param>
      <param name="Keywords">Optional Object. Space-separated keywords that can be used to search for this file.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.SavePassword">
      <summary>True if password information in an ODBC connection string is saved with the specified query. False if the password is removed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.SourceConnectionFile">
      <summary>Returns or sets a String indicating the Microsoft Office Data Connection file or similar file that was used to create the PivotTable.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.SourceData">
      <summary>Returns the data source for the PivotTable report.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.SourceDataFile">
      <summary>Returns a String indicating the source data file for the cache of the PivotTable.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.SourceType">
      <summary>Returns a value that identifies the type of item being published.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.Sql">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.UpgradeOnRefresh">
      <summary>Contains information on whether to upgrade the <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" />  and all connected <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> on the next refresh. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.UseLocalConnection">
      <summary>True if the <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.LocalConnection" /> property is used to specify the string that enables Microsoft Excel to connect to a data source. False if the connection string specified by the <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection" /> property is used.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.Version">
      <summary>Returns the version of Microsoft Excel in which the <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableVersionList" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCache.WorkbookConnection">
      <summary>Establishes a connection between the current workbook and the <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> object. Read-only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.PivotCaches">
      <summary>Represents the collection of memory caches from the PivotTable reports in a workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCaches._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotCaches.Add(Microsoft.Office.Interop.Excel.XlPivotTableSourceType,System.Object)">
      <summary>Adds a new PivotTable cache to a <see cref="T:Microsoft.Office.Interop.Excel.PivotCaches" /> collection.</summary>
      <param name="SourceType">Required <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" />. The source of the PivotTable cache data. Can be one of the following XlPivotTableSourceType constants:xlConsolidationxlDatabasexlExternalxlPivotTablexlScenario</param>
      <param name="SourceData">Optional Object. The data for the new PivotTable cache. This argument is required if <paramref name="SourceType" /> isn't xlExternal. Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object, an array of ranges, or a text constant that represents the name of an existing PivotTable report. For an external database, this is a two-element array. The first element is the connection string specifying the provider of the data. The second element is the SQL query string used to get the data. If you specify this argument, you must also specify <paramref name="SourceType" />.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCaches.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCaches.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotCaches.Create(Microsoft.Office.Interop.Excel.XlPivotTableSourceType,System.Object,System.Object)">
      <summary>Creates a new <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" />.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" />
      </returns>
      <param name="SourceType">Required <paramref name="SourceType" /> can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" /> constants: xlConsolidation, xlDatabase, or xlExternal.</param>
      <param name="SourceData">Optional Object The data for the new <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> cache.</param>
      <param name="Version">Optional Object Version of the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />.  The version can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableVersionList" /> constants.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCaches.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotCaches.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotCaches.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCaches.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.PivotCell">
      <summary>Represents a cell in a PivotTable report.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotCell.AllocateChange">
      <summary>Performs a writeback operation on the specified cell in a PivotTable report based on an OLAP data source.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCell.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCell.CellChanged">
      <summary>Gets whether a PivotTable value cell has been edited or recalculated since the PivotTable report was created or the last commit operation was performed.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.XlCellChangedState" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCell.ColumnItems">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotItemList" /> collection that corresponds to the items on the column axis that represent the selected range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCell.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCell.CustomSubtotalFunction">
      <summary>Returns the custom subtotal function field setting of a <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCell.DataField">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object that corresponds to the selected data field.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCell.DataSourceValue">
      <summary>Gets the value last retrieved from the data source for edited cells in a PivotTable report.</summary>
      <returns>The value last retrieved from the data source for edited cells in a PivotTable report.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotCell.DiscardChange">
      <summary>Discards changes to the specified cell in a PivotTable report.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCell.Dummy18">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCell.MDX">
      <summary>Gets a tuple that provides the full MDX coordinates of the specified value cell in PivotTable with an OLAP data source.</summary>
      <returns>A tuple that provides the full MDX coordinates of the specified value cell in PivotTable with an OLAP data source.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCell.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCell.PivotCellType">
      <summary>Returns a constant that identifies the PivotTable entity the cell corresponds to.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCell.PivotColumnLine">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.PivotLine" /> on a column for a specific  PivotCell object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.PivotLine" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCell.PivotField">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object that represents the PivotTable field containing the upper-left corner of the specified range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCell.PivotItem">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> object that represents the PivotTable item containing the upper-left corner of the specified range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCell.PivotRowLine">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.PivotLine" /> on a row for a specific  PivotCell object. Read-only PivotLine.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.PivotLine" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCell.PivotTable">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object that represents the PivotTable report containing the upper-left corner of the specified range, or the PivotTable report associated with the PivotChart report.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCell.Range">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range the specified PivotCell applies to.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotCell.RowItems">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotItemList" /> collection that corresponds to the items on the category axis that represent the selected cell.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.PivotField">
      <summary>Represents a field in a PivotTable report. The PivotField object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> collection. The PivotFields collection contains all the fields in a PivotTable report, including hidden fields.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField._Default">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotField.AddPageItem(System.String,System.Object)">
      <summary>Adds an additional item to a multiple item page field.</summary>
      <param name="Item">Required String. Source name of a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> object, corresponding to the specific Online Analytical Processing (OLAP) member unique name.</param>
      <param name="ClearList">Optional Object. If False (default), adds a page item to the existing list. If True, deletes all current items and adds <paramref name="Item" />.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.AllItemsVisible">
      <summary>Retrieves a value that indicates whether or not any manual filtering is applied to the <see cref="T:Microsoft.Office.Interop.Excel.Pivotfield" />.
 Read-only.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel._Application" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotField.AutoShow(System.Int32,System.Int32,System.Int32,System.String)">
      <summary>Displays the number of top or bottom items for a row, page, or column field in the specified PivotTable report.</summary>
      <param name="Type">Required Integer. Use xlAutomatic to cause the specified PivotTable report to show the items that match the specified criteria. Use xlManual to disable this feature.</param>
      <param name="Range">Required Integer. The location at which to start showing items. Can be either of the following constants: xlTop or xlBottom.</param>
      <param name="Count">Required Integer. The number of items to be shown.</param>
      <param name="Field">Required String. The name of the base data field. You must specify the unique name (as returned from the <see cref="P:Microsoft.Office.Interop.Excel.PivotField.SourceName" /> property) and not the displayed name.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.AutoShowCount">
      <summary>Returns the number of top or bottom items that are automatically shown in the specified PivotTable field. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.AutoShowField">
      <summary>Returns the name of the data field used to determine the top or bottom items that are automatically shown in the specified PivotTable field. Read-only String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.AutoShowRange">
      <summary>Returns xlTop if the top items are shown automatically in the specified PivotTable field; returns xlBottom if the bottom items are shown. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.AutoShowType">
      <summary>Returns xlAutomatic if <see cref="M:Microsoft.Office.Interop.Excel.PivotField.AutoShow(System.Int32,System.Int32,System.Int32,System.String)" /> is enabled for the specified PivotTable field; returns xlManual if AutoShow is disabled. Read-only Integer.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotField.AutoSort(System.Int32,System.String)">
      <summary>Establishes automatic field-sorting rules for PivotTable reports.</summary>
      <param name="Order">Required <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />. The sort order.</param>
      <param name="Field">Required String. The name of the sort key field. You must specify the unique name (as returned from the <see cref="P:Microsoft.Office.Interop.Excel.PivotField.SourceName" /> property) and not the displayed name.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.AutoSortCustomSubtotal">
      <summary>Returns an integer corresponding to the custom subtotal used to sort the specified <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> field automatically. Read-only.</summary>
      <returns>Integer</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotField.AutoSortEx(System.Int32,System.String,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.AutoSortField">
      <summary>Returns the name of the data field used to sort the specified PivotTable field automatically. Read-only String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.AutoSortOrder">
      <summary>Returns the order used to sort the specified PivotTable field automatically. Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> constants. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.AutoSortPivotLine">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.PivotLine" /> used to sort the specified <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> field automatically. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.PivotLine" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.BaseField">
      <summary>Returns or sets the base field for a custom calculation. This property is valid only for data fields. Read/write Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.BaseItem">
      <summary>Returns or sets the item in the base field for a custom calculation. Valid only for data fields. Read/write Object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotField.CalculatedItems">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.CalculatedItems" /> collection that represents all the calculated items in the specified PivotTable report. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.Calculation">
      <summary>Returns or sets the type of calculation performed by the specified field. This property is valid only for data fields. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.Caption">
      <summary>The label text for the pivot field. Read-only String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.ChildField">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object that represents the child field for the specified field (if the field is grouped and has a child field). Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.ChildItems(System.Object)">
      <summary>Returns an object that represents either a single PivotTable item (a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> object) or a collection of all the items (a <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> object) that are group children in the specified field, or children of the specified item. Read-only.</summary>
      <param name="Index">Optional Object. The item name or number (can be an array to specify more than one item).</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotField.ClearAllFilters">
      <summary>Calling this method deletes all filters currently applied to the <see cref="T:Microsoft.Office.Interop.Excel.PivotField" />. This includes deleting all filters from the <see cref="T:Microsoft.Office.Interop.Excel.PivotFilters" /> collection of the <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> and removing any manual filtering applied to the <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> as well. If the <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> is in the Report Filter area, the item selected will be set to the default item.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotField.ClearLabelFilters">
      <summary>This method deletes all label filters or all date filters in the <see cref="T:Microsoft.Office.Interop.Excel.PivotFilters" /> collection of the <see cref="T:Microsoft.Office.Interop.Excel.PivotField" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotField.ClearManualFilter">
      <summary>Provides an easy way to set the Visible property to True for all items of a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> in <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" />, and to empty the HiddenItemsList and VisibleItemsList collections in OLAP <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotField.ClearValueFilters">
      <summary>Calling this method deletes all value filters in the <see cref="T:Microsoft.Office.Interop.Excel.PivotFilters" /> collection of the <see cref="T:Microsoft.Office.Interop.Excel.PivotField" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.CubeField">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.CubeField" /> object from which the specified PivotTable field is descended. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.CurrentPage">
      <summary>Returns or sets the current page showing for the page field (valid only for page fields). Read/write Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.CurrentPageList">
      <summary>Returns or sets an array of strings corresponding to the list of items included in a multiple-item page field of a PivotTable report. Read/write Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.CurrentPageName">
      <summary>Returns or sets the currently displayed page of the specified PivotTable report. The name of the page appears in the page field. Note that this property works only if the currently displayed page already exists. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.DatabaseSort">
      <summary>When set to True, manual repositioning of items in a PivotTable field is allowed. Returns True if the field has no manually positioned items. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.DataRange">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.DataType">
      <summary>Returns a constant describing the type of data in the PivotTable field. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlPivotFieldDataType" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotField.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.DisplayAsCaption">
      <summary>This property is used to display member properties of <see cref="T:Microsoft.Office.Interop.Excel.PivotField" />s as captions. Read-only.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.DisplayAsTooltip">
      <summary>This property is used to specify whether or not a specific member property <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> is displayed in tooltips.  Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.DisplayInReport">
      <summary>This property is used to specify whether the specified member property <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> is displayed in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> or not. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.DragToColumn">
      <summary>True if the specified field can be dragged to the column position. The default value is True. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.DragToData">
      <summary>True if the specified field can be dragged to the data position. The default value is True. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.DragToHide">
      <summary>True if the field can be hidden by being dragged off the PivotTable report. The default value is True. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.DragToPage">
      <summary>True if the field can be dragged to the page position. The default value is True. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.DragToRow">
      <summary>True if the field can be dragged to the row position. The default value is True. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.DrilledDown">
      <summary>True if the flag for the specified PivotTable field or PivotTable item is set to "drilled" (expanded, or visible). Read/write Boolean.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotField.DrillTo(System.String)">
      <summary>The DrillTo method supports drilling to a specified <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> from another <see cref="T:Microsoft.Office.Interop.Excel.PivotField" />.</summary>
      <param name="Field">Required String The name of the <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> to drill to.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.EnableItemSelection">
      <summary>When set to False, disables the ability to use the field dropdown in the user interface. The default value is True. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.EnableMultiplePageItems">
      <summary>Used for specifying whether or not check boxes are present in the filter drop-down list for fields in the page area. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.Formula">
      <summary>Returns or sets the object's formula in A1-style notation Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.Function">
      <summary>Returns or sets the function used to summarize the PivotTable field (data fields only). Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.GroupLevel">
      <summary>Returns the placement of the specified field within a group of fields (if the field is a member of a grouped set of fields). Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.Hidden">
      <summary>This property is used to hide the individual levels of an OLAP hierarchy. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.HiddenItems(System.Object)">
      <summary>Returns an object that represents either a single hidden PivotTable item (a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> object) or a collection of all the hidden items (a <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> object) in the specified field. Read-only.</summary>
      <param name="Index">Optional Object. The number or name of the item to be returned (can be an array to specify more than one item).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.HiddenItemsList">
      <summary>Returns or sets an Object specifying an array of strings that are hidden items for a PivotTable field. Read/write.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.IncludeNewItemsInFilter">
      <summary>Allows developers to specify whether excluded or included items should be tracked when manual filtering is applied to the <see cref="T:Microsoft.Office.Interop.Excel.PivotField" />. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.IsCalculated">
      <summary>True if the PivotTable field or PivotTable item is a calculated field or item. Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.IsMemberProperty">
      <summary>Returns True when the PivotField contains member properties. Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.LabelRange">
      <summary>For a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object, returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell (or cells) that contain the field label. For a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> object, returns a Range object that represents all the cells in the PivotTable report that contain the item. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.LayoutBlankLine">
      <summary>True if a blank row is inserted after the specified row field in a PivotTable report. The default value is False. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.LayoutCompactRow">
      <summary>Specifies whether or not a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> is compacted (items of multiple <see cref="T:Microsoft.Office.Interop.Excel.PivotField" />s are displayed in a single column) when rows are selected. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.LayoutForm">
      <summary>Returns or sets the way the specified PivotTable items appear — in table format or in outline format. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlLayoutFormType" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.LayoutPageBreak">
      <summary>True if a page break is inserted after each field. The default value is False. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.LayoutSubtotalLocation">
      <summary>Returns or sets the position of the PivotTable field subtotals in relation to (either above or below) the specified field. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlSubtototalLocationType" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.MemberPropertyCaption">
      <summary>Setting the <see cref="P:Microsoft.Office.Interop.Excel.PivotField.MemberPropertyCaption" /> property controls which member property is used as caption for a given level.  Read/write.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.MemoryUsed">
      <summary>Returns the amount of memory in bytes currently being used by the object. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.Name">
      <summary>Returns or sets the name of the object. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.NumberFormat">
      <summary>Returns or sets the format code for the object. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.Orientation">
      <summary>The location of the field in the specified PivotTable report. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.ParentField">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object that represents the PivotTable field that’s the group parent of the specified object. The field must be grouped and must have a parent field. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.ParentItems(System.Object)">
      <summary>Returns an object that represents either a single PivotTable item (a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> object) or a collection of all the items (a <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> object) that are group parents in the specified field. The specified field must be a group parent of another field. Read-only.</summary>
      <param name="Index">Optional Object. The number or name of the item to be returned (can be an array to specify more than one item).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.PivotFilters">
      <summary>Returns or sets the <see cref="P:Microsoft.Office.Interop.Excel.PivotField.PivotFilters" /> for the specified <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object. Read-only.</summary>
      <returns>
        <see cref="P:Microsoft.Office.Interop.Excel.PivotField.PivotFilters" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotField.PivotItems(System.Object)">
      <summary>Returns an object that represents either a single PivotTable item (a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> object) or a collection of all the visible and hidden items (a <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> object) in the specified field. Read-only.</summary>
      <param name="Index">Optional Object. The name or number of the item to be returned.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.Position">
      <summary>Position of the field (first, second, third, and so on) among all the fields in its orientation (Rows, Columns, Pages, Data). Read/write Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.PropertyOrder">
      <summary>Valid only for PivotTable fields that are member property fields. Returns an Integer indicating the display position of the member property within the cube field to which it belongs. Read/write.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.PropertyParentField">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object representing the field to which the properties in this field pertain.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.RepeatLabels">
      <summary>Gets or sets whether item labels are repeated in the PivotTable for the specified PivotField.</summary>
      <returns>true if item labels are repeated in the PivotTable for the specified PivotField; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.ServerBased">
      <summary>True if the data source for the specified PivotTable report is external and only the items matching the page field selection are retrieved. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.ShowAllItems">
      <summary>True if all items in the PivotTable report are displayed, even if they don’t contain summary data. The default value is False. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.ShowDetail">
      <summary>Gets or sets whether the specified <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> is showing detail. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.ShowingInAxis">
      <summary>Indicates if the <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> is currently visible in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> or not. Read-only.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.SourceCaption">
      <summary>The <see cref="P:Microsoft.Office.Interop.Excel.PivotField.SourceCaption" /> property is applicable only for OLAP <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />s, and returns the original caption from the OLAP server for a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" />. Read-only.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.SourceName">
      <summary>Returns the specified object’s name as it appears in the original source data for the specified PivotTable report. This might be different from the current item name if the user renamed the item after creating the PivotTable report. Read-only String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.StandardFormula">
      <summary>Returns or sets a String specifying formulas with standard English (United States) formatting. Read/write.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.SubtotalName">
      <summary>Returns or sets the text string label displayed in the subtotal column or row heading in the specified PivotTable report. The default value is the string "Subtotal". Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.Subtotals(System.Object)">
      <summary>Returns or sets subtotals displayed with the specified field. Valid only for non-data fields. Read/write Object.</summary>
      <param name="Index">Optional Object. A subtotal index, as shown in the following table. If this argument is omitted, the Subtotals method returns an array that contains a Boolean value for each subtotal.IndexMeaning1Automatic2Sum3Count4Average5Max6Min7Product8Count Nums9StdDev10StdDevp11Var12VarpIf an index is True, the field shows that subtotal. If index 1 (Automatic) is True, all other values are set to False.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.TotalLevels">
      <summary>Returns the total number of fields in the current field group. If the field isn’t grouped, or if the data source is OLAP-based, TotalLevels returns the value 1. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.UseMemberPropertyAsCaption">
      <summary>This property is used to control whether member property captions are used for <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> captions of the <see cref="P:Microsoft.Office.Interop.Excel.PivotField" />. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.Value">
      <summary>The name of the specified field in the PivotTable report. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.VisibleItems(System.Object)">
      <summary>Returns an object that represents either a single visible PivotTable item (a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> object) or a collection of all the visible items (a <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> object) in the specified field. Read-only.</summary>
      <param name="Index">Optional Object. The number or name of the item to be returned (can be an array to specify more than one item).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotField.VisibleItemsList">
      <summary>Returns or sets a Object specifying an array of strings that represent included items in a manual filter applied to a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" />. Read/write.</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.PivotFields">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> objects in a PivotTable report.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFields.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFields.Count">
      <summary>Returns the number of objects in the collection. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFields.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotFields.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotFields.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFields.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.PivotFilter">
      <summary>A <see cref="T:Microsoft.Office.Interop.Excel.PivotFilter" /> is applied to a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFilter.Active">
      <summary>Returns whether the specified <see cref="P:Microsoft.Office.Interop.Excel.PivotFilter" /> is active. Read-only.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFilter.Application">
      <summary>When used without an object qualifier, this property returns the Microsoft Office Excel <see cref="T:Microsoft.Office.Interop.Excel._Application" />. When used with an object qualifier, this property returns the creator of the specified object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel._Application" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFilter.Creator">
      <summary>Returns a 32-bit Integer that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFilter.DataCubeField">
      <summary>This property is applicable only to OLAP <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> and provides the <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.Value" /> field (<see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> in the Values area) being filtered by for a value filter. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.CubeField" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFilter.DataField">
      <summary>This property is applicable only to non-OLAP <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> and provides the <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.Value" /> field (<see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> in the Values area) being filtered by for a value filter. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.PivotField" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotFilter.Delete">
      <summary>Deletes the filter and removes it from the filter collections of the <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> and the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFilter.Description">
      <summary>Provides an optional description for the <see cref="T:Microsoft.Office.Interop.Excel.PivotFilter" /> object. Read-only.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFilter.FilterType">
      <summary>Specifies the type of filter to be applied. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlPivotFilterType" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFilter.IsMemberPropertyFilter">
      <summary>Specifies whether the label filter is based on the <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> captions of a member property of the field or on the <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> captions of the <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> itself. Read-only.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFilter.MemberPropertyField">
      <summary>This property specifies the member property <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> on which the label filter is based. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.PivotField" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFilter.Name">
      <summary>This property provides the option of naming filters for reference. You cannot rely on the index value for accurate reference because this value can change.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFilter.Order">
      <summary>Specifies the evaluation order of the filter among all Value filters applied to the entire <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />. Read/write </summary>
      <returns>Integer.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFilter.Parent">
      <summary>Returns the parent for the specified <see cref="T:Microsoft.Office.Interop.Excel.PivotFilter" />. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFilter.PivotField">
      <summary>Specifies the <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> to which the filter is applied. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.PivotField" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFilter.Value1">
      <summary>This property is a user-supplied parameter to define a filter for a <see cref="P:Microsoft.Office.Interop.Excel.PivotFilter.PivotField" />. Read/write.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFilter.Value2">
      <summary>This property is a user-supplied parameter to define a filter for a <see cref="P:Microsoft.Office.Interop.Excel.PivotFilter.PivotField" />. Read/write.</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.PivotFilters">
      <summary>The  <see cref="T:Microsoft.Office.Interop.Excel.PivotFilters" /> object is a collection of <see cref="T:Microsoft.Office.Interop.Excel.PivotFilter" /> objects.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFilters._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotFilters.Add(Microsoft.Office.Interop.Excel.XlPivotFilterType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Adds new filters to the <see cref="T:Microsoft.Office.Interop.Excel.PivotFilters" /> collection.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.PivotFilter" />
      </returns>
      <param name="Type">Required Requires a <see cref="T:Microsoft.Office.Interop.Excel.XlPivotFilterType" /> type of filter.</param>
      <param name="DataField">Optional Object The field to which the filter is attached.</param>
      <param name="Value1">Optional Object Filter value 1.</param>
      <param name="Value2">Optional Object Filter value 2.</param>
      <param name="Order">Optional Object Order in which the data should be filtered.</param>
      <param name="Name">Optional Object Name of the filter.</param>
      <param name="Description">Optional Object A brief description of the filter.</param>
      <param name="MemberPropertyField">Optional Object Specifies the member property field on which the label filter is based.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFilters.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel._Application" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFilters.Count">
      <summary>Returns the number of items in the PivotFilters collection. Read-only.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFilters.Creator">
      <summary>Returns a 32-bit Integer that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotFilters.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFilters.Item(System.Object)">
      <summary>Returns a specific element of the PivotFilters collection object by its position in the collection. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.PivotFilter" />
      </returns>
      <param name="Index">Required Object Specifies the position of an element of the collection. </param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFilters.Parent">
      <summary>Returns the parent for the specified PivotFilters object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.PivotFormula">
      <summary>Represents a formula used to calculate results in a PivotTable report.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFormula._Default">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFormula.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFormula.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotFormula.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFormula.Formula">
      <summary>Returns or sets the object's formula in A1-style notation.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFormula.Index">
      <summary>Returns or sets the index number of the object within the <see cref="T:Microsoft.Office.Interop.Excel.PivotFormulas" /> collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFormula.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFormula.StandardFormula">
      <summary>Returns or sets a String specifying formulas with standard English (United States) formatting.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFormula.Value">
      <summary>The name of the specified formula in the PivotTable formula.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.PivotFormulas">
      <summary>Represents the collection of formulas for a PivotTable report. Each formula is represented by a <see cref="T:Microsoft.Office.Interop.Excel.PivotFormula" /> object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotFormulas._Add(System.String)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFormulas._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotFormulas.Add(System.String,System.Object)">
      <summary>Creates a new PivotTable formula. Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotFormula" /> object.</summary>
      <param name="Formula">Required String. The new PivotTable formula.</param>
      <param name="UseStandardFormula">Optional Object. A standard PivotTable formula.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFormulas.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFormulas.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFormulas.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotFormulas.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotFormulas.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotFormulas.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.PivotItem">
      <summary>Represents an item in a PivotTable field. The items are the individual data entries in a field category. The PivotItem object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection. The PivotItems collection contains all the items in a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItem._Default">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItem.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItem.Caption">
      <summary>The label text for the pivot item. Read-only String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItem.ChildItems(System.Object)">
      <summary>Returns an object that represents either a single PivotTable item (a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> object) or a collection of all the items (a <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> object) that are group children in the specified field or children of the specified item. Read-only.</summary>
      <param name="Index">Optional Object. The item name or number (can be an array to specify more than one item).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItem.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItem.DataRange">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotItem.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItem.DrilledDown">
      <summary>True if the flag for the specified PivotTable field or PivotTable item is set to "drilled" (expanded, or visible). Read/write Boolean.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotItem.DrillTo(System.String)">
      <summary>The<see cref="M:Microsoft.Office.Interop.Excel.PivotItem.DrillTo(System.String)" /> method supports drilling to a specified <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> from a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItem.Formula">
      <summary>Returns or sets the object's formula in A1-style notation and in the language of the macro. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItem.IsCalculated">
      <summary>True if the PivotTable field or PivotTable item is a calculated field or item. Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItem.LabelRange">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells in the PivotTable report that contain the item. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItem.Name">
      <summary>Returns or sets the name of the object. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItem.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItem.ParentItem">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> object that represents the parent PivotTable item in the parent <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object (the field must be grouped so that it has a parent). Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItem.ParentShowDetail">
      <summary>True if the specified item is showing because one of its parents is showing detail. False if the specified item isn’t showing because one of its parents is hiding detail. This property is available only if the item is grouped. Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItem.Position">
      <summary>Position of the item in its field if the item is currently showing. Read/write Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItem.RecordCount">
      <summary>Returns the number of records in the PivotTable cache or the number of cache records that contain the specified item. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItem.ShowDetail">
      <summary>True if the outline is expanded for the specified range (so that the detail of the column or row is visible). Read/write Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItem.SourceName">
      <summary>Returns the specified object’s name as it appears in the original source data for the specified PivotTable report. This might be different from the current item name if the user renamed the item after creating the PivotTable report. Read-only Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItem.SourceNameStandard">
      <summary>Returns a String that represents the PivotTable item's source name in standard English (United States) format settings. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItem.StandardFormula">
      <summary>Returns or sets a String specifying formulas with standard English (United States) formatting. Read/write.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItem.Value">
      <summary>The name of the specified item in the PivotTable field. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItem.Visible">
      <summary>Determines whether the object is visible. Read/write Boolean.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.PivotItemList">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> objects in the specified PivotTable. Each PivotItem represents an item in a PivotTable field.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItemList._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItemList.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItemList.Count">
      <summary>Returns the number of objects in the collection. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItemList.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotItemList.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotItemList.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItemList.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.PivotItems">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> objects in a PivotTable field. The items are the individual data entries in a field category.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotItems.Add(System.String)">
      <summary>Creates a new PivotTable item.</summary>
      <param name="Name">Required String. The name of the new PivotTable item.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItems.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItems.Count">
      <summary>Returns the number of objects in the collection. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItems.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotItems.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotItems.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.PivotLayout">
      <summary>Represents the placement of fields in a PivotChart report.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotLayout.AddFields(System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLayout.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLayout.ColumnFields(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLayout.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLayout.CubeFields">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLayout.DataFields(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLayout.HiddenFields(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLayout.InnerDetail">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLayout.PageFields(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLayout.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLayout.PivotCache">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLayout.PivotFields(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLayout.PivotTable">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object that represents the PivotTable report containing the upper-left corner of the specified range, or the PivotTable report associated with the PivotChart report.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLayout.RowFields(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLayout.VisibleFields(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.PivotLine">
      <summary>A <see cref="T:Microsoft.Office.Interop.Excel.PivotLine" /> object is a line of rows or columns in an Excel <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLine.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel._Application" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLine.Creator">
      <summary>Returns a 32-bit Integer that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLine.LineType">
      <summary>Returns a constant that indicates the type of <see cref="T:Microsoft.Office.Interop.Excel.PivotLine" />. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlPivotLineType" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLine.Parent">
      <summary>Returns the parent object for the specified <see cref="T:Microsoft.Office.Interop.Excel.PivotLine" />. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLine.PivotLineCells">
      <summary>Returns a collection of <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" /> objects in a <see cref="T:Microsoft.Office.Interop.Excel.PivotLine" />. Read-only.</summary>
      <returns>
        <see cref="P:Microsoft.Office.Interop.Excel.PivotLine.PivotLineCells" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLine.Position">
      <summary>Returns or sets the position of the <see cref="T:Microsoft.Office.Interop.Excel.PivotLine" />. Read-only.</summary>
      <returns>Integer</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.PivotLineCells">
      <summary>Collection of <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" /> objects for a specific <see cref="T:Microsoft.Office.Interop.Excel.PivotLine" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLineCells._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLineCells.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel application. When used with an object qualifier, this property returns the creator of the specified object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel._Application" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLineCells.Count">
      <summary>Returns the number of items in the <see cref="T:Microsoft.Office.Interop.Excel.PivotLineCells" /> collection. Read-only. </summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLineCells.Creator">
      <summary>Returns a 32-bit Integer that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotLineCells.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLineCells.Item(System.Object)">
      <summary>Returns a specific element of the <see cref="T:Microsoft.Office.Interop.Excel.PivotLineCells" /> collection object identified by its position in the collection. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" />
      </returns>
      <param name="Index">Required Object Specifies the position of an element of the collection. </param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLineCells.Parent">
      <summary>Returns the parent object for the specified <see cref="T:Microsoft.Office.Interop.Excel.PivotLineCells" /> object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.PivotLines">
      <summary>The <see cref="T:Microsoft.Office.Interop.Excel.PivotLines" /> object is a collection of lines in a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />, containing all lines on rows or columns of the pivot. Each line is a set of <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" />s.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLines._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLines.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel._Application" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLines.Count">
      <summary>Returns the number of items in the <see cref="T:Microsoft.Office.Interop.Excel.PivotLines" /> collection. Read-only.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLines.Creator">
      <summary>Returns a 32-bit Integer that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotLines.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLines.Item(System.Object)">
      <summary>Returns a specific element of the <see cref="T:Microsoft.Office.Interop.Excel.PivotLines" /> collection object by its position in the collection. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.PivotLine" />
      </returns>
      <param name="Index">Required Object Specifies the position of an element of the collection. </param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotLines.Parent">
      <summary>Returns the parent object for the specified <see cref="T:Microsoft.Office.Interop.Excel.PivotLines" /> object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.PivotTable">
      <summary>Represents a PivotTable report on a worksheet. The PivotTable object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> collection. The PivotTables collection contains all the PivotTable objects on a single worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable._Default">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable._PivotSelect(System.String,Microsoft.Office.Interop.Excel.XlPTSelectionMode)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.ActiveFilters">
      <summary>Indicates the currently active filter in the specified <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.PivotFilters" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.AddDataField(System.Object,System.Object,System.Object)">
      <summary>Adds a data field to a PivotTable report. Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object that represents the new data field.</summary>
      <param name="Field">Required Object. The unique field on the server. If the source data is Online Analytical Processing (OLAP), the unique field is a cube field. If the source data is non-OLAP (non-OLAP source data), the unique field is a PivotTable field.</param>
      <param name="Caption">Optional Object. The label used in the PivotTable report to identify this data field.</param>
      <param name="Function">Optional Object. The function performed in the added data field.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.AddFields(System.Object,System.Object,System.Object,System.Object)">
      <summary>Adds row, column, and page fields to a PivotTable report or PivotChart report.</summary>
      <param name="RowFields">Optional Object. Specifies a field name (or an array of field names) to be added as rows or to be added to the category axis.</param>
      <param name="ColumnFields">Optional Object. Specifies a field name (or an array of field names) to be added as columns or to be added to the series axis.</param>
      <param name="PageFields">Optional Object. Specifies a field name (or an array of field names) to be added as pages or to be added to the page area.</param>
      <param name="AddToTable">Optional Object. Applies only to PivotTable reports. True to add the specified fields to the report (none of the existing fields are replaced). False to replace existing fields with the new fields. The default value is False.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.AllocateChanges">
      <summary>Performs a writeback operation for all edited cells in a PivotTable report based on an OLAP data source.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.Allocation">
      <summary>Gets or sets whether to run an UPDATE CUBE statement for each cell is edited, or only when the user chooses to calculate changes when performing what-if analysis on a PivotTable based on an OLAP data source. </summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.XlAllocation" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.AllocationMethod">
      <summary>Gets or sets what method to use to allocate values when performing what-if analysis on a PivotTable report based on an OLAP data source.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.XlAllocationMethod" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.AllocationValue">
      <summary>Gets or sets what value to allocate when performing what-if analysis on a PivotTable report based on an OLAP data source.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.XlAllocationValue" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.AllocationWeightExpression">
      <summary>Gets or sets the MDX weight expression to use when performing what-if analysis on a PivotTable report based on an OLAP data source.</summary>
      <returns>The MDX weight expression to use when performing what-if analysis on a PivotTable report based on an OLAP data source.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.AllowMultipleFilters">
      <summary>Sets or retrieves a value that indicates whether a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> can have multiple filters applied to it at the same time.
Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.AlternativeText">
      <summary>Gets or sets the descriptive (alternative) text string for the specified PivotTable.</summary>
      <returns>The descriptive (alternative) text string for the specified PivotTable.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.CacheIndex">
      <summary>Returns or sets the index number of the PivotTable cache. Read/write Integer.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.CalculatedFields">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.CalculatedFields" /> collection that represents all the calculated fields in the specified PivotTable report. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.CalculatedMembers">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMembers" /> collection representing all the calculated members and calculated measures for an OLAP PivotTable.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.CalculatedMembersInFilters">
      <summary>Gets or sets whether to evaluate calculated members from OLAP servers in filters.</summary>
      <returns>true if calculated members from OLAP servers should be evaluated in filters; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.ChangeConnection(Microsoft.Office.Interop.Excel.WorkbookConnection)">
      <summary>Changes the connection of the specified <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />.</summary>
      <param name="conn">Required <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> object that represents the new connection for the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.ChangeList">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection that represents the list of changes that have been made to the specified PivotTable based on an OLAP data source.</summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection that represents the list of changes that have been made to the specified PivotTable based on an OLAP data source.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.ChangePivotCache(System.Object)">
      <summary>Changes the <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> of the specified <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />.</summary>
      <param name="PivotCache">Required String a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> or <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" />  object that represents the new <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" />  for the specified <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.ClearAllFilters">
      <summary>The <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.ClearAllFilters" /> method deletes all filters currently applied to the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />. This includes deleting all filters in the <see cref="T:Microsoft.Office.Interop.Excel.PivotFilters" /> collection of the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object, removing any manual filtering applied and setting all <see cref="T:Microsoft.Office.Interop.Excel.PivotField" />s in the Report Filter area to the default item. </summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.ClearTable">
      <summary>The <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.ClearTable" /> method is used for clearing a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />. Clearing <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />s includes removing all the fields and deleting all filtering and sorting applied to the <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" />. This method resets the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> to the state it had right after it was created, before any fields were added to it.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.ColumnFields(System.Object)">
      <summary>Returns an object that represents either a single PivotTable field (a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object) or a collection of all the fields (a <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> object) that are currently shown as column fields. Read-only.</summary>
      <param name="Index">Optional Object. The field name or number (can be an array to specify more than one field).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.ColumnGrand">
      <summary>True if the PivotTable report shows grand totals for columns. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.ColumnRange">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range that contains the column area in the PivotTable report. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.CommitChanges">
      <summary>Performs a commit operation on the data source of a PivotTable report based on an OLAP data source.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.CompactLayoutColumnHeader">
      <summary>Specifies the caption that is displayed in the column header of a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> when in compact row layout form. Read/write.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.CompactLayoutRowHeader">
      <summary>Specifies the caption that is displayed in the row header of a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> when in compact row layout form. Read/write.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.CompactRowIndent">
      <summary>Returns or sets the indent increment for <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> when compact row layout form is turned on. Read/write.</summary>
      <returns>Integer</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.ConvertToFormulas(System.Boolean)">
      <summary>The <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.ConvertToFormulas(System.Boolean)" /> method is new in 1st_Excel12 and is used for converting a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> to cube formulas.  </summary>
      <param name="ConvertFilters">Required Boolean Contains True or False to indicate the state of the ReportFilter area.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.CreateCubeFile(System.String,System.Object,System.Object,System.Object,System.Object)">
      <summary>Creates a cube file from a PivotTable report connected to an Online Analytical Processing (OLAP) data source.</summary>
      <param name="File">Required String. The name of the cube file to be created. It will overwrite the file if it already exists.</param>
      <param name="Measures">Optional Object. An array of unique names of measures that are to be part of the slice.</param>
      <param name="Levels">Optional Object. An array of strings. Each array item is a unique level name. It represents the lowest level of a hierarchy that is in the slice.</param>
      <param name="Members">Optional Object. An array of string arrays. The elements correspond, in order, to the hierarchies represented in the <paramref name="Levels" /> array. Each element is an array of string arrays that consists of the unique names of the top level members in the dimension that are to be included in the slice.</param>
      <param name="Properties">Optional Boolean. False results in no member properties being included in the slice. The default value is True.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.CubeFields">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.CubeFields" /> collection. Each <see cref="T:Microsoft.Office.Interop.Excel.CubeField" /> object contains the properties of the cube field element. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.DataBodyRange">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range that contains the data area in the list between the header row and the insert row. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.DataFields(System.Object)">
      <summary>Returns an object that represents either a single PivotTable field (a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object) or a collection of all the fields (a <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> object) that are currently shown as data fields. Read-only.</summary>
      <param name="Index">Optional Object. The field name or number (can be an array to specify more than one field).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.DataLabelRange">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range that contains the labels for the data fields in the PivotTable report. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.DataPivotField">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object that represents all the data fields in a PivotTable. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.DiscardChanges">
      <summary>Discards all changes in the edited cells of a PivotTable report based on an OLAP data source.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayContextTooltips">
      <summary>Controls whether or not tooltips are displayed for <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> cells. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayEmptyColumn">
      <summary>Returns True when the non-empty MDX keyword is included in the query to the OLAP provider for the value axis. The OLAP provider will not return empty columns in the result set. Returns False when the non-empty keyword is omitted. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayEmptyRow">
      <summary>Returns True when the non-empty MDX keyword is included in the query to the OLAP provider for the category axis. The OLAP provider will not return empty rows in the result set. Returns False when the non-empty keyword is omitted. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayErrorString">
      <summary>True if the PivotTable report displays a custom error string in cells that contain errors. The default value is False. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayFieldCaptions">
      <summary>Controls whether or not filter buttons and <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> captions for rows and columns are displayed in the grid. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayImmediateItems">
      <summary>Returns or sets a Boolean that indicates whether items in the row and column areas are visible when the data area of the PivotTable is empty. Set this property to False to hide the items in the row and column areas when the data area of the PivotTable is empty. The default value is True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayMemberPropertyTooltips">
      <summary>Controls whether or not to display member properties in tooltips. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayNullString">
      <summary>True if the PivotTable report displays a custom string in cells that contain null values. The default value is True. Read/write Boolean.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.Dummy15(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.EnableDataValueEditing">
      <summary>True to disable the alert for when the user overwrites values in the data area of the PivotTable. True also allows the user to change data values that previously could not be changed. The default value is False. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.EnableDrilldown">
      <summary>True if drilldown is enabled. The default value is True. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.EnableFieldDialog">
      <summary>True if the PivotTable Field dialog box is available when the user double-clicks the PivotTable field. The default value is True. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.EnableFieldList">
      <summary>False to disable the ability to display the field list for the PivotTable. If the field list was already being displayed it disappears. The default value is True. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.EnableWizard">
      <summary>True if the PivotTable Wizard is available. The default value is True. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.EnableWriteback">
      <summary>Gets or sets whether writing back to the data source is enabled for the specified PivotTable.</summary>
      <returns>true if writing back to the data source is enabled for the specified PivotTable; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.ErrorString">
      <summary>Returns or sets the string displayed in cells that contain errors when the <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayErrorString" /> property is True. The default value is an empty string (""). Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.FieldListSortAscending">
      <summary>Controls the sort order of fields in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> Field List. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.Format(Microsoft.Office.Interop.Excel.XlPivotFormatType)">
      <summary>Sets a PivotTable report to one of the predefined indented, nonindented, or cross-tabulated formats.</summary>
      <param name="Format">Required <see cref="T:Microsoft.Office.Interop.Excel.XlPivotFormatType" />. Specifies the type of report formatting to be applied to the specified PivotTable report.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.GetData(System.String)">
      <summary>Returns data from the specified PivotTable cell.</summary>
      <param name="Name">Required String. Describes a single cell in the PivotTable report, using syntax similar to the <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.PivotSelect(System.String,Microsoft.Office.Interop.Excel.XlPTSelectionMode,System.Object)" /> method or the PivotTable report references in calculated item formulas.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.GetPivotData(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns a Range object with information about a data item in a PivotTable report.</summary>
      <param name="DataField">Optional Object. The name of the field containing the data for the PivotTable.</param>
      <param name="Field1">Optional Object. The name of a column or row field in the PivotTable report.</param>
      <param name="Item1">Optional Object. The name of an item in <paramref name="Field1" />.</param>
      <param name="Field2">Optional Object. The name of a column or row field in the PivotTable report.</param>
      <param name="Item2">Optional Object. The name of an item in <paramref name="Field2" />.</param>
      <param name="Field3">Optional Object. The name of a column or row field in the PivotTable report.</param>
      <param name="Item3">Optional Object. The name of an item in <paramref name="Field3" />.</param>
      <param name="Field4">Optional Object. The name of a column or row field in the PivotTable report.</param>
      <param name="Item4">Optional Object. The name of an item in <paramref name="Field4" />.</param>
      <param name="Field5">Optional Object. The name of a column or row field in the PivotTable report.</param>
      <param name="Item5">Optional Object. The name of an item in <paramref name="Field5" />.</param>
      <param name="Field6">Optional Object. The name of a column or row field in the PivotTable report.</param>
      <param name="Item6">Optional Object. The name of an item in <paramref name="Field6" />.</param>
      <param name="Field7">Optional Object. The name of a column or row field in the PivotTable report.</param>
      <param name="Item7">Optional Object. The name of an item in <paramref name="Field7" />.</param>
      <param name="Field8">Optional Object. The name of a column or row field in the PivotTable report.</param>
      <param name="Item8">Optional Object. The name of an item in <paramref name="Field8" />.</param>
      <param name="Field9">Optional Object. The name of a column or row field in the PivotTable report.</param>
      <param name="Item9">Optional Object. The name of an item in <paramref name="Field9" />.</param>
      <param name="Field10">Optional Object. The name of a column or row field in the PivotTable report.</param>
      <param name="Item10">Optional Object. The name of an item in <paramref name="Field10" />.</param>
      <param name="Field11">Optional Object. The name of a column or row field in the PivotTable report.</param>
      <param name="Item11">Optional Object. The name of an item in <paramref name="Field11" />.</param>
      <param name="Field12">Optional Object. The name of a column or row field in the PivotTable report.</param>
      <param name="Item12">Optional Object. The name of an item in <paramref name="Field12" />.</param>
      <param name="Field13">Optional Object. The name of a column or row field in the PivotTable report.</param>
      <param name="Item13">Optional Object. The name of an item in <paramref name="Field13" />.</param>
      <param name="Field14">Optional Object. The name of a column or row field in the PivotTable report.</param>
      <param name="Item14">Optional Object. The name of an item in <paramref name="Field14" />.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.GrandTotalName">
      <summary>Returns or sets the text string label that is displayed in the grand total column or row heading in the specified PivotTable report. The default value is the string "Grand Total". Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.HasAutoFormat">
      <summary>True if the PivotTable report is automatically formatted when it’s refreshed or when fields are moved. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.HiddenFields(System.Object)">
      <summary>Returns an object that represents either a single PivotTable field (a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object) or a collection of all the fields (a <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> object) that are currently not shown as row, column, page, or data fields. Read-only.</summary>
      <param name="Index">Optional Object. The name or number of the field to be returned (can be an array to specify more than one field).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.InGridDropZones">
      <summary>This property is used to toggle in-grid drop zones for a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object.  In some cases, it also affects the layout of the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.InnerDetail">
      <summary>Returns or sets the name of the field that will be shown as detail when the <see cref="P:Microsoft.Office.Interop.Excel.PivotItem.ShowDetail" /> property is True for the innermost row or column field. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.LayoutRowDefault">
      <summary>This property specifies the layout settings for <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> when they are added to the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> for the first time. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlLayoutRowType" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.ListFormulas">
      <summary>Creates a list of calculated PivotTable items and fields on a separate worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.Location">
      <summary>Gets or sets a String that represents the top-left cell in the body of the specified <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />. Read/write.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.ManualUpdate">
      <summary>True if the PivotTable report is recalculated only at the user's request. The default value is False. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.MDX">
      <summary>Returns a String indicating the MDX (Multidimensional Expression) that would be sent to the provider to populate the current PivotTable view. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.MergeLabels">
      <summary>True if the specified PivotTable report’s outer-row item, column item, subtotal, and grand total labels use merged cells. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.Name">
      <summary>Returns or sets the name of the object. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.NullString">
      <summary>Returns or sets the string displayed in cells that contain null values when the <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayNullString" /> property is True. The default value is an empty string (""). Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.PageFieldOrder">
      <summary>Returns or sets the order in which page fields are added to the PivotTable report’s layout. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlOrder" /> constants: xlDownThenOver or xlOverThenDown. The default constant is xlDownThenOver. Read/write Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.PageFields(System.Object)">
      <summary>Returns an object that represents either a single PivotTable field (a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object) or a collection of all the fields (a <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> object) that are currently showing as page fields. Read-only.</summary>
      <param name="Index">Optional Object. The name or number of the field to be returned (can be an array to specify more than one field).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.PageFieldStyle">
      <summary>Returns or sets the style used in the bound page field area. The default value is a null string (no style is applied by default). Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.PageFieldWrapCount">
      <summary>Returns or sets the number of page fields in each column or row in the PivotTable report. Read/write Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.PageRange">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range that contains the page area in the PivotTable report. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.PageRangeCells">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents only the cells in the specified PivotTable report that contain the page fields and item drop-down lists.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.Parent">
      <summary>Returns the parent object for the specified object. Read-only</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.PivotCache">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> object that represents the cache for the specified PivotTable report. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.PivotColumnAxis">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotAxis" /> object representing the entire column axis. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.PivotAxis" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.PivotFields(System.Object)">
      <summary>Returns an object that represents either a single PivotTable field (a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object) or a collection of both the visible and hidden fields (a <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> object) in the PivotTable report. Read-only.</summary>
      <param name="Index">Optional Object. The name or number of the field to be returned.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.PivotFormulas">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotFormulas" /> object that represents the collection of formulas for the specified <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> report. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.PivotRowAxis">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotAxis" /> object representing the entire row axis. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.PivotAxis" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.PivotSelect(System.String,Microsoft.Office.Interop.Excel.XlPTSelectionMode,System.Object)">
      <summary>Selects part of a PivotTable report.</summary>
      <param name="Name">Required String. The selection, in standard PivotTable report selection format.</param>
      <param name="Mode">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPTSelectionMode" />. Specifies the structured selection mode.</param>
      <param name="UseStandardName">Optional Object. True for recorded macros that will play back in other locales.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.PivotSelection">
      <summary>Returns or sets the PivotTable selection in standard PivotTable report selection format. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.PivotSelectionStandard">
      <summary>Returns or sets a String indicating the PivotTable selection in standard PivotTable report format using English (United States) settings. Read/write.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Creates a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object. This method doesn’t display the PivotTable Wizard. This method isn’t available for OLE DB data sources. Use the <see cref="M:Microsoft.Office.Interop.Excel.PivotTables.Add(Microsoft.Office.Interop.Excel.PivotCache,System.Object,System.Object,System.Object,System.Object)" /> method to add a PivotTable cache, and then create a PivotTable report based on the cache.</summary>
      <param name="SourceType">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" />. The source of the report data.</param>
      <param name="SourceData">Optional Object. The data for the new report. Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object, an array of ranges, or a text constant that represents the name of another report. For an external database, <paramref name="SourceData" /> is an array of strings containing the SQL query string, where each element is up to 255 characters in length. You should use the <paramref name="Connection" /> argument to specify the ODBC connection string. For compatibility with earlier versions of Excel, <paramref name="SourceData" /> can be a two-element array. The first element is the connection string specifying the ODBC source for the data. The second element is the SQL query string used to get the data. If you specify <paramref name="SourceData" />, you must also specify <paramref name="SourceType" />. If the active cell is inside the <paramref name="SourceData" /> range, you must specify <paramref name="TableDestination" /> as well.</param>
      <param name="TableDestination">Optional Object. A Range object specifying where the report should be placed on the worksheet. If this argument is omitted, the report is placed at the active cell.</param>
      <param name="TableName">Optional Object. A string that specifies the name of the new report.</param>
      <param name="RowGrand">Optional Object. True to show grand totals for rows in the report.</param>
      <param name="ColumnGrand">Optional Object. True to show grand totals for columns in the report.</param>
      <param name="SaveData">Optional Object. True to save data with the report. False to save only the report definition.</param>
      <param name="HasAutoFormat">Optional Object. True to have Microsoft Excel automatically format the report when it’s refreshed or when fields are moved.</param>
      <param name="AutoPage">Optional Object. Valid only if <paramref name="SourceType" /> is xlConsolidation. True to have Microsoft Excel create a page field for the consolidation. If <paramref name="AutoPage" /> is False, you must create the page field or fields.</param>
      <param name="Reserved">Optional Object. Not used by Microsoft Excel.</param>
      <param name="BackgroundQuery">Optional Object. True to have Excel perform queries for the report asynchronously (in the background). The default value is False.</param>
      <param name="OptimizeCache">Optional Object. True to optimize the PivotTable cache when it's constructed. The default value is False.</param>
      <param name="PageFieldOrder">Optional Object. The order in which page fields are added to the PivotTable report’s layout. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlOrder" /> constants: xlDownThenOver or xlOverThenDown. The default value is xlDownThenOver.</param>
      <param name="PageFieldWrapCount">Optional Object. The number of page fields in each column or row in the PivotTable report. The default value is 0 (zero).</param>
      <param name="ReadData">Optional Object. True to create a PivotTable cache that contains all records from the external database; this cache can be very large. If <paramref name="ReadData" /> is False, you can set some of the fields as server-based page fields before the data is actually read.</param>
      <param name="Connection">Optional Object. A string that contains ODBC settings that allow Excel to connect to an ODBC data source. The connection string has the form "ODBC;&lt;connection string&gt;". This argument overrides any previous setting for the <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> object’s <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection" /> property.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.PreserveFormatting">
      <summary>This property is True if formatting is preserved when the report is refreshed or recalculated by operations such as pivoting, sorting, or changing page field items. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.PrintDrillIndicators">
      <summary>Specifies whether or not drill indicators are printed with the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.PrintTitles">
      <summary>True if the print titles for the worksheet are set based on the PivotTable report. False if the print titles for the worksheet are used. The default value is False. Read/write Boolean.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.RefreshDataSourceValues">
      <summary>Retrieves the current values from the data source for all edited cells in a PivotTable report that is in writeback mode.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.RefreshDate">
      <summary>Returns the date on which the PivotTable report was last refreshed. Read-only DateTime.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.RefreshName">
      <summary>Returns the name of the person who last refreshed the PivotTable report data or the PivotTable cache. Read-only String.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.RefreshTable">
      <summary>Refreshes the PivotTable report from the source data. Returns True if it’s successful.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.RepeatAllLabels(Microsoft.Office.Interop.Excel.XlPivotFieldRepeatLabels)">
      <summary>Sets whether to repeat item labels for all PivotFields in the specified PivotTable.</summary>
      <param name="Repeat">Specifies whether to repeat item labels for all PivotFields in the specified PivotTable.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.RepeatItemsOnEachPrintedPage">
      <summary>True if row, column, and item labels appear on the first row of each page when the specified PivotTable report is printed. False if labels are printed only on the first page. The default value is True. Read/write Boolean.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.RowAxisLayout(Microsoft.Office.Interop.Excel.XlLayoutRowType)">
      <summary>This method is used for simultaneously setting layout options for all existing <see cref="T:Microsoft.Office.Interop.Excel.PivotField" />s.</summary>
      <param name="RowLayout">Required <see cref="T:Microsoft.Office.Interop.Excel.XlLayoutRowType" /> Can be xlCompactRow, xlTabularRow, or xlOutlineRow.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.RowFields(System.Object)">
      <summary>Returns an object that represents either a single field in a PivotTable report (a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object) or a collection of all the fields (a <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> object) that are currently showing as row fields. Read-only.</summary>
      <param name="Index">Optional Object. The name or number of the field to be returned (can be an array to specify more than one field).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.RowGrand">
      <summary>True if the PivotTable report shows grand totals for rows. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.RowRange">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range including the row area on the PivotTable report. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.SaveData">
      <summary>True if data for the PivotTable report is saved with the workbook. False if only the report definition is saved. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.SelectionMode">
      <summary>Returns or sets the PivotTable report structured selection mode. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlPTSelectionMode" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.ShowCellBackgroundFromOLAP">
      <summary>True if the MDX (Multidimensional Expression) that Microsoft Excel sends to the server includes the <see cref="P:Microsoft.Office.Interop.Excel.ChartFillFormat.BackColor" /> property for each cell in the data area that corresponds to a cell in the Online Analytical Processing (OLAP) data set. The default value is False. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.ShowDrillIndicators">
      <summary>The <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.ShowDrillIndicators" /> property is used for toggling the display of drill indicators in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.ShowPageMultipleItemLabel">
      <summary>When set to True (default), "(Multiple Items)" will appear in the PivotTable cell on the worksheet whenever items are hidden and an aggregate of non-hidden items is shown in the PivotTable view. Read/write Boolean.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.ShowPages(System.Object)">
      <summary>Creates a new PivotTable report for each item in the page field. Each new report is created on a new worksheet.</summary>
      <param name="PageField">Optional Object. A string that names a single page field in the report.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.ShowTableStyleColumnHeaders">
      <summary>The <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.ShowTableStyleColumnHeaders" />property is set to True if the coulmn headers should be displayed in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.ShowTableStyleColumnStripes">
      <summary>The Boolean property displays banded columns in which even columns are formatted differently from odd columns. This makes <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" />easier to read. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.ShowTableStyleLastColumn">
      <summary>Reserved for internal use.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.ShowTableStyleRowHeaders">
      <summary>The <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.ShowTableStyleRowHeaders" /> property is set to True if the row headers should be displayed in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.ShowTableStyleRowStripes">
      <summary>The <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.ShowTableStyleRowStripes" /> property displays banded rows in which even rows are formatted differently from odd rows. This makes <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> easier to read. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.ShowValuesRow">
      <summary>Gets or sets whether the values row is displayed.</summary>
      <returns>true if the values row is displayed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.Slicers">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.Slicers" /> collection for the specified PivotTable.</summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.Slicers" /> collection for the specified PivotTable.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.SmallGrid">
      <summary>True if Microsoft Excel uses a grid that’s two cells wide and two cells deep for a newly created PivotTable report. False if Excel uses a blank stencil outline. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.SortUsingCustomLists">
      <summary>The <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.SortUsingCustomLists" /> property controls whether custom lists are used for sorting items of fields, both initially when the <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> is initialized and the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> are ordered by their captions; and later when the user applies a sort. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.SourceData">
      <summary>Returns the data source for the PivotTable report. Read-write Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.SubtotalHiddenPageItems">
      <summary>True if hidden page field items in the PivotTable report are included in row and column subtotals, block totals, and grand totals. The default value is False. Read/write Boolean.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.SubtotalLocation(Microsoft.Office.Interop.Excel.XlSubtototalLocationType)">
      <summary>This method changes the subtotal location for all existing <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" />. Changing the subtotal location has an immediate visual effect only for fields in outline form, but it will be set for fields in tabular form as well. </summary>
      <param name="Location">Required <see cref="T:Microsoft.Office.Interop.Excel.XlSubtototalLocationType" /> can be either xlAtTop or xlAtBottom.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.Summary">
      <summary>Gets or sets the description associated with the alternative text string for the specified PivotTable.</summary>
      <returns>The description associated with the alternative text string for the specified PivotTable.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.TableRange1">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing the entire PivotTable report, but doesn’t include page fields. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.TableRange2">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing the entire PivotTable report, including page fields. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.TableStyle">
      <summary>Returns or sets the style used in the body of the PivotTable report. The default value is a null string (no style is applied by default). Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.TableStyle2">
      <summary>The <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.TableStyle2" /> property specifies the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> style currently applied to the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />. Read/write.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.Tag">
      <summary>Returns or sets a string saved with the PivotTable report. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.TotalsAnnotation">
      <summary>True if an asterisk (*) is displayed next to each subtotal and grand total value in the specified PivotTable report if the report is based on an OLAP data source. The default value is True. Read/write Boolean.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTable.Update">
      <summary>Updates the link or PivotTable report.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.VacatedStyle">
      <summary>Returns or sets the style applied to cells vacated when the PivotTable report is refreshed. The default value is a null string (no style is applied by default). Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.Value">
      <summary>The name of the PivotTable report. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.Version">
      <summary>Returns the Microsoft Excel version number. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableVersionList" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.ViewCalculatedMembers">
      <summary>When set to True (default), calculated members for Online Analytical Processing (OLAP) PivotTables can be viewed. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.VisibleFields(System.Object)">
      <summary>Returns an object that represents either a single field in a PivotTable report (a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object) or a collection of all the visible fields (a <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> object). Visible fields are shown as row, column, page, or data fields. Read-only.</summary>
      <param name="Index">Optional Object. The name or number of the field to be returned (can be an array to specify more than one field).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.VisualTotals">
      <summary>True (default) to enable Online Analytical Processing (OLAP) PivotTables to recalculate the total after an item has been hidden from view. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTable.VisualTotalsForSets">
      <summary>Gets or sets whether to include filtered items in the totals of named sets for the specified PivotTable.</summary>
      <returns>true if filtered items in the totals of named sets for the specified PivotTable are included; otherwise, false. The default is false</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.PivotTableChangeList">
      <summary>Represents the list of changes a user has made to value cells in a PivotTable report based on an OLAP data source.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTableChangeList._Default(System.Object)">
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTableChangeList.Add(System.String,System.Double,System.Object,System.Object,System.Object)">
      <summary>Adds a <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> object to the specified <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection.</summary>
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" />.</returns>
      <param name="Tuple">The MDX tuple of the value to change in the OLAP data source.</param>
      <param name="Value">The value to commit.</param>
      <param name="AllocationValue">The value to allocate when performing what-if analysis. If this parameter is not supplied, the default allocation value of the OLAP server will be used.</param>
      <param name="AllocationMethod">The method to use to allocate this value when performing what-if analysis. If this parameter is not supplied, the default allocation method of the OLAP server will be used.</param>
      <param name="AllocationWeightExpression">The MDX weight expression to use for this value when performing what-if analysis. If this parameter is not supplied, the default allocation weight expression of the OLAP server will be used.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTableChangeList.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTableChangeList.Count">
      <summary>Gets a value that represents the number of objects in the collection.</summary>
      <returns>The number of objects in the collection.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTableChangeList.Creator">
      <summary>Gets a 32-bit integer that indicates the application in which this object was created.</summary>
      <returns>A 32-bit integer that indicates the application in which this object was created.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTableChangeList.GetEnumerator">
      <returns>Returns <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTableChangeList.Item(System.Object)">
      <summary>Returns a single <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> object from the specified PivotTableChangeList collection.</summary>
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" />.</returns>
      <param name="Index">The MDX name (tuple) or index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTableChangeList.Parent">
      <summary>Gets the parent <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object for the specified <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection.</summary>
      <returns>The parent <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object for the specified <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.PivotTables">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> objects on the specified worksheet.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTables.Add(Microsoft.Office.Interop.Excel.PivotCache,System.Object,System.Object,System.Object,System.Object)">
      <summary>Adds a new PivotTable report. Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object.</summary>
      <param name="PivotCache">Required PivotCache. The PivotTable cache on which the new PivotTable report is based. The cache provides data for the report.</param>
      <param name="TableDestination">Required Object. The cell in the upper-left corner of the PivotTable report's destination range (the range on the worksheet where the resulting report will be placed). You must specify a destination range on the worksheet that contains the <paramref name="PivotTables" /> object specified by <paramref name="expression" />.</param>
      <param name="TableName">Optional Object. The name of the new PivotTable report.</param>
      <param name="ReadData">Optional Object. True to create a PivotTable cache that contains all records from the external database; this cache can be very large. False to enable setting some of the fields as server-based page fields before the data is actually read.</param>
      <param name="DefaultVersion">Optional Object. The version of Microsoft Excel the PivotTable was originally created in.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTables.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTables.Count">
      <summary>Returns the number of objects in the collection. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTables.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTables.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.PivotTables.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PivotTables.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.PlotArea">
      <summary>Represents the plot area of a chart. This is the area where your chart data is plotted.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PlotArea._InsideHeight">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PlotArea._InsideLeft">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PlotArea._InsideTop">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PlotArea._InsideWidth">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PlotArea.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PlotArea.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PlotArea.ClearFormats">
      <summary>Clears the formatting of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PlotArea.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PlotArea.Fill">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartFillFormat" /> object for a specified chart that contains fill formatting properties for the chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PlotArea.Format">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PlotArea.Height">
      <summary>The height, in points, of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PlotArea.InsideHeight">
      <summary>Returns the inside height of the plot area in points.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PlotArea.InsideLeft">
      <summary>Returns the distance from the chart edge to the inside left edge of the plot area in points.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PlotArea.InsideTop">
      <summary>Returns the distance in points from the chart edge to the inside top edge of the plot area.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PlotArea.InsideWidth">
      <summary>Returns the inside width of the plot area in points.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PlotArea.Interior">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PlotArea.Left">
      <summary>The distance, in points, from the left edge of the object to the left edge of the chart area.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PlotArea.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PlotArea.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PlotArea.Position">
      <summary>Returns or sets the position of the plot area on the chart. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlChartElementPosition" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PlotArea.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PlotArea.Top">
      <summary>The distance, in points, from the top edge of the object to the top of the chart area.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PlotArea.Width">
      <summary>The width, in points, of the object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Point">
      <summary>Represents a single point in a series in a chart.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Point._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Point.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Applies data labels to a point in a chart.</summary>
      <param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" />. The type of data label to apply. Can be one of the following XlDataLabelsType constants:xlDataLabelsShowBubbleSizesxlDataLabelsShowLabelAndPercent Percentage of the total and category for the point. Available only for pie charts and doughnut charts.xlDataLabelsShowPercent Percentage of the total. Available only for pie charts and doughnut charts.xlDataLabelsShowLabel Category for the point.xlDataLabelsShowNone No data labels.xlDataLabelsShowValue Default. Value for the point (assumed if this argument isn't specified).</param>
      <param name="LegendKey">Optional Object. True to show the legend key next to the point. The default value is False.</param>
      <param name="AutoText">Optional Object. True if the object automatically generates appropriate text based on content.</param>
      <param name="HasLeaderLines">Optional Object. For the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> and <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objects, True if the series has leader lines.</param>
      <param name="ShowSeriesName">Optional Object. The series name for the data label.</param>
      <param name="ShowCategoryName">Optional Object. The category name for the data label.</param>
      <param name="ShowValue">Optional Object. The value for the data label.</param>
      <param name="ShowPercentage">Optional Object. The percentage for the data label.</param>
      <param name="ShowBubbleSize">Optional Object. The bubble size for the data label.</param>
      <param name="Separator">Optional Object. The separator for the data label.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.ApplyPictToEnd">
      <summary>True if a picture is applied to the end of the point or all points in the series.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.ApplyPictToFront">
      <summary>True if a picture is applied to the front of the point or all points in the series.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.ApplyPictToSides">
      <summary>True if a picture is applied to the sides of the point or all points in the series.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Point.ClearFormats">
      <summary>Clears the formatting of the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Point.Copy">
      <summary>If the point or series has a picture fill, copies the picture to the Clipboard.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.DataLabel">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.DataLabel" /> object that represents the data label associated with the point or trendline.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Point.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.Explosion">
      <summary>Returns or sets the explosion value for a pie-chart or doughnut-chart slice. Returns 0 (zero) if there's no explosion (the tip of the slice is in the center of the pie).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.Fill">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object for a specified shape or a <see cref="T:Microsoft.Office.Interop.Excel.ChartFillFormat" /> object for a specified chart that contains fill formatting properties for the shape or chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.Format">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.Has3DEffect">
      <summary>Returns and Sets a value that states if a point has a three-dimensional appearance. Read/Write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.HasDataLabel">
      <summary>True if the point has a data label.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.Height">
      <summary>Gets the height, in points, of the object.</summary>
      <returns>The height, in points, of the object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.Interior">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.InvertIfNegative">
      <summary>True if Microsoft Excel inverts the pattern in the item when it corresponds to a negative number.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.Left">
      <summary>Gets a value that represents the distance, in points, from the left edge of the object to the left edge of the chart area.</summary>
      <returns>The distance, in points, from the left edge of the object to the left edge of the chart area.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.MarkerBackgroundColor">
      <summary>Sets the marker background color as an RGB value or returns the corresponding color index value. Applies only to line, scatter, and radar charts.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.MarkerBackgroundColorIndex">
      <summary>Returns or sets the marker background color as an index into the current color palette, or as one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> constants: xlColorIndexAutomatic or xlColorIndexNone. Applies only to line, scatter, and radar charts.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.MarkerForegroundColor">
      <summary>Sets the marker background color as an RGB value or returns the corresponding color index value. Applies only to line, scatter, and radar charts.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.MarkerForegroundColorIndex">
      <summary>Returns or sets the marker foreground color as an index into the current color palette, or as one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> constants: xlColorIndexAutomatic or xlColorIndexNone. Applies only to line, scatter, and radar charts.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.MarkerSize">
      <summary>Returns or sets the data marker size in points.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.MarkerStyle">
      <summary>Returns or sets the marker style for a point or series in a line chart, scatter chart, or radar chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.Name">
      <summary>Gets the object name.</summary>
      <returns>The object name.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Point.Paste">
      <summary>Pastes a picture from the Clipboard as the marker on the selected point.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.PictureType">
      <summary>Returns or sets the way pictures are displayed on a column or bar picture chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.PictureUnit">
      <summary>Returns or sets the unit for each picture on the chart if the <see cref="P:Microsoft.Office.Interop.Excel.Point.PictureType" /> property is set to xlStackScale (if not, this property is ignored).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.PictureUnit2">
      <summary>Returns or sets the unit for each picture on the chart if the <see cref="P:Microsoft.Office.Interop.Excel.Point.PictureType" /> property is set to xlStackScale (if not, this property is ignored). Read/write.</summary>
      <returns>Double</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Point.PieSliceLocation(Microsoft.Office.Interop.Excel.XlPieSliceLocation,Microsoft.Office.Interop.Excel.XlPieSliceIndex)">
      <summary>Returns the vertical or horizontal position of a point on a chart item, in points, from the top or left edge of the object to the top or left edge of the chart area.</summary>
      <returns>The vertical or horizontal position of a point on a chart item, in points, from the top or left edge of the object to the top or left edge of the chart area.</returns>
      <param name="loc">Specifies a horizontal or vertical coordinate.</param>
      <param name="Index">Specifies which pie slice position coordinate to return. The default value is <see cref="F:Microsoft.Office.Interop.Excel.XlPieSliceIndex.xlOuterCenterPoint" />.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.SecondaryPlot">
      <summary>True if the point is in the secondary section of either a pie of pie chart or a bar of pie chart. Applies only to points on pie of pie charts or bar of pie charts.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Point.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.Shadow">
      <summary>True if the font is a shadow font or if the object has a shadow.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.Top">
      <summary>Gets a value that represents the distance, in points, from the top edge of the object to the top edge of the chart area.</summary>
      <returns>The distance, in points, from the top edge of the object to the top edge of the chart area.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Point.Width">
      <summary>Gets the width, in points, of the object.</summary>
      <returns>The width, in points, of the object.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Points">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Point" /> objects in the specified series in a chart.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Points._Default(System.Int32)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Points.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Points.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Points.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Points.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Points.Item(System.Int32)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Points.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow">
      <summary>Represents a Protected View window.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow._Default">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Activate">
      <summary>Brings the Protected View window to the front of the z-order.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Caption">
      <summary>Gets or sets a value that represents the name that appears in the title bar of the Protected View window.</summary>
      <returns>The name that appears in the title bar of the Protected View window.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Close">
      <summary>Closes the specified Protected View window.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Edit(System.Object,System.Object)">
      <summary>Opens the workbook that is open in the specified Protected View window for editing.</summary>
      <returns>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</returns>
      <param name="WriteResPassword">The password required to write to a write-reserved workbook.</param>
      <param name="UpdateLinks">Specifies the way external references (links) in the file, such as the reference to a range in the Budget.xls workbook in the following formula =SUM([Budget.xls]Annual!C10:C25), are updated.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.EnableResize">
      <summary>Gets or sets whether the Protected View window can be resized.</summary>
      <returns>true if the Protected View window can be resized; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Height">
      <summary>Gets or sets a value that represents the height, in points, of the Protected View window. </summary>
      <returns>The height, in points, of the Protected View window.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Left">
      <summary>Gets or sets a value that represents the distance, in points, from the left edge of the client area to the left edge of the Protected View window.</summary>
      <returns>The distance, in points, from the left edge of the client area to the left edge of the Protected View window.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.SourceName">
      <summary>Gets the name of the source file that is open in the specified Protected View window. </summary>
      <returns>The name of the source file that is open in the specified Protected View window.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.SourcePath">
      <summary>Gets the path of the source file that is open in the specified Protected View window.</summary>
      <returns>The path of the source file that is open in the specified Protected View window.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Top">
      <summary>Gets or sets a value that represents the distance, in points, from the top edge of the specified Protected View window to the top edge of the usable area.</summary>
      <returns>The distance, in points, from the top edge of the specified Protected View window to the top edge of the usable area.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Visible">
      <summary>Gets or sets a value that determines whether the specified Protected View window is visible.</summary>
      <returns>true if the specified Protected View window is visible; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Width">
      <summary>Gets or sets a value that specifies the width, in points, of the specified Protected View window.</summary>
      <returns>The width, in points, of the specified Protected View window.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.WindowState">
      <summary>Gets or sets the state of the specified Protected View window.</summary>
      <returns>The state of the specified Protected View window.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Workbook">
      <summary>Gets an object that represents the workbook that is open in the specified Protected View window.</summary>
      <returns>The workbook that is open in the specified Protected View window.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows">
      <summary>A collection of the <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> objects that represent all the Protected View windows that are currently open in the application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ProtectedViewWindows._Default(System.Object)">
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ProtectedViewWindows.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ProtectedViewWindows.Count">
      <summary>Gets a value that represents the number of objects in the collection.</summary>
      <returns>The number of objects in the collection.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ProtectedViewWindows.Creator">
      <summary>Gets a 32-bit integer that indicates the application in which this object was created.</summary>
      <returns>A 32-bit integer that indicates the application in which this object was created.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ProtectedViewWindows.GetEnumerator">
      <returns>Returns <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ProtectedViewWindows.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" />.</returns>
      <param name="Index">The name or index number of the object.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ProtectedViewWindows.Open(System.String,System.Object,System.Object,System.Object)">
      <summary>Opens the specified workbook in a new Protected View window.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> object.</returns>
      <param name="Filename">The name of the workbook (paths are accepted).</param>
      <param name="Password">The password for opening the workbook.</param>
      <param name="AddToMru">true to add the file name to the list of recently used files on the Recent tab of the Backstage view.</param>
      <param name="RepairMode">true to repair the workbook to prevent file corruption.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ProtectedViewWindows.Parent">
      <summary>Gets the parent object for the specified object.</summary>
      <returns>The parent object for the specified object.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Protection">
      <summary>Represents the various types of protection options available for a worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Protection.AllowDeletingColumns">
      <summary>Returns True if the deletion of columns is allowed on a protected worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Protection.AllowDeletingRows">
      <summary>Returns True if the deletion of rows is allowed on a protected worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Protection.AllowEditRanges">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.AllowEditRanges" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Protection.AllowFiltering">
      <summary>Returns True if the user is allowed to make use of an AutoFilter that was created before the sheet was protected.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingCells">
      <summary>Returns True if the formatting of cells is allowed on a protected worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingColumns">
      <summary>Returns True if the formatting of columns is allowed on a protected worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingRows">
      <summary>Returns True if the formatting of rows is allowed on a protected worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingColumns">
      <summary>Returns True if the insertion of columns is allowed on a protected worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingHyperlinks">
      <summary>Returns True if the insertion of hyperlinks is allowed on a protected worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingRows">
      <summary>Returns True if the insertion of rows is allowed on a protected worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Protection.AllowSorting">
      <summary>Returns True if the sorting option is allowed on a protected worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Protection.AllowUsingPivotTables">
      <summary>Returns True if the user is allowed to manipulate pivot tables on a protected worksheet.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.PublishObject">
      <summary>Represents an item in a workbook that has been saved to a Web page and can be refreshed according to values specified by the properties and methods of the PublishObject object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PublishObject.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PublishObject.AutoRepublish">
      <summary>When a workbook is saved, Microsoft Excel determines if any item in the <see cref="T:Microsoft.Office.Interop.Excel.PublishObjects" /> collection has the AutoRepublish property set to True and, if so, republishes it. The default value is False.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PublishObject.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PublishObject.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PublishObject.DivID">
      <summary>Returns the unique identifier used for identifying an HTML &lt;DIV&gt; tag on a Web page.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PublishObject.Filename">
      <summary>Returns or sets the URL (on the intranet or the Web) or path (local or network) to the location where the specified source object was saved.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PublishObject.HtmlType">
      <summary>Returns or sets the type of HTML generated by Microsoft Excel when you save the specified item to a Web page.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PublishObject.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PublishObject.Publish(System.Object)">
      <summary>Saves an item or a collection of items in a document to a Web page.</summary>
      <param name="Create">Optional Object. If the HTML file exists, setting this argument to True replaces the file, and setting this argument to False inserts the item or items at the end of the file. If the file does not exist, the file is created regardless of the value of the <paramref name="Create" /> argument.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PublishObject.Sheet">
      <summary>Returns the sheet name for the specified <see cref="T:Microsoft.Office.Interop.Excel.PublishObject" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PublishObject.Source">
      <summary>Returns the unique name that identifies items that have a <see cref="P:Microsoft.Office.Interop.Excel.PublishObject.SourceType" /> property value of xlSourceRange, xlSourceChart, xlSourcePrintArea, xlSourceAutoFilter, xlSourcePivotTable, or xlSourceQuery.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PublishObject.SourceType">
      <summary>Returns a value that identifies the type of item being published.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PublishObject.Title">
      <summary>Returns or sets the title of the Web page when the document is saved as a Web page.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.PublishObjects">
      <summary>A collection of all <see cref="T:Microsoft.Office.Interop.Excel.PublishObject" /> objects in the workbook. Each PublishObject object represents an item in a workbook that has been saved to a Web page and can be refreshed according to values specified by the properties and methods of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PublishObjects._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PublishObjects.Add(Microsoft.Office.Interop.Excel.XlSourceType,System.String,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Creates an object that represents an item in a document saved to a Web page. Such objects facilitate subsequent updates to the Web page while automated changes are being made to the document in Microsoft Excel. Returns a <see cref="T:Microsoft.Office.Interop.Excel.PublishObject" /> object.</summary>
      <param name="SourceType">Required <see cref="T:Microsoft.Office.Interop.Excel.XlSourceType" />. The source type.</param>
      <param name="Filename">Required String. The URL (on the intranet or the Web) or path (local or network) to which the source object was saved.</param>
      <param name="Sheet">Optional Object. The name of the worksheet that was saved as a Web page.</param>
      <param name="Source">Optional Object. A unique name used to identify items that have one of the following constants as their <paramref name="SourceType" /> argument: xlSourceAutoFilter, xlSourceChart, xlSourcePivotTable, xlSourcePrintArea, xlSourceQuery, or xlSourceRange. If <paramref name="SourceType" /> is xlSourceRange, Source specifies a range, which can be a defined name. If <paramref name="SourceType" /> is xlSourceChart, xlSourcePivotTable, or xlSourceQuery, <paramref name="Source" /> specifies the name of a chart, PivotTable report, or query table.</param>
      <param name="HtmlType">Optional Object. Specifies whether the item is saved as an interactive Microsoft Office Web component or as static text and images. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlHtmlType" /> constants.ConstantDescriptionxlHtmlCalcItem saved as an interactive Microsoft Office Spreadsheet component.xlHtmlChartItem saved as an interactive Microsoft Office Chart component.xlHtmlListItem saved as an interactive Microsoft Office PivotTable component.xlHtmlStaticItem saved as static text and images.</param>
      <param name="DivID">Optional Object. The unique identifier used in the HTML DIV tag to identify the item on the Web page.</param>
      <param name="Title">Optional Object. The title of the Web page.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PublishObjects.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PublishObjects.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PublishObjects.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PublishObjects.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PublishObjects.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.PublishObjects.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.PublishObjects.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.PublishObjects.Publish">
      <summary>Saves an item or a collection of items in a document to a Web page.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.QueryTable">
      <summary>Represents a worksheet table built from data returned from an external data source, such as a SQL server or a Microsoft Access database. The QueryTable object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> collection. </summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.QueryTableClass">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.QueryTableClass.#ctor"></member>
    <member name="M:Microsoft.Office.Interop.Excel.QueryTableClass.add_AfterRefresh(Microsoft.Office.Interop.Excel.RefreshEvents_AfterRefreshEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.QueryTableClass.add_BeforeRefresh(Microsoft.Office.Interop.Excel.RefreshEvents_BeforeRefreshEventHandler)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.AdjustColumnWidth"></member>
    <member name="E:Microsoft.Office.Interop.Excel.QueryTableClass.AfterRefresh"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.BackgroundQuery"></member>
    <member name="E:Microsoft.Office.Interop.Excel.QueryTableClass.BeforeRefresh"></member>
    <member name="M:Microsoft.Office.Interop.Excel.QueryTableClass.CancelRefresh"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.CommandText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.CommandType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.Connection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.QueryTableClass.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.Destination"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.EditWebPage"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.EnableEditing"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.EnableRefresh"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.FetchedRowOverflow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.FieldNames"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.FillAdjacentFormulas"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.HasAutoFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.ListObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.MaintainConnection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.Parameters"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.PostText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.PreserveColumnInfo"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.PreserveFormatting"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.QueryType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.Recordset"></member>
    <member name="M:Microsoft.Office.Interop.Excel.QueryTableClass.Refresh(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.Refreshing"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.RefreshOnFileOpen"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.RefreshPeriod"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.RefreshStyle"></member>
    <member name="M:Microsoft.Office.Interop.Excel.QueryTableClass.remove_AfterRefresh(Microsoft.Office.Interop.Excel.RefreshEvents_AfterRefreshEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.QueryTableClass.remove_BeforeRefresh(Microsoft.Office.Interop.Excel.RefreshEvents_BeforeRefreshEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.QueryTableClass.ResetTimer"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.ResultRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.RobustConnect"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.RowNumbers"></member>
    <member name="M:Microsoft.Office.Interop.Excel.QueryTableClass.SaveAsODC(System.String,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.SaveData"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.SavePassword"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.Sort"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.SourceConnectionFile"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.SourceDataFile"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.Sql"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.TablesOnlyFromHTML"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.TextFileColumnDataTypes"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.TextFileCommaDelimiter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.TextFileConsecutiveDelimiter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.TextFileDecimalSeparator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.TextFileFixedColumnWidths"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.TextFileOtherDelimiter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.TextFileParseType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.TextFilePlatform"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.TextFilePromptOnRefresh"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.TextFileSemicolonDelimiter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.TextFileSpaceDelimiter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.TextFileStartRow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.TextFileTabDelimiter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.TextFileTextQualifier"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.TextFileThousandsSeparator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.TextFileTrailingMinusNumbers"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.TextFileVisualLayout"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.WebConsecutiveDelimitersAsOne"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.WebDisableDateRecognition"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.WebDisableRedirections"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.WebFormatting"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.WebPreFormattedTextToColumns"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.WebSelectionType"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.WebSingleBlockTextImport"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.WebTables"></member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTableClass.WorkbookConnection"></member>
    <member name="T:Microsoft.Office.Interop.Excel.QueryTables">
      <summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> objects. Each QueryTable object represents a worksheet table built from data returned from an external data source.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTables._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.QueryTables.Add(System.Object,Microsoft.Office.Interop.Excel.Range,System.Object)">
      <summary>Creates a new query table. Returns a <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> object that represents the new query table.</summary>
      <param name="Connection">Required Object. The data source for the query table. Can be one of the following:A string containing an OLE DB or ODBC connection string. The ODBC connection string has the form "ODBC;&lt;connection string&gt;".A QueryTable object from which the query information is initially copied, including the connection string and the SQL text, but not including the <paramref name="Destination" /> range. Specifying a QueryTable object causes the <paramref name="Sql" /> argument to be ignored.An ADO or DAO Recordset object. Data is read from the ADO or DAO recordset. Microsoft Excel retains the recordset until the query table is deleted or the connection is changed. The resulting query table cannot be edited.A Web query. A string in the form "URL;&lt;url&gt;", where "URL;" is required but not localized and the rest of the string is used for the URL of the Web query.Data Finder. A string in the form "FINDER;&lt;data finder file path&gt;" where "FINDER;" is required but not localized. The rest of the string is the path and file name of a Data Finder file (*.dqy or *.iqy). The file is read when the Add method is run; subsequent calls to the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.Connection" /> property of the query table will return strings beginning with "ODBC;" or "URL;" as appropriate.A text file. A string in the form "TEXT;&lt;text file path and name&gt;", where TEXT is required but not localized.</param>
      <param name="Destination">Required Range. The cell in the upper-left corner of the query table destination range (the range where the resulting query table will be placed). The destination range must be on the worksheet that contains the <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> object.</param>
      <param name="Sql">Optional Object. The SQL query string to be run on the ODBC data source. This argument is optional when you're using an ODBC data source You cannot use this argument when a QueryTable object, text file, or ADO or DAO Recordset object is specified as the data source.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTables.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTables.Count">
      <summary>Returns the number of objects in the collection. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTables.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.QueryTables.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.QueryTables.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.QueryTables.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Range">
      <summary>Represents a cell, a row, a column, a selection of cells containing one or more contiguous blocks of cells, or a 3-D range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range._Default(System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range._PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.Activate">
      <summary>Activates a single cell, which must be inside the current selection.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.AddComment(System.Object)">
      <summary>Adds a comment to the range.</summary>
      <param name="Text">Optional Object. The comment text.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.AddIndent">
      <summary>Determines if text is automatically indented when the text alignment in a cell is set to equal distribution either horizontally or vertically.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)">
      <summary>Returns the range reference.</summary>
      <param name="RowAbsolute">Optional Object. True to return the row part of the reference as an absolute reference. The default value is True.</param>
      <param name="ColumnAbsolute">Optional Object. True to return the column part of the reference as an absolute reference. The default value is True.</param>
      <param name="ReferenceStyle">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</param>
      <param name="External">Optional Object. True to return an external reference; False to return a local reference. The default value is False.</param>
      <param name="RelativeTo">Optional Object. If <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> are False, and <paramref name="ReferenceStyle" /> is xlR1C1, you must include a starting point for the relative reference. This argument is a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that defines the starting point.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.AddressLocal(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)">
      <summary>Returns the range reference for the specified range in the language of the user. </summary>
      <param name="RowAbsolute">Optional Object. True to return the row part of the reference as an absolute reference. The default value is True.</param>
      <param name="ColumnAbsolute">Optional Object. True to return the column part of the reference as an absolute reference. The default value is True.</param>
      <param name="ReferenceStyle">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</param>
      <param name="External">Optional Object. True to return an external reference. False to return a local reference. The default value is False.</param>
      <param name="RelativeTo">Optional Object. If <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> are both set to False and <paramref name="ReferenceStyle" /> is set to xlR1C1, you must include a starting point for the relative reference. This argument is a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that defines the starting point for the reference.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.AdvancedFilter(Microsoft.Office.Interop.Excel.XlFilterAction,System.Object,System.Object,System.Object)">
      <summary>Filters or copies data from a list based on a criteria range.</summary>
      <param name="Action">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFilterAction" />. Can be one of the following XlFilterAction constants:xlFilterCopyxlFilterInPlace</param>
      <param name="CriteriaRange">Optional Object. The criteria range. If this argument is omitted, there are no criteria.</param>
      <param name="CopyToRange">Optional Object. The destination range for the copied rows if Action is <paramref name="xlFilterCopy" />. Otherwise, this argument is ignored.</param>
      <param name="Unique">Optional Object. True to filter unique records only; False to filter all records that meet the criteria. The default value is False.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.AllocateChanges">
      <summary>Performs a writeback operation for all edited cells in a range based on an OLAP data source.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.AllowEdit">
      <summary>Determines if the range can be edited on a protected worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.ApplyNames(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlApplyNamesOrder,System.Object)">
      <summary>Applies names to the cells in the specified range.</summary>
      <param name="Names">Optional Object. An array of the names to be applied. If this argument is omitted, all names on the sheet are applied to the range.</param>
      <param name="IgnoreRelativeAbsolute">Optional Object. True to replace references with names, regardless of the reference types of either the names or references; False to replace absolute references only with absolute names, relative references only with relative names, and mixed references only with mixed names. The default value is True.</param>
      <param name="UseRowColumnNames">Optional Object. True to use the names of row and column ranges that contain the specified range if names for the range cannot be found; False to ignore the <paramref name="OmitColumn" /> and <paramref name="OmitRow" /> arguments. The default value is True.</param>
      <param name="OmitColumn">Optional Object. True to replace the entire reference with the row-oriented name. The column-oriented name can be omitted only if the referenced cell is in the same column as the formula and is within a row-oriented named range. The default value is True.</param>
      <param name="OmitRow">Optional Object. True to replace the entire reference with the column-oriented name. The row-oriented name can be omitted only if the referenced cell is in the same row as the formula and is within a column-oriented named range. The default value is True.</param>
      <param name="Order">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlApplyNamesOrder" />. Determines which range name is listed first when a cell reference is replaced by a row-oriented and column-oriented range name. Can be one of these XlApplyNamesOrder constants:xlColumnThenRowxlRowThenColumn <paramref name="default" /></param>
      <param name="AppendLast">Optional Object. True to replace the definitions of the names in <paramref name="Names" /> and also replace the definitions of the last names that were defined; False to replace the definitions of the names in <paramref name="Names" /> only. The default value is False.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.ApplyOutlineStyles">
      <summary>Applies outlining styles to the specified range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Areas">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> collection that represents all the ranges in a multiple-area selection.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.AutoComplete(System.String)">
      <summary>Returns an AutoComplete match from the list.</summary>
      <param name="String">Required String. The string to complete.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.AutoFill(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlAutoFillType)">
      <summary>Performs an autofill on the cells in the specified range.</summary>
      <param name="Destination">Required <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object. The cells to be filled. The destination must include the source range.</param>
      <param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFillType" />. Specifies the fill type. Can be one of these XlAutoFillType constants:xlFillDaysxlFillFormatsxlFillSeriesxlFillWeekdaysxlGrowthTrendxlFillCopyxlFillDefault<paramref name="default" />xlFillMonthsxlFillValuesxlFillYearsxlLinearTrendIf this argument is xlFillDefault or omitted, Microsoft Excel selects the most appropriate fill type, based on the source range.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)">
      <summary>Filters a list using the AutoFilter.</summary>
      <param name="Field">Optional Object. The integer offset of the field on which you want to base the filter (from the left of the list; the leftmost field is field one).</param>
      <param name="Criteria1">Optional Object. The criteria (a string; for example, "101"). Use "=" to find blank fields, or use "&lt;&gt;" to find nonblank fields. If this argument is omitted, the criteria is All. If <paramref name="Operator" /> is xlTop10Items, <paramref name="Criteria1" /> specifies the number of items (for example, "10").</param>
      <param name="Operator">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFilterOperator" />. Can be one of the following XlAutoFilterOperator constants:xlAnd<paramref name="default" />xlBottom10ItemsxlBottom10PercentxlOrxlTop10ItemsxlTop10PercentUse xlAnd and xlOr with <paramref name="Criteria1" /> and <paramref name="Criteria2" /> to construct compound criteria.</param>
      <param name="Criteria2">Optional Object. The second criteria (a string). Used with Criteria1 and Operator to construct compound criteria.</param>
      <param name="VisibleDropDown">Optional Object. True to display the AutoFilter drop-down arrow for the filtered field; False to hide the AutoFilter drop-down arrow for the filtered field. True by default.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.AutoFit">
      <summary>Changes the width of the columns in the range or the height of the rows in the range to achieve the best fit.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.AutoFormat(Microsoft.Office.Interop.Excel.XlRangeAutoFormat,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Automatically formats the specified range, using a predefined format.</summary>
      <param name="Format">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" />. The specified AutoFormat.Some of the XlRangeAutoFormat constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</param>
      <param name="Number">Optional Object. True to include number formats in the AutoFormat. The default value is True.</param>
      <param name="Font">Optional Object. True to include font formats in the AutoFormat. The default value is True.</param>
      <param name="Alignment">Optional Object. True to include alignment in the AutoFormat. The default value is True.</param>
      <param name="Border">Optional Object. True to include border formats in the AutoFormat. The default value is True.</param>
      <param name="Pattern">Optional Object. True to include pattern formats in the AutoFormat. The default value is True.</param>
      <param name="Width">Optional Object. True to include column width and row height in the AutoFormat. The default value is True.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.AutoOutline">
      <summary>Automatically creates an outline for the specified range.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.BorderAround(System.Object,Microsoft.Office.Interop.Excel.XlBorderWeight,Microsoft.Office.Interop.Excel.XlColorIndex,System.Object)">
      <summary>Adds a border to a range and sets the <see cref="P:Microsoft.Office.Interop.Excel.Border.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" />, and <see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" /> properties for the new border.</summary>
      <param name="LineStyle">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLineStyle" />. The line style for the border. Can be one of the following XlLineStyle constants:xlContinuous<paramref name="default" />xlDashxlDashDotxlDashDotDotxlDotxlDoublexlLineStlyeNonexlSlantDashDotxlLineStlyeNone</param>
      <param name="Weight">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlBorderWeight" />. The border weight. Can be one of the following XlBorderWeight constants:xlHairlinexlMediumxlThickxlThin<paramref name="default" /></param>
      <param name="ColorIndex">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />. The border color, as an index into the current color palette or as an XlColorIndex constant. Can be one of the following XlColorIndex constants:xlColorIndexAutomatic<paramref name="default" />xlColorIndexNone</param>
      <param name="Color">Optional Object. The border color, as an RGB value.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.BorderAround2(System.Object,Microsoft.Office.Interop.Excel.XlBorderWeight,Microsoft.Office.Interop.Excel.XlColorIndex,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Borders">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> collection that represents the borders of a style or a range of cells (including a range defined as part of a conditional format).</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.Calculate">
      <summary>Calculates a specified range of cells on a worksheet.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.CalculateRowMajorOrder">
      <summary>Calculates a specfied range of cells.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Cells">
      <summary>Returns a Range object that represents the cells in the specified range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Characters(System.Object,System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> object that represents a range of characters within the object text. </summary>
      <param name="Start">Optional Object. The first character to be returned. If this argument is either 1 or omitted, this property returns a range of characters starting with the first character.</param>
      <param name="Length">Optional Object. The number of characters to be returned. If this argument is omitted, this property returns the remainder of the string (everything after the <paramref name="Start" /> character).</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
      <summary>Checks the spelling of an object.</summary>
      <param name="CustomDictionary">Optional Object. A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary. If this argument is omitted, the currently specified dictionary is used.</param>
      <param name="IgnoreUppercase">Optional Object. True to have Microsoft Excel ignore words that are all uppercase; False to have Microsoft Excel check words that are all uppercase. If this argument is omitted, the current setting will be used.</param>
      <param name="AlwaysSuggest">Optional Object. True to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found; False to have Microsoft Excel pause while you input the correct spelling. If this argument is omitted, the current setting will be used.</param>
      <param name="SpellLang">Optional Object. The language of the dictionary being used. Can be one of the MsoLanguageID values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.Clear">
      <summary>Clears the entire object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.ClearComments">
      <summary>Clears all cell comments from the specified range.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.ClearContents">
      <summary>Clears the formulas from the range.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.ClearFormats">
      <summary>Clears the formatting of the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.ClearHyperlinks">
      <summary>Removes all hyperlinks from the specified range.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.ClearNotes">
      <summary>Clears notes and sound notes from all the cells in the specified range.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.ClearOutline">
      <summary>Clears the outline for the specified range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Column">
      <summary>Returns the number of the first column in the first area in the specified range.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.ColumnDifferences(System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells whose contents are different from the comparison cell in each column.</summary>
      <param name="Comparison">Required Object. A single cell to compare to the specified range.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Columns">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the columns in the specified range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.ColumnWidth">
      <summary>Returns or sets the width of all columns in the specified range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Comment">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> object that represents the comment associated with the cell in the upper-left corner of the range.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.Consolidate(System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Consolidates data from multiple ranges on multiple worksheets into a single range on a single worksheet.</summary>
      <param name="Sources">Optional Object. The sources of the consolidation as an array of text reference strings in R1C1-style notation. The references must include the full path of sheets to be consolidated.</param>
      <param name="Function">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" />. Can be one of the following XlConsilidationFunction constants:xlAverage<paramref name="default" />xlCountxlCountNumsxlMaxxlMinxlProductxlStDevxlStDevPxlSumxlVarxlVarP</param>
      <param name="TopRow">Optional Object. True to consolidate data based on column titles in the top row of the consolidation ranges; False to consolidate data by position. The default value is False.</param>
      <param name="LeftColumn">Optional Object. True to consolidate data based on row titles in the left column of the consolidation ranges; False to consolidate data by position. The default value is False.</param>
      <param name="CreateLinks">Optional Object. True to have the consolidation use worksheet links; False to have the consolidation copy the data. The default value is False.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.Copy(System.Object)">
      <summary>Copies the range to the specified range or to the Clipboard.</summary>
      <param name="Destination">Optional Object. Specifies the new range to which the specified range will be copied. If this argument is omitted, Microsoft Excel copies the range to the Clipboard.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.CopyFromRecordset(System.Object,System.Object,System.Object)">
      <summary>Copies the contents of an ADO or DAO Recordset object onto a worksheet, beginning at the upper-left corner of the specified range.</summary>
      <param name="Data">Required Object. The Recordset object to copy into the range.</param>
      <param name="MaxRows">Optional Object. The maximum number of records to copy onto the worksheet. If this argument is omitted, all the records in the Recordset object are copied.</param>
      <param name="MaxColumns">Optional Object. The maximum number of fields to copy onto the worksheet. If this argument is omitted, all the fields in the Recordset object are copied.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
      <summary>Copies the selected object to the Clipboard as a picture.</summary>
      <param name="Appearance">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />. Specifies how the picture should be copied. Can be one of the following XlCopyPictureFormat constants:xlBitmapxlPicture<paramref name="default" /></param>
      <param name="Format">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />. The format of the picture. Can be one of the following XlPictureAppearance constants:xlPrinter. The picture is copied as it will look when it's printed.xlScreen<paramref name="default" />. The picture is copied to resemble its display on the screen as closely as possible.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.CountLarge">
      <summary>Counts the largest value in a given Range of values. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.CreateNames(System.Object,System.Object,System.Object,System.Object)">
      <summary>Creates names in the specified range, based on text labels in the sheet.</summary>
      <param name="Top">Optional Object. True to create names by using labels in the top row. The default value is False.</param>
      <param name="Left">Optional Object. True to create names by using labels in the left column. The default value is False.</param>
      <param name="Bottom">Optional Object. True to create names by using labels in the bottom row. The default value is False.</param>
      <param name="Right">Optional Object. True to create names by using labels in the right column. The default value is False.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)">
      <summary>You have requested Help for a keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
      <param name="Edition">This parameter is for Macintosh only and should not be used.</param>
      <param name="Appearance">This parameter is for Macintosh only and should not be used.</param>
      <param name="ContainsPICT">This parameter is for Macintosh only and should not be used.</param>
      <param name="ContainsBIFF">This parameter is for Macintosh only and should not be used.</param>
      <param name="ContainsRTF">This parameter is for Macintosh only and should not be used.</param>
      <param name="ContainsVALU">This parameter is for Macintosh only and should not be used.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.CurrentArray">
      <summary>If the specified cell is part of an array, returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the entire array.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.CurrentRegion">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the current region.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.Cut(System.Object)">
      <summary>Cuts the object to the Clipboard or pastes it into a specified destination.</summary>
      <param name="Destination">Optional Object. The range where the object should be pasted. If this argument is omitted, the object is cut to the Clipboard.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.DataSeries(System.Object,Microsoft.Office.Interop.Excel.XlDataSeriesType,Microsoft.Office.Interop.Excel.XlDataSeriesDate,System.Object,System.Object,System.Object)">
      <summary>Creates a data series in the specified range.</summary>
      <param name="Rowcol">Optional Object. Can be the xlRows or xlColumns constant to have the data series entered in rows or columns, respectively. If this argument is omitted, the size and shape of the range is used.</param>
      <param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesType" />. Can be one of the following XlDataSeriesType constants:xlAutoFillxlDataSeriesLinear<paramref name="default" />xlChronologicalxlGrowth</param>
      <param name="Date">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesDate" />. If the Type argument is xlChronological, the Date argument indicates the step date unit. Can be one of the following XlDataSeriesDate constants:xlDay<paramref name="default" />xlWeekdayxlMonthxlYear</param>
      <param name="Step">Optional Object. The step value for the series. The default value is 1.</param>
      <param name="Stop">Optional Object. The stop value for the series. If this argument is omitted, Microsoft Excel fills to the end of the range.</param>
      <param name="Trend">Optional Object. True to create a linear trend or growth trend; False to create a standard data series. The default value is False.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.Delete(System.Object)">
      <summary>Deletes the object.</summary>
      <param name="Shift">Optional Object. Specifies how to shift cells to replace deleted cells. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDeleteShiftDirection" /> constants: xlShiftToLeft or xlShiftUp. If this argument is omitted, Microsoft Excel decides based on the shape of the range.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Dependents">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing all the dependents of a cell.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.DialogBox">
      <summary>Displays a dialog box defined by a dialog box definition table on a Microsoft Excel 4.0 macro sheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.DirectDependents">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing all the direct dependents of a cell.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.DirectPrecedents">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing all the direct precedents of a cell.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.Dirty">
      <summary>Designates a range to be recalculated when the next recalculation occurs.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.DiscardChanges">
      <summary>Discards all changes in the edited cells of the range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.DisplayFormat">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> object that represents the display settings for the specified range.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> object that represents the display settings for the specified range.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.EditionOptions(Microsoft.Office.Interop.Excel.XlEditionType,Microsoft.Office.Interop.Excel.XlEditionOptionsOption,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object)">
      <summary>You have requested Help for a keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
      <param name="Type">This parameter is for Macintosh only and should not be used.</param>
      <param name="Option">This parameter is for Macintosh only and should not be used.</param>
      <param name="Name">This parameter is for Macintosh only and should not be used.</param>
      <param name="Reference">This parameter is for Macintosh only and should not be used.</param>
      <param name="Appearance">This parameter is for Macintosh only and should not be used.</param>
      <param name="ChartSize">This parameter is for Macintosh only and should not be used.</param>
      <param name="Format">This parameter is for Macintosh only and should not be used.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.End(Microsoft.Office.Interop.Excel.XlDirection)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell at the end of the region that contains the source range.</summary>
      <param name="Direction">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />. The direction in which to move.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.EntireColumn">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the entire column (or columns) that contains the specified range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.EntireRow">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the entire row (or rows) that contains the specified range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Errors">
      <summary>Allows the user to access error checking options.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Exports to a file of the specified format.</summary>
      <param name="Type">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatType" /> The type of file format to export to.</param>
      <param name="Filename">Optional Object The file name of the file to be saved. You can include a full path, or short_Excel2007 saves the file in the current folder.</param>
      <param name="Quality">Optional Object Typically formatted as a <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />. Specifies the quality of the published file.</param>
      <param name="IncludeDocProperties">Optional Object set to True to include the document properties; otherwise False.</param>
      <param name="IgnorePrintAreas">Optional Object set to True to ignore any print areas set when publishing; otherwise False.</param>
      <param name="From">Optional Object The number of the page at which to start publishing. If this argument is omitted, publishing starts at the beginning.</param>
      <param name="To">Optional Object The number of the last page to publish. If this argument is omitted, publishing ends with the last page.</param>
      <param name="OpenAfterPublish">Optional Object set to True to display the file in the viewer after it is published; otherwise
False.</param>
      <param name="FixedFormatExtClassPtr">Optional Object Pointer to the FixedFormatExt class.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.FillDown">
      <summary>Fills down from the top cell or cells in the specified range to the bottom of the range.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.FillLeft">
      <summary>Fills left from the rightmost cell or cells in the specified range.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.FillRight">
      <summary>Fills right from the leftmost cell or cells in the specified range.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.FillUp">
      <summary>Fills up from the bottom cell or cells in the specified range to the top of the range.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)">
      <summary>Finds specific information in a range and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the first cell where that information is found.</summary>
      <param name="What">Required Object. The data to search for. Can be a string or any Microsoft Excel data type.</param>
      <param name="After">Optional Object. The cell after which you want the search to begin. This corresponds to the position of the active cell when a search is done from the user interface. Note that After must be a single cell in the range. Remember that the search begins <paramref name="after" /> this cell; the specified cell isn’t searched until the method wraps back around to this cell. If you don’t specify this argument, the search starts after the cell in the upper-left corner of the range.</param>
      <param name="LookIn">Optional Object. The type of information.</param>
      <param name="LookAt">Optional Object. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> constants: xlWhole or xlPart.</param>
      <param name="SearchOrder">Optional Object. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> constants: xlByRows or xlByColumns.</param>
      <param name="SearchDirection">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSearchDirection" />. The search direction. Can be one of these XlSearchDirection constants:xlNext<paramref name="default" />xlPrevious</param>
      <param name="MatchCase">Optional Object. True to make the search case sensitive. The default value is False.</param>
      <param name="MatchByte">Optional Object. Used only if you’ve selected or installed double-byte language support. True to have double-byte characters match only double-byte characters; False to have double-byte characters match their single-byte equivalents.</param>
      <param name="SearchFormat">Optional Object. The search format.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.FindNext(System.Object)">
      <summary>Continues a search that was begun with the <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> method.</summary>
      <param name="After">Optional Object. The cell after which you want to search. This corresponds to the position of the active cell when a search is done from the user interface. Note that <paramref name="After" /> must be a single cell in the range. Remember that the search begins <paramref name="after" /> this cell; the specified cell isn’t searched until the method wraps back around to this cell. If this argument isn’t specified, the search starts after the cell in the upper-left corner of the range.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.FindPrevious(System.Object)">
      <summary>Continues a search that was begun with the <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> method.</summary>
      <param name="After">Optional Object. The cell before which you want to search. This corresponds to the position of the active cell when a search is done from the user interface. Note that <paramref name="After" /> must be a single cell in the range. Remember that the search begins <paramref name="before" /> this cell; the specified cell isn’t searched until the method wraps back around to this cell. If this argument isn’t specified, the search starts before the upper-left cell in the range.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Font">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.FormatConditions">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection that represents all the conditional formats for the specified range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Formula">
      <summary>Returns or sets the object's formula in A1-style notation and in the language of the macro.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.FormulaArray">
      <summary>Returns or sets the array formula of a range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.FormulaHidden">
      <summary>Determines if the formula will be hidden when the worksheet is protected.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.FormulaLabel">
      <summary>Returns or sets the formula label type for the specified range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.FormulaLocal">
      <summary>Returns or sets the formula for the object, using A1-style references in the language of the user.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.FormulaR1C1">
      <summary>Returns or sets the formula for the object, using R1C1-style notation in the language of the macro.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.FormulaR1C1Local">
      <summary>Returns or sets the formula for the object, using R1C1-style notation in the language of the user.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.FunctionWizard">
      <summary>Starts the Function Wizard for the upper-left cell of the range.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.GoalSeek(System.Object,Microsoft.Office.Interop.Excel.Range)">
      <summary>Calculates the values necessary to achieve a specific goal.</summary>
      <param name="Goal">Required Object. The value you want returned in this cell.</param>
      <param name="ChangingCell">Required <see cref="T:Microsoft.Office.Interop.Excel.Range" />. Specifies which cell should be changed to achieve the target value.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.Group(System.Object,System.Object,System.Object,System.Object)">
      <summary>When the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object represents a single cell in a PivotTable field’s data range, the Group method performs numeric or date-based grouping in that field.</summary>
      <param name="Start">Optional Object. The first value to be grouped. If this argument is omitted or True, the first value in the field is used.</param>
      <param name="End">Optional Object. The last value to be grouped. If this argument is omitted or True, the last value in the field is used.</param>
      <param name="By">Optional Object. If the field is numeric, this argument specifies the size of each group. If the field is a date, this argument specifies the number of days in each group if element 4 in the <paramref name="Periods" /> array is True and all the other elements are False. Otherwise, this argument is ignored. If this argument is omitted, Microsoft Excel automatically chooses a default group size.</param>
      <param name="Periods">Optional Object. An array of Boolean values that specify the period for the group, as shown in the following table.If an element in the array is True, a group is created for the corresponding time; if the element is False, no group is created. If the field isn’t a date field, this argument is ignored.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.HasArray">
      <summary>Determines if the specified cell is part of an array formula.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.HasFormula">
      <summary>Determines if all cells in the range contain formulas.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Height">
      <summary>The height of the range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Hidden">
      <summary>Determines if the rows or columns are hidden.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.HorizontalAlignment">
      <summary>Returns or sets the horizontal alignment for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Hyperlinks">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.ID">
      <summary>Returns or sets the identifying label for the specified cell when the page is saved as a Web page.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.IndentLevel">
      <summary>Returns or sets the indent level for the cell or range.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.Insert(System.Object,System.Object)">
      <summary>Inserts a cell or a range of cells into the worksheet or macro sheet and shifts other cells away to make space.</summary>
      <param name="Shift">Optional Object. Specifies which way to shift the cells. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlInsertShiftDirection" /> constants: xlShiftToRight or xlShiftDown. If this argument is omitted, Microsoft Excel decides based on the shape of the range.</param>
      <param name="CopyOrigin">Optional Object. The copy origin.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.InsertIndent(System.Int32)">
      <summary>Adds an indent to the specified range.</summary>
      <param name="InsertAmount">Required Integer. The amount to be added to the current indent.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Interior">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a range at an offset to the specified range.</summary>
      <param name="RowIndex">Required Object. The index number of the cell you want to access, in order from left to right, then down. Range.Item(1) returns the upper-left cell in the range; Range.Item(2) returns the cell immediately to the right of the upper-left cell.</param>
      <param name="ColumnIndex">Optional Object. A number or string that indicates the column number of the cell you want to access, starting with either 1 or "A" for the first column in the range.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.Justify">
      <summary>Rearranges the text in a range so that it fills the range evenly.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Left">
      <summary>The distance from the left edge of column A to the left edge of the range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.ListHeaderRows">
      <summary>Returns the number of header rows for the specified range.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.ListNames">
      <summary>Pastes a list of all displayed names onto the worksheet, beginning with the first cell in the range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.ListObject">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object for the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object or <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.LocationInTable">
      <summary>Returns a constant that describes the part of the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> report that contains the upper-left corner of the specified range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Locked">
      <summary>Determines if the object is locked.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.MDX">
      <summary>Returns the MDX name for the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object. Read-only.</summary>
      <returns>String</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.Merge(System.Object)">
      <summary>Creates a merged cell from the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</summary>
      <param name="Across">Optional Object. True to merge cells in each row of the specified range as separate merged cells. The default value is False.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.MergeArea">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the merged range containing the specified cell.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.MergeCells">
      <summary>Determines if the range or style contains merged cells.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Name">
      <summary>Returns or sets the name of the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.NavigateArrow(System.Object,System.Object,System.Object)">
      <summary>Navigates a tracer arrow for the specified range to the precedent, dependent, or error-causing cell or cells.</summary>
      <param name="TowardPrecedent">Optional Object. Specifies the direction to navigate: True to navigate toward precedents; False to navigate toward dependent.</param>
      <param name="ArrowNumber">Optional Object. Specifies the arrow number to navigate; corresponds to the numbered reference in the cell's formula.</param>
      <param name="LinkNumber">Optional Object. If the arrow is an external reference arrow, this argument indicates which external reference to follow. If this argument is omitted, the first external reference is followed.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Next">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the next cell.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.NoteText(System.Object,System.Object,System.Object)">
      <summary>Returns or sets the cell note associated with the cell in the upper-left corner of the range.</summary>
      <param name="Text">Optional Object. The text to add to the note (up to 255 characters). The text is inserted starting at position <paramref name="Start" />, replacing <paramref name="Length" /> characters of the existing note. If this argument is omitted, this method returns the current text of the note starting at position <paramref name="Start" />, for <paramref name="Length" /> characters.</param>
      <param name="Start">Optional Object. The starting position for the text that’s set or returned. If this argument is omitted, this method starts at the first character. To append text to the note, specify a number larger than the number of characters in the existing note.</param>
      <param name="Length">Optional Object. The number of characters to be set or returned. If this argument is omitted, Microsoft Excel sets or returns characters from the starting position to the end of the note (up to 255 characters). If there are more than 255 characters from <paramref name="Start" /> to the end of the note, this method returns only 255 characters.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.NumberFormat">
      <summary>Returns or sets the format code for the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal">
      <summary>Returns or sets the format code for the object as a string in the language of the user.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Offset(System.Object,System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a range that’s offset from the specified range.</summary>
      <param name="RowOffset">Optional Object. The number of rows (positive, negative, or 0 (zero)) by which the range is to be offset. Positive values are offset downward, and negative values are offset upward. The default value is 0.</param>
      <param name="ColumnOffset">Optional Object. The number of columns (positive, negative, or 0 (zero)) by which the range is to be offset. Positive values are offset to the right, and negative values are offset to the left. The default value is 0.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Orientation">
      <summary>Returns the text orientation.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.OutlineLevel">
      <summary>Returns or sets the current outline level of the specified row or column.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.PageBreak">
      <summary>Returns or sets the location of a page break.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.Parse(System.Object,System.Object)">
      <summary>Parses a range of data and breaks it into multiple cells.</summary>
      <param name="ParseLine">Optional Object. A string that contains left and right brackets to indicate where the cells should be split.For example, "[xxx][xxx]" would insert the first three characters into the first column of the destination range, and it would insert the next three characters into the second column.If this argument is omitted, Microsoft Excel guesses where to split the columns based on the spacing of the top left cell in the range. If you want to use a different range to guess the parse line, use a Range object as the <paramref name="ParseLine" /> argument. That range must be one of the cells that's being parsed. The <paramref name="ParseLine" /> argument cannot be longer than 255 characters, including the brackets and spaces.</param>
      <param name="Destination">Optional Object. A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the upper-left corner of the destination range for the parsed data. If this argument is omitted, Microsoft Excel parses in place.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)">
      <summary>Pastes a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> from the Clipboard into the specified range.</summary>
      <param name="Paste">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" />. The part of the range to be pasted. Can be one of the following XlPasteType constants:xlPasteAll defaultxlPasteAllExceptBordersxlPasteColumnWidthsxlPasteCommentsxlPasteFormatsxlPasteFormulasxlPasteFormulasAndNumberFormatsxlPasteValidationxlPasteValuesxlPasteValuesAndNumberFormats</param>
      <param name="Operation">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" />. The paste operation. Can be one of the following XlPasteSpecialOperation constants:xlPasteSpecialOperationAddxlPasteSpecialOperationDividexlPasteSpecialOperationMultiplyxlPasteSpecialOperationNone<paramref name="default" />xlPasteSpecialOperationSubtract</param>
      <param name="SkipBlanks">Optional Object. True to not have blank cells in the range on the Clipboard pasted into the destination range. The default value is False.</param>
      <param name="Transpose">Optional Object. True to transpose rows and columns when the range is pasted. The default value is False.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Phonetic">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> object which contains information about a specific phonetic text string in a cell.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Phonetics">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.Phonetics" /> collection of the range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.PivotCell">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" /> object that represents a cell in a PivotTable report.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.PivotField">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object that represents the PivotTable field containing the upper-left corner of the specified range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.PivotItem">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> object that represents the PivotTable item containing the upper-left corner of the specified range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.PivotTable">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object that represents the PivotTable report containing the upper-left corner of the specified range, or the PivotTable report associated with the PivotChart report.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Precedents">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the precedents of a cell.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.PrefixCharacter">
      <summary>Returns the prefix character for the cell.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Previous">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the previous cell.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Prints the object.</summary>
      <param name="From">Optional Object. The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
      <param name="To">Optional Object. The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
      <param name="Copies">Optional Object. The number of copies to print. If this argument is omitted, one copy is printed.</param>
      <param name="Preview">Optional Object. True to have Microsoft Excel invoke print preview before printing the object; False (or omitted) to print the object immediately.</param>
      <param name="ActivePrinter">Optional Object. Sets the name of the active printer.</param>
      <param name="PrintToFile">Optional Object. True to print to a file. If PrToFileName is not specified, Microsoft Excel prompts the user to enter the name of the output file.</param>
      <param name="Collate">Optional Object. True to collate multiple copies.</param>
      <param name="PrToFileName">Optional Object. If PrintToFile is set to True, this argument specifies the name of the file you want to print to.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.PrintPreview(System.Object)">
      <summary>Shows a preview of the object as it would look when printed.</summary>
      <param name="EnableChanges">True to enable changes.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.QueryTable">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> object that represents the query table that intersects the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Range(System.Object,System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</summary>
      <param name="Cell1">Required Object. The name of the range. This must be an A1-style reference in the language of the macro. It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma). It can also include dollar signs, but they’re ignored. You can use a local defined name in any part of the range. If you use a name, the name is assumed to be in the language of the macro.</param>
      <param name="Cell2">Optional Object. The cell in the upper-left and lower-right corner of the range. Can be a Range object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.ReadingOrder">
      <summary>Returns or sets the reading order for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.RemoveDuplicates(System.Object,Microsoft.Office.Interop.Excel.XlYesNoGuess)">
      <summary>Removes duplicate values from a range of values.</summary>
      <param name="Columns">Optional Object Array of indexes of the columns that contain the duplicate information.  If nothing is passed then it assumes all columns contain duplicate information.</param>
      <param name="Header">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> Specifies whether the first row contains header information.  <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo" /> is the default value; specify <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess" /> if you want Excel to attempt to determine the header.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.RemoveSubtotal">
      <summary>Removes subtotals from a list.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns a Boolean indicating characters in cells within the specified range.</summary>
      <param name="What">Required Object. The string you want Microsoft Excel to search for.</param>
      <param name="Replacement">Required Object. The replacement string.</param>
      <param name="LookAt">Optional Object. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> constants: xlWhole or xlPart.</param>
      <param name="SearchOrder">Optional Object. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> constants: xlByRows or xlByColumns.</param>
      <param name="MatchCase">Optional Object. True to make the search case sensitive.</param>
      <param name="MatchByte">Optional Object. You can use this argument only if you’ve selected or installed double-byte language support in Microsoft Excel. True to have double-byte characters match only double-byte characters; False to have double-byte characters match their single-byte equivalents.</param>
      <param name="SearchFormat">Optional Object. The search format for the method.</param>
      <param name="ReplaceFormat">Optional Object. The replace format for the method.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Resize(System.Object,System.Object)">
      <summary>Resizes the specified range.</summary>
      <param name="RowSize">Optional Object. The number of rows in the new range. If this argument is omitted, the number of rows in the range remains the same.</param>
      <param name="ColumnSize">Optional Object. The number of columns in the new range. If this argument is omitted, the number of columns in the range remains the same.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Row">
      <summary>Returns the number of the first row of the first area in the range.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.RowDifferences(System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells whose contents are different from those of the comparison cell in each row.</summary>
      <param name="Comparison">Required Object. A single cell to compare with the specified range.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.RowHeight">
      <summary>Returns the height of all the rows in the range specified, measured in points.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Rows">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the rows in the specified range.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Runs the Microsoft Excel macro at this location.</summary>
      <param name="Arg1">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg2">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg3">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg4">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg5">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg6">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg7">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg8">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg9">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg10">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg11">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg12">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg13">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg14">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg15">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg16">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg17">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg18">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg19">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg20">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg21">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg22">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg23">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg24">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg25">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg26">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg27">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg28">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg29">Optional Object. The arguments that should be passed to the function.</param>
      <param name="Arg30">Optional Object. The arguments that should be passed to the function.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.ServerActions">
      <summary>Specifies the actions that can be performed on the SharePoint server for a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Actions" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.SetPhonetic">
      <summary>Creates <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> objects for all the cells in the specified range.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.Show">
      <summary>Scrolls through the contents of the active window to move the range into view.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.ShowDependents(System.Object)">
      <summary>Draws tracer arrows to the direct dependents of the range.</summary>
      <param name="Remove">Optional Object. True to remove one level of tracer arrows to direct dependents; False to expand one level of tracer arrows. The default value is False.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.ShowDetail">
      <summary>Returns True if the outline is expanded for the specified range (so that the detail of the column or row is visible).</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.ShowErrors">
      <summary>Draws tracer arrows through the precedents tree to the cell that’s the source of the error and returns the range that contains that cell.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.ShowPrecedents(System.Object)">
      <summary>Draws tracer arrows to the direct precedents of the range.</summary>
      <param name="Remove">Optional Object. True to remove one level of tracer arrows to direct precedents; False to expand one level of tracer arrows. The default value is False.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.ShrinkToFit">
      <summary>Determines if text automatically shrinks to fit in the available column width.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.SmartTags">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> object representing the identifier for the specified cell.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.Sort(System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrientation,Microsoft.Office.Interop.Excel.XlSortMethod,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption)">
      <summary>Sorts a PivotTable report, a range, or the active region if the specified range contains only one cell.</summary>
      <param name="Key1">Optional Object. The first sort field, as either text (a PivotTable field or range name) or a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object ("Dept" or Cells(1, 1), for example).</param>
      <param name="Order1">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />. The sort order for the field or range specified in <paramref name="Key1" />. Can be one of the following XlSortOrder constants:xlDescending. Sorts <paramref name="Key1" /> in descending order.xlAscending<paramref name="default" />. Sorts <paramref name="Key1" /> in ascending order.</param>
      <param name="Key2">Optional Object. The second sort field, as either text (a PivotTable field or range name) or a Range object. If you omit this argument, there’s no second sort field. Cannot be used when sorting Pivot Table reports.</param>
      <param name="Type">Optional Object. Specifies which elements are to be sorted. Use this argument only when sorting PivotTable reports. Can be one of the following XlSortType constants:xlSortLabels. Sorts the PivotTable report by labels.xlSortValues. Sorts the PivotTable report by values.</param>
      <param name="Order2">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />. The sort order for the field or range specified in <paramref name="Key2" />. Cannot be used when sorting PivotTable reports. Can be one of the following XlSortOrder constants:xlDescending. Sorts <paramref name="Key2" /> in descending order.xlAscending<paramref name="default" />. Sorts <paramref name="Key2" /> in ascending order.</param>
      <param name="Key3">Optional Object. The third sort field, as either text (a range name) or a Range object. If you omit this argument, there’s no third sort field. Cannot be used when sorting PivotTable reports.</param>
      <param name="Order3">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />. The sort order for the field or range specified in <paramref name="Key3" />. Cannot be used when sorting PivotTable reports. Can be one of the following XlSortOrder constants:xlDescending. Sorts <paramref name="Key3" /> in descending order.xlAscending<paramref name="default" />. Sorts <paramref name="Key3" /> in ascending order.</param>
      <param name="Header">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" />. Specifies whether or not the first row contains headers. Cannot be used when sorting PivotTable reports. Can be one of the following XlYesNoGuess constants:xlGuess. Let Microsoft Excel determine whether there’s a header, and determine where it is if there is one.xlNo<paramref name="default" />. (The entire range should be sorted).xlYes. (The entire range should not be sorted).</param>
      <param name="OrderCustom">Optional Object. This argument is a one-based integer offset to the list of custom sort orders. If you omit <paramref name="OrderCustom" />, a normal sort is used.</param>
      <param name="MatchCase">Optional Object. True to do a case-sensitive sort; False to do a sort that’s not case sensitive. Cannot be used when sorting PivotTable reports.</param>
      <param name="Orientation">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" />. The sort orientation. Can be one of the following XlSortOrientation constants:xlSortRows<paramref name="default" />. Sorts by row.xlSortColumns. Sorts by column.</param>
      <param name="SortMethod">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" />. The type of sort. Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed. Can be one of the following XlSortMethod constants:xlStroke Sorting by the quantity of strokes in each character.xlPinYin<paramref name="default" />. Phonetic Chinese sort order for characters.</param>
      <param name="DataOption1">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />. Specifies how to sort text in <paramref name="Key 1" />. Cannot be used when sorting PivotTable reports. Can be one of the following XlSortDataOption constants:xlSortTextAsNumbers. Treat text as numeric data for the sort.xlSortNormal<paramref name="default" />. Sorts numeric and text data separately.</param>
      <param name="DataOption2">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />. Specifies how to sort text in <paramref name="Key 2" />. Cannot be used when sorting PivotTable reports. Can be one of the following XlSortDataOption constants:xlSortTextAsNumbers. Treats text as numeric data for the sort.xlSortNormal<paramref name="default" />. Sorts numeric and text data separately.</param>
      <param name="DataOption3">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />. Specifies how to sort text in key 3. Cannot be used when sorting PivotTable reports. Can be one of the following XlSortDataOption constants:xlSortTextAsNumbers. Treats text as numeric data for the sort.xlSortNormal<paramref name="default" />. Sorts numeric and text data separately.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.SortSpecial(Microsoft.Office.Interop.Excel.XlSortMethod,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrientation,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption)">
      <summary>Uses East Asian sorting methods to sort the range or a PivotTable report, or uses the method for the active region if the range contains only one cell. For example, Japanese sorts in the order of the Kana syllabary.</summary>
      <param name="SortMethod">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" />. The type of sort. Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed. Can be one of the following XlSortMethod constants:xlStroke. Sorting by the quantity of strokes in each character.xlPinYin<paramref name="default" />. Phonetic Chinese sort order for characters.</param>
      <param name="Key1">Optional Object. The first sort field, as either text (a PivotTable field or range name) or a Range object ("Dept" or Cells(1, 1), for example).</param>
      <param name="Order1">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />. The sort order for the field or range specified in the <paramref name="Key1" /> argument. Can be one of the following XlSortOrder constants:xlDescending. Sorts <paramref name="Key1" /> in descending order.xlAscending<paramref name="default" />. Sorts <paramref name="Key1" /> in ascending order.</param>
      <param name="Type">Optional Object. Specifies which elements are to be sorted. Use this argument only when sorting PivotTable reports.</param>
      <param name="Key2">Optional Object. The second sort field, as either text (a PivotTable field or range name) or a Range object. If you omit this argument, there’s no second sort field. Cannot be used when sorting PivotTable reports. Can be one of the following XlSortType constants:xlSortLabels. Sorts the PivotTable report by labels.xlSortValues. Sorts the PivotTable report by values.</param>
      <param name="Order2">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />. The sort order for the field or range specified in the <paramref name="Key2" /> argument. Cannot be used when sorting PivotTable reports. Can be one of the following XlSortOrder constants:xlDescending. Sorts <paramref name="Key2" /> in descending order xlAscending default. Sorts <paramref name="Key2" /> in ascending order.</param>
      <param name="Key3">Optional object. The third sort field, as either text (a range name) or a Range object. If you omit this argument, there’s no third sort field. Cannot be used when sorting PivotTable reports.</param>
      <param name="Order3">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />. The sort order for the field or range specified in the <paramref name="Key3" /> argument. Cannot be used when sorting PivotTable reports. Can be one of the following XlSortOrder constants: xlDescending. Sorts <paramref name="Key3" /> in descending order.xlAscending<paramref name="default" />. Sorts <paramref name="Key3" /> in ascending order.</param>
      <param name="Header">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" />. Specifies whether or not the first row contains headers. Cannot be used when sorting PivotTable reports. Can be one of the following XlYesNoGuess constants:xlGuess. Lets Microsoft Excel determine whether there’s a header, and determine where it is if there is one.xlNo<paramref name="default" />. The entire range should be sorted.xlYes. The entire range should not be sorted.</param>
      <param name="OrderCustom">Optional Object. This argument is a one-based integer offset to the list of custom sort orders. If you omit <paramref name="OrderCustom" />, (normal sort order) is used.</param>
      <param name="MatchCase">Optional Object. True to do a case-sensitive sort; False to do a sort that’s not case sensitive. Cannot be used when sorting PivotTable reports.</param>
      <param name="Orientation">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" />. The sort orientation. Can be one of the following XlSortOrientation constants:xlSortRows<paramref name="default" />. The sort is done by row.xlSortColumns. The sort is done by column.</param>
      <param name="DataOption1">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />. Specifies how to sort text in <paramref name="Key1" />. Cannot be used when sorting PivotTable reports. Can be one of the following XlSortDataOption constants:xlSortTextAsNumbers. Treats text as numeric data for the sort.xlSortNormal<paramref name="default" />. Sorts numeric and text data separately.</param>
      <param name="DataOption2">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />. Specifies how to sort text in <paramref name="Key 2" />. Cannot be used when sorting PivotTable reports. Can be one of the following XlSortDataOption constants:xlSortTextAsNumbers. Treats text as numeric data for the sort.xlSortNormal<paramref name="default" />. Sorts numeric and text data separately.</param>
      <param name="DataOption3">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />. Specifies how to sort text in <paramref name="Key 3" />. Cannot be used when sorting PivotTable reports. Can be one of the following XlSortDataOption constants:xlSortTextAsNumbers. Treats text numeric data for the sort.xlSortNormal<paramref name="default" />. Sorts numeric and text data separately.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.SoundNote">
      <summary>This property should not be used. Sound notes have been removed from Microsoft Excel.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.SparklineGroups">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" /> object that represents an existing group of sparklines from the specified range.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" /> object that represents an existing group of sparklines from the specified range.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.Speak(System.Object,System.Object)">
      <summary>Causes the cells of the range to be spoken in row order or column order.</summary>
      <param name="SpeakDirection">Optional Object. The speak direction, by rows or columns.</param>
      <param name="SpeakFormulas">Optional Object. True will cause formulas to be sent to the Text-To-Speech (TTS) engine for cells that have formulas. The value is sent if the cells do not have formulas; False (default) will cause values to always be sent to the TTS engine.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.SpecialCells(Microsoft.Office.Interop.Excel.XlCellType,System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells that match the specified type and value.</summary>
      <param name="Type">Required <see cref="T:Microsoft.Office.Interop.Excel.XlCellType" />. The cells to include. Can be one of the following XlCellType constants:xlCellTypeAllFormatConditions. Cells of any format.xlCellTypeAllValidation. Cells having validation criteria.xlCellTypeBlanks. Empty cells.xlCellTypeComments. Cells containing notes.xlCellTypeConstants. Cells containing constants.xlCellTypeFormulas. Cells containing formulas.xlCellTypeLastCell. The last cell in the used range.xlCellTypeSameFormatConditions. Cells having the same format.xlCellTypeSameValidation. Cells having the same validation criteria.xlCellTypeVisible. All visible cells.</param>
      <param name="Value">Optional Object. If <paramref name="Type" /> is either xlCellTypeConstants or xlCellTypeFormulas, this argument is used to determine which types of cells to include in the result. These values can be added together to return more than one type. The default is to select all constants or formulas, no matter what the type. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSpecialCellsValue" /> constants:xlErrorsxlLogicalxlNumbersxlTextValues</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Style">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Style" /> object that represents the style of the specified range.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.SubscribeTo(System.String,Microsoft.Office.Interop.Excel.XlSubscribeToFormat)">
      <summary>You have requested Help for a keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
      <param name="Edition">This parameter is for Macintosh only and should not be used.</param>
      <param name="Format">This parameter is for Macintosh only and should not be used.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.Subtotal(System.Int32,Microsoft.Office.Interop.Excel.XlConsolidationFunction,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSummaryRow)">
      <summary>Creates subtotals for the range (or the current region, if the range is a single cell).</summary>
      <param name="GroupBy">Required Integer. The field to group by, as a one-based integer offset. For more information, see the example.</param>
      <param name="Function">Required <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" />. The subtotal function. Can be one of the following XlConsolidationFunction constants:xlAveragexlCountxlCountNumsxlMaxxlMinxlProductxlStDevxlStDevPxlSumxlUnknownxlVarxlVarP</param>
      <param name="TotalList">Required Object. An array of 1-based field offsets, indicating the fields to which the subtotals are added. For more information, see the example.</param>
      <param name="Replace">Optional Object. True to replace existing subtotals. The default value is False.</param>
      <param name="PageBreaks">Optional Object. True to add page breaks after each group. The default value is False.</param>
      <param name="SummaryBelowData">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSummaryRow" />. Places the summary data relative to the subtotal. Can be one of the following XlSummaryRow constants:xlSummaryAbovexlSummaryBelow<paramref name="default" /></param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Summary">
      <summary>Determines if the range is an outlining summary row or column.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.Table(System.Object,System.Object)">
      <summary>Creates a data table based on input values and formulas that you define on a worksheet.</summary>
      <param name="RowInput">Optional Object. A single cell to use as the row input for your table.</param>
      <param name="ColumnInput">Optional Object. A single cell to use as the column input for your table.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Text">
      <summary>Returns or sets the text for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.TextToColumns(System.Object,Microsoft.Office.Interop.Excel.XlTextParsingType,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Parses a column of cells that contain text into several columns.</summary>
      <param name="Destination">Optional Object. A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that specifies where Microsoft Excel will place the results. If the range is larger than a single cell, the top left cell is used.</param>
      <param name="DataType">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" />. The format of the text to be split into columns. Can be one of the following XlTextParsingType constants:xlDelimited <paramref name="default" />xlFixedWidth</param>
      <param name="TextQualifier">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />. Can be one of the following XlTextQualifier constants:xlTextQualifierDoubleQuote<paramref name="default" />xlTextQualifierNonexlTextQualifierSingleQuote</param>
      <param name="ConsecutiveDelimiter">Optional Object. True to have Microsoft Excel consider consecutive delimiters as one delimiter. The default value is False.</param>
      <param name="Tab">Optional Object. True to have <paramref name="DataType" /> be xlDelimited and to have the tab character be a delimiter. The default value is False.</param>
      <param name="Semicolon">Optional Object. True to have <paramref name="DataType" /> be xlDelimited and to have the semicolon be a delimiter. The default value is False.</param>
      <param name="Comma">Optional Object. True to have <paramref name="DataType" /> be xlDelimited and to have the comma be a delimiter. The default value is False.</param>
      <param name="Space">Optional Object. True to have <paramref name="DataType" /> be xlDelimited and to have the space character be a delimiter. The default value is False.</param>
      <param name="Other">Optional Object. True to have <paramref name="DataType" /> be xlDelimited and to have the character specified by the <paramref name="OtherChar" /> argument be a delimiter. The default value is False.</param>
      <param name="OtherChar">Optional Object (required if <paramref name="Other" /> is True). The delimiter character when <paramref name="Other" /> is True. If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</param>
      <param name="FieldInfo">Optional Object. An array containing parse information for the individual columns of data. The interpretation depends on the value of <paramref name="DataType" />. When the data is delimited, this argument is an array of two-element arrays, with each two-element array specifying the conversion options for a particular column. The first element is the column number (1-based), and the second element is one of the <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" /> constants specifying how the column is parsed. Can be one of the following XlColumnDataType constants:xlGeneralFormat. Genera. xlTextFormat. Text.xlMDYFormat. MDY Date.xlDMYFormat. DMY Date.xlYMDFormat. YMD Date.xlMYDFormat. MYD Date.xlDYMFormat. DYM Date.xlYDMFormat. YDM Date.xlEMDFormat. EMD Date.xlSkipColumn. Skip Column.You can use xlEMDFormat only if Taiwanese language support is installed and selected. The xlEMDFormat constant specifies that Taiwanese era dates are being used.The column specifiers can be in any order. If a given column specifier is not present for a particular column in the input data, the column is parsed with the General setting.If the source data has fixed-width columns, the first element of each two-element array specifies the starting character position in the column (as an integer; 0 (zero) is the first character). The second element of the two-element array specifies the parse option for the column as a number from 1 through 9, as listed above.</param>
      <param name="DecimalSeparator">Optional String. The decimal separator that Microsoft Excel uses when recognizing numbers. The default setting is the system setting.</param>
      <param name="ThousandsSeparator">Optional String. The thousands separator that Excel uses when recognizing numbers. The default setting is the system setting.</param>
      <param name="TrailingMinusNumbers">Optional Object. Numbers that begin with a minus character.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Top">
      <summary>Returns the distance, in points, from the top edge of row 1 to the top edge of the range.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.Ungroup">
      <summary>Promotes a range in an outline (that is, decreases its outline level).</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Range.UnMerge">
      <summary>Separates a merged area into individual cells.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.UseStandardHeight">
      <summary>Determines if the row height of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object equals the standard height of the sheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.UseStandardWidth">
      <summary>Determines if the column width of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object equals the standard width of the sheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Validation">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.Validation" /> object that represents data validation for the specified range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Value(System.Object)">
      <summary>Returns or sets the value of the specified range.</summary>
      <param name="RangeValueDataType">Optional Object. The range value data type. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRangeValueDataType" /> constants:xlRangeValueDefault<paramref name="default" /> If the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object is empty, returns the value Empty (use the IsEmpty function to test for this case). If the Range object contains more than one cell, returns an array of values (use the IsArray function to test for this case).xlRangeValueMSPersistXML    Returns the recordset representation of the specified Range object in an XML format.xlRangeValueXMLSpreadsheet    Returns the values, formatting, formulas, and names of the specified Range object in the XML Spreadsheet format.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Value2">
      <summary>Returns or sets the cell value. </summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.VerticalAlignment">
      <summary>Returns or sets the vertical alignment of the specified object.</summary>
      <returns>.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Width">
      <summary>The width, in points, of the range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.Worksheet">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the worksheet containing the specified range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.WrapText">
      <summary>Determines if Microsoft Excel wraps the text in the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Range.XPath">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> object that represents the Xpath of the element mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Ranges">
      <summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.Range" />
 objects.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Ranges._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ranges.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns the creator of the specified object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel._Application" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Ranges.Count">
      <summary>Returns the number of objects in the collection. Read-only.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Ranges.Creator">
      <summary>Returns a 32-bit Integer that indicates the application in which this object was created. Read-only. </summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Ranges.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Ranges.Item(System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a range of items in a workbook. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Range" />
      </returns>
      <param name="Index">Required Object the index value of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> item.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Ranges.Parent">
      <summary>Returns the parent of the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.RecentFile">
      <summary>Represents a file in the list of recently used files.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RecentFile.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RecentFile.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.RecentFile.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RecentFile.Index">
      <summary>Returns the index number of the object within the collection of similar objects.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RecentFile.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.RecentFile.Open">
      <summary>Opens a recent workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RecentFile.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RecentFile.Path">
      <summary>Returns the complete path to the application, excluding the final separator and name of the application.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.RecentFiles">
      <summary>Represents the list of recently used files. Each file is represented by a <see cref="T:Microsoft.Office.Interop.Excel.RecentFile" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RecentFiles._Default(System.Int32)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.RecentFiles.Add(System.String)">
      <summary>Adds a file to the list of recently used files. Returns a <see cref="T:Microsoft.Office.Interop.Excel.RecentFile" /> object.</summary>
      <param name="Name">Required String. The file name.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RecentFiles.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RecentFiles.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RecentFiles.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.RecentFiles.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.RecentFiles.Item(System.Int32)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Integer. The index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RecentFiles.Maximum">
      <summary>Returns or sets the maximum number of files in the list of recently used files. Can be a value from 0 (zero) through 9.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RecentFiles.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Rectangle">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangle.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangle.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangle.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangle.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangle.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangle.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangle.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.ReadingOrder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.RoundedCorners"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangle.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangle.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangle.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.Rectangles">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangles._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangles._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangles._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangles._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangles.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangles.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangles.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangles.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangles.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangles.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangles.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangles.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.Formula"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangles.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangles.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangles.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.ReadingOrder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.RoundedCorners"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangles.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Rectangles.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Rectangles.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.RectangularGradient">
      <summary>The <see cref="T:Microsoft.Office.Interop.Excel.RectangularGradient" /> object transitions through a series of colors in a linear manner along a specific angle.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RectangularGradient.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel._Application" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RectangularGradient.ColorStops">
      <summary>Returns the <see cref="P:Microsoft.Office.Interop.Excel.RectangularGradient.ColorStops" /> for the <see cref="T:Microsoft.Office.Interop.Excel.RectangularGradient" /> object. Read-only</summary>
      <returns>
        <see cref="P:Microsoft.Office.Interop.Excel.RectangularGradient.ColorStops" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RectangularGradient.Creator">
      <summary>Returns a 32-bit Integer that indicates the application in which this object was created. Read-only</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RectangularGradient.Parent">
      <summary>Returns the parent for the specified object. Read-only</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RectangularGradient.RectangleBottom">
      <summary>Represents the point or vector that the gradient fill converges to. Read/write</summary>
      <returns>Double</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RectangularGradient.RectangleLeft">
      <summary>Represents the point or vector that the gradient fill converges to. Read/write</summary>
      <returns>Double</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RectangularGradient.RectangleRight">
      <summary>Represents the point or vector that the gradient fill converges to. Read/write</summary>
      <returns>Double</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RectangularGradient.RectangleTop">
      <summary>Represents the point or vector that the gradient fill converges to. Read/write</summary>
      <returns>Double</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.RefreshEvents">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.RefreshEvents.AfterRefresh(System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.RefreshEvents.BeforeRefresh(System.Boolean@)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.RefreshEvents_AfterRefreshEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.RefreshEvents_Event.AfterRefresh" /> event. The AfterRefresh event occurs after a query is completed or canceled.</summary>
      <param name="Success">True if the query was completed successfully.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.RefreshEvents_BeforeRefreshEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.RefreshEvents_Event.BeforeRefresh" /> event. The BeforeRefresh event occurs before any refreshes of the query table.</summary>
      <param name="Cancel">False when the event occurs. If the event procedure sets this argument to True, the refresh doesn't occur when the procedure is finished.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.RefreshEvents_Event">
      <summary>Events interface for Microsoft Excel <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> object events.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.RefreshEvents_Event.add_AfterRefresh(Microsoft.Office.Interop.Excel.RefreshEvents_AfterRefreshEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.RefreshEvents_Event.add_BeforeRefresh(Microsoft.Office.Interop.Excel.RefreshEvents_BeforeRefreshEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.RefreshEvents_Event.AfterRefresh">
      <summary>Occurs after a query is completed or canceled.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.RefreshEvents_Event.BeforeRefresh">
      <summary>Occurs before any refreshes of the query table. This includes refreshes resulting from calling the Refresh method, from the user's actions in the product, and from opening the workbook containing the query table.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.RefreshEvents_Event.remove_AfterRefresh(Microsoft.Office.Interop.Excel.RefreshEvents_AfterRefreshEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.RefreshEvents_Event.remove_BeforeRefresh(Microsoft.Office.Interop.Excel.RefreshEvents_BeforeRefreshEventHandler)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.RefreshEvents_SinkHelper">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.RefreshEvents_SinkHelper.AfterRefresh(System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.RefreshEvents_SinkHelper.BeforeRefresh(System.Boolean@)"></member>
    <member name="F:Microsoft.Office.Interop.Excel.RefreshEvents_SinkHelper.m_AfterRefreshDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.RefreshEvents_SinkHelper.m_BeforeRefreshDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.RefreshEvents_SinkHelper.m_dwCookie"></member>
    <member name="T:Microsoft.Office.Interop.Excel.Research">
      <summary>Represents the controls of a Research query. </summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Research.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel application. When used with an object qualifier, this property returns an Application object representing the creator of the specified object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel._Application" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Research.Creator">
      <summary>Returns a 32-bit Integer that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Research.IsResearchService(System.String)">
      <summary>Indicates whether the GUID specified in the ServiceID parameter corresponds to a currently configured service.</summary>
      <param name="ServiceID">Required String an object that specifies the GUID that identifies the research service.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Research.Parent">
      <summary>Returns the parent for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Research.Query(System.String,System.Object,System.Object,System.Object,System.Object)">
      <summary>Specifies a research query.</summary>
      <returns>Object</returns>
      <param name="ServiceID">Required String Specifies a GUID that identifies the research service.</param>
      <param name="QueryString">Optional Object Specifies the query string.</param>
      <param name="QueryLanguage">Optional Object Specifies the query language of the query string.</param>
      <param name="UseSelection">Optional BooleanTrue to use  the current selection as the query string.  This overrides the <paramref name="QueryString" /> parameter if set. Default value is False.</param>
      <param name="LaunchQuery">Optional BooleanTrue launches the query. False displays the Research task pane scoped to search the specified research service.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Research.SetLanguagePair(System.Int32,System.Int32)">
      <summary>Sets the languages for the translation service.</summary>
      <returns>Object</returns>
      <param name="LanguageFrom">Required Integer Specifies the language to translate from.</param>
      <param name="LanguageTo">Required Integer Specifies the langauge to translate to.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.RoutingSlip">
      <summary>Represents the routing slip for a workbook. The routing slip is used to send a workbook through the electronic mail system.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RoutingSlip.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RoutingSlip.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RoutingSlip.Delivery">
      <summary>Returns or sets the routing delivery method. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRoutingSlipDelivery" /> constants: xlOneAfterAnother or xlAllAtOnce.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RoutingSlip.Message">
      <summary>Returns or sets the message text for the routing slip. This text is used as the body text of mail messages that are used to route the workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RoutingSlip.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RoutingSlip.Recipients(System.Object)">
      <summary>Returns or sets the recipients on the routing slip.</summary>
      <param name="Index">Optional Object. The recipient. If this argument isn’t specified, the Recipients property returns (or can be set to) an array that contains all recipients.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.RoutingSlip.Reset">
      <summary>Resets the routing slip so that a new routing can be initiated with the same slip (using the same recipient list and delivery information).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RoutingSlip.ReturnWhenDone">
      <summary>True if the workbook is returned to the sender when routing is finished.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RoutingSlip.Status">
      <summary>Indicates the status of the routing slip.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RoutingSlip.Subject">
      <summary>Returns or sets the subject for the mailer or routing slip.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RoutingSlip.TrackStatus">
      <summary>True if status tracking is enabled for the routing slip.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.RTD">
      <summary>Represents a real-time data object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.RTD.RefreshData">
      <summary>Requests an update of real-time data from the real-time data server.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.RTD.RestartServers">
      <summary>Reconnects to a real-time data server (RTD).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.RTD.ThrottleInterval">
      <summary>Returns or sets an Integer indicating the time interval between updates.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Scenario">
      <summary>Represents a scenario on a worksheet. A scenario is a group of input values (called <paramref name="changing cells" />) that’s named and saved.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Scenario.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Scenario.ChangeScenario(System.Object,System.Object)">
      <summary>Changes the scenario to have a new set of changing cells and (optionally) scenario values.</summary>
      <param name="ChangingCells">Required Object. A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that specifies the new set of changing cells for the scenario. The changing cells must be on the same sheet as the scenario.</param>
      <param name="Values">Optional Object. An array that contains the new scenario values for the changing cells. If this argument is omitted, the scenario values are assumed to be the current values in the changing cells.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Scenario.ChangingCells">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the changing cells for a scenario.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Scenario.Comment">
      <summary>Returns or sets the comment associated with the scenario. The comment text cannot exceed 255 characters.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Scenario.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Scenario.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Scenario.Hidden">
      <summary>True if the scenario is hidden. The default value is False.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Scenario.Index">
      <summary>Returns the index number of the object within the collection of similar objects.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Scenario.Locked">
      <summary>True if the object is locked; False if the object can be modified when the sheet is protected.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Scenario.Name">
      <summary>Returns or sets the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Scenario.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Scenario.Show">
      <summary>Shows the scenario by inserting its values on the worksheet. The affected cells are the changing cells of the scenario.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Scenario.Values(System.Object)">
      <summary>Returns an array that contains the current values of the changing cells for the scenario.</summary>
      <param name="Index">Optional Object. The position of the value.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Scenarios">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> objects on the specified worksheet. A scenario is a group of input values (called <paramref name="changing cells" />) that’s named and saved.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Scenarios.Add(System.String,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Creates a new scenario and adds it to the list of scenarios that are available for the current worksheet.</summary>
      <param name="Name">Required String. The scenario name.</param>
      <param name="ChangingCells">Required Object. A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that refers to the changing cells for the scenario.</param>
      <param name="Values">Optional Object. An array that contains the scenario values for the cells in <paramref name="ChangingCells" />. If this argument is omitted, the scenario values are assumed to be the current values in the cells in <paramref name="ChangingCells" />.</param>
      <param name="Comment">Optional Object. A string that specifies comment text for the scenario. When a new scenario is added, the author's name and date are automatically added at the beginning of the comment text.</param>
      <param name="Locked">Optional Object. True to lock the scenario to prevent changes. The default value is True.</param>
      <param name="Hidden">Optional Object. True to hide the scenario. The default value is False.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Scenarios.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Scenarios.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Scenarios.CreateSummary(Microsoft.Office.Interop.Excel.XlSummaryReportType,System.Object)">
      <summary>Creates a new worksheet that contains a summary report for the scenarios on the specified worksheet.</summary>
      <param name="ReportType">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSummaryReportType" />.</param>
      <param name="ResultCells">Optional Object. A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the result cells on the specified worksheet. Normally, this range refers to one or more cells containing the formulas that depend on the changing cell values for your model — that is, the cells that show the results of a particular scenario. If this argument is omitted, there are no result cells included in the report.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Scenarios.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Scenarios.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Scenarios.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number for the object.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Scenarios.Merge(System.Object)">
      <summary>Merges the scenarios from another sheet into the <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> collection.</summary>
      <param name="Source">Required Object. The name of the sheet that contains scenarios to be merged, or a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents that sheet.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Scenarios.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ScrollBar">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ScrollBar.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ScrollBar.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ScrollBar.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ScrollBar.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ScrollBar.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.Display3DShading"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ScrollBar.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.LargeChange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.Max"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.Min"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ScrollBar.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ScrollBar.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.SmallChange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBar.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ScrollBars">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBars._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ScrollBars._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ScrollBars._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ScrollBars._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ScrollBars._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ScrollBars.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBars.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ScrollBars.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ScrollBars.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ScrollBars.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBars.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBars.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ScrollBars.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ScrollBars.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBars.Display3DShading"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ScrollBars.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBars.Enabled"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ScrollBars.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ScrollBars.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBars.Height"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ScrollBars.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBars.LargeChange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBars.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBars.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBars.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBars.Max"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBars.Min"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBars.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBars.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBars.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBars.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ScrollBars.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ScrollBars.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBars.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBars.SmallChange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBars.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBars.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBars.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBars.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ScrollBars.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.Series">
      <summary>Represents a series in a chart. The Series object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> collection.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Series._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Series.ApplyCustomType(Microsoft.Office.Interop.Excel.XlChartType)">
      <summary>Applies a standard or custom chart type to a series.</summary>
      <param name="ChartType">Required <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />. A standard chart type.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Series.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Applies data labels to a point, a series, or all the series in a chart.</summary>
      <param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" />. The type of data label to apply.</param>
      <param name="LegendKey">Optional Object. True to show the legend key next to the point. The default value is False.</param>
      <param name="AutoText">Optional Object. True if the object automatically generates appropriate text based on content.</param>
      <param name="HasLeaderLines">Optional Object. For the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> and <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objects, True if the series has leader lines.</param>
      <param name="ShowSeriesName">Optional Object. The series name for the data label.</param>
      <param name="ShowCategoryName">Optional Object. The category name for the data label.</param>
      <param name="ShowValue">Optional Object. The value for the data label.</param>
      <param name="ShowPercentage">Optional Object. The percentage for the data label.</param>
      <param name="ShowBubbleSize">Optional Object. The bubble size for the data label.</param>
      <param name="Separator">Optional Object. The separator for the data label.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.ApplyPictToEnd">
      <summary>True if a picture is applied to the end of the point or all points in the series. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.ApplyPictToFront">
      <summary>True if a picture is applied to the front of the point or all points in the series. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.ApplyPictToSides">
      <summary>True if a picture is applied to the sides of the point or all points in the series. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.AxisGroup">
      <summary>Returns the group for the specified chart group or series. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.BarShape">
      <summary>Returns or sets the shape used with the 3-D bar or column chart. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlBarShape" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.BubbleSizes">
      <summary>Returns or sets a string that refers to the worksheet cells containing the size data for the bubble chart. Applies only to bubble charts. Read/write Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.ChartType">
      <summary>Returns or sets the chart type. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Series.ClearFormats">
      <summary>Clears the formatting of the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Series.Copy">
      <summary>Copies the object to the Clipboard. Copies a picture of the point or series to the Clipboard.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Series.DataLabels(System.Object)">
      <summary>Returns an object that represents either a single data label (a <see cref="T:Microsoft.Office.Interop.Excel.DataLabel" /> object) or a collection of all the data labels for the series (a <see cref="T:Microsoft.Office.Interop.Excel.DataLabels" /> collection).</summary>
      <param name="Index">Optional Object. The number of the data label.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Series.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Series.ErrorBar(Microsoft.Office.Interop.Excel.XlErrorBarDirection,Microsoft.Office.Interop.Excel.XlErrorBarInclude,Microsoft.Office.Interop.Excel.XlErrorBarType,System.Object,System.Object)">
      <summary>Applies error bars to the series. Object.</summary>
      <param name="Direction">Required <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarDirection" />. The error bar direction.</param>
      <param name="Include">Required <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarInclude" />. The error bar parts to include.</param>
      <param name="Type">Required <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarType" />. The error bar type.</param>
      <param name="Amount">Optional Object. The error amount. Used for only the positive error amount when <paramref name="Type" /> is xlErrorBarTypeCustom.</param>
      <param name="MinusValues">Optional Object. The negative error amount when <paramref name="Type" /> is xlErrorBarTypeCustom.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.ErrorBars">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.ErrorBars" /> object that represents the error bars for the series. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.Explosion">
      <summary>Returns or sets the explosion value for a pie-chart or doughnut-chart slice. Returns 0 (zero) if there's no explosion (the tip of the slice is in the center of the pie). Read/write Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.Fill">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object that contains fill formatting properties for the specified chart or shape. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.Format">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.Formula">
      <summary>Returns or sets the object's formula in A1-style notation. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.FormulaLocal">
      <summary>Returns or sets the formula for the object using A1-style references in the language of the user. Read/write String</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.FormulaR1C1">
      <summary>Returns or sets the formula for the object using R1C1-style notation. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.FormulaR1C1Local">
      <summary>Returns or sets the formula for the object, using R1C1-style notation in the language of the user. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.Has3DEffect">
      <summary>True if the series has a three-dimensional appearance. Applies only to bubble charts. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.HasDataLabels">
      <summary>True if the series has data labels. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.HasErrorBars">
      <summary>True if the series has error bars. This property isn’t available for 3-D charts. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.HasLeaderLines">
      <summary>True if the series has leader lines. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.Interior">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.InvertColor">
      <summary>Gets or sets the fill color for negative data points in a series.</summary>
      <returns>The fill color for negative data points in a series.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex">
      <summary>Gets or sets the fill color for negative data points in a series.</summary>
      <returns>The fill color for negative data points in a series.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.InvertIfNegative">
      <summary>True if Microsoft Excel inverts the pattern in the item when it corresponds to a negative number. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.LeaderLines">
      <summary>Returns a LeaderLines object that represents the leader lines for the series. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.MarkerBackgroundColor">
      <summary>Returns or sets the marker background color as an RGB value. Applies only to line, scatter, and radar charts. Read/write Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.MarkerBackgroundColorIndex">
      <summary>Returns or sets the marker background color. Applies only to line, scatter, and radar charts. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.MarkerForegroundColor">
      <summary>Returns or sets the foreground color of the marker as an RGB value. Applies only to line, scatter, and radar charts. Read/write Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.MarkerForegroundColorIndex">
      <summary>Returns or sets the marker foreground color. Applies only to line, scatter, and radar charts. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.MarkerSize">
      <summary>Returns or sets the data-marker size in points. Read/write Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.MarkerStyle">
      <summary>Returns or sets the marker style for a point or series in a line chart, scatter chart, or radar chart. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlMarkerStyle" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.Name">
      <summary>Returns or sets the name of the object. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Series.Paste">
      <summary>Pastes a picture from the Clipboard as the marker on the selected series. This method can be used on column, bar, line, or radar charts, and it sets the <see cref="P:Microsoft.Office.Interop.Excel.Series.MarkerStyle" /> property to xlMarkerStylePicture.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.PictureType">
      <summary>Returns or sets the way pictures are displayed on a column or bar picture chart. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlChartPictureType" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.PictureUnit">
      <summary>Returns or sets the unit for each picture on the chart if the <see cref="P:Microsoft.Office.Interop.Excel.Series.PictureType" /> property is set to xlScale (if not, this property is ignored). Read/write Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.PictureUnit2">
      <summary>Returns or sets the unit for each picture on the chart if the <see cref="P:Microsoft.Office.Interop.Excel.Series.PictureType" /> property is set to <see cref="F:Microsoft.Office.Interop.Excel.XlChartPictureType.xlStackScale" /> (if not, this property is ignored). Read/Write.</summary>
      <returns>Double</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.PlotColorIndex">
      <summary>Gets an index value that is used internally to associate series formatting with chart elements.</summary>
      <returns>An index value that is used internally to associate series formatting with chart elements.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.PlotOrder">
      <summary>Returns or sets the plot order for the selected series within the chart group. Read/write Integer.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Series.Points(System.Object)">
      <summary>Returns an object that represents a single point (a <see cref="T:Microsoft.Office.Interop.Excel.Point" /> object) or a collection of all the points (a <see cref="T:Microsoft.Office.Interop.Excel.Points" /> collection) in the series. Read-only.</summary>
      <param name="Index">Optional Object. The name or number of the point.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Series.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.Shadow">
      <summary>True if the font is a shadow font or if the object has a shadow. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.Smooth">
      <summary>True if curve smoothing is turned on for the line chart or scatter chart. Applies only to line and scatter charts. Read/write.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Series.Trendlines(System.Object)">
      <summary>Returns an object that represents a single trendline (a <see cref="T:Microsoft.Office.Interop.Excel.Trendline" /> object) or a collection of all the trendlines (a <see cref="T:Microsoft.Office.Interop.Excel.Trendlines" /> collection) for the series.</summary>
      <param name="Index">Optional Object. The name or number of the trendline.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.Type">
      <summary>Returns or sets the chart or series type. Read/write Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.Values">
      <summary>Returns or sets a collection of all the values in the series. This can be a range on a worksheet or an array of constant values, but not a combination of both. Read/write Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Series.XValues">
      <summary>Returns or sets an array of x values for a chart series. The XValues property can be set to a range on a worksheet or to an array of values, but it cannot be a combination of both. Read/write Object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SeriesCollection">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objects in the specified chart or chart group.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SeriesCollection._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SeriesCollection.Add(System.Object,Microsoft.Office.Interop.Excel.XlRowCol,System.Object,System.Object,System.Object)">
      <summary>Adds one or more new series to the <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> collection.</summary>
      <param name="Source">Required Object. The new data, either as a Range object or an array of data points.</param>
      <param name="Rowcol">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" />. Specifies whether the new values are in the rows or columns of the specified range.</param>
      <param name="SeriesLabels">Optional Object. Ignored if <paramref name="Source" /> is an array. True if the first row or column contains the name of the data series. False if the first row or column contains the first data point of the series. If this argument is omitted, Microsoft Excel attempts to determine the location of the series name from the contents of the first row or column.</param>
      <param name="CategoryLabels">Optional Object. Ignored if <paramref name="Source" /> is an array. True if the first row or column contains the name of the category labels. False if the first row or column contains the first data point of the series. If this argument is omitted, Microsoft Excel attempts to determine the location of the category label from the contents of the first row or column.</param>
      <param name="Replace">Optional Object. If <paramref name="CategoryLabels" /> is True and <paramref name="Replace" /> is True, the specified categories replace the categories that currently exist for the series. If <paramref name="Replace" /> is False, the existing categories will not be replaced. The default value is False.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SeriesCollection.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SeriesCollection.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SeriesCollection.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SeriesCollection.Extend(System.Object,System.Object,System.Object)">
      <summary>Adds new data points to an existing series collection.</summary>
      <param name="Source">Required Object. The new data to be added to the <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> object, either as a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object or an array of data points.</param>
      <param name="Rowcol">Optional Object. Ignored if <paramref name="Source" /> is an array. Specifies whether the new values are in the rows or columns of the given range source. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: xlRows or xlColumns. If this argument is omitted, Microsoft Excel attempts to determine where the values are by the size and orientation of the selected range or by the dimensions of the array.</param>
      <param name="CategoryLabels">Optional Object. Ignored if <paramref name="Source" /> is an array. True to have the first row or column contain the name of the category labels. False to have the first row or column contain the first data point of the series. If this argument is omitted, Microsoft Excel attempts to determine the location of the category label from the contents of the first row or column.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SeriesCollection.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.SeriesCollection.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number for the object.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SeriesCollection.NewSeries">
      <summary>Creates a new series. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Series" /> object that represents the new series.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SeriesCollection.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SeriesCollection.Paste(Microsoft.Office.Interop.Excel.XlRowCol,System.Object,System.Object,System.Object,System.Object)">
      <summary>Pastes data from the Clipboard into the specified series collection.</summary>
      <param name="Rowcol">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" />. Specifies whether the values corresponding to a particular data series are in rows or columns. Can be one of these XlRowCol constants:xlColumns defaultxlRows</param>
      <param name="SeriesLabels">Optional Object. True to use the contents of the cell in the first column of each row (or the first row of each column) as the name of the data series in that row (or column). False to use the contents of the cell in the first column of each row (or the first row of each column) as the first data point in the data series. The default value is False.</param>
      <param name="CategoryLabels">Optional Object. True to use the contents of the first row (or column) of the selection as the categories for the chart. False to use the contents of the first row (or column) as the first data series in the chart. The default value is False.</param>
      <param name="Replace">Optional Object. True to apply categories while replacing existing categories with information from the copied range. False to insert new categories without replacing any old ones. The default value is True.</param>
      <param name="NewSeries">Optional Object. True to paste the data as a new series. False to paste the data as new points in an existing series. The default value is True.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SeriesLines">
      <summary>Represents series lines in a chart group. Series lines connect the data values from each series.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SeriesLines.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SeriesLines.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SeriesLines.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SeriesLines.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SeriesLines.Format">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SeriesLines.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SeriesLines.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SeriesLines.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ServerViewableItems">
      <summary>A collection of objects that have been marked as viewable on the server.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ServerViewableItems._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ServerViewableItems.Add(System.Object)">
      <summary>Adds a reference to the <see cref="T:Microsoft.Office.Interop.Excel.ServerViewableItems" /> collection.</summary>
      <returns>Object</returns>
      <param name="Obj">Required Object<paramref name="Obj" /> can be a reference to sheets or named items (for example, named <see cref="T:Microsoft.Office.Interop.Excel.Range" />s, charts, tables, and <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />s). You cannot have both sheets and named items in the same collection.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ServerViewableItems.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel._Application" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ServerViewableItems.Count">
      <summary>Returns the number of objects in the collection. Read-only.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ServerViewableItems.Creator">
      <summary>Returns a 32-bit Integer that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ServerViewableItems.Delete(System.Object)">
      <summary>Deletes a reference to an object in the <see cref="T:Microsoft.Office.Interop.Excel.ServerViewableItems" /> collection in the <see cref="T:Microsoft.Office.Interop.Excel._Workbook" />.  </summary>
      <param name="Index">Required Integer The index of the object you want to delete.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ServerViewableItems.DeleteAll">
      <summary>Deletes references to all the objects in the <see cref="T:Microsoft.Office.Interop.Excel.ServerViewableItems" /> collection in the <see cref="T:Microsoft.Office.Interop.Excel._Workbook" />.  </summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ServerViewableItems.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ServerViewableItems.Item(System.Object)">
      <summary>Returns a single Object from the <see cref="T:Microsoft.Office.Interop.Excel.ServerViewableItems" /> collection.</summary>
      <returns>Object</returns>
      <param name="Index">Required Integer The index of the Object to be returned.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ServerViewableItems.Parent">
      <summary>Returns the parent for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ShadowFormat">
      <summary>Represents shadow formatting for a <see cref="T:Microsoft.Office.Interop.Excel.Shape" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShadowFormat.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShadowFormat.Blur">
      <summary>Returns or sets the degree of blurriness of the specified shadow. Read/write.</summary>
      <returns>Float</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShadowFormat.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShadowFormat.ForeColor">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ColorFormat" /> object that represents the specified foreground fill or solid color.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShadowFormat.IncrementOffsetX(System.Single)">
      <summary>Changes the horizontal offset of the shadow by the specified number of points.</summary>
      <param name="Increment">Required Single. Specifies how far the shadow offset is to be moved horizontally in points. A positive value moves the shadow to the right; a negative value moves it to the left.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShadowFormat.IncrementOffsetY(System.Single)">
      <summary>Changes the vertical offset of the shadow by the specified number of points.</summary>
      <param name="Increment">Required Single. Specifies how far the shadow offset is to be moved vertically in points. A positive value moves the shadow down; a negative value moves it up.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShadowFormat.Obscured">
      <summary>True if the shadow of the specified shape appears filled in and is obscured by the shape, even if the shape has no fill. False if the shadow has no fill and the outline of the shadow is visible through the shape if the shape has no fill.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShadowFormat.OffsetX">
      <summary>Returns or sets the horizontal offset of the shadow from the specified shape in points.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShadowFormat.OffsetY">
      <summary>Returns or sets the vertical offset of the shadow from the specified shape in points.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShadowFormat.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShadowFormat.RotateWithShape">
      <summary>Returns or sets a <see cref="T:Microsoft.Office.Core.MsoTriState" /> that represents whether to rotate the shadow when rotating the <see cref="T:Microsoft.Office.Interop.Excel.Shape" />. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.MsoTriState" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShadowFormat.Size">
      <summary>Returns or sets the size of the specified shadow. Read/write.</summary>
      <returns>Single</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShadowFormat.Style">
      <summary>Either returns or uses a <see cref="T:Microsoft.Office.Core.MsoShadowStyle" /> object to set the style of the specified shadow. Read/write. </summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.MsoShadowStyle" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShadowFormat.Transparency">
      <summary>Returns or sets the degree of transparency of the specified fill as a value from 0.0 (opaque) through 1.0 (clear).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShadowFormat.Type">
      <summary>Returns or sets the shadow format type.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShadowFormat.Visible">
      <summary>Determines whether the object is visible.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Shape">
      <summary>Represents an object in the drawing layer, such as an AutoShape, freeform, OLE object, or picture. The Shape object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection. The Shapes collection contains all the shapes on a slide.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Adjustments">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Adjustments" /> object that contains adjustment values for all the adjustments in the specified shape. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.AlternativeText">
      <summary>Returns or sets the descriptive (alternative) text string for a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object when the object is saved to a Web page. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shape.Apply">
      <summary>Applies to the specified shape formatting that’s been copied by using the <see cref="M:Microsoft.Office.Interop.Excel.Shape.PickUp" /> method.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.AutoShapeType">
      <summary>Returns or sets the shape type for the specified <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object, which must represent an AutoShape other than a line, freeform drawing, or connector. Read/write <see cref="T:Microsoft.Office.Core.MsoAutoShapeType" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.BackgroundStyle">
      <summary>Returns or sets the background style. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.MsoBackgroundStyleIndex" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.BlackWhiteMode">
      <summary>Returns or sets a value that indicates how the specified shape appears when the presentation is viewed in black-and-white mode. Read/write <see cref="T:Microsoft.Office.Core.MsoBlackWhiteMode" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.BottomRightCell">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell that lies under the lower-right corner of the object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Callout">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.CalloutFormat" /> object that contains callout formatting properties for the specified shape. Applies to <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objects that represent line callouts. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shape.CanvasCropBottom(System.Single)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shape.CanvasCropLeft(System.Single)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shape.CanvasCropRight(System.Single)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shape.CanvasCropTop(System.Single)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.CanvasItems">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Chart">
      <summary>Returns an object that represents the <see cref="T:Microsoft.Office.Interop.Excel._Chart" /> contained in the <see cref="T:Microsoft.Office.Interop.Excel.Shape" />. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel._Chart" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Child">
      <summary>Returns msoTrue if the specified shape is a child shape or if all shapes in a shape range are child shapes of the same parent. Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount">
      <summary>Returns the number of connection sites on the specified shape. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Connector">
      <summary>True if the specified shape is a connector. Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.ConnectorFormat">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" /> object that contains connector formatting properties. Applies to <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objects that represent connectors. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.ControlFormat">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ControlFormat" /> object that contains Microsoft Excel control properties. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shape.Copy">
      <summary>Copies the object to the Clipboard.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shape.CopyPicture(System.Object,System.Object)">
      <summary>Copies the selected object to the Clipboard as a picture.</summary>
      <param name="Appearance">Optional Object. Specifies how the picture should be copied.</param>
      <param name="Format">Optional Object. The format of the picture.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shape.Cut">
      <summary>Cuts the object to the Clipboard or pastes it into a specified destination.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shape.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Diagram">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Diagram" /> object representing a diagram.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.DiagramNode">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object that represents a node in a diagram.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.DrawingObject">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shape.Duplicate">
      <summary>Duplicates the object and returns a reference to the new copy.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Fill">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object that contains fill formatting properties for the specified chart or shape. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shape.Flip(Microsoft.Office.Core.MsoFlipCmd)">
      <summary>Flips the specified shape around its horizontal or vertical axis.</summary>
      <param name="FlipCmd">Required <see cref="T:Microsoft.Office.Core.MsoFlipCmd" />. Specifies whether the shape is to be flipped horizontally or vertically.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.FormControlType">
      <summary>Returns the Microsoft Excel control type. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlFormControl" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Glow">
      <summary>Returns an object for a specified shape that contains glow formatting properties for that shape. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.GlowFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.GroupItems">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.GroupShapes" /> object that represents the individual shapes in the specified group. Use the <see cref="M:Microsoft.Office.Interop.Excel.GroupShapes.Item(System.Object)" /> method of the GroupShapes object to return a single shape from the group. Applies to <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objects that represent grouped shapes. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.HasChart">
      <summary>Returns information on if a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> contains a chart. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.MsoTriState" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.HasDiagram">
      <summary>Returns whether a shape or shape range contains a diagram. Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.HasDiagramNode">
      <summary>Returns a value indicating whether a diagram node exists in a given shape or shape range. Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.HasSmartArt">
      <summary>Gets whether there is a SmartArt diagram present on the specified shape.</summary>
      <returns>A <see cref="T:Microsoft.Office.Core.MsoTriState" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Height">
      <summary>The height of the object. Read/write Single.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.HorizontalFlip">
      <summary>True if the specified shape is flipped around the horizontal axis. Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Hyperlink">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlink" /> object that represents the hyperlink for the shape.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.ID">
      <summary>Returns the type for the specified object. Read-only Integer.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shape.IncrementLeft(System.Single)">
      <summary>Moves the specified shape horizontally by the specified number of points.</summary>
      <param name="Increment">Required Single. Specifies how far the shape is to be moved horizontally in points. A positive value moves the shape to the right; a negative value moves it to the left.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shape.IncrementRotation(System.Single)">
      <summary>Changes the rotation of the specified shape around the z-axis by the specified number of degrees. Use the <see cref="P:Microsoft.Office.Interop.Excel.Shape.Rotation" /> property to set the absolute rotation of the shape.</summary>
      <param name="Increment">Required Single. Specifies how far the shape is to be rotated horizontally in degrees. A positive value rotates the shape clockwise; a negative value rotates it counterclockwise.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shape.IncrementTop(System.Single)">
      <summary>Moves the specified shape vertically by the specified number of points.</summary>
      <param name="Increment">Required Single. Specifies how far the shape object is to be moved vertically in points. A positive value moves the shape down; a negative value moves it up.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Left">
      <summary>The distance from the left edge of the object to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart). Read/write Single.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Line">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.LineFormat" /> object that contains line formatting properties for the specified shape. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.LinkFormat">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.LinkFormat" /> object that contains linked OLE object properties. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.LockAspectRatio">
      <summary>True if the specified shape retains its original proportions when you resize it. False if you can change the height and width of the shape independently of one another when you resize it. Read/write <see cref="T:Microsoft.Office.Core.MsoTriState" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Locked">
      <summary>True if the object is locked, False if the object can be modified when the sheet is protected. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Name">
      <summary>Returns or sets the name of the object. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Nodes">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ShapeNodes" /> collection that represents the geometric description of the specified shape. Applies to <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objects that represent freeform drawings.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.OLEFormat">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.OLEFormat" /> object that contains OLE object properties. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.OnAction">
      <summary>Returns or sets the name of a macro that’s run when the specified object is clicked. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.ParentGroup">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the common parent shape of a child shape or a range of child shapes.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shape.PickUp">
      <summary>Copies the formatting of the specified shape. Use the <see cref="M:Microsoft.Office.Interop.Excel.Shape.Apply" /> method to apply the copied formatting to another shape.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.PictureFormat">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PictureFormat" /> object that contains picture formatting properties for the specified shape. Applies to <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objects that represent pictures or OLE objects. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Placement">
      <summary>Returns or sets the way the object is attached to the cells below it. Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlPlacement" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Reflection">
      <summary>Returns an object that contains reflection formatting properties for the shape. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.ReflectionFormat" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections">
      <summary>Reroutes connectors so that they take the shortest possible path between the shapes they connect.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Rotation">
      <summary>Returns or sets the rotation of the shape in degrees. Read/write Single.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shape.ScaleHeight(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)">
      <summary>Scales the height of the shape by a specified factor.</summary>
      <param name="Factor">Required Single. Specifies the ratio between the height of the shape after you resize it and the current or original height. For example, to make a rectangle 50 percent larger, specify 1.5 for this argument.</param>
      <param name="RelativeToOriginalSize">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />. msoTrue to scale the shape relative to its original size. msoFalse to scale it relative to its current size. You can specify msoTrue for this argument only if the specified shape is a picture or an OLE object.</param>
      <param name="Scale">Optional <see cref="T:Microsoft.Office.Core.MsoScaleFrom" />. Specifies which part of the shape retains its position when the shape is scaled.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shape.ScaleWidth(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)">
      <summary>Scales the width of the shape by a specified factor.</summary>
      <param name="Factor">Required Single. Specifies the ratio between the width of the shape after you resize it and the current or original width. For example, to make a rectangle 50 percent larger, specify 1.5 for this argument.</param>
      <param name="RelativeToOriginalSize">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />. False to scale it relative to its current size. You can specify True for this argument only if the specified shape is a picture or an OLE object.</param>
      <param name="Scale">Optional <see cref="T:Microsoft.Office.Core.MsoScaleFrom" />. Specifies which part of the shape retains its position when the shape is scaled.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Script">
      <summary>Returns the Script object, which represents a block of script or code on the specified Web page. If the page contains no script, nothing is returned.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shape.Select(System.Object)">
      <summary>Selects the object.</summary>
      <param name="Replace">Optional Object. The object to replace.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shape.SetShapesDefaultProperties">
      <summary>Makes the formatting of the specified shape the default formatting for the shape.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Shadow">
      <summary>True if the object has a shadow. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.ShapeStyle">
      <summary>Returns or sets a <see cref="T:Microsoft.Office.Core.MsoShapeStyleIndex" /> that represents the shape style of the shape. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.MsoShapeStyleIndex" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.SmartArt">
      <summary>Gets an object that represents the SmartArt associated with the shape.</summary>
      <returns>An object that represents the SmartArt associated with the shape.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.SoftEdge">
      <summary>Returns a <see cref="T:Microsoft.Office.Core.SoftEdgeFormat" /> object for a specified shape that contains soft edge formatting properties for the shape. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.SoftEdgeFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.TextEffect">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.TextEffectFormat" /> object that contains text-effect formatting properties for the specified shape. Applies to T:Microsoft.Office.Interop.Excel.Shape objects that represent WordArt. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.TextFrame">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /> object that contains the alignment and anchoring properties for the specified shape. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.TextFrame2">
      <summary>Returns an object that contains text formatting for the specified shape. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.TextFrame2" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.ThreeD">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object that contains 3-D – effect formatting properties for the specified shape. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Title">
      <summary>Gets or sets the title of the alternative text associated with the specified shape.</summary>
      <returns>The title of the alternative text associated with the specified shape.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Top">
      <summary>The distance from the top edge of the topmost shape in the shape range to the top edge of the worksheet. Read/write Single.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.TopLeftCell">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell that lies under the upper-left corner of the specified object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Type">
      <summary>Returns or sets the shape type. Read-only <see cref="T:Microsoft.Office.Core.MsoShapeType" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shape.Ungroup">
      <summary>Ungroups any grouped shapes in the specified shape or range of shapes. Disassembles pictures and OLE objects within the specified shape. Returns the ungrouped shapes as a single <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.VerticalFlip">
      <summary>True if the specified shape is flipped around the vertical axis. Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Vertices">
      <summary>Returns the coordinates of the specified freeform drawing's vertices (and control points for Bézier curves) as a series of coordinate pairs. Read-only Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Visible">
      <summary>Determines whether the object is visible. Read/write <see cref="T:Microsoft.Office.Core.MsoTriState" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.Width">
      <summary>The width of the object. Read/write Single.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shape.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)">
      <summary>Moves the specified shape in front of or behind other shapes in the collection (that is, changes the shape's position in the z-order).</summary>
      <param name="ZOrderCmd">Required <see cref="T:Microsoft.Office.Core.MsoZOrderCmd" />. Specifies where to move the specified shape relative to the other shapes.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shape.ZOrderPosition">
      <summary>Returns the position of the specified shape in the z-order. Read-only Integer.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ShapeNode">
      <summary>Represents the geometry and the geometry-editing properties of the nodes in a user-defined freeform.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeNode.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeNode.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeNode.EditingType">
      <summary>If the specified node is a vertex, this property returns a value that indicates how changes made to the node affect the two segments connected to the node.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeNode.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeNode.Points">
      <summary>Returns the position of the specified node as a coordinate pair. Each coordinate is expressed in points.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeNode.SegmentType">
      <summary>Returns a value that indicates whether the segment associated with the specified node is straight or curved. If the specified node is a control point for a curved segment, this property returns msoSegmentCurve.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ShapeNodes">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.ShapeNode" /> objects in the specified freeform.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeNodes.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeNodes.Count">
      <summary>Returns the number of objects in the collection. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeNodes.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only Integer.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeNodes.Delete(System.Int32)">
      <summary>Deletes the object.</summary>
      <param name="Index">Required Integer.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeNodes.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeNodes.Insert(System.Int32,Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>Inserts a node into a freeform shape.</summary>
      <param name="Index">Required Integer. The number of the shape node after which to insert a new node.</param>
      <param name="SegmentType">Required <see cref="T:Microsoft.Office.Core.MsoSegmentType" />. The segment type.</param>
      <param name="EditingType">Required <see cref="T:Microsoft.Office.Core.MsoEditingType" />. The editing type.</param>
      <param name="X1">Required Single. If the <paramref name="EditingType" /> of the new segment is msoEditingAuto, this argument specifies the horizontal distance, measured in points, from the upper-left corner of the document to the end point of the new segment. If the <paramref name="EditingType" /> of the new node is msoEditingCorner, this argument specifies the horizontal distance measured in points from the upper-left corner of the document to the first control point for the new segment.</param>
      <param name="Y1">Required Single. If the <paramref name="EditingType" /> of the new segment is msoEditingAuto, this argument specifies the vertical distance measured in points from the upper-left corner of the document to the end point of the new segment. If the <paramref name="EditingType" /> of the new node is msoEditingCorner, this argument specifies the vertical distance measured in points from the upper-left corner of the document to the first control point for the new segment.</param>
      <param name="X2">Optional Single. If the <paramref name="EditingType" /> of the new segment is msoEditingCorner, this argument specifies the horizontal distance measured in points from the upper-left corner of the document to the second control point for the new segment. If the <paramref name="EditingType" /> of the new segment is msoEditingAuto, don't specify a value for this argument.</param>
      <param name="Y2">Optional Single. If the <paramref name="EditingType" /> of the new segment is msoEditingCorner, this argument specifies the vertical distance measured in points from the upper-left corner of the document to the second control point for the new segment. If the <paramref name="EditingType" /> of the new segment is msoEditingAuto, don't specify a value for this argument.</param>
      <param name="X3">Optional Single. If the <paramref name="EditingType" /> of the new segment is msoEditingCorner, this argument specifies the horizontal distance measured in points from the upper-left corner of the document to the end point of the new segment. If the <paramref name="EditingType" /> of the new segment is msoEditingAuto, don't specify a value for this argument.</param>
      <param name="Y3">Optional Single. If the <paramref name="EditingType" /> of the new segment is msoEditingCorner, this argument specifies the vertical distance measured in points from the upper-left corner of the document to the end point of the new segment. If the <paramref name="EditingType" /> of the new segment is msoEditingAuto, don't specify a value for this argument.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeNodes.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeNodes.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeNodes.SetEditingType(System.Int32,Microsoft.Office.Core.MsoEditingType)">
      <summary>Sets the editing type of the specified node.</summary>
      <param name="Index">Required Integer. The node whose editing type is to be set.</param>
      <param name="EditingType">Required <see cref="T:Microsoft.Office.Core.MsoEditingType" />. The editing property of the vertex.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeNodes.SetPosition(System.Int32,System.Single,System.Single)">
      <summary>Sets the location of the specified node.</summary>
      <param name="Index">Required Integer. The node whose position is to be set.</param>
      <param name="X1">Required Single. The position (in points) of the new node relative to the upper-left corner of the document.</param>
      <param name="Y1">Required Single. The position (in points) of the new node relative to the upper-left corner of the document.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeNodes.SetSegmentType(System.Int32,Microsoft.Office.Core.MsoSegmentType)">
      <summary>Sets the segment type of the segment that follows the specified node.</summary>
      <param name="Index">Required Integer. The node whose segment type is to be set.</param>
      <param name="SegmentType">Required <see cref="T:Microsoft.Office.Core.MsoSegmentType" />. Specifies if the segment is straight or curved. Can be one of these MsoSegmentType constants:MsoSegmentTypemsoSegmentCurvemsoSegmentLine</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ShapeRange">
      <summary>Represents a shape range, which is a set of shapes on a document.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Adjustments">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Adjustments" /> object that contains adjustment values for all the adjustments in the specified shape. Applies to any <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object that represents an AutoShape, WordArt, or a connector. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange.Align(Microsoft.Office.Core.MsoAlignCmd,Microsoft.Office.Core.MsoTriState)">
      <summary>Aligns the shapes in the specified range of shapes.</summary>
      <param name="AlignCmd">Required <see cref="T:Microsoft.Office.Core.MsoAlignCmd" />. Specifies the way the shapes in the specified shape range are to be aligned.</param>
      <param name="RelativeTo">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />. Not used in Microsoft Excel. Must be False.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.AlternativeText">
      <summary>Returns or sets the descriptive (alternative) text string for a <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object when the object is saved to a Web page. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange.Apply">
      <summary>Applies to the specified shape formatting that’s been copied by using the <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.PickUp" /> method.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.AutoShapeType">
      <summary>Returns or sets the shape type for the specified <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object, which must represent an AutoShape other than a line, freeform drawing, or connector. Read/write <see cref="T:Microsoft.Office.Core.MsoAutoShapeType" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.BackgroundStyle">
      <summary>Returns or sets the background style. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.MsoBackgroundStyleIndex" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.BlackWhiteMode">
      <summary>Returns or sets a value that indicates how the specified shape appears when the presentation is viewed in black-and-white mode. Read/write <see cref="T:Microsoft.Office.Core.MsoBlackWhiteMode" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Callout">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.CalloutFormat" /> object that contains callout formatting properties for the specified shape. Applies to <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objects that represent line callouts. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange.CanvasCropBottom(System.Single)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange.CanvasCropLeft(System.Single)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange.CanvasCropRight(System.Single)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange.CanvasCropTop(System.Single)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.CanvasItems">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Chart">
      <summary>Returns an object that represents the chart contained in the shape range. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel._Chart" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Child">
      <summary>Returns msoTrue if the specified shape is a child shape or if all shapes in a shape range are child shapes of the same parent. Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.ConnectionSiteCount">
      <summary>Returns the number of connection sites on the specified shape. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Connector">
      <summary>True if the specified shape is a connector. Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.ConnectorFormat">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" /> object that contains connector formatting properties. Applies to <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objects that represent connectors. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Count">
      <summary>Returns the number of objects in the collection. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Diagram">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Diagram" /> object representing a diagram.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.DiagramNode">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object that represents a node in a diagram.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange.Distribute(Microsoft.Office.Core.MsoDistributeCmd,Microsoft.Office.Core.MsoTriState)">
      <summary>Horizontally or vertically distributes the shapes in the specified range of shapes.</summary>
      <param name="DistributeCmd">Required <see cref="T:Microsoft.Office.Core.MsoDistributeCmd" />. Specifies whether shapes in the range are to be distributed horizontally or vertically.</param>
      <param name="RelativeTo">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />. Not used in Microsoft Excel. Must be False.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange.Duplicate">
      <summary>Duplicates the object and returns a reference to the new copy.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Fill">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object that contains fill formatting properties for the specified chart or shape. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange.Flip(Microsoft.Office.Core.MsoFlipCmd)">
      <summary>Flips the specified shape around its horizontal or vertical axis.</summary>
      <param name="FlipCmd">Required <see cref="T:Microsoft.Office.Core.MsoFlipCmd" />. Specifies whether the shape is to be flipped horizontally or vertically.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Glow">
      <summary>Returns an object that contains glow formatting properties for the shape range. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.GlowFormat" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange.Group">
      <summary>Groups the shapes in the specified range. Returns the grouped shapes as a single <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.GroupItems">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.GroupShapes" /> object that represents the individual shapes in the specified group. Applies to <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objects that represent grouped shapes. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.HasChart">
      <summary>Returns information on if a <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange" /> contains a chart. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.MsoTriState" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.HasDiagram">
      <summary>Returns whether a shape or shape range contains a diagram. Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.HasDiagramNode">
      <summary>Returns a value indicating whether a diagram node exists in a given shape or shape range. Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Height">
      <summary>The height of the object. Read/write Single.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.HorizontalFlip">
      <summary>True if the specified shape is flipped around the horizontal axis. Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.ID">
      <summary>Returns the type for the specified object. Read-only Integer.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange.IncrementLeft(System.Single)">
      <summary>Moves the specified shape horizontally by the specified number of points.</summary>
      <param name="Increment">Required Single. Specifies how far the shape is to be moved horizontally in points. A positive value moves the shape to the right; a negative value moves it to the left.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange.IncrementRotation(System.Single)">
      <summary>Changes the rotation of the specified shape around the z-axis by the specified number of degrees. Use the <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.Rotation" /> property to set the absolute rotation of the shape.</summary>
      <param name="Increment">Required Single. Specifies how far the shape is to be rotated horizontally in degrees. A positive value rotates the shape clockwise; a negative value rotates it counterclockwise.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange.IncrementTop(System.Single)">
      <summary>Moves the specified shape vertically by the specified number of points.</summary>
      <param name="Increment">Required Single. Specifies how far the shape object is to be moved vertically in points. A positive value moves the shape down; a negative value moves it up.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Left">
      <summary>The distance from the left edge of the object to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart). Read/write Single.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Line">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.LineFormat" /> object that contains line formatting properties for the specified shape. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.LockAspectRatio">
      <summary>True if the specified shape retains its original proportions when you resize it. False if you can change the height and width of the shape independently of one another when you resize it. Read/write <see cref="T:Microsoft.Office.Core.MsoTriState" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Name">
      <summary>Returns or sets the name of the object. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Nodes">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ShapeNodes" /> collection that represents the geometric description of the specified shape. Applies to <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objects that represent freeform drawings.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.ParentGroup">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the common parent shape of a child shape or a range of child shapes.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange.PickUp">
      <summary>Copies the formatting of the specified shape. Use the <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.Apply" /> method to apply the copied formatting to another shape.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.PictureFormat">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.PictureFormat" /> object that contains picture formatting properties for the specified shape. Applies to <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objects that represent pictures or OLE objects. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Reflection">
      <summary>Returns a <see cref="T:Microsoft.Office.Core.ReflectionFormat" /> object for a specified shape range that contains reflection formatting properties for the shape range. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.ReflectionFormat" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange.Regroup">
      <summary>Regroups the group that the specified shape range belonged to previously. Returns the regrouped shapes as a single <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange.RerouteConnections">
      <summary>Reroutes connectors so that they take the shortest possible path between the shapes they connect.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Rotation">
      <summary>Returns or sets the rotation of the shape in degrees. Read/write Single.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange.ScaleHeight(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)">
      <summary>Scales the height of the shape by a specified factor.</summary>
      <param name="Factor">Required Single. Specifies the ratio between the height of the shape after you resize it and the current or original height. For example, to make a rectangle 50 percent larger, specify 1.5 for this argument.</param>
      <param name="RelativeToOriginalSize">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />. msoTrue to scale the shape relative to its original size. msoFalse to scale it relative to its current size. You can specify msoTrue for this argument only if the specified shape is a picture or an OLE object.</param>
      <param name="Scale">Optional <see cref="T:Microsoft.Office.Core.MsoScaleFrom" />. Specifies which part of the shape retains its position when the shape is scaled.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange.ScaleWidth(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)">
      <summary>Scales the width of the shape by a specified factor.</summary>
      <param name="Factor">Required Single. Specifies the ratio between the width of the shape after you resize it and the current or original width. For example, to make a rectangle 50 percent larger, specify 1.5 for this argument.</param>
      <param name="RelativeToOriginalSize">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />. False to scale it relative to its current size. You can specify True for this argument only if the specified shape is a picture or an OLE object.</param>
      <param name="Scale">Optional <see cref="T:Microsoft.Office.Core.MsoScaleFrom" />. Specifies which part of the shape retains its position when the shape is scaled.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange.Select(System.Object)">
      <summary>Selects the object.</summary>
      <param name="Replace">Optional Object. The object to replace.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange.SetShapesDefaultProperties">
      <summary>Makes the formatting of the specified shape the default formatting for the shape.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Shadow">
      <summary>True if the font is a shadow font or if the object has a shadow. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.ShapeStyle">
      <summary>Returns or sets a <see cref="T:Microsoft.Office.Core.MsoShapeStyleIndex" /> that represents shape style for a shape range. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.MsoShapeStyleIndex" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.SoftEdge">
      <summary>Returns an object that contains soft edge formatting properties for a specified shape range. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.SoftEdgeFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.TextEffect">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.TextEffectFormat" /> object that contains text-effect formatting properties for the specified shape. Applies to <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objects that represent WordArt. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.TextFrame">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /> object that contains the alignment and anchoring properties for the specified shape range. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.TextFrame2">
      <summary>Returns an object that contains text formatting for the specified shape range. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.TextFrame2" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.ThreeD">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object that contains 3-D – effect formatting properties for the specified shape. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Title">
      <summary>Gets or sets the title of the alternative text associated with the specified shape range.</summary>
      <returns>The title of the alternative text associated with the specified shape range.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Top">
      <summary>The distance from the top edge of the topmost shape in the shape range to the top edge of the worksheet. Read/write Single.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Type">
      <summary>Returns or sets the shape type. Read-only <see cref="T:Microsoft.Office.Core.MsoShapeType" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange.Ungroup">
      <summary>Ungroups any grouped shapes in the specified shape or range of shapes. Disassembles pictures and OLE objects within the specified shape or range of shapes. Returns the ungrouped shapes as a single <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.VerticalFlip">
      <summary>True if the specified shape is flipped around the vertical axis. Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Vertices">
      <summary>Returns the coordinates of the specified freeform drawing's vertices (and control points for Bézier curves) as a series of coordinate pairs. Read-only Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Visible">
      <summary>Determines whether the object is visible. Read/write <see cref="T:Microsoft.Office.Core.MsoTriState" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.Width">
      <summary>The width of the object. Read/write Single.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ShapeRange.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)">
      <summary>Moves the specified shape in front of or behind other shapes in the collection (that is, changes the shape's position in the z-order).</summary>
      <param name="ZOrderCmd">Required <see cref="T:Microsoft.Office.Core.MsoZOrderCmd" />. Specifies where to move the specified shape relative to the other shapes.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ShapeRange.ZOrderPosition">
      <summary>Returns the position of the specified shape in the z-order. Read-only Integer.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Shapes">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objects on the specified sheet.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shapes._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shapes.AddCallout(Microsoft.Office.Core.MsoCalloutType,System.Single,System.Single,System.Single,System.Single)">
      <summary>Creates a borderless line callout. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the new callout.</summary>
      <param name="Type">Required <see cref="T:Microsoft.Office.Core.MsoCalloutType" />. The type of callout line. Can be one of these MsoCalloutType constants:msoCalloutOne. A single-segment callout line that can be either horizontal or vertical.msoCalloutTwo. A single-segment callout line that rotates freely.msoCalloutMixed.msoCalloutThree. A two-segment line.msoCalloutFour. A three-segment line.</param>
      <param name="Left">Required Single. The position (in points) of the upper-left corner of the callout's bounding box relative to the upper-left corner of the document.</param>
      <param name="Top">Required Single. The position (in points) of the upper-left corner of the callout's bounding box relative to the upper-left corner of the document.</param>
      <param name="Width">Required Single. The width of the callout's bounding box, in points.</param>
      <param name="Height">Required Single. The height of the callout's bounding box, in points.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shapes.AddCanvas(System.Single,System.Single,System.Single,System.Single)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shapes.AddChart(System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Creates a chart at the specified location on the active sheet.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Shape" />
      </returns>
      <param name="XlChartType">The chart type.</param>
      <param name="Left">The distance, in points, from the left edge of the object to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart). </param>
      <param name="Top">The distance, in points, from the top edge of the topmost shape in the shape range to the top edge of the worksheet.</param>
      <param name="Width">The width, in points, of the object. </param>
      <param name="Height">The height, in points, of the object. </param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shapes.AddConnector(Microsoft.Office.Core.MsoConnectorType,System.Single,System.Single,System.Single,System.Single)">
      <summary>Creates a connector. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the new connector.</summary>
      <param name="Type">Required <see cref="T:Microsoft.Office.Core.MsoConnectorType" />. The connector type to add. Can be one of these MsoConnectorType constants:msoConnectorElbowmsoConnectorTypeMixedmsoConnectorCurvemsoConnectorStraight</param>
      <param name="BeginX">Required Single. The horizontal position (in points) of the connector's starting point relative to the upper-left corner of the document.</param>
      <param name="BeginY">Required Single. The vertical position (in points) of the connector's starting point relative to the upper-left corner of the document.</param>
      <param name="EndX">Required Single. The horizontal position (in points) of the connector's end point relative to the upper-left corner of the document.</param>
      <param name="EndY">Required Single. The veritcal position (in points) of the connector's end point relative to the upper-left corner of the document.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shapes.AddCurve(System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents a Bézier curve in a worksheet.</summary>
      <param name="SafeArrayOfPoints">Required Object. An array of coordinate pairs that specifies the vertices and control points of the curve. The first point you specify is the starting vertex, and the next two points are control points for the first Bézier segment. Then, for each additional segment of the curve, you specify a vertex and two control points. The last point you specify is the ending vertex for the curve. Note that you must always specify 3n + 1 points, where n is the number of segments in the curve.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shapes.AddDiagram(Microsoft.Office.Core.MsoDiagramType,System.Single,System.Single,System.Single,System.Single)">
      <summary>Creates a diagram. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the new diagram.</summary>
      <param name="Type">Required <see cref="T:Microsoft.Office.Core.MsoDiagramType" />. The type of diagram. Can be one of these MsoDiagramType constants:msoDiagramCycle A process diagram with a continuous cycle diagram type.msoDiagramMixed A mixed diagram type.msoDiagramOrgChart A hierarchical relationship diagram type.msoDiagramPyramid A foundation based relationships diagram type.msoDiagramRadial A diagram type showing relationships of a core element.msoDiagramTarget A diagram type showing steps toward a goal.msoDiagramVenn A diagram type showing areas of overlap between elements.</param>
      <param name="Left">Required Single. The position (in points) of the upper-left corner of the diagram relative to the upper-left corner of the worksheet.</param>
      <param name="Top">Required Single. The position (in points) of the upper-left top of the diagram relative to the upper-left corner of the worksheet.</param>
      <param name="Width">Required Single. The width of the diagram, in points.</param>
      <param name="Height">Required Single. The height of the diagram, in points.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shapes.AddFormControl(Microsoft.Office.Interop.Excel.XlFormControl,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Creates a Microsoft Excel control. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the new control.</summary>
      <param name="Type">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFormControl" />. The Microsoft Excel control type. You cannot create an edit box on a worksheet. Can be one of these XlFormControl constants:xlButtonControlxlCheckBoxxlDropDownxlEditBoxxlGroupBoxxlLabelxlListBoxxlOptionButtonxlScrollBarxlSpinner</param>
      <param name="Left">Required Integer. The initial coordinates of the new object (in points) relative to the upper-left corner of cell A1 on a worksheet or to the upper-left corner of a chart.</param>
      <param name="Top">Required Integer. The initial coordinates of the new object (in points) relative to the upper-left corner of cell A1 on a worksheet or to the upper-left corner of a chart.</param>
      <param name="Width">Required Integer. The initial size of the new object, in points.</param>
      <param name="Height">Required Integer. The initial size of the new object, in points.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shapes.AddLabel(Microsoft.Office.Core.MsoTextOrientation,System.Single,System.Single,System.Single,System.Single)">
      <summary>Creates a label. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the new label.</summary>
      <param name="Orientation">Required <see cref="T:Microsoft.Office.Core.MsoTextOrientation" />. The text orientation within the label. Can be one of these MsoTextOrientation constants:msoTextOrientationDownwardmsoTextOrientationHorizontalmsoTextOrientationHorizontalRotatedFarEastmsoTextOrientationMixedmsoTextOrientationUpwardmsoTextOrientationVerticalmsoTextOrientationVerticalFarEast Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</param>
      <param name="Left">Required Single. The position (in points) of the upper-left corner of the label relative to the upper-left corner of the document.</param>
      <param name="Top">Required Single. The position (in points) of the upper-left corner of the label relative to the top corner of the document.</param>
      <param name="Width">Required Single. The width of the label, in points.</param>
      <param name="Height">Required Single. The height of the label, in points.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shapes.AddLine(System.Single,System.Single,System.Single,System.Single)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the new line in a worksheet.</summary>
      <param name="BeginX">Required Single. The position (in points) of the line's starting point relative to the upper-left corner of the document.</param>
      <param name="BeginY">Required Single. The position (in points) of the line's starting point relative to the upper-left corner of the document.</param>
      <param name="EndX">Required Single. The position (in points) of the line's end point relative to the upper-left corner of the document.</param>
      <param name="EndY">Required Single. The position (in points) of the line's end point relative to the upper-left corner of the document.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shapes.AddOLEObject(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Creates an OLE object. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the new OLE object.</summary>
      <param name="ClassType">Optional Object. (you must specify either <paramref name="ClassType" /> or <paramref name="FileName" />). A string that contains the programmatic identifier for the object to be created. If <paramref name="ClassType" /> is specified, <paramref name="FileName" /> and <paramref name="Link" /> are ignored.</param>
      <param name="Filename">Optional Object. The file from which the object is to be created. If the path isn’t specified, the current working folder is used. You must specify either the <paramref name="ClassType" /> or <paramref name="FileName" /> argument for the object, but not both.</param>
      <param name="Link">Optional Object. True to link the OLE object to the file from which it was created. False to make the OLE object an independent copy of the file. If you specified a value for <paramref name="ClassType" />, this argument must be False. The default value is False.</param>
      <param name="DisplayAsIcon">Optional Object. True to display the OLE object as an icon. The default value is False.</param>
      <param name="IconFileName">Optional Object. The file that contains the icon to be displayed.</param>
      <param name="IconIndex">Optional Object. The index of the icon within <paramref name="IconFileName" />. The order of icons in the specified file corresponds to the order in which the icons appear in the Change Icon dialog box (accessed from the Object dialog box when the Display as icon check box is selected). The first icon in the file has the index number 0 (zero). If an icon with the given index number doesn't exist in <paramref name="IconFileName" />, the icon with the index number 1 (the second icon in the file) is used. The default value is 0 (zero).</param>
      <param name="IconLabel">Optional Object. A label (caption) to be displayed beneath the icon.</param>
      <param name="Left">Optional Object. The position (in points) of the upper-left corner of the new object relative to the upper-left corner of the document. The default value is 0 (zero).</param>
      <param name="Top">Optional Object. The position (in points) of the upper-left corner of the new object relative to the upper-left corner of the document. The default value is 0 (zero).</param>
      <param name="Width">Optional Object. The initial dimensions of the OLE object, in points.</param>
      <param name="Height">Optional Object. The initial dimensions of the OLE object, in points.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shapes.AddPicture(System.String,Microsoft.Office.Core.MsoTriState,Microsoft.Office.Core.MsoTriState,System.Single,System.Single,System.Single,System.Single)">
      <summary>Creates a picture from an existing file. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the new picture.</summary>
      <param name="Filename">Required String. The file from which the OLE object is to be created.</param>
      <param name="LinkToFile">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />. The file to link to. Can be one of these MsoTriState constants:msoCTruemsoFalse To make the picture an independent copy of the file.msoTriStateMixedmsoTriStateTogglemsoTrue To link the picture to the file from which it was created.</param>
      <param name="SaveWithDocument">Required MsoTriState. To save the picture with the document.</param>
      <param name="Left">Required Single. The position (in points) of the upper-left corner of the picture relative to the upper-left corner of the document.</param>
      <param name="Top">Required Single. The position (in points) of the upper-left corner of the picture relative to the top of the document.</param>
      <param name="Width">Required Single. The width of the picture, in points.</param>
      <param name="Height">Required Single. The height of the picture, in points.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shapes.AddPolyline(System.Object)">
      <summary>Creates an open polyline or a closed polygon drawing. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the new polyline or polygon.</summary>
      <param name="SafeArrayOfPoints">Required Object. An array of coordinate pairs that specifies the polyline drawing's vertices.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shapes.AddShape(Microsoft.Office.Core.MsoAutoShapeType,System.Single,System.Single,System.Single,System.Single)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the new AutoShape in a worksheet.</summary>
      <param name="Type">Required <see cref="T:Microsoft.Office.Core.MsoAutoShapeType" />. Specifies the type of AutoShape to create.</param>
      <param name="Left">Required Single. The position (in points) of the upper-left corner of the AutoShape's bounding box relative to the upper-left corner of the document.</param>
      <param name="Top">Required Single. The position (in points) of the upper-left corner of the AutoShape's bounding box relative to the upper-left corner of the document.</param>
      <param name="Width">Required Single. The width and height of the AutoShape's bounding box, in points.</param>
      <param name="Height">Required Single. The width and height of the AutoShape's bounding box, in points.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shapes.AddSmartArt(Microsoft.Office.Core.SmartArtLayout,System.Object,System.Object,System.Object,System.Object)">
      <summary>Creates a new SmartArt graphic with the specified layout.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object.</returns>
      <param name="Layout">An object that represents the layout to use.</param>
      <param name="Left">The distance, in points, from the left edge of the object to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart).</param>
      <param name="Top">The distance, in points, from the top edge of the object to the top edge of the worksheet.</param>
      <param name="Width">The width, in points, of the object.</param>
      <param name="Height">The width, in points, of the object.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shapes.AddTextbox(Microsoft.Office.Core.MsoTextOrientation,System.Single,System.Single,System.Single,System.Single)">
      <summary>Creates a text box. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the new text box.</summary>
      <param name="Orientation">Required <see cref="T:Microsoft.Office.Core.MsoTextOrientation" />. The orientation of the textbox.</param>
      <param name="Left">Required Single. The position (in points) of the upper-left corner of the text box relative to the upper-left corner of the document.</param>
      <param name="Top">Required Single. The position (in points) of the upper-left corner of the text box relative to the top of the document.</param>
      <param name="Width">Required Single. The width of the text box, in points.</param>
      <param name="Height">Required Single. The height of the text box, in points.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shapes.AddTextEffect(Microsoft.Office.Core.MsoPresetTextEffect,System.String,System.String,System.Single,Microsoft.Office.Core.MsoTriState,Microsoft.Office.Core.MsoTriState,System.Single,System.Single)">
      <summary>Creates a WordArt object. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the new WordArt object.</summary>
      <param name="PresetTextEffect">Required <see cref="T:Microsoft.Office.Core.MsoPresetTextEffect" />. The preset text effect.</param>
      <param name="Text">Required String. The text in the WordArt.</param>
      <param name="FontName">Required String. The name of the font used in the WordArt.</param>
      <param name="FontSize">Required Single. The size (in points) of the font used in the WordArt.</param>
      <param name="FontBold">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />. The font used in the WordArt to bold.</param>
      <param name="FontItalic">Required MsoTriState. The font used in the WordArt to italic.</param>
      <param name="Left">Required Single. The position (in points) of the upper-left corner of the WordArt's bounding box relative to the upper-left corner of the document.</param>
      <param name="Top">Required Single. The position (in points) of the upper-left corner of the WordArt's bounding box relative to the top of the document.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shapes.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shapes.BuildFreeform(Microsoft.Office.Core.MsoEditingType,System.Single,System.Single)">
      <summary>Builds a freeform object. Returns a <see cref="T:Microsoft.Office.Interop.Excel.FreeformBuilder" /> object that represents the freeform as it is being built.</summary>
      <param name="EditingType">Required <see cref="T:Microsoft.Office.Core.MsoEditingType" />. The editing property of the first node.</param>
      <param name="X1">Required Single. The position (in points) of the first node in the freeform drawing relative to the upper-left corner of the document.</param>
      <param name="Y1">Required Single. The position (in points) of the first node in the freeform drawing relative to the upper-left corner of the document.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shapes.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shapes.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shapes.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Shapes.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shapes.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Shapes.Range(System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object that represents a subset of the shapes in a <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection.</summary>
      <param name="Index">Required Object. The individual shapes to be included in the range. Can be an integer that specifies the index number of the shape, a string that specifies the name of the shape, or an array that contains either integers or strings.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Shapes.SelectAll">
      <summary>Selects all the shapes in the specified <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Sheets">
      <summary>A collection of all the sheets in the specified or active workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Sheets._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Sheets._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Sheets.Add(System.Object,System.Object,System.Object,System.Object)">
      <summary>Creates a new worksheet, chart, or macro sheet. The new worksheet becomes the active sheet.</summary>
      <param name="Before">Optional Object. An object that specifies the sheet before which the new sheet is added.</param>
      <param name="After">Optional Object. An object that specifies the sheet after which the new sheet is added.</param>
      <param name="Count">Optional Object. The number of sheets to be added. The default value is one.</param>
      <param name="Type">Optional Object. Specifies the sheet type. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" /> constants: xlWorksheet, xlChart, xlExcel4MacroSheet, or xlExcel4IntlMacroSheet. If you are inserting a sheet based on an existing template, specify the path to the template. The default value is xlWorksheet.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Sheets.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Sheets.Copy(System.Object,System.Object)">
      <summary>Copies the sheet to another location in the workbook.</summary>
      <param name="Before">Optional Object. The sheet before which the copied sheet will be placed. You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</param>
      <param name="After">Optional Object. The sheet after which the copied sheet will be placed. You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Sheets.Count">
      <summary>Returns the number of objects in the collection. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Sheets.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Sheets.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Sheets.FillAcrossSheets(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlFillWith)">
      <summary>Copies a range to the same area on all other worksheets in a collection.</summary>
      <param name="Range">Required Range object. The range to fill on all the worksheets in the collection. The range must be from a worksheet within the collection.</param>
      <param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFillWith" />. Specifies how to copy the range.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Sheets.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Sheets.HPageBreaks">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> collection that represents the horizontal page breaks on the sheet. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Sheets.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Sheets.Move(System.Object,System.Object)">
      <summary>Moves the sheet to another location in the workbook.</summary>
      <param name="Before">Optional Object. The sheet before which the moved sheet will be placed. You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</param>
      <param name="After">Optional Object. The sheet after which the moved sheet will be placed. You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Sheets.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Sheets.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Prints the object.</summary>
      <param name="From">Optional Object. The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
      <param name="To">Optional Object. The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
      <param name="Copies">Optional Object. The number of copies to print. If this argument is omitted, one copy is printed.</param>
      <param name="Preview">Optional Object. True to have Microsoft Excel invoke print preview before printing the object. False (or omitted) to print the object immediately.</param>
      <param name="ActivePrinter">Optional Object. Sets the name of the active printer.</param>
      <param name="PrintToFile">Optional Object. True to print to a file. If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</param>
      <param name="Collate">Optional Object. True to collate multiple copies.</param>
      <param name="PrToFileName">Optional Object. If <paramref name="PrintToFile" /> is set to True, this argument specifies the name of the file you want to print to.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Sheets.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Sheets.PrintPreview(System.Object)">
      <summary>Shows a preview of the object as it would look when printed.</summary>
      <param name="EnableChanges">Enables changes to the object.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Sheets.Select(System.Object)">
      <summary>Selects the object</summary>
      <param name="Replace">Optional Object. The object to replace.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Sheets.Visible">
      <summary>Determines whether the object is visible. Read/write Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Sheets.VPageBreaks">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection that represents the vertical page breaks on the sheet. Read-only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SheetViews">
      <summary>A collection of all the sheet views in the specified or active workbook window.
</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SheetViews._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SheetViews.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the creator of the specified object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel._Application" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SheetViews.Count">
      <summary>Returns the number of objects in the collection. Read-only.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SheetViews.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SheetViews.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.SheetViews.Item(System.Object)">
      <summary>Returns an object that represents views in a workbook. Read-only.</summary>
      <returns>Object</returns>
      <param name="Index">Index value of the view.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SheetViews.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Slicer">
      <summary>Represents a slicer in a workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Slicer.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Slicer.Caption">
      <summary>Gets or sets the caption of the specified slicer.</summary>
      <returns>The caption of the specified slicer.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Slicer.ColumnWidth">
      <summary>Gets or sets the width, in points, of each column in the slicer.</summary>
      <returns>The width, in points, of each column in the slicer.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Slicer.Creator">
      <summary>Gets a 32-bit integer that indicates the application in which this object was created.</summary>
      <returns>A 32-bit integer that indicates the application in which this object was created.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Slicer.Delete">
      <summary>Deletes the slicer and removes it from the associated <see cref="T:Microsoft.Office.Interop.Excel.Slicers" /> collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Slicer.DisableMoveResizeUI">
      <summary>Gets or sets whether the specified slicer can be moved or resized by using the user interface.</summary>
      <returns>true if the specified slicer can be moved or resized by using the user interface; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Slicer.DisplayHeader">
      <summary>Gets or sets whether the header that displays the slicer <see cref="P:Microsoft.Office.Interop.Excel.Slicer.Caption" /> is visible.</summary>
      <returns>true if the header that displays the slicer <see cref="P:Microsoft.Office.Interop.Excel.Slicer.Caption" /> is visible; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Slicer.Height">
      <summary>Gets or sets the height of the specified slicer, in points.</summary>
      <returns>The height of the specified slicer, in points.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Slicer.Left">
      <summary>Gets or sets the horizontal position of the specified slicer, in points, relative to the upper-left corner of cell A1 on a worksheet.</summary>
      <returns>The horizontal position of the specified slicer, in points, relative to the upper-left corner of cell A1 on a worksheet.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Slicer.Locked">
      <summary>Gets or sets whether the specified slicer can be modified when the sheet that contains it is protected.</summary>
      <returns>true if the specified slicer can be modified when the sheet that contains it is protected; otherwise, false. The default is true</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Slicer.Name">
      <summary>Gets  or sets the name of the specified slicer.</summary>
      <returns>The name of the specified slicer.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Slicer.NumberOfColumns">
      <summary>Gets or sets the number of columns in the specified slicer.</summary>
      <returns>The number of columns in the specified slicer. The default is 1.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Slicer.Parent">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the sheet that contains the slicer.</summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the sheet that contains the slicer.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Slicer.RowHeight">
      <summary>Gets or sets the height, in points, of each row in the specified slicer.</summary>
      <returns>The height, in points, of each row in the specified slicer.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Slicer.Shape">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object associated with the specified slicer.</summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object associated with the specified slicer.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Slicer.SlicerCache">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" /> object associated with the slicer.</summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" /> object associated with the slicer.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Slicer.SlicerCacheLevel">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.SlicerCacheLevel" /> object associated with the slicer.</summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.SlicerCacheLevel" /> object associated with the slicer.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Slicer.Style">
      <summary>Gets or sets the style currently applied to the specified slicer.</summary>
      <returns>The style currently applied to the specified slicer.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Slicer.Top">
      <summary>Gets or sets the vertical position of the specified slicer, in points, relative to the upper-left corner of cell A1 on a worksheet.</summary>
      <returns>The vertical position of the specified slicer, in points, relative to the upper-left corner of cell A1 on a worksheet.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Slicer.Width">
      <summary>Gets or sets the width of the specified slicer, in points.</summary>
      <returns>The width of the specified slicer, in points.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SlicerCache">
      <summary>Represents the current filter state for a slicer and information about which <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> or <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> the slicer is connected to.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCache.Application">
      <summary>When used without an object qualifier, this property gets an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property gets an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SlicerCache.ClearManualFilter">
      <summary>Clears the filtering of all slicers associated with the specified slicer cache.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCache.Creator">
      <summary>Gets a 32-bit integer that indicates the application in which this object was created.</summary>
      <returns>A 32-bit integer that indicates the application in which this object was created.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCache.CrossFilterType">
      <summary>Gets or sets whether a slicer is participating in cross filtering with other slicers that share the same slicer cache, and how cross filtering is displayed.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.XlSlicerCrossFilterType" /> object.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SlicerCache.Delete">
      <summary>Deletes the specified slicer cache and the slicers associated with it.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCache.Index">
      <summary>Gets the index of the specified SlicerCache object in the <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> collection.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCache.Name">
      <summary>Gets or sets the name of the slicer cache.</summary>
      <returns>The name of the slicer cache.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCache.OLAP">
      <summary>Gets whether the slicer associated with the specified slicer cache is based on an OLAP data source.</summary>
      <returns>true if the slicer associated with the specified slicer cache is based on an OLAP data source; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCache.Parent">
      <summary>Gets the parent <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> object for the specified <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" /> object.</summary>
      <returns>The parent <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> object for the specified <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCache.PivotTables">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.SlicerPivotTables" /> collection that contains information about the PivotTables the slicer cache is currently filtering.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.SlicerPivotTables" /> collection that contains information about the PivotTables the slicer cache is currently filtering.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCache.ShowAllItems">
      <summary>Gets or sets whether slicers connected to the specified slicer cache display items that have been deleted from in the corresponding PivotCache.</summary>
      <returns>true if slicers connected to the specified slicer cache display items that have been deleted from in the corresponding PivotCache; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCache.SlicerCacheLevels">
      <summary>Gets the collection of <see cref="T:Microsoft.Office.Interop.Excel.SlicerCacheLevel" /> objects that represent the levels of an OLAP hierarchy on which the specified slicer cache is based. </summary>
      <returns>The collection of <see cref="T:Microsoft.Office.Interop.Excel.SlicerCacheLevel" /> objects that represent the levels of an OLAP hierarchy on which the specified slicer cache is based.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCache.SlicerItems">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.SlicerItems" /> collection that contains the collection of all items in the slicer cache.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.SlicerItems" /> collection that contains the collection of all items in the slicer cache.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCache.Slicers">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Slicers" /> collection that contains the collection of <see cref="T:Microsoft.Office.Interop.Excel.Slicer" /> objects associated with the specified <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Slicers" /> collection that contains the collection of <see cref="T:Microsoft.Office.Interop.Excel.Slicer" /> objects associated with the specified <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCache.SortItems">
      <summary>Gets or sets whether the items in the slicer are sorted.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.XlSlicerSort" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCache.SortUsingCustomLists">
      <summary>Gets or sets whether items in the specified slicer cache will be sorted by the custom lists.</summary>
      <returns>true if items in the specified slicer cache will be sorted by the custom lists; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCache.SourceName">
      <summary>Gets the name of the data source the slicer is connected to.</summary>
      <returns>The name of the data source the slicer is connected to.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCache.SourceType">
      <summary>Gets the kind of data source the slicer is connected to.</summary>
      <returns>The kind of data source the slicer is connected to.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCache.VisibleSlicerItems">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.SlicerItems" /> collection that contains the collection of all the visible items in the specified slicer cache.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.SlicerItems" /> collection that contains the collection of all the visible items in the specified slicer cache.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCache.VisibleSlicerItemsList">
      <summary>Gets or sets the list of MDX unique names for members at all levels of the hierarchy where manual filtering is applied.</summary>
      <returns>The list of MDX unique names for members at all levels of the hierarchy where manual filtering is applied.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCache.WorkbookConnection">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> object that represents the data connection used by the specified slicer.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> object that represents the data connection used by the specified slicer.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SlicerCacheLevel">
      <summary>Represents a level of a hierarchy in an OLAP data source being filtered by a slicer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCacheLevel.Application">
      <summary>When used without an object qualifier, this property gets an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property gets an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCacheLevel.Count">
      <summary>Gets the number of <see cref="T:Microsoft.Office.Interop.Excel.SlicerItem" /> objects in the specified <see cref="T:Microsoft.Office.Interop.Excel.SlicerCacheLevel" /> object.</summary>
      <returns>The number of <see cref="T:Microsoft.Office.Interop.Excel.SlicerItem" /> objects in the specified <see cref="T:Microsoft.Office.Interop.Excel.SlicerCacheLevel" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCacheLevel.Creator">
      <summary>Gets a 32-bit integer that indicates the application in which this object was created.</summary>
      <returns>A 32-bit integer that indicates the application in which this object was created.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCacheLevel.CrossFilterType">
      <summary>Gets or sets whether a slicer is participating in cross filtering with other slicers that share the same slicer cache, and how cross filtering is displayed.</summary>
      <returns>Specifies whether a slicer is participating in cross filtering with other slicers that share the same slicer cache, and how cross filtering is displayed.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCacheLevel.Name">
      <summary>Gets the MDX unique name of OLAP hierarchy level represented by the object.</summary>
      <returns>The MDX unique name of OLAP hierarchy level represented by the object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCacheLevel.Ordinal">
      <summary>Gets the one-based ordinal value of the hierarchy level represented by the specified <see cref="T:Microsoft.Office.Interop.Excel.SlicerCacheLevel" /> object.</summary>
      <returns>The one-based ordinal value of the hierarchy level represented by the specified <see cref="T:Microsoft.Office.Interop.Excel.SlicerCacheLevel" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCacheLevel.Parent">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" /> object for the specified <see cref="T:Microsoft.Office.Interop.Excel.SlicerCacheLevel" /> object.</summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" /> object for the specified <see cref="T:Microsoft.Office.Interop.Excel.SlicerCacheLevel" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCacheLevel.SlicerItems">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.SlicerItems" /> collection that contains the collection of all slicer items for the specified level.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.SlicerItems" /> collection that contains the collection of all slicer items for the specified level.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCacheLevel.SortItems">
      <summary>Gets or sets whether the items in the slicer are sorted.</summary>
      <returns>Specifies whether the items in the slicer are sorted.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCacheLevel.VisibleSlicerItemsList">
      <summary>Gets the list of slicer items that are currently included in the slicer filter.</summary>
      <returns>The list of slicer items that are currently included in the slicer filter.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SlicerCacheLevels">
      <summary>Represents the collection of hierarchy levels for the OLAP data source that is filtered by a slicer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCacheLevels._Default(System.Object)">
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.SlicerCacheLevel" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCacheLevels.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCacheLevels.Count">
      <summary>Gets the number of levels in the specified <see cref="T:Microsoft.Office.Interop.Excel.SlicerCacheLevels" /> collection, which represents the number of levels in the associated <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" /> object.</summary>
      <returns>The number of levels in the specified <see cref="T:Microsoft.Office.Interop.Excel.SlicerCacheLevels" /> collection, which represents the number of levels in the associated <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCacheLevels.Creator">
      <summary>Gets a 32-bit integer that indicates the application in which this object was created. </summary>
      <returns>A 32-bit integer that indicates the application in which this object was created.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SlicerCacheLevels.GetEnumerator">
      <returns>Returns <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCacheLevels.Item(System.Object)">
      <summary>Returns the specified <see cref="T:Microsoft.Office.Interop.Excel.SlicerCacheLevel" /> object from the collection, or if no level is specified, returns the first <see cref="T:Microsoft.Office.Interop.Excel.SlicerCacheLevel" /> object in the collection.</summary>
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.SlicerCacheLevel" />.</returns>
      <param name="Level">The MDX unique name of the level or index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCacheLevels.Parent">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" /> object that is the parent of the specified <see cref="T:Microsoft.Office.Interop.Excel.SlicerCacheLevels" /> object.</summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" /> object that is the parent of the specified <see cref="T:Microsoft.Office.Interop.Excel.SlicerCacheLevels" /> object.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SlicerCaches">
      <summary>Represents the collection of slicer caches associated with the specified workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCaches._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SlicerCaches.Add(System.Object,System.Object,System.Object)">
      <summary>Adds a new <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" /> object to the collection.</summary>
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />.</returns>
      <param name="Source">The data source that the new <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" /> will be based on.</param>
      <param name="SourceField">The name of the field in the data source to filter by.</param>
      <param name="Name">The name Excel uses to reference the slicer cache (the value of the <see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.Name" /> property).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCaches.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCaches.Count">
      <summary>Gets the number of objects in the collection.</summary>
      <returns>The number of objects in the collection.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCaches.Creator">
      <summary>Gets a 32-bit integer that indicates the application in which this object was created.</summary>
      <returns>A 32-bit integer that indicates the application in which this object was created.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SlicerCaches.GetEnumerator">
      <returns>Returns <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCaches.Item(System.Object)">
      <summary>Gets a single <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" /> object from the collection.</summary>
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />.</returns>
      <param name="Index">The name or index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerCaches.Parent">
      <summary>Gets the parent <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object for the collection.</summary>
      <returns>The parent <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object for the collection.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SlicerItem">
      <summary>Represents an item in a slicer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerItem.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerItem.Caption">
      <summary>Gets the label text for the slicer item.</summary>
      <returns>The label text for the slicer item.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerItem.Creator">
      <summary>Gets a 32-bit integer that indicates the application in which this object was created.</summary>
      <returns>A 32-bit integer that indicates the application in which this object was created.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerItem.HasData">
      <summary>Gets whether the slicer item contains data that matches the current manual filter state.</summary>
      <returns>true if the slicer item contains data that matches the current manual filter state; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerItem.Name">
      <summary>Gets the name of the slicer item.</summary>
      <returns>The name of the slicer item.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerItem.Parent">
      <summary>Gets the parent <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" /> object for the slicer item.</summary>
      <returns>The parent <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" /> object for the slicer item.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerItem.Selected">
      <summary>Gets or sets whether the slicer item is selected. Read/write for slicers connected to non-OLAP data sources. Read-only for slicers connected to OLAP data sources.</summary>
      <returns>true if the slicer item is selected; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerItem.SourceName">
      <summary>Gets the source name of the slicer item.</summary>
      <returns>The source name of the slicer item.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerItem.SourceNameStandard">
      <summary>Gets the slicer item's source name in standard English (United States) format settings.</summary>
      <returns>The slicer item's source name in standard English (United States) format settings.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerItem.Value">
      <summary>Gets the value of the slicer item.</summary>
      <returns>The value of the slicer item.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SlicerItems">
      <summary>Represents the collection of <see cref="T:Microsoft.Office.Interop.Excel.SlicerItem" /> objects contained in a <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" /> or <see cref="T:Microsoft.Office.Interop.Excel.SlicerCacheLevel" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerItems._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.SlicerItem" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerItems.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerItems.Count">
      <summary>Gets the number of objects in the collection.</summary>
      <returns>The number of objects in the collection.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerItems.Creator">
      <summary>Gets a 32-bit integer that indicates the application in which this object was created.</summary>
      <returns>A 32-bit integer that indicates the application in which this object was created.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SlicerItems.GetEnumerator">
      <returns>Returns <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerItems.Item(System.Object)">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.SlicerItem" /> object from a collection.</summary>
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.SlicerItem" />.</returns>
      <param name="Index">The name or index number of the <see cref="T:Microsoft.Office.Interop.Excel.SlicerItem" /> object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerItems.Parent">
      <summary>Gets the parent <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" /> object for the specified object.</summary>
      <returns>The parent <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" /> object for the specified object.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SlicerPivotTables">
      <summary>Represents information about the collection of PivotTables associated with the specified <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerPivotTables._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SlicerPivotTables.AddPivotTable(Microsoft.Office.Interop.Excel.PivotTable)">
      <summary>Adds a reference to a PivotTable to the <see cref="T:Microsoft.Office.Interop.Excel.SlicerPivotTables" /> collection.</summary>
      <param name="PivotTable">A <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object that represents the PivotTable to add.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerPivotTables.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerPivotTables.Count">
      <summary>Gets the number of objects in the collection.</summary>
      <returns>The number of objects in the collection.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerPivotTables.Creator">
      <summary>Gets a 32-bit integer that indicates the application in which this object was created.</summary>
      <returns>A 32-bit integer that indicates the application in which this object was created.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SlicerPivotTables.GetEnumerator">
      <returns>Returns <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerPivotTables.Item(System.Object)">
      <summary>Gets a single <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object from the collection.</summary>
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />.</returns>
      <param name="Index">The name or index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SlicerPivotTables.Parent">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" /> object that is the parent of the specified <see cref="T:Microsoft.Office.Interop.Excel.SlicerPivotTables" /> collection.</summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" /> object that is the parent of the specified <see cref="T:Microsoft.Office.Interop.Excel.SlicerPivotTables" /> collection.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SlicerPivotTables.RemovePivotTable(System.Object)">
      <summary>Removes a reference to a PivotTable from the <see cref="T:Microsoft.Office.Interop.Excel.SlicerPivotTables" /> collection.</summary>
      <param name="PivotTable">A <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object that represents the PivotTable to remove, or the name or index of the PivotTable in the collection.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Slicers">
      <summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.Slicer" /> objects.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Slicers._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.Slicer" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Slicers.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Creates a new slicer and returns a <see cref="T:Microsoft.Office.Interop.Excel.Slicer" /> object.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Slicer" /> object.</returns>
      <param name="SlicerDestination">A string that specifies the name of the sheet, or a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the sheet, where the resulting slicer will be placed. The destination sheet must be in the workbook that contains the <see cref="T:Microsoft.Office.Interop.Excel.Slicers" /> object specified by expression.</param>
      <param name="Level">For OLAP data sources, the ordinal or the Multidimensional Expression (MDX) name of the level on which the slicer creation is based. Not supported for non-OLAP data sources.</param>
      <param name="Name">The name of the slicer. Excel automatically generates a name if one is not specified. The name must be unique across all slicers within a workbook.</param>
      <param name="Caption">The caption of the slicer.</param>
      <param name="Top">The initial vertical position of the slicer, in points, relative to the upper-left corner of cell A1 on a worksheet.</param>
      <param name="Left">The initial horizontal position of the slicer, in points, relative to the upper-left corner of cell A1 on a worksheet.</param>
      <param name="Width">The initial width, in points, of the slicer control.</param>
      <param name="Height">The initial height, in points, of the slicer control.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Slicers.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Slicers.Count">
      <summary>Gets the number of objects in the collection.</summary>
      <returns>The number of objects in the collection.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Slicers.Creator">
      <summary>Gets a 32-bit integer that indicates the application in which this object was created.</summary>
      <returns>A 32-bit integer that indicates the application in which this object was created.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Slicers.GetEnumerator">
      <returns>Returns <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Slicers.Item(System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Slicer" /> object from the collection.</summary>
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.Slicer" />.</returns>
      <param name="Index">The name or index number of the <see cref="T:Microsoft.Office.Interop.Excel.Slicer" /> object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Slicers.Parent">
      <summary>Gets the parent <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" /> object for the specified <see cref="T:Microsoft.Office.Interop.Excel.Slicers" /> collection.</summary>
      <returns>The parent <see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" /> object for the specified <see cref="T:Microsoft.Office.Interop.Excel.Slicers" /> collection.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SmartTag">
      <summary>Represents an identifier that is assigned to a cell.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTag._Default">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTag.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTag.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SmartTag.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTag.DownloadURL">
      <summary>Returns a String representing the Uniform Resource Locator (URL) for a smart tag.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTag.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTag.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTag.Properties">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.CustomProperties" /> object representing the properties for a smart tag.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTag.Range">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range the specified smart tag applies to.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTag.SmartTagActions">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTagActions" /> object that sets the type of action for a selected smart tag.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTag.XML">
      <summary>Returns a String representing a sample of the XML that would be passed to the action handler.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SmartTagAction">
      <summary>Represents the actions that can be performed with smart tags.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagAction._Default">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagAction.ActiveXControl">
      <summary>Returns an Object that represents an ActiveX control displayed in the Document Actions task pane.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagAction.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagAction.CheckboxState">
      <summary>Returns or sets a Boolean value that indicates whether a check box in a smart document is selected.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagAction.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SmartTagAction.Execute">
      <summary>Activates a smart tag action that is associated with the smart tag type on a cell.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagAction.ExpandHelp">
      <summary>Sets or returns a Boolean value that represents whether the specified smart document Help text control is expanded or collapsed in the Document Actions task pane. True indicates that the control is expanded. False indicates that the control is collapsed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagAction.ListSelection">
      <summary>Sets or returns an Integer value that represents the index number of the selected item in a smart document list box control.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagAction.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagAction.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagAction.PresentInPane">
      <summary>Returns a Boolean value that represents whether a smart document control is currently displayed in the Document Actions task pane.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagAction.RadioGroupSelection">
      <summary>Sets or returns an Integer that represents the index number of the selected item in a group of radio button controls in a smart document.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagAction.TextboxText">
      <summary>Sets or returns a String that represents the text in a smart document textbox control.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagAction.Type">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlSmartTagControlType" /> that represents the type of Smart Document control displayed in the Document Actions task pane.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SmartTagActions">
      <summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.SmartTagAction" /> objects that represent the actions that can be performed with smart tags.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagActions._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagActions.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagActions.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagActions.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SmartTagActions.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagActions.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagActions.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SmartTagOptions">
      <summary>Represents the options that can be performed with smart tags.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagOptions.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagOptions.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagOptions.DisplaySmartTags">
      <summary>Returns or sets an <see cref="T:Microsoft.Office.Interop.Excel.XlSmartTagDisplayMode" /> constant indicating the display features for smart tags.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagOptions.EmbedSmartTags">
      <summary>True to embed smart tags on the specified workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagOptions.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SmartTagRecognizer">
      <summary>Represents recognition engines which label data with types of information as you work in Microsoft Excel.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagRecognizer._Default">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagRecognizer.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagRecognizer.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagRecognizer.Enabled">
      <summary>True if the object is enabled.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagRecognizer.FullName">
      <summary>Returns the name of the object, including its path on disk, as a string.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagRecognizer.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagRecognizer.progID">
      <summary>Returns the programmatic identifiers for the object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SmartTagRecognizers">
      <summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.SmartTagRecognizer" /> objects that represent recognition engines that label data with types of information as you work in Microsoft Excel.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagRecognizers._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagRecognizers.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagRecognizers.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagRecognizers.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SmartTagRecognizers.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagRecognizers.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagRecognizers.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTagRecognizers.Recognize">
      <summary>Returns True when data can be labeled as a smart tag.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SmartTags">
      <summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.SmartTag" /> objects that represent the identifiers assigned to each cell.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTags._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SmartTags.Add(System.String)">
      <summary>Adds a smart tag. Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTag" /> object.</summary>
      <param name="SmartTagType">Required String. The type of smart tag.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTags.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTags.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTags.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SmartTags.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.SmartTags.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Sort">
      <summary>Represents a sort of a range of data.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Sort.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the creator of the specified object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel._Application" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Sort.Apply">
      <summary>Sorts the range based on the currently applied sort states.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Sort.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Sort.Header">
      <summary>Specifies whether the first row contains header information. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Sort.MatchCase">
      <summary>Set to True to perform a case-sensitive sort or set to False to perform non-case sensitive sort. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Sort.Orientation">
      <summary>Specifies the orientation for the sort. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Sort.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Sort.Rng">
      <summary>Return the range of values on which the sort is performed. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Range" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Sort.SetRange(Microsoft.Office.Interop.Excel.Range)">
      <summary>Sets the starting and ending character positions for the <see cref="T:Microsoft.Office.Interop.Excel.Sort" /> object.</summary>
      <param name="Rng">Specifies the range for the <see cref="T:Microsoft.Office.Interop.Excel.Sort" /> collection.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Sort.SortFields">
      <summary>Stores the sort state for workbooks, lists, and autofilters.  Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.SortFields" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Sort.SortMethod">
      <summary>Specifies the sort method for Chinese languages. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" />
      </returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SortField">
      <summary>The <see cref="T:Microsoft.Office.Interop.Excel.SortField" /> object  contains all the sort information for the <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />, <see cref="T:Microsoft.Office.Interop.Excel.ListObject" />, and <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> objects.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SortField.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the creator of the specified object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel._Application" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SortField.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SortField.CustomOrder">
      <summary>Specifies a custom order to sort the fields. Read/write.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SortField.DataOption">
      <summary>Specifies how to sort text in the range specified in <see cref="T:Microsoft.Office.Interop.Excel.SortField" /> object. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SortField.Delete">
      <summary>Removes the specified <see cref="T:Microsoft.Office.Interop.Excel.SortField" /> object from the <see cref="T:Microsoft.Office.Interop.Excel.SortFields" /> collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SortField.Key">
      <summary>Specifies the range that is currently being sorted on. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Range" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SortField.ModifyKey(Microsoft.Office.Interop.Excel.Range)">
      <summary>Modify the key value by which values are sorted in the field.</summary>
      <param name="Key">Specifies the key to be modified.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SortField.Order">
      <summary>Determines the sort order for the values specified in the key. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SortField.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SortField.Priority">
      <summary>Specifies the priority for the sort field. Read/write.</summary>
      <returns>Integer</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SortField.SetIcon(Microsoft.Office.Interop.Excel.Icon)">
      <summary>Sets an icon for a <see cref="T:Microsoft.Office.Interop.Excel.SortField" /> object.</summary>
      <param name="Icon">The icon to be set.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SortField.SortOn">
      <summary>Returns or sets what attribute of the cell to sort on . Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlSortOn" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SortField.SortOnValue">
      <summary>Retun the value on which the sort is performed for the specified <see cref="T:Microsoft.Office.Interop.Excel.SortField" /> object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SortFields">
      <summary>The <see cref="T:Microsoft.Office.Interop.Excel.SortFields" /> collection is a collection of <see cref="T:Microsoft.Office.Interop.Excel.SortField" /> objects. It allows developers to store a sort state on workbooks, lists, and autofilters.  </summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SortFields._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.SortFields.Add(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object)">
      <summary>Creates a new sort field and returns a <see cref="T:Microsoft.Office.Interop.Excel.SortField" /> object.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.SortField" />
      </returns>
      <param name="Key">Specifies a key value for the sort.</param>
      <param name="SortOn">The field to sort on.</param>
      <param name="Order">Specifies the sort order.</param>
      <param name="CustomOrder">Specifies if a custom sort order should be used.</param>
      <param name="DataOption">Specifies the data option.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SortFields.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the creator of the specified object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel._Application" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SortFields.Clear">
      <summary>Clears all the <see cref="T:Microsoft.Office.Interop.Excel.SortField" /> objects.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SortFields.Count">
      <summary>Returns the number of objects in the collection. Read-only.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SortFields.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SortFields.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.SortFields.Item(System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.SortField" /> object that represents a collection of items that can be sorted in a workbook. Read-only.</summary>
      <param name="Index">Index value of the <see cref="T:Microsoft.Office.Interop.Excel.SortField" />.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SortFields.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SoundNote">
      <summary>This object should not be used. Sound notes have been removed from Microsoft Excel.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SoundNote.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SoundNote.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SoundNote.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SoundNote.Import(System.String)">
      <summary>This method should not be used. Sound notes have been removed from Microsoft Excel.</summary>
      <param name="Filename">This method has been deprecated.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SoundNote.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SoundNote.Play">
      <summary>This method should not be used. Sound notes have been removed from Microsoft Excel.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SoundNote.Record">
      <summary>This method should not be used. Sound notes have been removed from Microsoft Excel.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SparkAxes">
      <summary>Represents the settings for the horizontal and vertical axes of a group of sparklines.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkAxes.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkAxes.Creator">
      <summary>Gets a 32-bit integer that indicates the application in which this object was created.</summary>
      <returns>A 32-bit integer that indicates the application in which this object was created.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkAxes.Horizontal">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.SparkHorizontalAxis" /> object for the specified <see cref="T:Microsoft.Office.Interop.Excel.SparkAxes" /> object.</summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.SparkHorizontalAxis" /> object for the specified <see cref="T:Microsoft.Office.Interop.Excel.SparkAxes" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkAxes.Parent">
      <summary>Gets the parent <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroup" /> object for the specified <see cref="T:Microsoft.Office.Interop.Excel.SparkAxes" /> object.</summary>
      <returns>The parent <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroup" /> object for the specified <see cref="T:Microsoft.Office.Interop.Excel.SparkAxes" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkAxes.Vertical">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.SparkVerticalAxis" /> object for the specified <see cref="T:Microsoft.Office.Interop.Excel.SparkAxes" /> object.</summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.SparkVerticalAxis" /> object for the specified <see cref="T:Microsoft.Office.Interop.Excel.SparkAxes" /> object.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SparkColor">
      <summary>Represents the color of the markers for points in a sparkline.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkColor.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkColor.Color">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.FormatColor" /> object that you can use to set the color of the markers for points  in a sparkline.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.FormatColor" /> object that you can use to set the color of the markers for points  in a sparkline.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkColor.Creator">
      <summary>Gets a 32-bit integer that indicates the application in which this object was created.</summary>
      <returns>A 32-bit integer that indicates the application in which this object was created.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkColor.Parent">
      <summary>Gets the parent <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroup" /> object for the specified object.</summary>
      <returns>The parent <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroup" /> object for the specified object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkColor.Visible">
      <summary>Gets or sets whether the point is visible.</summary>
      <returns>true if the point is visible; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SparkHorizontalAxis">
      <summary>Represents the settings for the horizontal axes of a group of sparklines.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkHorizontalAxis.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkHorizontalAxis.Axis">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.SparkColor" /> object that specifies the color of the horizontal axis of the sparkline.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.SparkColor" /> object that specifies the color of the horizontal axis of the sparkline.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkHorizontalAxis.Creator">
      <summary>Gets a 32-bit integer that indicates the application in which this object was created.</summary>
      <returns>A 32-bit integer that indicates the application in which this object was created.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkHorizontalAxis.IsDateAxis">
      <summary>Gets whether the horizontal axis of the sparkline is based on date values.</summary>
      <returns>true if the horizontal axis of the sparkline is based on date values; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkHorizontalAxis.Parent">
      <summary>Gets the parent <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroup" /> object for the specified object.</summary>
      <returns>The parent <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroup" /> object for the specified object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkHorizontalAxis.RightToLeftPlotOrder">
      <summary>Gets or sets whether the points on the horizontal axis are plotted in right-to-left order.</summary>
      <returns>true if the points on the horizontal axis are plotted in right-to-left order; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Sparkline">
      <summary>Represents a single sparkline.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Sparkline.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Sparkline.Creator">
      <summary>Gets a 32-bit integer that indicates the application in which this object was created.</summary>
      <returns>A 32-bit integer that indicates the application in which this object was created.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Sparkline.Location">
      <summary>Gets or sets the location of a single sparkline.</summary>
      <returns>The location of a single sparkline.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Sparkline.ModifyLocation(Microsoft.Office.Interop.Excel.Range)">
      <summary>Modifies the location of a single sparkline.</summary>
      <param name="Range">The cell that contains the sparkline.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Sparkline.ModifySourceData(System.String)">
      <summary>Modifies the source data for a single sparkline.</summary>
      <param name="Formula">The range the contains the source data.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Sparkline.Parent">
      <summary>Gets the parent <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroup" /> object for the specified object.</summary>
      <returns>The parent <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroup" /> object for the specified object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Sparkline.SourceData">
      <summary>Gets or sets the range that contains the source data for a single sparkline.</summary>
      <returns>The range that contains the source data for a single sparkline.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SparklineGroup">
      <summary>Represents a group of sparklines.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparklineGroup.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparklineGroup.Axes">
      <summary>Gets the associated <see cref="T:Microsoft.Office.Interop.Excel.SparkAxes" /> object.</summary>
      <returns>The associated <see cref="T:Microsoft.Office.Interop.Excel.SparkAxes" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparklineGroup.Count">
      <summary>Gets the number of sparklines in the sparkline group.</summary>
      <returns>The number of sparklines in the sparkline group.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparklineGroup.Creator">
      <summary>Gets a 32-bit integer that indicates the application in which this object was created. </summary>
      <returns>A 32-bit integer that indicates the application in which this object was created.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparklineGroup.DateRange">
      <summary>Gets or sets the date range for the sparkline group.</summary>
      <returns>The date range for the sparkline group.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SparklineGroup.Delete">
      <summary>Deletes the sparkline group.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparklineGroup.DisplayBlanksAs">
      <summary>Gets or sets the way that blank cells are plotted on a chart.</summary>
      <returns>Specifies the way that blank cells are plotted on a chart.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparklineGroup.DisplayHidden">
      <summary>Specifies whether hidden cells are plotted in the sparkline group.</summary>
      <returns>true if hidden cells are plotted in the sparkline group; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SparklineGroup.GetEnumerator">
      <returns>Returns <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparklineGroup.Item(System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sparkline" /> object.</summary>
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.Sparkline" />.</returns>
      <param name="Index">Index value of the sparkline.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparklineGroup.LineWeight">
      <summary>Gets or sets the thickness of the sparklines in the sparkline group.</summary>
      <returns>The thickness of the sparklines in the sparkline group.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparklineGroup.Location">
      <summary>Gets or sets the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the location of the sparkline group.</summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the location of the sparkline group.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SparklineGroup.Modify(Microsoft.Office.Interop.Excel.Range,System.String)">
      <summary>Sets the location and the source data for the sparkline group.</summary>
      <param name="Location">The <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the location of the sparkline group.</param>
      <param name="SourceData">The range that represents the source data for the sparkline group.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SparklineGroup.ModifyDateRange(System.String)">
      <summary>Sets the date range for the sparkline group.</summary>
      <param name="DateRange">The date range for the sparkline group.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SparklineGroup.ModifyLocation(Microsoft.Office.Interop.Excel.Range)">
      <summary>Sets the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object to modify the location of the sparkline group.</summary>
      <param name="Location">The <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the location of the sparkline group.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SparklineGroup.ModifySourceData(System.String)">
      <summary>Sets the range that represents the source data for the sparkline group.</summary>
      <param name="SourceData">The range that represents the source data.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparklineGroup.Parent">
      <summary>Gets the parent object for the specified object.</summary>
      <returns>The parent object for the specified object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparklineGroup.PlotBy">
      <summary>Gets or sets how to plot the sparkline when the data on which it is based is in a square-shaped range.</summary>
      <returns>Specifies how to plot the sparkline when the data on which it is based is in a square-shaped range.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparklineGroup.Points">
      <summary>Gets the position of the specified node as a coordinate pair. Each coordinate is expressed in points.</summary>
      <returns>The position of the specified node as a coordinate pair.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparklineGroup.SeriesColor">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.FormatColor" /> object that represents the main series color for the sparkline group.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.FormatColor" /> object that represents the main series color for the sparkline group.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparklineGroup.SourceData">
      <summary>Gets or sets the range that contains the source data for the sparkline group.</summary>
      <returns>The range that contains the source data for the sparkline group.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparklineGroup.Type">
      <summary>Gets or sets the type of sparkline for the group.</summary>
      <returns>The type of sparkline for the group.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SparklineGroups">
      <summary>Represents a collection of sparkline groups.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparklineGroups._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroup" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SparklineGroups.Add(Microsoft.Office.Interop.Excel.XlSparkType,System.String)">
      <summary>Creates a new sparkline group and returns a <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroup" /> object.</summary>
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroup" />.</returns>
      <param name="Type">The type of sparkline.</param>
      <param name="SourceData">Represents the range to use to create the sparkline.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparklineGroups.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SparklineGroups.Clear">
      <summary>Clears the selected sparklines.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SparklineGroups.ClearGroups">
      <summary>Clears the selected sparkline groups.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparklineGroups.Count">
      <summary>Gets the count of sparkline groups in the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</summary>
      <returns>The count of sparkline groups in the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparklineGroups.Creator">
      <summary>Gets a 32-bit integer that indicates the application in which this object was created.</summary>
      <returns>A 32-bit integer that indicates the application in which this object was created.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SparklineGroups.GetEnumerator">
      <returns>Returns <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SparklineGroups.Group(Microsoft.Office.Interop.Excel.Range)">
      <summary>Groups the selected sparklines.</summary>
      <param name="Location">The location of the first cell in the group.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparklineGroups.Item(System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroup" /> object from a collection.</summary>
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroup" />.</returns>
      <param name="Index">Specifies the position of an element in the collection.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparklineGroups.Parent">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object for the specified object.</summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object for the specified object.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.SparklineGroups.Ungroup">
      <summary>Ungroups the sparklines in the selected sparkline group.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SparkPoints">
      <summary>Represents the settings of the markers for points of data on a sparkline.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkPoints.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkPoints.Creator">
      <summary>Gets a 32-bit integer that indicates the application in which this object was created.</summary>
      <returns>A 32-bit integer that indicates the application in which this object was created.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkPoints.Firstpoint">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.SparkColor" /> object that represents the color and visibility of the marker for the first point of data on a sparkline.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.SparkColor" /> object that represents the color and visibility of the marker for the first point of data on a sparkline.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkPoints.Highpoint">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.SparkColor" /> object that represents the color and visibility of the marker for the highest point of data on a sparkline.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.SparkColor" /> object that represents the color and visibility of the marker for the highest point of data on a sparkline.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkPoints.Lastpoint">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.SparkColor" /> object that represents the color and visibility of the marker for the last point of data on a sparkline.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.SparkColor" /> object that represents the color and visibility of the marker for the last point of data on a sparkline.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkPoints.Lowpoint">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.SparkColor" /> object that represents the color and visibility of the marker for the lowest point of data on a sparkline.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.SparkColor" /> object that represents the color and visibility of the marker for the lowest point of data on a sparkline.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkPoints.Markers">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.SparkColor" /> object that represents the color and visibility of markers for positive points of data on a sparkline.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.SparkColor" /> object that represents the color and visibility of markers for positive points of data on a sparkline.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkPoints.Negative">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.SparkColor" /> object that represents  the color and visibility of markers for negative points of data on a sparkline.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.SparkColor" /> object that represents  the color and visibility of markers for negative points of data on a sparkline.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkPoints.Parent">
      <summary>Gets the parent <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroup" /> object for the specified object.</summary>
      <returns>The parent <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroup" /> object for the specified object.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SparkVerticalAxis">
      <summary>Represents the settings for the vertical axes of a group of sparklines.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkVerticalAxis.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkVerticalAxis.Creator">
      <summary>Gets a 32-bit integer that indicates the application in which this object was created.</summary>
      <returns>A 32-bit integer that indicates the application in which this object was created.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkVerticalAxis.CustomMaxScaleValue">
      <summary>Gets or sets the custom maximum value for the vertical axis of a sparkline.</summary>
      <returns>The custom maximum value for the vertical axis of a sparkline.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkVerticalAxis.CustomMinScaleValue">
      <summary>Gets or sets the custom minimum value for the vertical axis of a sparkline.</summary>
      <returns>The custom minimum value for the vertical axis of a sparkline.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkVerticalAxis.MaxScaleType">
      <summary>Gets or sets how the maximum value of the vertical axis of the sparkline is scaled relative to other sparklines in the group.</summary>
      <returns>Specifies how the maximum value of the vertical axis of the sparkline is scaled relative to other sparklines in the group.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkVerticalAxis.MinScaleType">
      <summary>Gets or sets how the minimum value of the vertical axis of the sparkline is scaled relative to other sparklines in the group.</summary>
      <returns>Specifies how the minimum value of the vertical axis of the sparkline is scaled relative to other sparklines in the group.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SparkVerticalAxis.Parent">
      <summary>Gets the parent <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroup" /> object for the specified object.</summary>
      <returns>The parent <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroup" /> object for the specified object.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Speech">
      <summary>Contains methods and properties that pertain to speech.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Speech.Direction">
      <summary>Returns or sets the order in which the cells will be spoken.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Speech.Speak(System.String,System.Object,System.Object,System.Object)">
      <summary>Microsoft Excel plays back the specified text string.</summary>
      <param name="Text">Required String. The text to be spoken.</param>
      <param name="SpeakAsync">Optional Object. True will cause the <paramref name="Text" /> to be spoken asynchronously (the method will not wait for the <paramref name="Text" /> to be spoken). False will cause the <paramref name="Text" /> to be spoken synchronously (the method waits for the <paramref name="Text" /> to be spoken before continuing). The default is False.</param>
      <param name="SpeakXML">Optional Boolean. True will cause the <paramref name="Text" /> to be interpreted as XML. False will cause the <paramref name="Text" /> not to be interpreted as XML, so any XML tags will be read and not interpreted. The default is False.</param>
      <param name="Purge">Optional Object. True will cause current speech to be terminated and any buffered text to be purged before <paramref name="Text" /> is spoken. False will not cause the current speech to be terminated and will not purge the buffered text before <paramref name="Text" /> is spoken. The default is False.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Speech.SpeakCellOnEnter">
      <summary>Microsoft Excel supports a mode where the active cell will be spoken when the ENTER key is pressed or when the active cell is finished being edited. Setting the SpeakCellOnEnter property to True will turn this mode on. False turns this mode off.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.SpellingOptions">
      <summary>Represents the various spell-checking options for a worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SpellingOptions.ArabicModes">
      <summary>Returns or sets the mode for the Arabic spelling checker.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SpellingOptions.ArabicStrictAlefHamza">
      <summary>Gets or sets whether the spelling checker uses rules regarding Arabic words beginning with an alef hamza.</summary>
      <returns>true if the spelling checker uses rules regarding Arabic words beginning with an alef hamza; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SpellingOptions.ArabicStrictFinalYaa">
      <summary>Gets or sets whether the spelling checker uses rules regarding Arabic words ending with the letter yaa.</summary>
      <returns>true if the spelling checker uses rules regarding Arabic words ending with the letter yaa; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SpellingOptions.ArabicStrictTaaMarboota">
      <summary>Gets or sets whether the spelling checker uses rules to flag Arabic words ending with haa instead of taa marboota.</summary>
      <returns>true if the spelling checker uses rules to flag Arabic words ending with haa instead of taa marboota; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SpellingOptions.BrazilReform">
      <summary>Gets or sets the mode for checking the spelling of Brazilian Portuguese.</summary>
      <returns>The mode for checking the spelling of Brazilian Portuguese.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SpellingOptions.DictLang">
      <summary>Selects the dictionary language used when Microsoft Excel performs spelling checks.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SpellingOptions.GermanPostReform">
      <summary>True to check the spelling of words using the German post-reform rules. False cancels this feature.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SpellingOptions.HebrewModes">
      <summary>Returns or sets the mode for the Hebrew spelling checker.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SpellingOptions.IgnoreCaps">
      <summary>False instructs Microsoft Excel to check for uppercase words; True instructs Excel to ignore words in uppercase when using the spelling checker.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SpellingOptions.IgnoreFileNames">
      <summary>False instructs Microsoft Excel to check for Internet and file addresses; True instructs Excel to ignore Internet and file addresses when using the spell checker.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SpellingOptions.IgnoreMixedDigits">
      <summary>False instructs Microsoft Excel to check for mixed digits; True instructs Excel to ignore mixed digits when checking spelling.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SpellingOptions.KoreanCombineAux">
      <summary>When set to True, Microsoft Excel combines Korean auxiliary verbs and adjectives when spelling is checked.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SpellingOptions.KoreanProcessCompound">
      <summary>When set to True, this enables Microsoft Excel to process Korean compound nouns when using the spelling checker.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SpellingOptions.KoreanUseAutoChangeList">
      <summary>When set to True, this enables Microsoft Excel to use the auto-change list for Korean words when using the spelling checker.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SpellingOptions.PortugalReform">
      <summary>Gets or sets the mode for checking the spelling of European Portuguese.</summary>
      <returns>The mode for checking the spelling of European Portuguese.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SpellingOptions.RussianStrictE">
      <summary>Gets or sets whether the spelling checker uses rules regarding Russian words containing the character ë.</summary>
      <returns>true if the spelling checker uses rules regarding Russian words containing the character ë; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SpellingOptions.SpanishModes">
      <summary>Gets or sets the mode for checking the spelling of Spanish.</summary>
      <returns>The mode for checking the spelling of Spanish.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SpellingOptions.SuggestMainOnly">
      <summary>When set to True, instructs Microsoft Excel to suggest words from only the main dictionary when using the spelling checker. False removes the limits of suggesting words from only the main dictionary when using the spelling checker.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.SpellingOptions.UserDict">
      <summary>Instructs Microsoft Excel to create a custom dictionary to which new words can be added when performing spelling checks on a worksheet.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Spinner">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Spinner.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Spinner.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Spinner.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Spinner.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Spinner.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner.Display3DShading"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Spinner.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner.Max"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner.Min"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Spinner.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Spinner.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner.SmallChange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinner.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.Spinners">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinners._Default"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Spinners._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Spinners._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Spinners._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Spinners._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Spinners.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinners.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Spinners.BringToFront"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Spinners.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Spinners.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinners.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinners.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Spinners.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Spinners.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinners.Display3DShading"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Spinners.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinners.Enabled"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Spinners.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Spinners.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinners.Height"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Spinners.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinners.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinners.LinkedCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinners.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinners.Max"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinners.Min"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinners.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinners.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinners.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinners.PrintObject"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Spinners.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Spinners.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinners.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinners.SmallChange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinners.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinners.Value"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinners.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinners.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Spinners.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.Style">
      <summary>Represents a style description for a range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style._Default">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.AddIndent">
      <summary>True if text is automatically indented when the text alignment in a cell is set to equal distribution either horizontally or vertically.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.Borders">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> collection that represents the borders of a style.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.BuiltIn">
      <summary>True if the style is a built-in style.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Style.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.Font">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.FormulaHidden">
      <summary>True if the formula will be hidden when the worksheet is protected.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.HorizontalAlignment">
      <summary>Returns or sets the horizontal alignment for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.IncludeAlignment">
      <summary>True if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Style.AddIndent" />, <see cref="P:Microsoft.Office.Interop.Excel.Style.HorizontalAlignment" />, <see cref="P:Microsoft.Office.Interop.Excel.Style.VerticalAlignment" />, <see cref="P:Microsoft.Office.Interop.Excel.Style.WrapText" />, and <see cref="P:Microsoft.Office.Interop.Excel.Style.Orientation" /> properties.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.IncludeBorder">
      <summary>True if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Border.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Border.ColorIndex" />, <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" />, and <see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" /> border properties.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.IncludeFont">
      <summary>True if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Font.Background" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Bold" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.ColorIndex" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.FontStyle" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Italic" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Name" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.OutlineFont" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Shadow" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Size" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Strikethrough" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Subscript" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Superscript" />, and <see cref="P:Microsoft.Office.Interop.Excel.Font.Underline" /> font properties.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.IncludeNumber">
      <summary>True if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Style.NumberFormat" /> property.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.IncludePatterns">
      <summary>True if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Interior.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Interior.ColorIndex" />, <see cref="P:Microsoft.Office.Interop.Excel.Interior.InvertIfNegative" />, <see cref="P:Microsoft.Office.Interop.Excel.Interior.Pattern" />, <see cref="P:Microsoft.Office.Interop.Excel.Interior.PatternColor" />, and <see cref="P:Microsoft.Office.Interop.Excel.Interior.PatternColorIndex" /> interior properties.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.IncludeProtection">
      <summary>True if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Style.FormulaHidden" /> and <see cref="P:Microsoft.Office.Interop.Excel.Style.Locked" /> properties.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.IndentLevel">
      <summary>Returns or sets the indent level for the style.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.Interior">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.Locked">
      <summary>True if the object is locked; False if the object can be modified when the sheet is protected.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.MergeCells">
      <summary>True if the style contains merged cells.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.NameLocal">
      <summary>Returns the name of the object in the language of the user.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.NumberFormat">
      <summary>Returns or sets the format code for the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.NumberFormatLocal">
      <summary>Returns or sets the format code for the object as a string in the language of the user.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.Orientation">
      <summary>The text orientation. Can be an integer value from –90 to 90 degrees or one of the <see cref="T:Microsoft.Office.Interop.Excel.XlOrientation" /> constants.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.ReadingOrder">
      <summary>Returns or sets the reading order for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.ShrinkToFit">
      <summary>True if text automatically shrinks to fit in the available column width.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.Value">
      <summary>The name of the specified style.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.VerticalAlignment">
      <summary>Returns or sets the vertical alignment of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Style.WrapText">
      <summary>True if Microsoft Excel wraps the text in the object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Styles">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Style" /> objects in the specified or active workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Styles._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Styles.Add(System.String,System.Object)">
      <summary>Creates a new style and adds it to the list of styles that are available for the current workbook.</summary>
      <param name="Name">Required String. The new style name.</param>
      <param name="BasedOn">Optional Object. A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that refers to a cell that's used as the basis for the new style. If this argument is omitted, the newly created style is based on the Normal style.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Styles.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Styles.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Styles.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Styles.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Styles.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Styles.Merge(System.Object)">
      <summary>Merges the styles from another workbook into the <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> collection.</summary>
      <param name="Workbook">Required Object. A <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object that represents the workbook containing styles to be merged.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Styles.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Tab">
      <summary>Represents a tab in a chart or a worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Tab.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Tab.Color">
      <summary>Returns or sets the primary color of the tab.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Tab.ColorIndex">
      <summary>Returns or sets the color of the specified chart tab.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Tab.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Tab.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Tab.ThemeColor">
      <summary>Returns or sets the theme color in the applied color scheme that is associated with the specified object. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlThemeColor" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Tab.TintAndShade">
      <summary>Returns or sets a Single that lightens or darkens a color.</summary>
      <returns>Single</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.TableStyle">
      <summary>Represents a single style that can be applied to a table.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyle._Default">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyle.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the creator of the specified object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel._Application" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyle.BuiltIn">
      <summary>True if the style is a built-in style. Read-only.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyle.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.TableStyle.Delete">
      <summary>Deletes the <see cref="T:Microsoft.Office.Interop.Excel.TableStyle" /> object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.TableStyle.Duplicate(System.Object)">
      <summary>Duplicates the <see cref="T:Microsoft.Office.Interop.Excel.TableStyle" /> object and returns a reference to the new copy.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.TableStyle" />
      </returns>
      <param name="NewTableStyleName">The name of the new table style.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyle.Name">
      <summary>Returns the name of the object. Read-only.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyle.NameLocal">
      <summary>Returns or sets the name of the object, in the language of the user. Read-only.</summary>
      <returns>String</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyle.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyle.ShowAsAvailablePivotTableStyle">
      <summary>Sets or returns if a  style is shown in the gallery for PivotTable styles or not. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyle.ShowAsAvailableSlicerStyle">
      <summary>Gets or sets whether the specified table style is shown as available in the slicer styles gallery.</summary>
      <returns>true if the specified table style is shown as available in the slicer styles gallery; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyle.ShowAsAvailableTableStyle">
      <summary>Returns or sets a table style shown as available in the table styles gallery. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyle.TableStyleElements">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.TableStyleElements" /> object. Read-only.</summary>
      <returns>Returns <see cref="T:Microsoft.Office.Interop.Excel.TableStyleElements" />.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.TableStyleElement">
      <summary>Represents a single table style element.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyleElement.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the creator of the specified object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel._Application" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyleElement.Borders">
      <summary>Returns the borders of a table style element. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Borders" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.TableStyleElement.Clear">
      <summary>Clears the formatting for this element.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyleElement.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyleElement.Font">
      <summary>Returns the font of the specified object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Font" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyleElement.HasFormat">
      <summary>Returns whether a table style element has formatting applied to the specified element. Read-only.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyleElement.Interior">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Interior" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyleElement.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyleElement.StripeSize">
      <summary>Returns or sets the size of banding. Read/write.</summary>
      <returns>Integer</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.TableStyleElements">
      <summary>Represents table style elements.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyleElements._Default(Microsoft.Office.Interop.Excel.XlTableStyleElementType)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyleElements.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the creator of the specified object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel._Application" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyleElements.Count">
      <summary>Returns the number of objects in the collection. Read-only.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyleElements.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.TableStyleElements.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TableStyleElements.Item(Microsoft.Office.Interop.Excel.XlTableStyleElementType)">
      <summary>Returns a single object from a collection.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.TableStyleElement" />
      </returns>
      <param name="Index">A table style element.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyleElements.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.TableStyles">
      <summary>Represents styles that can be applied to a table.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyles._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.TableStyles.Add(System.String)">
      <summary>Creates a new <see cref="T:Microsoft.Office.Interop.Excel.TableStyle" /> object and adds it to the collection.  </summary>
      <returns>TableStyle</returns>
      <param name="TableStyleName">The name of the table style.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyles.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the creator of the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyles.Count">
      <summary>Returns the number of objects in the collection. Read-only.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyles.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.TableStyles.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TableStyles.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.TableStyle" />
      </returns>
      <param name="Index">The name or index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TableStyles.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.TextBox">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.Border"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.BottomRightCell"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBox.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBox.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBox.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBox.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBox.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBox.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBox.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.Formula"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.Index"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.Interior"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.ReadingOrder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.RoundedCorners"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBox.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBox.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.TopLeftCell"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBox.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.TextBoxes">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBoxes._Dummy12"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBoxes._Dummy15"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBoxes._Dummy22"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBoxes._Dummy3"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBoxes.Add(System.Double,System.Double,System.Double,System.Double)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.AddIndent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.AutoScaleFont"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.AutoSize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.Border"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBoxes.BringToFront"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.Caption"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.Characters(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBoxes.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBoxes.Copy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBoxes.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBoxes.Cut"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBoxes.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBoxes.Duplicate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.Font"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.Formula"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBoxes.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBoxes.Group"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.HorizontalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.Interior"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBoxes.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.Locked"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.LockedText"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.Orientation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.Placement"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.PrintObject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.ReadingOrder"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.RoundedCorners"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBoxes.Select(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.TextBoxes.SendToBack"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.Shadow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.ShapeRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.Text"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.VerticalAlignment"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.Width"></member>
    <member name="P:Microsoft.Office.Interop.Excel.TextBoxes.ZOrder"></member>
    <member name="T:Microsoft.Office.Interop.Excel.TextEffectFormat">
      <summary>Contains properties and methods that apply to WordArt objects.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextEffectFormat.Alignment">
      <summary>Returns or sets the alignment for WordArt.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextEffectFormat.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextEffectFormat.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextEffectFormat.FontBold">
      <summary>True if the font in the specified WordArt is bold.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextEffectFormat.FontItalic">
      <summary>Returns msoTrue if the font in the specified WordArt is italic.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextEffectFormat.FontName">
      <summary>Returns or sets the name of the font in the specified WordArt.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextEffectFormat.FontSize">
      <summary>Returns or sets the font size for the specified WordArt in points.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextEffectFormat.KernedPairs">
      <summary>True if character pairs in the specified WordArt are kerned.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextEffectFormat.NormalizedHeight">
      <summary>True if all characters (both uppercase and lowercase) in the specified WordArt are the same height.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextEffectFormat.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextEffectFormat.PresetShape">
      <summary>Returns or sets the shape of the specified WordArt.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextEffectFormat.PresetTextEffect">
      <summary>Returns or sets the style of the specified WordArt.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextEffectFormat.RotatedChars">
      <summary>True if characters in the specified WordArt are rotated 90 degrees relative to the WordArt's bounding shape. False if characters in the specified WordArt retain their original orientation relative to the bounding shape.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextEffectFormat.Text">
      <summary>Returns or sets the text for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.TextEffectFormat.ToggleVerticalText">
      <summary>Switches the text flow in the specified WordArt from horizontal to vertical, or vice versa.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextEffectFormat.Tracking">
      <summary>Returns or sets the ratio of the horizontal space allotted to each character in the specified WordArt to the width of the character. Can be a value from 0 (zero) through 5.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.TextFrame">
      <summary>Represents the text frame in a Shape object. Contains the text in the text frame as well as the properties and methods that control the alignment and anchoring of the text frame.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame.AutoMargins">
      <summary>True if Microsoft Excel automatically calculates text frame margins.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame.AutoSize">
      <summary>True if the size of the specified object is changed automatically to fit text within its boundaries.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.TextFrame.Characters(System.Object,System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> object that represents a range of characters within a shape’s text frame.</summary>
      <param name="Start">Optional Object. The first character to be returned. If this argument is either set to 1 or omitted, the Characters method returns a range of characters starting with the first character.</param>
      <param name="Length">Optional Object. The number of characters to be returned. If this argument is omitted, the Characters method returns the remainder of the string (everything after the character that was set as the <paramref name="Start" /> argument).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame.HorizontalAlignment">
      <summary>Returns or sets the horizontal alignment for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame.HorizontalOverflow">
      <summary>Gets or sets the horizontal overflow setting for the specified object.</summary>
      <returns>The horizontal overflow setting for the specified object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame.MarginBottom">
      <summary>Returns or sets the distance (in points) between the bottom of the text frame and the bottom of the inscribed rectangle of the shape that contains the text.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame.MarginLeft">
      <summary>Returns or sets the distance (in points) between the left edge of the text frame and the left edge of the inscribed rectangle of the shape that contains the text.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame.MarginRight">
      <summary>Returns or sets the distance (in points) between the right edge of the text frame and the right edge of the inscribed rectangle of the shape that contains the text.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame.MarginTop">
      <summary>Returns or sets the distance (in points) between the top of the text frame and the top of the inscribed rectangle of the shape that contains the text.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame.Orientation">
      <summary>The text frame orientation.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame.ReadingOrder">
      <summary>Returns or sets the reading order for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame.VerticalAlignment">
      <summary>Returns or sets the vertical alignment of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame.VerticalOverflow">
      <summary>Gets or sets the vertical overflow setting for the specified object.</summary>
      <returns>The vertical overflow setting for the specified object.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.TextFrame2">
      <summary>Represents the text frame in a <see cref="T:Microsoft.Office.Interop.Excel.Shape" />,  <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" />, or    <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object. </summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame2.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel._Application" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame2.AutoSize">
      <summary>The size of the specified object that changes automatically to fit text within its boundaries. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.MsoAutoSize" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame2.Column">
      <summary>Returns the <see cref="T:Microsoft.Office.Core.TextColumn2" /> object that represents the columns within the text frame. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.TextColumn2" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame2.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. Read-only.</summary>
      <returns>Integer</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.TextFrame2.DeleteText">
      <summary>Deletes the text from a text frame and all the associated text properties.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame2.HasText">
      <summary>Returns whether the specified text frame has text. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.MsoTriState" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame2.HorizontalAnchor">
      <summary>Returns or sets the horizontal anchor type for the specified text. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.MsoHorizontalAnchor" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame2.MarginBottom">
      <summary>Returns or sets the distance (in points) between the bottom of the text frame and the bottom of the inscribed rectangle of the shape that contains the text. Read/write.</summary>
      <returns>Single</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame2.MarginLeft">
      <summary>Returns or sets the distance (in points) between the left edge of the text frame and the left edge of the inscribed rectangle of the shape that contains the text. Read/write.</summary>
      <returns>Single</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame2.MarginRight">
      <summary>Returns or sets the distance (in points) between the right edge of the text frame and the right edge of the inscribed rectangle of the shape that contains the text. Read/write.</summary>
      <returns>Single</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame2.MarginTop">
      <summary>Returns or sets the distance (in points) between the top of the text frame and the top of the inscribed rectangle of the shape that contains the text. Read/write.</summary>
      <returns>Single</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame2.NoTextRotation">
      <summary>Returns or sets a value that specifies if the text on a shape is rotated if the shape itself is being rotated. Read/write</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame2.Orientation">
      <summary>Returns or sets a value that represents the text frame orientation. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.MsoTextOrientation" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame2.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame2.PathFormat">
      <summary>Returns or sets the path type for the specified text frame. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.MsoPathFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame2.Ruler">
      <summary>Returns the ruler for the specified text. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.Ruler2" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame2.TextRange">
      <summary>Returns the <see cref="T:Microsoft.Office.Core.TextRange2" /> object that represents the text in the object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.TextRange2" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame2.ThreeD">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object that contains 3-D–effect formatting properties for the specified text. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame2.VerticalAnchor">
      <summary>Returns or sets the vertical anchor type for the specified text. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.MsoVerticalAnchor" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame2.WarpFormat">
      <summary>Returns or sets the warp type for the specified text frame. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.MsoWarpFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame2.WordArtformat">
      <summary>Returns or sets the Word Art type for the specified text frame. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.MsoPresetTextEffect" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TextFrame2.WordWrap">
      <summary>Returns or sets text break lines within or past the boundaries of the shape. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.MsoTriState" />
      </returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ThreeDFormat">
      <summary>Represents a shape's three-dimensional formatting.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.BevelBottomDepth">
      <summary>Returns or sets the bottom depth when using the bevel effect on a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object. Read/write.</summary>
      <returns>Single</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.BevelBottomInset">
      <summary>Returns or sets a value indicating whether the bottom insert bevel should be raised for  a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object. Read/write.</summary>
      <returns>Single</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.BevelBottomType">
      <summary>Returns or sets the bottom bevel type for a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.MsoBevelType" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.BevelTopDepth">
      <summary>Returns or sets the top depth when using the bevel effect on a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object. Read/write.</summary>
      <returns>Single</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.BevelTopInset">
      <summary>Returns or sets a value indicating whether the top insert bevel should be raised for  a <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.SetThreeDFormat(Microsoft.Office.Core.MsoPresetThreeDFormat)" /> object. Read/write.</summary>
      <returns>Single</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.BevelTopType">
      <summary>Returns or sets the top Bevel type for a ThreeDFormat object. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.MsoBevelType" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.ContourColor">
      <summary>Returns the contour color for a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ColorFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.ContourWidth">
      <summary>Returns or sets the contour width for  a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object. Read/write.</summary>
      <returns>Single</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.Depth">
      <summary>Returns or sets the depth of the shape's extrusion.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.ExtrusionColor">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ColorFormat" /> object that represents the color of the shape's extrusion.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.ExtrusionColorType">
      <summary>Returns or sets a value that indicates whether the extrusion color is based on the extruded shape’s fill (the front face of the extrusion) and automatically changes when the shape’s fill changes, or whether the extrusion color is independent of the shape’s fill.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.FieldOfView">
      <summary>Returns or sets the angle at which a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object can be viewed. Read/write.</summary>
      <returns>Single</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationHorizontal(System.Single)">
      <summary>Changes the rotation of the specified shape horizontally by the specified number of degrees.</summary>
      <param name="Increment">Specifies how much (in degrees) the rotation of the shape is to be changed horizontally. Can be a value from  –90 through 90. A positive value moves the shape left; a negative value moves it to the right.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationVertical(System.Single)">
      <summary>Changes the rotation of the specified shape vertically by the specified number of degrees.</summary>
      <param name="Increment">Specifies how much (in degrees) the rotation of the shape is to be changed horizontally. Can be a value from  –90 through 90. A positive value tilts the shape up; a negative value tilts it down.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationX(System.Single)">
      <summary>Changes the rotation of the specified shape around the x-axis by the specified number of degrees.</summary>
      <param name="Increment">Required Single. Specifies how much (in degrees) the rotation of the shape around the x-axis is to be changed. Can be a value from –90 through 90. A positive value tilts the shape up; a negative value tilts it down.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationY(System.Single)">
      <summary>Changes the rotation of the specified shape around the y-axis by the specified number of degrees.</summary>
      <param name="Increment">Required Single. Specifies how much (in degrees) the rotation of the shape around the y-axis is to be changed. Can be a value from –90 through 90. A positive value tilts the shape to the left; a negative value tilts it to the right.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationZ(System.Single)">
      <summary>Changes the rotation of the specified shape around the z-axis by the specified number of degrees.</summary>
      <param name="Increment">Specifies how much (in degrees) the rotation of the shape around the z-axis is to be changed. Can be a value from – 90 through 90. A positive value tilts the shape to the left; a negative value tilts it to the right.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.LightAngle">
      <summary>Returns or sets the angel of the extrusion lights set on a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object. Read/write.</summary>
      <returns>Single</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.Perspective">
      <summary>Determines whether the extrusion appears in perspective.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.PresetCamera">
      <summary>Returns or sets the extrusion preset camera for a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.MsoPresetCamera" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.PresetExtrusionDirection">
      <summary>Returns the direction that the extrusion's sweep path takes away from the extruded shape (the front face of the extrusion).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.PresetLighting">
      <summary>Returns or sets the extrusion preset lighting for a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.MsoLightRigType" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.PresetLightingDirection">
      <summary>Returns or sets the position of the light source relative to the extrusion.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.MsoLightRigType" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.PresetLightingSoftness">
      <summary>Returns or sets the intensity of the extrusion lighting.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.PresetMaterial">
      <summary>Returns or sets the extrusion surface material.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.PresetThreeDFormat">
      <summary>Returns the preset extrusion format.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.ProjectText">
      <summary>Returns or sets the project text state for the specified <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object. Read/write.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Core.MsoTriState" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ThreeDFormat.ResetRotation">
      <summary>Resets the extrusion rotation around the x-axis and the y-axis to 0 (zero) so that the front of the extrusion faces forward.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.RotationX">
      <summary>Returns or sets the rotation of the extruded shape around the x-axis in degrees.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.RotationY">
      <summary>Returns or sets the rotation of the extruded shape around the y-axis in degrees.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.RotationZ">
      <summary>Returns or sets the rotation of the extruded shape around the z-axis in degrees.  Read/write.</summary>
      <returns>Single</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ThreeDFormat.SetExtrusionDirection(Microsoft.Office.Core.MsoPresetExtrusionDirection)">
      <summary>Sets the direction that the extrusion's sweep path takes away from the extruded shape.</summary>
      <param name="PresetExtrusionDirection">Required <see cref="T:Microsoft.Office.Core.MsoPresetExtrusionDirection" />. Specifies the extrusion direction.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ThreeDFormat.SetPresetCamera(Microsoft.Office.Core.MsoPresetCamera)">
      <summary>Sets the camera for the specified <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object.</summary>
      <param name="PresetCamera">Specifies the preset camera.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ThreeDFormat.SetThreeDFormat(Microsoft.Office.Core.MsoPresetThreeDFormat)">
      <summary>Sets the preset extrusion format. Each preset extrusion format contains a set of preset values for the various properties of the extrusion.</summary>
      <param name="PresetThreeDFormat">Required MsoPresetThreeDFormat. Specifies a preset extrusion format that corresponds to one of the options (numbered from left to right, from top to bottom) displayed when you click the 3-D button on the Drawing toolbar.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.Visible">
      <summary>Determines whether the object is visible.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ThreeDFormat.Z">
      <summary>Returns the Z order of the specified  <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object. Read/write.</summary>
      <returns>Single</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.TickLabels">
      <summary>Represents the tick mark labels associated with tick marks on a chart axis.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TickLabels.Alignment">
      <summary>Returns or sets the alignment for the specified tick label.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TickLabels.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TickLabels.AutoScaleFont">
      <summary>True if the text in the object changes font size when the object size changes. The default value is True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TickLabels.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.TickLabels.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TickLabels.Depth">
      <summary>Returns the number of levels of category tick labels.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TickLabels.Font">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TickLabels.Format">
      <summary>Returns the chart element format. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TickLabels.MultiLevel">
      <summary>Sets whether an axis is multilevel or not.  Read/write. </summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TickLabels.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TickLabels.NumberFormat">
      <summary>Returns or sets the format code for the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TickLabels.NumberFormatLinked">
      <summary>True if the number format is linked to the cells (so that the number format changes in the labels when it changes in the cells).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TickLabels.NumberFormatLocal">
      <summary>Returns or sets the format code for the object as a string in the language of the user.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TickLabels.Offset">
      <summary>Returns or sets the distance between the levels of labels and the distance between the first level and the axis line.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TickLabels.Orientation">
      <summary>The text orientation. Can be an integer value from –90 to 90 degrees or one of the <see cref="T:Microsoft.Office.Interop.Excel.XlTickLabelOrientation" /> constants.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TickLabels.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TickLabels.ReadingOrder">
      <summary>Returns or sets the reading order for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.TickLabels.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Toolbar">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Toolbar.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Toolbar.BuiltIn"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Toolbar.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Toolbar.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Toolbar.Height"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Toolbar.Left"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Toolbar.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Toolbar.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Toolbar.Position"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Toolbar.Protection"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Toolbar.Reset"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Toolbar.ToolbarButtons"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Toolbar.Top"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Toolbar.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Toolbar.Width"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ToolbarButton">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ToolbarButton.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ToolbarButton.BuiltIn"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ToolbarButton.BuiltInFace"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ToolbarButton.Copy(Microsoft.Office.Interop.Excel.Toolbar,System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ToolbarButton.CopyFace"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ToolbarButton.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ToolbarButton.Delete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ToolbarButton.Edit"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ToolbarButton.Enabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ToolbarButton.HelpContextID"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ToolbarButton.HelpFile"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ToolbarButton.ID"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ToolbarButton.IsGap"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ToolbarButton.Move(Microsoft.Office.Interop.Excel.Toolbar,System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ToolbarButton.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ToolbarButton.OnAction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ToolbarButton.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ToolbarButton.PasteFace"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ToolbarButton.Pushed"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ToolbarButton.Reset"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ToolbarButton.StatusBar"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ToolbarButton.Width"></member>
    <member name="T:Microsoft.Office.Interop.Excel.ToolbarButtons">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ToolbarButtons._Default(System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ToolbarButtons.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ToolbarButtons.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ToolbarButtons.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ToolbarButtons.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.ToolbarButtons.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ToolbarButtons.Item(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.ToolbarButtons.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.Toolbars">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Toolbars._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Toolbars.Add(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Toolbars.Application"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Toolbars.Count"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Toolbars.Creator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Toolbars.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Toolbars.Item(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Toolbars.Parent"></member>
    <member name="T:Microsoft.Office.Interop.Excel.Top10">
      <summary>Represents a top ten visual of a conditional formatting rule. Applying a color to a range helps you see the value of a cell relative to other cells.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Top10.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
      <returns>Application</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Top10.AppliesTo">
      <summary>Returns the cell range to which the formatting rule is applied.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Range" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Top10.Borders">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> collection that specifies the formatting of cell borders if the conditional formatting rule evaluates to True. Read-only.</summary>
      <returns>Borders</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Top10.CalcFor">
      <summary>Returns or sets how the conditional format in a PivotTable report should be evaluated.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCalcFor" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Top10.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Top10.Delete">
      <summary>Deletes the specified conditional formatting rule object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Top10.Font">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that specifies the font formatting if the conditional formatting rule evaluates to True. Read-only.</summary>
      <returns>Font</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Top10.Interior">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that specifies a cell's interior attributes for a conditional formatting rule that evaluates to True. Read-only.</summary>
      <returns>Interior</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Top10.ModifyAppliesToRange(Microsoft.Office.Interop.Excel.Range)">
      <summary>Sets the cell range to which this formatting rule applies.</summary>
      <param name="Range">The range to which this formatting rule will be applied.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Top10.NumberFormat">
      <summary>Returns or sets the number format applied to a cell if the conditional formatting rule evaluates to True. Read/write.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Top10.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Top10.Percent">
      <summary>Returns or sets a Boolean value, specifying if the rank is determined by a percentage value.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Top10.Priority">
      <summary>Returns or sets the priority value of the conditional formatting rule. The priority determines the order of evaluation when multiple conditional formatting rules exist in a worksheet.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Top10.PTCondition">
      <summary>Returns a Boolean value indicating if the conditional format is being applied to a PivotTable chart. Read-only.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Top10.Rank">
      <summary>Returns or sets an Integer value, specifying either the number or percentage of the rank value for the conditional format rule.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Top10.ScopeType">
      <summary>Returns or sets the scope of the conditional format when it is applied to a PivotTable chart.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Top10.SetFirstPriority">
      <summary>Sets the priority value for this conditional formatting rule to "1" so that it will be evaluated before all other rules on the worksheet.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Top10.SetLastPriority">
      <summary>Sets the evaluation order for this conditional formatting rule so it is evaluated after all other rules on the worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Top10.StopIfTrue">
      <summary>Returns or sets a Boolean value that determines if additional formatting rules on the cell should be evaluated if the current rule evaluates to True.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Top10.TopBottom">
      <summary>Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlTopBottom" /> enumeration, determining if the ranking is evaluated from the top or bottom.</summary>
      <returns>XlTopBottom</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Top10.Type">
      <summary>Returns the type of conditional format. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" />
      </returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.TreeviewControl">
      <summary>Represents the hierarchical member-selection control of a cube field. You use this object primarily for macro recording; it is not intended for any other use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TreeviewControl.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TreeviewControl.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TreeviewControl.Drilled">
      <summary>Sets the "drilled" (expanded, or visible) status of the cube field members in the hierarchical member-selection control of a cube field. This property is used primarily for macro recording and isn’t intended for any other use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TreeviewControl.Hidden">
      <summary>Returns or sets the hidden status of the cube field members in the hierarchical member selection control of a cube field.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.TreeviewControl.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Trendline">
      <summary>Represents a trendline in a chart. A trendline shows the trend, or direction, of data in a series.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Trendline.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Trendline.Backward">
      <summary>Returns or sets the number of periods (or units on a scatter chart) that the trendline extends backward.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Trendline.Backward2">
      <summary>Returns or sets the number of periods (or units on a scatter chart) that the trendline extends backward. Read/write.</summary>
      <returns>Double</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Trendline.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Trendline.ClearFormats">
      <summary>Clears the formatting of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Trendline.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Trendline.DataLabel">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.DataLabel" /> object that represents the data label associated with the point or trendline.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Trendline.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Trendline.DisplayEquation">
      <summary>True if the equation for the trendline is displayed on the chart (in the same data label as the R-squared value). Setting this property to True automatically turns on data labels.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Trendline.DisplayRSquared">
      <summary>True if the R-squared value of the trendline is displayed on the chart (in the same data label as the equation). Setting this property to True automatically turns on data labels.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Trendline.Format">
      <summary>Returns the format for chart elements. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Trendline.Forward">
      <summary>Returns or sets the number of periods (or units on a scatter chart) that the trendline extends forward.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Trendline.Forward2">
      <summary>Returns or sets the number of periods (or units on a scatter chart) that the trendline extends forward. Read/write.</summary>
      <returns>Double</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Trendline.Index">
      <summary>Returns the index number of the object within the collection of similar objects.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Trendline.Intercept">
      <summary>Returns or sets the point where the trendline crosses the value axis.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Trendline.InterceptIsAuto">
      <summary>True if the point where the trendline crosses the value axis is automatically determined by the regression.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Trendline.Name">
      <summary>Returns or sets the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Trendline.NameIsAuto">
      <summary>True if Microsoft Excel automatically determines the name of the trendline.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Trendline.Order">
      <summary>Returns or sets the trendline order (an integer greater than 1) when the trendline type is xlPolynomial.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Trendline.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Trendline.Period">
      <summary>Returns or sets the period for the moving-average trendline.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Trendline.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Trendline.Type">
      <summary>Returns or sets the trendline type.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Trendlines">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Trendline" /> objects for the specified series. Each Trendline object represents a trendline in a chart. A trendline shows the trend, or direction, of data in a series.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Trendlines._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Trendlines.Add(Microsoft.Office.Interop.Excel.XlTrendlineType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Creates a new trendline. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Trendline" /> object.</summary>
      <param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTrendlineType" />. The trendline type.</param>
      <param name="Order">Optional Object. Required if <paramref name="Type" /> is xlPolynomial. The trendline order. Must be an integer from 2 to 6, inclusive.</param>
      <param name="Period">Optional Object. Required if <paramref name="Type" /> is xlMovingAvg. The trendline period. Must be an integer greater than 1 and less than the number of data points in the series you're adding a trendline to.</param>
      <param name="Forward">Optional Object. The number of periods (or units on a scatter chart) that the trendline extends forward.</param>
      <param name="Backward">Optional Object. The number of periods (or units on a scatter chart) that the trendline extends backward.</param>
      <param name="Intercept">Optional Object. The trendline intercept. If this argument is omitted, the intercept is automatically set by the regression.</param>
      <param name="DisplayEquation">Optional Object. True to display the equation of the trendline on the chart (in the same data label as the R-squared value). The default value is False.</param>
      <param name="DisplayRSquared">Optional Object. True to display the R-squared value of the trendline on the chart (in the same data label as the equation). The default value is False.</param>
      <param name="Name">Optional Object. The name of the trendline as text. If this argument is omitted, Microsoft Excel generates a name.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Trendlines.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Trendlines.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Trendlines.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Trendlines.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Trendlines.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number for the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Trendlines.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.UniqueValues">
      <summary>The UniqueValues object uses the <see cref="P:Microsoft.Office.Interop.Excel.UniqueValues.DupeUnique" /> property to returns or sets an enum that determines whether the rule should look for duplicate or unique values in the range.  </summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UniqueValues.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
      <returns>Application</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UniqueValues.AppliesTo">
      <summary>Returns the cell range to which the formatting rule is applied.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Range" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UniqueValues.Borders">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> collection that specifies the formatting of cell borders if the conditional formatting rule evaluates to True. Read-only.</summary>
      <returns>Borders</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UniqueValues.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.UniqueValues.Delete">
      <summary>Deletes the specified conditional formatting rule object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UniqueValues.DupeUnique">
      <summary>Returns or sets if the conditional format rule is looking for unique or duplicate values.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlDupeUnique" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UniqueValues.Font">
      <summary>Returns the font formatting specified if the conditional formatting rule evaluates to True. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Font" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UniqueValues.Interior">
      <summary>Returns a cell's interior attributes for a conditional formatting rule that evaluates to True. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.Interior" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.UniqueValues.ModifyAppliesToRange(Microsoft.Office.Interop.Excel.Range)">
      <summary>Sets the cell range to which this formatting rule applies.</summary>
      <param name="Range">The range to which this formatting rule will be applied.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UniqueValues.NumberFormat">
      <summary>Returns or sets the number format applied to a cell if the conditional formatting rule evaluates to True. Read/write.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UniqueValues.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UniqueValues.Priority">
      <summary>Returns or sets the priority value of the conditional formatting rule. The priority determines the order of evaluation when multiple conditional formatting rules exist in a worksheet.</summary>
      <returns>Integer</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UniqueValues.PTCondition">
      <summary>Returns a Boolean value indicating if the conditional format is being applied to a PivotTable chart. Read-only.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UniqueValues.ScopeType">
      <summary>Returns or sets the scope of the conditional format when it is applied to a PivotTable chart.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" />
      </returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.UniqueValues.SetFirstPriority">
      <summary>Sets the priority value for this conditional formatting rule to "1" so that it will be evaluated before all other rules on the worksheet.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.UniqueValues.SetLastPriority">
      <summary>Sets the evaluation order for this conditional formatting rule so it is evaluated after all other rules on the worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UniqueValues.StopIfTrue">
      <summary>Returns or sets a Boolean value that determines if additional formatting rules on the cell should be evaluated if the current rule evaluates to True.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UniqueValues.Type">
      <summary>Returns one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" /> enumeration, which specifies the type of conditional format. Read-only.</summary>
      <returns>XlFormatConditionType</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.UpBars">
      <summary>Represents the up bars in a chart group. Up bars connect points on series one with higher values on the last series in the chart group (the lines go up from series one).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UpBars.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UpBars.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UpBars.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.UpBars.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UpBars.Fill">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartFillFormat" /> object for a specified chart that contains fill formatting properties for the chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UpBars.Format">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object. Read-only.</summary>
      <returns>ChartFormat</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UpBars.Interior">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UpBars.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UpBars.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.UpBars.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.UsedObjects">
      <summary>Represents objects that have been allocated in a workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UsedObjects._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UsedObjects.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UsedObjects.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UsedObjects.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.UsedObjects.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.UsedObjects.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UsedObjects.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.UserAccess">
      <summary>Represents the user access for a protected range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UserAccess.AllowEdit">
      <summary>True if the user is allowed access to the specified range on a protected worksheet.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.UserAccess.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UserAccess.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.UserAccessList">
      <summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.UserAccess" /> objects that represent the user access for protected ranges.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UserAccessList._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.UserAccessList.Add(System.String,System.Boolean)">
      <summary>Adds a user access list. Returns a <see cref="T:Microsoft.Office.Interop.Excel.UserAccess" /> object.</summary>
      <param name="Name">Required String. The name of the user access list.</param>
      <param name="AllowEdit">Required Boolean. True allows users on the access list to edit the editable ranges on a protected worksheet.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.UserAccessList.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.UserAccessList.DeleteAll">
      <summary>Removes all users associated with access to a protected range on a worksheet.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.UserAccessList.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.UserAccessList.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Validation">
      <summary>Represents data validation for a worksheet range.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)">
      <summary>Adds data validation to the specified range.</summary>
      <param name="Type">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" />. The validation type.</param>
      <param name="AlertStyle">Optional Object. The validation alert style. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" /> constants: xlValidAlertInformation, xlValidAlertStop, or xlValidAlertWarning.</param>
      <param name="Operator">Optional Object. The data validation operator. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" /> constants: xlBetween, xlEqual, xlGreater, xlGreaterEqual, xlLess, xlLessEqual, xlNotBetween, or xlNotEqual.</param>
      <param name="Formula1">Optional Object. The first part of the data validation equation.</param>
      <param name="Formula2">Optional Object. The second part of the data validation when <paramref name="Operator" /> is xlBetween or xlNotBetween (otherwise, this argument is ignored).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Validation.AlertStyle">
      <summary>Returns the validation alert style. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Validation.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Validation.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Validation.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Validation.ErrorMessage">
      <summary>Returns or sets the data validation error message. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Validation.ErrorTitle">
      <summary>Returns or sets the title of the data-validation error dialog box. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Validation.Formula1">
      <summary>Returns the value or expression associated with the conditional format or data validation. Can be a constant value, a string value, a cell reference, or a formula. Read-only String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Validation.Formula2">
      <summary>Returns the value or expression associated with the second part of a conditional format or data validation. Read-only String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Validation.IgnoreBlank">
      <summary>True if blank values are permitted by the range data validation. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Validation.IMEMode">
      <summary>Returns or sets the description of the Japanese input rules. Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlIMEMode" /> constants. Read/write Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Validation.InCellDropdown">
      <summary>True if data validation displays a drop-down list that contains acceptable values. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Validation.InputMessage">
      <summary>Returns or sets the data validation input message. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Validation.InputTitle">
      <summary>Returns or sets the title of the data-validation input dialog box. Read/write String.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Modifies data validation for a range.</summary>
      <param name="Type">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" />. The validation type.</param>
      <param name="AlertStyle">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" />. The validation alert style.</param>
      <param name="Operator">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" />. The data validation operator.</param>
      <param name="Formula1">Optional Object. The first part of the data validation equation.</param>
      <param name="Formula2">Optional Object. The second part of the data validation when <paramref name="Operator" /> is xlBetween or xlNotBetween (otherwise, this argument is ignored).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Validation.Operator">
      <summary>Returns the operator for the conditional format or data validation. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Validation.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Validation.ShowError">
      <summary>True if the data validation error message will be displayed whenever the user enters invalid data. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Validation.ShowInput">
      <summary>True if the data validation input message will be displayed whenever the user selects a cell in the data validation range. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Validation.Type">
      <summary>Returns data type validation for a range. Read-only Integer that can be one of the constants of <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Validation.Value">
      <summary>True if all the validation criteria are met (that is, if the range contains valid data). Read-only Boolean.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.ValueChange">
      <summary>Represents a value that has been changed in a PivotTable report that is based on an OLAP data source.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ValueChange.AllocationMethod">
      <summary>Gets what method to use to allocate this value when performing what-if analysis.</summary>
      <returns>The method to use to allocate this value when performing what-if analysis.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ValueChange.AllocationValue">
      <summary>Gets what value to allocate when performing what-if analysis.</summary>
      <returns>The value to allocate when performing what-if analysis.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ValueChange.AllocationWeightExpression">
      <summary>Gets the MDX weight expression to use for this value when performing what-if analysis.</summary>
      <returns>The MDX weight expression to use for this value when performing what-if analysis.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ValueChange.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ValueChange.Creator">
      <summary>Gets a 32-bit integer that indicates the application in which this object was created.</summary>
      <returns>A 32-bit integer that indicates the application in which this object was created.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.ValueChange.Delete">
      <summary>Deletes the specified <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> object from the <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ValueChange.Order">
      <summary>Gets a value that indicates the order in which this change was performed relative to other changes in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection.</summary>
      <returns>The order in which this change was performed relative to other changes in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ValueChange.Parent">
      <summary>Gets the parent object for the specified object.</summary>
      <returns>The parent object for the specified object.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ValueChange.PivotCell">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" /> object that represents the cell (tuple) that was changed.</summary>
      <returns>The cell (tuple) that was changed.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ValueChange.Tuple">
      <summary>Gets the MDX tuple of the value was changed in the OLAP data source.</summary>
      <returns>The MDX tuple of the value was changed in the OLAP data source.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ValueChange.Value">
      <summary>Gets the value that the user entered in the cell or that the formula in the cell was evaluated to when UPDATE CUBE statement was last run against the OLAP data source.</summary>
      <returns>The value.</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.ValueChange.VisibleInPivotTable">
      <summary>Gets whether the cell (tuple) is currently visible in the PivotTable report.</summary>
      <returns>true if the cell (tuple) is currently visible in the PivotTable report; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.VPageBreak">
      <summary>Represents a vertical page break.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.VPageBreak.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.VPageBreak.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.VPageBreak.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.VPageBreak.DragOff(Microsoft.Office.Interop.Excel.XlDirection,System.Int32)">
      <summary>Drags a page break out of the print area.</summary>
      <param name="Direction">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />. The direction in which the page break is dragged.</param>
      <param name="RegionIndex">Required Integer. The print-area region index for the page break (the region where the mouse pointer is located when the mouse button is pressed if the user drags the page break). If the print area is contiguous, there’s only one print region. If the print area is noncontiguous, there’s more than one print region.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.VPageBreak.Extent">
      <summary>Returns the type of the specified page break: full-screen or only within a print area.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.VPageBreak.Location">
      <summary>Returns or sets the cell (a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object) that defines the page-break location.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.VPageBreak.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.VPageBreak.Type">
      <summary>Returns or sets the page break type.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.VPageBreaks">
      <summary>A collection of vertical page breaks within the print area. Each vertical page break is represented by a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreak" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.VPageBreaks._Default(System.Int32)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.VPageBreaks.Add(System.Object)">
      <summary>Adds a vertical page break. Returns a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreak" /> object.</summary>
      <param name="Before">Required Object. A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object. The range to the left of which the new page break will be added.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.VPageBreaks.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.VPageBreaks.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.VPageBreaks.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. </summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.VPageBreaks.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.VPageBreaks.Item(System.Int32)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.VPageBreaks.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Walls">
      <summary>Represents the walls of a 3-D chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Walls.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Walls.Border">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Walls.ClearFormats">
      <summary>Clears the formatting of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Walls.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Walls.Fill">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartFillFormat" /> object for a specified chart that contains fill formatting properties for the chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Walls.Format">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object. Read-only.</summary>
      <returns>ChartFormat</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Walls.Interior">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Walls.Name">
      <summary>Returns the name of the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Walls.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Walls.Paste">
      <summary>Pastes a picture from the Clipboard on the walls of the specified chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Walls.PictureType">
      <summary>Returns or sets the way pictures are displayed on the walls and faces of a 3-D chart.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Walls.PictureUnit">
      <summary>Returns or sets the unit for each picture on the chart if the <see cref="P:Microsoft.Office.Interop.Excel.Walls.PictureType" /> property is set to xlStackScale (if not, this property is ignored).</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Walls.Select">
      <summary>Selects the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Walls.Thickness">
      <summary>Returns or sets the thickness of the wall. Read/write.</summary>
      <returns>Integer</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Watch">
      <summary>Represents a range which is tracked when the worksheet is recalculated.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Watch.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Watch.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Watch.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Watch.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Watch.Source">
      <summary>Returns the unique name that identifies the range which is tracked when the worksheet is recalculated.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Watches">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Watch" /> objects in a specified application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Watches._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Watches.Add(System.Object)">
      <summary>Adds a range which is tracked when the worksheet is recalculated. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Watch" /> object.</summary>
      <param name="Source">Required Object. The source for the range.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Watches.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Watches.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Watches.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Watches.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Watches.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Watches.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Watches.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WebOptions">
      <summary>Contains workbook-level attributes used by Microsoft Excel when you save a document as a Web page or open a Web page.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WebOptions.AllowPNG">
      <summary>True if PNG (Portable Network Graphics) is allowed as an image format when you save documents as a Web page. False if PNG is not allowed as an output format. The default value is False.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WebOptions.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WebOptions.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WebOptions.DownloadComponents">
      <summary>True if the necessary Microsoft Office Web components are downloaded when you view the saved document in a Web browser, but only if the components are not already installed. False if the components are not downloaded. The default value is False.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WebOptions.Encoding">
      <summary>Returns or sets the document encoding (code page or character set) to be used by the Web browser when you view the saved document. The default is the system code page.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WebOptions.FolderSuffix">
      <summary>Returns the folder suffix that Microsoft Excel uses when you save a document as a Web page, use long file names, and choose to save supporting files in a separate folder (that is, if the <see cref="P:Microsoft.Office.Interop.Excel.WebOptions.UseLongFileNames" /> and <see cref="P:Microsoft.Office.Interop.Excel.WebOptions.OrganizeInFolder" /> properties are set to True).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WebOptions.LocationOfComponents">
      <summary>Returns or sets the central URL (on the intranet or Web) or path (local or network) to the location from which authorized users can download Microsoft Office Web components when viewing your saved document. The default value is the local or network installation path for Microsoft Office.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WebOptions.OrganizeInFolder">
      <summary>True if all supporting files, such as background textures and graphics, are organized in a separate folder when you save the specified document as a Web page. False if supporting files are saved in the same folder as the Web page. The default value is True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WebOptions.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WebOptions.PixelsPerInch">
      <summary>Returns or sets the density (pixels per inch) of graphics images and table cells on a Web page. The range of settings is usually from 19 to 480, and common settings for popular screen sizes are 72, 96, and 120. The default setting is 96.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WebOptions.RelyOnCSS">
      <summary>True if cascading style sheets (CSS) are used for font formatting when you view a saved document in a Web browser. False if HTML &lt;FONT&gt; tags and cascading style sheets are used. The default value is True.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WebOptions.RelyOnVML">
      <summary>True if image files are not generated from drawing objects when you save a document as a Web page. False if images are generated. The default value is False.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WebOptions.ScreenSize">
      <summary>Returns or sets an <see cref="T:Microsoft.Office.Core.MsoScreenSize" /> constant specifying the ideal minimum screen size (width by height, in pixels) that you should use when viewing the saved document in a Web browser. The default constant is msoScreenSize800x600.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WebOptions.TargetBrowser">
      <summary>Returns or sets an <see cref="T:Microsoft.Office.Core.MsoTargetBrowser" /> constant indicating the browser version.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WebOptions.UseDefaultFolderSuffix">
      <summary>Sets the folder suffix for the specified document to the default suffix for the language support you have selected or installed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WebOptions.UseLongFileNames">
      <summary>True if long file names are used when you save the document as a Web page. False if long file names are not used and the DOS file name format (8.3) is used. The default value is True.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Window">
      <summary>Represents a window. Many worksheet characteristics, such as scroll bars and gridlines, are actually properties of the window.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window._DisplayRightToLeft">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Window._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Window.Activate">
      <summary>Brings the window to the front of the z-order.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Window.ActivateNext">
      <summary>Activates the specified window, and then sends it to the back of the window z-order.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Window.ActivatePrevious">
      <summary>Activates the specified window and then activates the window at the back of the window z-order.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.ActiveCell">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the active cell in the active window (the window on top) or in the specified window. If the window isn't displaying a worksheet, this property fails.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.ActiveChart">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the active chart (either an embedded chart or a chart sheet). An embedded chart is considered active when it's either selected or activated. When no chart is active, this property returns Nothing.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.ActivePane">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Pane" /> object that represents the active pane in the window.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.ActiveSheet">
      <summary>Returns an object that represents the active sheet (the sheet on top) in the active workbook or in the specified window or workbook. Returns Nothing if no sheet is active.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.ActiveSheetView">
      <summary>Returns an object that represents the view of the active sheet in the specified window. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.AutoFilterDateGrouping">
      <summary>True if the auto filter for date grouping is currently displayed in the specified window. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.Caption">
      <summary>The name that appears in the title bar of the document window.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Window.Close(System.Object,System.Object,System.Object)">
      <summary>Closes the object.</summary>
      <param name="SaveChanges">Optional Object. If there are no changes to the workbook, this argument is ignored. If there are changes to the workbook and the workbook appears in other open windows, this argument is ignored. If there are changes to the workbook but the workbook doesn't appear in any other open windows, this argument specifies whether changes should be saved, as shown in the following table.ValueActionTrueSaves the changes to the workbook. If there is not yet a file name associated with the workbook, then <paramref name="FileName" /> is used. If <paramref name="FileName" /> is omitted, the user is asked to supply a file name.FalseDoes not save the changes to this file.OmittedDisplays a dialog box asking the user whether or not to save changes.</param>
      <param name="Filename">Optional Object. Save changes under this file name.</param>
      <param name="RouteWorkbook">Optional Object. If the workbook doesn't need to be routed to the next recipient (if it has no routing slip or has already been routed), this argument is ignored. Otherwise, Microsoft Excel routes the workbook as shown in the following table.ValueMeaningTrueSends the workbook to the next recipient.FalseDoesn't send the workbook.OmittedDisplays a dialog box asking the user whether the workbook should be sent.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.DisplayFormulas">
      <summary>True if the window is displaying formulas; False if the window is displaying values.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.DisplayGridlines">
      <summary>True if gridlines are displayed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.DisplayHeadings">
      <summary>True if both row and column headings are displayed; False if there are no headings displayed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.DisplayHorizontalScrollBar">
      <summary>True if the horizontal scroll bar is displayed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.DisplayOutline">
      <summary>True if outline symbols are displayed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.DisplayRightToLeft">
      <summary>True if the specified window is displayed from right to left instead of from left to right. False if the object is displayed from left to right.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.DisplayRuler">
      <summary>True if a ruler is displayed for the specified window. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.DisplayVerticalScrollBar">
      <summary>True if the vertical scroll bar is displayed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.DisplayWhitespace">
      <summary>True if whitespace is displayed. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.DisplayWorkbookTabs">
      <summary>True if the workbook tabs are displayed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.DisplayZeros">
      <summary>True if zero values are displayed.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.EnableResize">
      <summary>True if the window can be resized.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.FreezePanes">
      <summary>True if split panes are frozen.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.GridlineColor">
      <summary>Returns or sets the gridline color as an RGB value.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.GridlineColorIndex">
      <summary>Returns or sets the gridline color as an index into the current color palette or as an <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> constant.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.Height">
      <summary>The height of the window in points.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.Index">
      <summary>Returns the index number of the object within the collection of similar objects.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Window.LargeScroll(System.Object,System.Object,System.Object,System.Object)">
      <summary>Scrolls the contents of the window by pages.</summary>
      <param name="Down">Optional Object. The number of pages to scroll the contents down.</param>
      <param name="Up">Optional Object. The number of pages to scroll the contents up.</param>
      <param name="ToRight">Optional Object. The number of pages to scroll the contents to the right.</param>
      <param name="ToLeft">Optional Object. The number of pages to scroll the contents to the left.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.Left">
      <summary>The distance in points from the left edge of the client area to the left edge of the window.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Window.NewWindow">
      <summary>Creates a new window or a copy of the specified window.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.OnWindow">
      <summary>Returns or sets the name of the procedure that’s run whenever you activate a window.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.Panes">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Panes" /> collection that represents all the panes in the specified window.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Window.PointsToScreenPixelsX(System.Int32)">
      <summary>Converts a horizontal measurement from points (document coordinates) to screen pixels (screen coordinates).</summary>
      <param name="Points">Required Integer. The number of points horizontally along the top of the document window, starting from the left.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Window.PointsToScreenPixelsY(System.Int32)">
      <summary>Converts a vertical measurement from points (document coordinates) to screen pixels (screen coordinates).</summary>
      <param name="Points">Required Integer. The number of points vertically along the left edge of the document window, starting from the top.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Window.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Prints the object.</summary>
      <param name="From">Optional Object. The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
      <param name="To">Optional Object. The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
      <param name="Copies">Optional Object. The number of copies to print. If this argument is omitted, one copy is printed.</param>
      <param name="Preview">Optional Object. True to have Microsoft Excel invoke print preview before printing the object. False (or omitted) to print the object immediately.</param>
      <param name="ActivePrinter">Optional Object. Sets the name of the active printer.</param>
      <param name="PrintToFile">Optional Object. True to print to a file. If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</param>
      <param name="Collate">Optional Object. True to collate multiple copies.</param>
      <param name="PrToFileName">Optional Object. If <paramref name="PrintToFile" /> is set to True, this argument specifies the name of the file you want to print to.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Window.PrintPreview(System.Object)">
      <summary>Shows a preview of the object as it would look when printed.</summary>
      <param name="EnableChanges">Enables changes during preview.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Window.RangeFromPoint(System.Int32,System.Int32)">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> or <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that is positioned at the specified pair of screen coordinates. If there isn’t a shape located at the specified coordinates, this method returns Nothing.</summary>
      <param name="x">Required Integer. The value (in pixels) that represents the horizontal distance from the left edge of the screen, starting at the top.</param>
      <param name="y">Required Integer. The value (in pixels) that represents the vertical distance from the top of the screen, starting on the left.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.RangeSelection">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the selected cells on the worksheet in the specified window even if a graphic object is active or selected on the worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.ScrollColumn">
      <summary>Returns or sets the number of the leftmost column in the pane or window.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Window.ScrollIntoView(System.Int32,System.Int32,System.Int32,System.Int32,System.Object)">
      <summary>Scrolls the document window so that the contents of a specified rectangular area are displayed in either the upper-left or lower-right corner of the document window or pane.</summary>
      <param name="Left">Required Integer. The horizontal position of the rectangle (in points) from the left edge of the document window or pane.</param>
      <param name="Top">Required Integer. The vertical position of the rectangle (in points) from the top of the document window or pane.</param>
      <param name="Width">Required Integer. The width of the rectangle, in points.</param>
      <param name="Height">Required Integer. The height of the rectangle, in points.</param>
      <param name="Start">Optional Integer. True to have the upper-left corner of the rectangle appear in the upper-left corner of the document window or pane. False to have the lower-right corner of the rectangle appear in the lower-right corner of the document window or pane. The default value is True.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.ScrollRow">
      <summary>Returns or sets the number of the row that appears at the top of the pane or window.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Window.ScrollWorkbookTabs(System.Object,System.Object)">
      <summary>Scrolls through the workbook tabs at the bottom of the window.</summary>
      <param name="Sheets">Optional Object. The number of sheets to scroll by. Use a positive number to scroll forward, a negative number to scroll backward, or 0 (zero) not to scroll at all. You must specify <paramref name="Sheets" /> if you don't specify <paramref name="Position" />.</param>
      <param name="Position">Optional Object. Use xlFirst to scroll to the first sheet, or use xlLast to scroll to the last sheet. You must specify <paramref name="Position" /> if you don't specify <paramref name="Sheets" />.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.SelectedSheets">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the selected sheets in the specified window.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.Selection">
      <summary>Returns the selected object in the specified window.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.SheetViews">
      <summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.SheetViews" /> object for the specified window. Read-only.</summary>
      <returns>SheetViews</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Window.SmallScroll(System.Object,System.Object,System.Object,System.Object)">
      <summary>Scrolls the contents of the window by rows or columns.</summary>
      <param name="Down">Optional Object. The number of rows to scroll the contents down.</param>
      <param name="Up">Optional Object. The number of rows to scroll the contents up.</param>
      <param name="ToRight">Optional Object. The number of columns to scroll the contents to the right.</param>
      <param name="ToLeft">Optional Object. The number of columns to scroll the contents to the left.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.Split">
      <summary>True if the window is split.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.SplitColumn">
      <summary>Returns or sets the column number where the window is split into panes (the number of columns to the left of the split line).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.SplitHorizontal">
      <summary>Returns or sets the location of the horizontal window split in points.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.SplitRow">
      <summary>Returns or sets the row number where the window is split into panes (the number of rows above the split).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.SplitVertical">
      <summary>Returns or sets the location of the vertical window split in points.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.TabRatio">
      <summary>Returns or sets the ratio of the width of the workbook's tab area to the width of the window's horizontal scroll bar (as a number between 0 (zero) and 1; the default value is 0.6).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.Top">
      <summary>The distance in points from the top edge of the window to the top edge of the usable area (below the menus, any toolbars docked at the top, and the formula bar).</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.Type">
      <summary>Returns or sets the window type.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.UsableHeight">
      <summary>Returns the maximum height in points of the space that a window can occupy in the application window area.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.UsableWidth">
      <summary>Returns the maximum width in points of the space that a window can occupy in the application window area.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.View">
      <summary>Returns or sets the view showing in the window.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.Visible">
      <summary>Determines whether the object is visible.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.VisibleRange">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range of cells that are visible in the window or pane. If a column or row is partially visible, it's included in the range.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.Width">
      <summary>The width in points of the window.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.WindowNumber">
      <summary>Returns the window number. For example, a window named "Book1.xls:2" has 2 as its window number. Most windows have the window number 1.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.WindowState">
      <summary>Returns or sets the state of the window.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Window.Zoom">
      <summary>Returns or sets the display size of the window as a percentage (100 equals normal size, 200 equals double size, and so on).</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Windows">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Window" /> objects in Microsoft Excel.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Windows._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Windows.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Windows.Arrange(Microsoft.Office.Interop.Excel.XlArrangeStyle,System.Object,System.Object,System.Object)">
      <summary>Arranges the windows on the screen.</summary>
      <param name="ArrangeStyle">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlArrangeStyle" />.</param>
      <param name="ActiveWorkbook">Optional Object. True to arrange only the visible windows of the active workbook. False to arrange all windows. The default value is False.</param>
      <param name="SyncHorizontal">Optional Object. Ignored if <paramref name="ActiveWorkbook" /> is False or omitted. True to synchronize the windows of the active workbook when scrolling horizontally. False not to synchronize the windows. The default value is False.</param>
      <param name="SyncVertical">Optional Object. Ignored if <paramref name="ActiveWorkbook" /> is False or omitted. True to synchronize the windows of the active workbook when scrolling vertically. False not to synchronize the windows. The default value is False.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Windows.BreakSideBySide">
      <summary>Ends side-by-side mode if two windows are in side-by-side mode.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Windows.CompareSideBySideWith(System.Object)">
      <summary>Opens two windows in side-by-side mode.</summary>
      <param name="WindowName">The name of a window to open.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Windows.Count">
      <summary>Returns the number of objects in the collection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Windows.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Windows.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Windows.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Windows.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Windows.ResetPositionsSideBySide">
      <summary>Resets the position of two worksheet windows that are being compared side by side.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Windows.SyncScrollingSideBySide">
      <summary>True enables scrolling the contents of windows at the same time when documents are being compared side by side. False disables scrolling the windows at the same time.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Workbook">
      <summary>Represents a Microsoft Excel workbook.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookClass">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.#ctor"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass._CodeName"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass._Protect(System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass._ReadOnlyRecommended"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass._SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.AcceptAllChanges(System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.AcceptLabelsInFormulas"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.AccuracyVersion"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.Activate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.ActiveChart"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.ActiveSheet"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.ActiveSlicer"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_Activate(Microsoft.Office.Interop.Excel.WorkbookEvents_ActivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_AddinInstall(Microsoft.Office.Interop.Excel.WorkbookEvents_AddinInstallEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_AddinUninstall(Microsoft.Office.Interop.Excel.WorkbookEvents_AddinUninstallEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_AfterSave(Microsoft.Office.Interop.Excel.WorkbookEvents_AfterSaveEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_AfterXmlExport(Microsoft.Office.Interop.Excel.WorkbookEvents_AfterXmlExportEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_AfterXmlImport(Microsoft.Office.Interop.Excel.WorkbookEvents_AfterXmlImportEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_BeforeClose(Microsoft.Office.Interop.Excel.WorkbookEvents_BeforeCloseEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_BeforePrint(Microsoft.Office.Interop.Excel.WorkbookEvents_BeforePrintEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_BeforeSave(Microsoft.Office.Interop.Excel.WorkbookEvents_BeforeSaveEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_BeforeXmlExport(Microsoft.Office.Interop.Excel.WorkbookEvents_BeforeXmlExportEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_BeforeXmlImport(Microsoft.Office.Interop.Excel.WorkbookEvents_BeforeXmlImportEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_Deactivate(Microsoft.Office.Interop.Excel.WorkbookEvents_DeactivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_NewChart(Microsoft.Office.Interop.Excel.WorkbookEvents_NewChartEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_NewSheet(Microsoft.Office.Interop.Excel.WorkbookEvents_NewSheetEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_Open(Microsoft.Office.Interop.Excel.WorkbookEvents_OpenEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_PivotTableCloseConnection(Microsoft.Office.Interop.Excel.WorkbookEvents_PivotTableCloseConnectionEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_PivotTableOpenConnection(Microsoft.Office.Interop.Excel.WorkbookEvents_PivotTableOpenConnectionEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_RowsetComplete(Microsoft.Office.Interop.Excel.WorkbookEvents_RowsetCompleteEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_SheetActivate(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetActivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_SheetBeforeDoubleClick(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetBeforeDoubleClickEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_SheetBeforeRightClick(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetBeforeRightClickEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_SheetCalculate(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetCalculateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_SheetChange(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetChangeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_SheetDeactivate(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetDeactivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_SheetFollowHyperlink(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetFollowHyperlinkEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_SheetPivotTableAfterValueChange(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableAfterValueChangeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_SheetPivotTableBeforeAllocateChanges(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableBeforeAllocateChangesEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_SheetPivotTableBeforeCommitChanges(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableBeforeCommitChangesEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_SheetPivotTableBeforeDiscardChanges(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableBeforeDiscardChangesEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_SheetPivotTableChangeSync(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableChangeSyncEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_SheetPivotTableUpdate(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableUpdateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_SheetSelectionChange(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetSelectionChangeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_Sync(Microsoft.Office.Interop.Excel.WorkbookEvents_SyncEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_WindowActivate(Microsoft.Office.Interop.Excel.WorkbookEvents_WindowActivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_WindowDeactivate(Microsoft.Office.Interop.Excel.WorkbookEvents_WindowDeactivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.add_WindowResize(Microsoft.Office.Interop.Excel.WorkbookEvents_WindowResizeEventHandler)"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.AddinInstall"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.AddinUninstall"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.AddToFavorites"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.AfterSave"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.AfterXmlExport"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.AfterXmlImport"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.ApplyTheme(System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Author"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.AutoUpdateFrequency"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.AutoUpdateSaveChanges"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.BeforeClose"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.BeforePrint"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.BeforeSave"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.BeforeXmlExport"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.BeforeXmlImport"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.BreakLink(System.String,Microsoft.Office.Interop.Excel.XlLinkType)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.BuiltinDocumentProperties"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.CalculationVersion"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.CanCheckIn"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.ChangeFileAccess(Microsoft.Office.Interop.Excel.XlFileAccess,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.ChangeHistoryDuration"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.ChangeLink(System.String,System.String,Microsoft.Office.Interop.Excel.XlLinkType)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Charts"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.CheckCompatibility"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.CheckIn(System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.CheckInWithVersion(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.Close(System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.CodeName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Colors(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.CommandBars"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Comments"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.ConflictResolution"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Connections"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.ConnectionsDisabled"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Container"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.ContentTypeProperties"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.CreateBackup"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.CustomDocumentProperties"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.CustomViews"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.CustomXMLParts"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Date1904"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.Deactivate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.DefaultPivotTableStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.DefaultSlicerStyle"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.DefaultTableStyle"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.DeleteNumberFormat(System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.DialogSheets"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.DisableDraftModeAllCharts"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.DisplayDrawingObjects"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.DisplayInkComments"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.DocumentInspectors"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.DocumentLibraryVersions"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.DoNotPromptForConvert"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.Dummy16"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.Dummy17(System.Int32)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.EnableAutoRecover"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.EnableConnections"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.EnableDraftModeAllCharts"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.EncryptionProvider"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.EndReview"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.EnvelopeVisible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Excel4IntlMacroSheets"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Excel4MacroSheets"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Excel8CompatibilityMode"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.ExclusiveAccess"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.FileFormat"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Final"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.FollowHyperlink(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.ForceFullCalculation"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.ForwardMailer"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.FullName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.FullNameURLEncoded"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.GetWorkflowTasks"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.GetWorkflowTemplates"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.HasMailer"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.HasPassword"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.HasRoutingSlip"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.HasVBProject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.HighlightChangesOnScreen"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.HighlightChangesOptions(System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.HTMLProject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.IconSets"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.InactiveListBorderVisible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.IsAddin"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.IsInplace"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.KeepChangeHistory"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Keywords"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.LinkInfo(System.String,Microsoft.Office.Interop.Excel.XlLinkInfo,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.LinkSources(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.ListChangesOnNewSheet"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.LockServerFile"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Mailer"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.MergeWorkbook(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Modules"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.MultiUserEditing"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Names"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.NewChart"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.NewSheet"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.NewWindow"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.OnSave"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.OnSheetActivate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.OnSheetDeactivate"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.Open"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.OpenLinks(System.String,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Parent"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Password"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.PasswordEncryptionAlgorithm"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.PasswordEncryptionFileProperties"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.PasswordEncryptionKeyLength"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.PasswordEncryptionProvider"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Path"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Permission"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.PersonalViewListSettings"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.PersonalViewPrintSettings"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.PivotCaches"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.PivotTableCloseConnection"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.PivotTableOpenConnection"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.Post(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.PrecisionAsDisplayed"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.PrintPreview(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.Protect(System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.ProtectSharing(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.ProtectSharingEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.ProtectStructure"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.ProtectWindows"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.PublishObjects"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.PurgeChangeHistoryNow(System.Int32,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.ReadOnly"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.ReadOnlyRecommended"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.RecheckSmartTags"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.RefreshAll"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.RejectAllChanges(System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.ReloadAs(Microsoft.Office.Core.MsoEncoding)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_Activate(Microsoft.Office.Interop.Excel.WorkbookEvents_ActivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_AddinInstall(Microsoft.Office.Interop.Excel.WorkbookEvents_AddinInstallEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_AddinUninstall(Microsoft.Office.Interop.Excel.WorkbookEvents_AddinUninstallEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_AfterSave(Microsoft.Office.Interop.Excel.WorkbookEvents_AfterSaveEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_AfterXmlExport(Microsoft.Office.Interop.Excel.WorkbookEvents_AfterXmlExportEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_AfterXmlImport(Microsoft.Office.Interop.Excel.WorkbookEvents_AfterXmlImportEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_BeforeClose(Microsoft.Office.Interop.Excel.WorkbookEvents_BeforeCloseEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_BeforePrint(Microsoft.Office.Interop.Excel.WorkbookEvents_BeforePrintEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_BeforeSave(Microsoft.Office.Interop.Excel.WorkbookEvents_BeforeSaveEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_BeforeXmlExport(Microsoft.Office.Interop.Excel.WorkbookEvents_BeforeXmlExportEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_BeforeXmlImport(Microsoft.Office.Interop.Excel.WorkbookEvents_BeforeXmlImportEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_Deactivate(Microsoft.Office.Interop.Excel.WorkbookEvents_DeactivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_NewChart(Microsoft.Office.Interop.Excel.WorkbookEvents_NewChartEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_NewSheet(Microsoft.Office.Interop.Excel.WorkbookEvents_NewSheetEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_Open(Microsoft.Office.Interop.Excel.WorkbookEvents_OpenEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_PivotTableCloseConnection(Microsoft.Office.Interop.Excel.WorkbookEvents_PivotTableCloseConnectionEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_PivotTableOpenConnection(Microsoft.Office.Interop.Excel.WorkbookEvents_PivotTableOpenConnectionEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_RowsetComplete(Microsoft.Office.Interop.Excel.WorkbookEvents_RowsetCompleteEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_SheetActivate(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetActivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_SheetBeforeDoubleClick(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetBeforeDoubleClickEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_SheetBeforeRightClick(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetBeforeRightClickEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_SheetCalculate(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetCalculateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_SheetChange(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetChangeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_SheetDeactivate(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetDeactivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_SheetFollowHyperlink(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetFollowHyperlinkEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_SheetPivotTableAfterValueChange(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableAfterValueChangeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_SheetPivotTableBeforeAllocateChanges(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableBeforeAllocateChangesEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_SheetPivotTableBeforeCommitChanges(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableBeforeCommitChangesEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_SheetPivotTableBeforeDiscardChanges(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableBeforeDiscardChangesEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_SheetPivotTableChangeSync(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableChangeSyncEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_SheetPivotTableUpdate(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableUpdateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_SheetSelectionChange(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetSelectionChangeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_Sync(Microsoft.Office.Interop.Excel.WorkbookEvents_SyncEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_WindowActivate(Microsoft.Office.Interop.Excel.WorkbookEvents_WindowActivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_WindowDeactivate(Microsoft.Office.Interop.Excel.WorkbookEvents_WindowDeactivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.remove_WindowResize(Microsoft.Office.Interop.Excel.WorkbookEvents_WindowResizeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.RemoveDocumentInformation(Microsoft.Office.Interop.Excel.XlRemoveDocInfoType)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.RemovePersonalInformation"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.RemoveUser(System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.Reply"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.ReplyAll"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.ReplyWithChanges(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Research"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.ResetColors"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.RevisionNumber"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.Route"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Routed"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.RoutingSlip"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.RowsetComplete"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.Save"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.SaveAsXMLData(System.String,Microsoft.Office.Interop.Excel.XmlMap)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.SaveCopyAs(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Saved"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.SaveLinkValues"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.sblt(System.String)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.SendFaxOverInternet(System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.SendForReview(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.SendMail(System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.SendMailer(System.Object,Microsoft.Office.Interop.Excel.XlPriority)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.ServerPolicy"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.ServerViewableItems"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.SetLinkOnData(System.String,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.SharedWorkspace"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.SheetActivate"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.SheetBeforeDoubleClick"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.SheetBeforeRightClick"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.SheetCalculate"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.SheetChange"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.SheetDeactivate"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.SheetFollowHyperlink"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.SheetPivotTableAfterValueChange"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.SheetPivotTableBeforeAllocateChanges"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.SheetPivotTableBeforeCommitChanges"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.SheetPivotTableBeforeDiscardChanges"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.SheetPivotTableChangeSync"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.SheetPivotTableUpdate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Sheets"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.SheetSelectionChange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.ShowConflictHistory"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.ShowPivotChartActiveFields"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.ShowPivotTableFieldList"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Signatures"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.SlicerCaches"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.SmartDocument"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.SmartTagOptions"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Styles"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Subject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Sync"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.TableStyles"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.TemplateRemoveExtData"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Theme"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Title"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.ToggleFormsDesign"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.Unprotect(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.UnprotectSharing(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.UpdateFromFile"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.UpdateLink(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.UpdateLinks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.UpdateRemoteReferences"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.UserControl"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.UserStatus"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.VBASigned"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.VBProject"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.WebOptions"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.WebPagePreview"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.WindowActivate"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.WindowDeactivate"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.WindowResize"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Windows"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.WorkbookEvents_Event_Activate"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookClass.WorkbookEvents_Event_Sync"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Worksheets"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.WritePassword"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.WriteReserved"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.WriteReservedBy"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.XmlImport(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.XmlImportXml(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.XmlMaps"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.XmlNamespaces"></member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookConnection">
      <summary>A connection is a set of information needed to obtain data from an external data source other than an 1st_Excel12 workbook.  </summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookConnection._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookConnection.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an Application object that represents the creator of the specified object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookConnection.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. Read-only Integer.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookConnection.Delete">
      <summary>Deletes a workbook connection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookConnection.Description">
      <summary>Returns or sets a brief description for a <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> object. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookConnection.Name">
      <summary>Returns or sets the name of the workbook connection object. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookConnection.ODBCConnection">
      <summary>Retuns the ODBC Connection details for the specified <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> object. Read-only <see cref="T:Microsoft.Office.Interop.Excel.ODBCConnection" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookConnection.OLEDBConnection">
      <summary>Retuns the OLEDB Connection details for the specified <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> object. Read-only <see cref="T:Microsoft.Office.Interop.Excel.OLEDBConnection" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookConnection.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookConnection.Ranges">
      <summary>Returns the range of object for the specified <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> object. Read-only <see cref="T:Microsoft.Office.Interop.Excel.Ranges" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookConnection.Refresh">
      <summary>Refreshes a workbook connection.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WorkbookConnection.Type">
      <summary>Returns the workbook connection type. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlConnectionType" />.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.Activate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.AddinInstall"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.AddinUninstall"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.AfterSave(System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.AfterXmlExport(Microsoft.Office.Interop.Excel.XmlMap,System.String,Microsoft.Office.Interop.Excel.XlXmlExportResult)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.AfterXmlImport(Microsoft.Office.Interop.Excel.XmlMap,System.Boolean,Microsoft.Office.Interop.Excel.XlXmlImportResult)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.BeforeClose(System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.BeforePrint(System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.BeforeSave(System.Boolean,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.BeforeXmlExport(Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.BeforeXmlImport(Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Boolean,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.Deactivate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.NewChart(Microsoft.Office.Interop.Excel.Chart)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.NewSheet(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.Open"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.PivotTableCloseConnection(Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.PivotTableOpenConnection(Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.RowsetComplete(System.String,System.String,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.SheetActivate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.SheetBeforeDoubleClick(System.Object,Microsoft.Office.Interop.Excel.Range,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.SheetBeforeRightClick(System.Object,Microsoft.Office.Interop.Excel.Range,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.SheetCalculate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.SheetChange(System.Object,Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.SheetDeactivate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.SheetFollowHyperlink(System.Object,Microsoft.Office.Interop.Excel.Hyperlink)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.SheetPivotTableAfterValueChange(System.Object,Microsoft.Office.Interop.Excel.PivotTable,Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.SheetPivotTableBeforeAllocateChanges(System.Object,Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.SheetPivotTableBeforeCommitChanges(System.Object,Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.SheetPivotTableBeforeDiscardChanges(System.Object,Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.SheetPivotTableChangeSync(System.Object,Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.SheetPivotTableUpdate(System.Object,Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.SheetSelectionChange(System.Object,Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.Sync(Microsoft.Office.Core.MsoSyncEventType)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.WindowActivate(Microsoft.Office.Interop.Excel.Window)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.WindowDeactivate(Microsoft.Office.Interop.Excel.Window)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.WindowResize(Microsoft.Office.Interop.Excel.Window)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_ActivateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.Activate" /> event. The Activate event occurs when a workbook is activated.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_AddinInstallEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.AddinInstall" /> event. The AddinInstall event occurs when the workbook is installed as an add-in.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_AddinUninstallEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.AddinUninstall" /> event. The AddinUninstall event occurs when the workbook is uninstalled as an add-in.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_AfterSaveEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.AfterSave" /> event. The AfterSave event occurs after the workbook is saved.</summary>
      <param name="Success">true if the save operation was successful; otherwise, false.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_AfterXmlExportEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.AfterXmlExport" /> event. The AfterXmlExport event occurs after Microsoft Excel saves or exports data from the specified workbook to an XML data file.</summary>
      <param name="Map">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object. The schema map that was used to save or export data.</param>
      <param name="Url">Required String. The location of the XML file that was exported.</param>
      <param name="Result">Required <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" />. Indicates the results of the save or export operation.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_AfterXmlImportEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.AfterXmlImport" /> event. The AfterXmlImport event occurs after an existing XML data connection is refreshed or after new XML data is imported into the specified Microsoft Excel workbook.</summary>
      <param name="Map">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object. The XML map that will be used to import data.</param>
      <param name="IsRefresh">Required Boolean. True if the event was triggered by refreshing an existing connection to XML data; False if the event was triggered by importing from a different data source.</param>
      <param name="Result">Required <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />. Indicates the results of the refresh or import operation.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_BeforeCloseEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.BeforeClose" /> event. The BeforeClose event occurs before the workbook closes. If the workbook has been changed, this event occurs before the user is asked to save changes.</summary>
      <param name="Cancel">False when the event occurs. If the event procedure sets this argument to True, the close operation stops and the workbook is left open.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_BeforePrintEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.BeforePrint" /> event. The BeforePrint event occurs before the workbook (or anything in it) is printed.</summary>
      <param name="Cancel">False when the event occurs. If the event procedure sets this argument to True, the workbook isn't printed when the procedure is finished.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_BeforeSaveEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.BeforeSave" /> event. The BeforeSave event occurs before the workbook is saved.</summary>
      <param name="SaveAsUI">True if the Save As dialog box will be displayed.</param>
      <param name="Cancel">False when the event occurs. If the event procedure sets this argument to True, the workbook isn't saved when the procedure is finished.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_BeforeXmlExportEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.BeforeXmlExport" /> event. The BeforeXmlExport event occurs before Microsoft Excel saves or exports data from the specified workbook to an XML data file.</summary>
      <param name="Map">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />. The XML map that will be used to save or export data.</param>
      <param name="Url">Required String. The location where you want to export the resulting XML file.</param>
      <param name="Cancel">Required Boolean. Set to True to cancel the save or export operation.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_BeforeXmlImportEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.BeforeXmlImport" /> event. The BeforeXmlImport event occurs before an existing XML data connection is refreshed or before new XML data is imported into a Microsoft Excel workbook.</summary>
      <param name="Map">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object. The XML map that will be used to import data.</param>
      <param name="Url">Required String. The location of the XML file to be imported.</param>
      <param name="IsRefresh">Required Boolean. True if the event was triggered by refreshing an existing connection to XML data; False if the event was triggered by importing from a different data source.</param>
      <param name="Cancel">Required Boolean. Set to True to cancel the import or refresh operation.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_DeactivateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.Deactivate" /> event. The Deactivate event occurs when the workbook is deactivated.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_Event">
      <summary>Events interface for Microsoft Excel <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object events.</summary>
    </member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.Activate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_Activate(Microsoft.Office.Interop.Excel.WorkbookEvents_ActivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_AddinInstall(Microsoft.Office.Interop.Excel.WorkbookEvents_AddinInstallEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_AddinUninstall(Microsoft.Office.Interop.Excel.WorkbookEvents_AddinUninstallEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_AfterSave(Microsoft.Office.Interop.Excel.WorkbookEvents_AfterSaveEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_AfterXmlExport(Microsoft.Office.Interop.Excel.WorkbookEvents_AfterXmlExportEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_AfterXmlImport(Microsoft.Office.Interop.Excel.WorkbookEvents_AfterXmlImportEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_BeforeClose(Microsoft.Office.Interop.Excel.WorkbookEvents_BeforeCloseEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_BeforePrint(Microsoft.Office.Interop.Excel.WorkbookEvents_BeforePrintEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_BeforeSave(Microsoft.Office.Interop.Excel.WorkbookEvents_BeforeSaveEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_BeforeXmlExport(Microsoft.Office.Interop.Excel.WorkbookEvents_BeforeXmlExportEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_BeforeXmlImport(Microsoft.Office.Interop.Excel.WorkbookEvents_BeforeXmlImportEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_Deactivate(Microsoft.Office.Interop.Excel.WorkbookEvents_DeactivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_NewChart(Microsoft.Office.Interop.Excel.WorkbookEvents_NewChartEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_NewSheet(Microsoft.Office.Interop.Excel.WorkbookEvents_NewSheetEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_Open(Microsoft.Office.Interop.Excel.WorkbookEvents_OpenEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_PivotTableCloseConnection(Microsoft.Office.Interop.Excel.WorkbookEvents_PivotTableCloseConnectionEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_PivotTableOpenConnection(Microsoft.Office.Interop.Excel.WorkbookEvents_PivotTableOpenConnectionEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_RowsetComplete(Microsoft.Office.Interop.Excel.WorkbookEvents_RowsetCompleteEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_SheetActivate(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetActivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_SheetBeforeDoubleClick(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetBeforeDoubleClickEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_SheetBeforeRightClick(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetBeforeRightClickEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_SheetCalculate(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetCalculateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_SheetChange(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetChangeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_SheetDeactivate(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetDeactivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_SheetFollowHyperlink(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetFollowHyperlinkEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_SheetPivotTableAfterValueChange(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableAfterValueChangeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_SheetPivotTableBeforeAllocateChanges(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableBeforeAllocateChangesEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_SheetPivotTableBeforeCommitChanges(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableBeforeCommitChangesEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_SheetPivotTableBeforeDiscardChanges(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableBeforeDiscardChangesEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_SheetPivotTableChangeSync(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableChangeSyncEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_SheetPivotTableUpdate(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableUpdateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_SheetSelectionChange(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetSelectionChangeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_Sync(Microsoft.Office.Interop.Excel.WorkbookEvents_SyncEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_WindowActivate(Microsoft.Office.Interop.Excel.WorkbookEvents_WindowActivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_WindowDeactivate(Microsoft.Office.Interop.Excel.WorkbookEvents_WindowDeactivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.add_WindowResize(Microsoft.Office.Interop.Excel.WorkbookEvents_WindowResizeEventHandler)"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.AddinInstall"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.AddinUninstall"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.AfterSave"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.AfterXmlExport"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.AfterXmlImport"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.BeforeClose"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.BeforePrint"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.BeforeSave"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.BeforeXmlExport"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.BeforeXmlImport"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.Deactivate"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.NewChart"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.NewSheet"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.Open"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.PivotTableCloseConnection"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.PivotTableOpenConnection"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_Activate(Microsoft.Office.Interop.Excel.WorkbookEvents_ActivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_AddinInstall(Microsoft.Office.Interop.Excel.WorkbookEvents_AddinInstallEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_AddinUninstall(Microsoft.Office.Interop.Excel.WorkbookEvents_AddinUninstallEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_AfterSave(Microsoft.Office.Interop.Excel.WorkbookEvents_AfterSaveEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_AfterXmlExport(Microsoft.Office.Interop.Excel.WorkbookEvents_AfterXmlExportEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_AfterXmlImport(Microsoft.Office.Interop.Excel.WorkbookEvents_AfterXmlImportEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_BeforeClose(Microsoft.Office.Interop.Excel.WorkbookEvents_BeforeCloseEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_BeforePrint(Microsoft.Office.Interop.Excel.WorkbookEvents_BeforePrintEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_BeforeSave(Microsoft.Office.Interop.Excel.WorkbookEvents_BeforeSaveEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_BeforeXmlExport(Microsoft.Office.Interop.Excel.WorkbookEvents_BeforeXmlExportEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_BeforeXmlImport(Microsoft.Office.Interop.Excel.WorkbookEvents_BeforeXmlImportEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_Deactivate(Microsoft.Office.Interop.Excel.WorkbookEvents_DeactivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_NewChart(Microsoft.Office.Interop.Excel.WorkbookEvents_NewChartEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_NewSheet(Microsoft.Office.Interop.Excel.WorkbookEvents_NewSheetEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_Open(Microsoft.Office.Interop.Excel.WorkbookEvents_OpenEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_PivotTableCloseConnection(Microsoft.Office.Interop.Excel.WorkbookEvents_PivotTableCloseConnectionEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_PivotTableOpenConnection(Microsoft.Office.Interop.Excel.WorkbookEvents_PivotTableOpenConnectionEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_RowsetComplete(Microsoft.Office.Interop.Excel.WorkbookEvents_RowsetCompleteEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_SheetActivate(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetActivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_SheetBeforeDoubleClick(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetBeforeDoubleClickEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_SheetBeforeRightClick(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetBeforeRightClickEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_SheetCalculate(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetCalculateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_SheetChange(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetChangeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_SheetDeactivate(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetDeactivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_SheetFollowHyperlink(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetFollowHyperlinkEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_SheetPivotTableAfterValueChange(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableAfterValueChangeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_SheetPivotTableBeforeAllocateChanges(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableBeforeAllocateChangesEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_SheetPivotTableBeforeCommitChanges(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableBeforeCommitChangesEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_SheetPivotTableBeforeDiscardChanges(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableBeforeDiscardChangesEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_SheetPivotTableChangeSync(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableChangeSyncEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_SheetPivotTableUpdate(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableUpdateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_SheetSelectionChange(Microsoft.Office.Interop.Excel.WorkbookEvents_SheetSelectionChangeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_Sync(Microsoft.Office.Interop.Excel.WorkbookEvents_SyncEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_WindowActivate(Microsoft.Office.Interop.Excel.WorkbookEvents_WindowActivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_WindowDeactivate(Microsoft.Office.Interop.Excel.WorkbookEvents_WindowDeactivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.remove_WindowResize(Microsoft.Office.Interop.Excel.WorkbookEvents_WindowResizeEventHandler)"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.RowsetComplete"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetActivate"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetBeforeDoubleClick"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetBeforeRightClick"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetCalculate"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetChange"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetDeactivate"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetFollowHyperlink"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetPivotTableAfterValueChange"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetPivotTableBeforeAllocateChanges"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetPivotTableBeforeCommitChanges"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetPivotTableBeforeDiscardChanges"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetPivotTableChangeSync"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetPivotTableUpdate"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetSelectionChange"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.Sync"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.WindowActivate"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.WindowDeactivate"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.WindowResize"></member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_NewChartEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.NewChart" /> event. The NewChart event occurs when a new chart is created in the workbook.</summary>
      <param name="Ch">The new chart.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_NewSheetEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.NewSheet" /> event. The NewSheet event occurs when a new sheet is created in the workbook.</summary>
      <param name="Sh">The new sheet. Can be a Worksheet or Chart object.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_OpenEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.Open" /> event. The Open event occurs when the workbook is opened.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_PivotTableCloseConnectionEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.PivotTableCloseConnection" /> event. The PivotTableCloseConnection event occurs after a PivotTable report closes the connection to its data source.</summary>
      <param name="Target">Required. The selected PivotTable report.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_PivotTableOpenConnectionEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.PivotTableOpenConnection" /> event. The PivotTableOpenConnection event occurs after a PivotTable report opens the connection to its data source.</summary>
      <param name="Target">Required. The selected PivotTable report.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_RowsetCompleteEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.RowsetComplete" /> event. The RowsetComplete event occurs when the user either drills through the recordset or invokes the rowset action on an OLAP PivotTable.</summary>
      <param name="Description">A brief description of the event.</param>
      <param name="Sheet">Worksheet on which the recordset is created.</param>
      <param name="Success">Contains a Boolean value to indicate success or failure.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SheetActivateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetActivate" /> event. The SheetActivate event occurs when any sheet is activated.</summary>
      <param name="Sh">The activated sheet. Can be a Chart or Worksheet object.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SheetBeforeDoubleClickEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetBeforeDoubleClick" /> event. The SheetBeforeDoubleClick event occurs when any worksheet is double-clicked, before the default double-click action.</summary>
      <param name="Sh">A Worksheet object that represents the sheet.</param>
      <param name="Target">The cell nearest to the mouse pointer when the double-click occurred.</param>
      <param name="Cancel">False when the event occurs. If the event procedure sets this argument to True, the default double-click action isn't performed when the procedure is finished.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SheetBeforeRightClickEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetBeforeRightClick" /> event. The SheetBeforeRightClick event occurs when any worksheet is right-clicked, before the default right-click action.</summary>
      <param name="Sh">A Worksheet object that represents the sheet.</param>
      <param name="Target">The cell nearest to the mouse pointer when the right-click occurred.</param>
      <param name="Cancel">False when the event occurs. If the event procedure sets this argument to True, the default right-click action isn't performed when the procedure is finished.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SheetCalculateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetCalculate" /> event. The SheetCalculate event occurs after any worksheet is recalculated or after any changed data is plotted on a chart.</summary>
      <param name="Sh">The sheet. Can be a Chart or Worksheet object.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SheetChangeEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetChange" /> event. The SheetChange event occurs when cells in any worksheet are changed by the user or by an external link.</summary>
      <param name="Sh">A Worksheet object that represents the sheet.</param>
      <param name="Target">The changed range.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SheetDeactivateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetDeactivate" /> event. The SheetDeactivate event occurs when any sheet is deactivated.</summary>
      <param name="Sh">The sheet. Can be a Chart or Worksheet object.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SheetFollowHyperlinkEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetFollowHyperlink" /> event. The SheetFollowHyperlink event occurs when you click any hyperlink in Microsoft Excel.</summary>
      <param name="Sh">Required Object. The Worksheet object that contains the hyperlink.</param>
      <param name="Target">Required Hyperlink. The Hyperlink object that represents the destination of the hyperlink.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableAfterValueChangeEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetPivotTableAfterValueChange" /> event. The SheetPivotTableAfterValueChange event occurs after a cell or range of cells inside a PivotTable are edited or recalculated (for cells that contain formulas).</summary>
      <param name="Sh">The worksheet that contains the PivotTable.</param>
      <param name="TargetPivotTable">The PivotTable that contains the edited or recalculated cells.</param>
      <param name="TargetRange">The range that contains all the edited or recalcuated cells.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableBeforeAllocateChangesEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetPivotTableBeforeAllocateChanges" /> event. The SheetPivotTableBeforeAllocateChanges event occurs before changes are applied to a PivotTable.</summary>
      <param name="Sh">The worksheet that contains the PivotTable.</param>
      <param name="TargetPivotTable">The PivotTable that contains the changes to apply.</param>
      <param name="ValueChangeStart">The index to the first change in the associated <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection. The index is specified by the <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.Order" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> object in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection.</param>
      <param name="ValueChangeEnd">The index to the last change in the associated <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection. The index is specified by the <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.Order" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> object in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection.</param>
      <param name="Cancel">false when the event occurs. If the event procedure sets this argument to true, the changes are not applied to the PivotTable and all edits are lost.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableBeforeCommitChangesEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetPivotTableBeforeCommitChanges" /> event. The SheetPivotTableBeforeCommitChanges event occurs before changes are committed against the OLAP data source for a PivotTable.</summary>
      <param name="Sh">The worksheet that contains the PivotTable.</param>
      <param name="TargetPivotTable">The PivotTable that contains the changes to commit.</param>
      <param name="ValueChangeStart">The index to the first change in the associated <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> object. The index is specified by the <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.Order" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> object in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection.</param>
      <param name="ValueChangeEnd">The index to the last change in the associated <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> object. The index is specified by the <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.Order" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> object in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection.</param>
      <param name="Cancel">false when the event occurs. If the event procedure sets this argument to true, the changes are not committed against the OLAP data source of the PivotTable.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableBeforeDiscardChangesEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetPivotTableBeforeDiscardChanges" /> event. The SheetPivotTableBeforeDiscardChanges event occurs before changes to a PivotTable are discarded.</summary>
      <param name="Sh">The worksheet that contains the PivotTable.</param>
      <param name="TargetPivotTable">The PivotTable that contains the changes to discard.</param>
      <param name="ValueChangeStart">The index to the first change in the associated <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> object. The index is specified by the <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.Order" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> object in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection.</param>
      <param name="ValueChangeEnd">The index to the last change in the associated <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> object. The index is specified by the <see cref="P:Microsoft.Office.Interop.Excel.ValueChange.Order" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ValueChange" /> object in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> collection.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableChangeSyncEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetPivotTableChangeSync" /> event. The SheetPivotTableChangeSync event occurs after changes to a PivotTable.</summary>
      <param name="Sh">The worksheet that contains the PivotTable.</param>
      <param name="Target">The PivotTable that was changed.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableUpdateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetPivotTableUpdate" /> event. The SheetPivotTableUpdate event occurs after the sheet of the PivotTable report has been updated.</summary>
      <param name="Sh">Required. The selected sheet.</param>
      <param name="Target">Required. The selected PivotTable report.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SheetSelectionChangeEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetSelectionChange" /> event. The SheetSelectionChange event occurs when the selection changes on any worksheet (doesn't occur if the selection is on a chart sheet).</summary>
      <param name="Sh">The worksheet that contains the new selection.</param>
      <param name="Target">The new selected range.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.Activate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.AddinInstall"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.AddinUninstall"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.AfterSave(System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.AfterXmlExport(Microsoft.Office.Interop.Excel.XmlMap,System.String,Microsoft.Office.Interop.Excel.XlXmlExportResult)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.AfterXmlImport(Microsoft.Office.Interop.Excel.XmlMap,System.Boolean,Microsoft.Office.Interop.Excel.XlXmlImportResult)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.BeforeClose(System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.BeforePrint(System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.BeforeSave(System.Boolean,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.BeforeXmlExport(Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.BeforeXmlImport(Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Boolean,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.Deactivate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_ActivateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_AddinInstallDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_AddinUninstallDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_AfterSaveDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_AfterXmlExportDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_AfterXmlImportDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_BeforeCloseDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_BeforePrintDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_BeforeSaveDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_BeforeXmlExportDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_BeforeXmlImportDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_DeactivateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_dwCookie"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_NewChartDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_NewSheetDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_OpenDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_PivotTableCloseConnectionDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_PivotTableOpenConnectionDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_RowsetCompleteDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_SheetActivateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_SheetBeforeDoubleClickDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_SheetBeforeRightClickDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_SheetCalculateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_SheetChangeDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_SheetDeactivateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_SheetFollowHyperlinkDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_SheetPivotTableAfterValueChangeDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_SheetPivotTableBeforeAllocateChangesDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_SheetPivotTableBeforeCommitChangesDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_SheetPivotTableBeforeDiscardChangesDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_SheetPivotTableChangeSyncDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_SheetPivotTableUpdateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_SheetSelectionChangeDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_SyncDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_WindowActivateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_WindowDeactivateDelegate"></member>
    <member name="F:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.m_WindowResizeDelegate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.NewChart(Microsoft.Office.Interop.Excel.Chart)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.NewSheet(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.Open"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.PivotTableCloseConnection(Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.PivotTableOpenConnection(Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.RowsetComplete(System.String,System.String,System.Boolean)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.SheetActivate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.SheetBeforeDoubleClick(System.Object,Microsoft.Office.Interop.Excel.Range,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.SheetBeforeRightClick(System.Object,Microsoft.Office.Interop.Excel.Range,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.SheetCalculate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.SheetChange(System.Object,Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.SheetDeactivate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.SheetFollowHyperlink(System.Object,Microsoft.Office.Interop.Excel.Hyperlink)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.SheetPivotTableAfterValueChange(System.Object,Microsoft.Office.Interop.Excel.PivotTable,Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.SheetPivotTableBeforeAllocateChanges(System.Object,Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.SheetPivotTableBeforeCommitChanges(System.Object,Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32,System.Boolean@)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.SheetPivotTableBeforeDiscardChanges(System.Object,Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.SheetPivotTableChangeSync(System.Object,Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.SheetPivotTableUpdate(System.Object,Microsoft.Office.Interop.Excel.PivotTable)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.SheetSelectionChange(System.Object,Microsoft.Office.Interop.Excel.Range)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.Sync(Microsoft.Office.Core.MsoSyncEventType)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.WindowActivate(Microsoft.Office.Interop.Excel.Window)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.WindowDeactivate(Microsoft.Office.Interop.Excel.Window)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents_SinkHelper.WindowResize(Microsoft.Office.Interop.Excel.Window)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SyncEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.Sync" /> event. The Sync event occurs when the local copy of a worksheet that is part of a Document Workspace is synchronized with the copy on the server.</summary>
      <param name="SyncEventType">
        <see cref="T:Microsoft.Office.Core.MsoSyncEventType" />. The status of the worksheet synchronization.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_WindowActivateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.WindowActivate" /> event. The WindowActivate event occurs when any workbook window is activated.</summary>
      <param name="Wn">The activated window.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_WindowDeactivateEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.WindowDeactivate" /> event. The WindowDeactivate event occurs when any workbook window is deactivated.</summary>
      <param name="Wn">The deactivated window.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_WindowResizeEventHandler">
      <summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.WindowResize" /> event. The WindowResize event occurs when any workbook window is resized.</summary>
      <param name="Wn">The resized window.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Workbooks">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objects that are currently open in the Microsoft Excel application.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Workbooks.__OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Workbooks._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Workbooks._Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Workbooks._OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.Workbooks._OpenXML(System.String,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)">
      <summary>Creates a new workbook. The new workbook becomes the active workbook. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</summary>
      <param name="Template">Optional Object. Determines how the new workbook is created. If this argument is a string specifying the name of an existing Microsoft Excel file, the new workbook is created with the specified file as a template. If this argument is a constant, the new workbook contains a single sheet of the specified type. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlWBATemplate" /> constants: xlWBATChart, xlWBATExcel4IntlMacroSheet, xlWBATExcel4MacroSheet, or xlWBATWorksheet. If this argument is omitted, Microsoft Excel creates a new workbook with a number of blank sheets (the number of sheets is set by the SheetsInNewWorkbook property).</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Workbooks.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Workbooks.CanCheckOut(System.String)">
      <summary>True if Microsoft Excel can check out a specified workbook from a server. Read/write Boolean.</summary>
      <param name="Filename">Required String. The name of the file to check out.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Workbooks.CheckOut(System.String)">
      <summary>Copies the specified workbook from a server to a local computer for editing.</summary>
      <param name="Filename">Required String. The name of the file to check out.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Workbooks.Close">
      <summary>Closes the object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Workbooks.Count">
      <summary>Returns the number of objects in the collection. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Workbooks.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Workbooks.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Workbooks.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Opens a workbook.</summary>
      <param name="Filename">Required String. The file name of the workbook to be opened.</param>
      <param name="UpdateLinks">Optional Object. Specifies the way links in the file are updated. If this argument is omitted, the user is prompted to specify how links will be updated. Otherwise, this argument is one of the values listed in the following table.If Microsoft Excel is opening a file in the WKS, WK1, or WK3 format and the <paramref name="UpdateLinks" /> argument is 2, Microsoft Excel generates charts from the graphs attached to the file. If the argument is 0, no charts are created.</param>
      <param name="ReadOnly">Optional Object. True to open the workbook in read-only mode.</param>
      <param name="Format">Optional Object. If Microsoft Excel is opening a text file, this argument specifies the delimiter character, as shown in the following table. If this argument is omitted, the current delimiter is used.</param>
      <param name="Password">Optional Object. A string that contains the password required to open a protected workbook. If this argument is omitted and the workbook requires a password, the user is prompted for the password.</param>
      <param name="WriteResPassword">Optional Object. A string that contains the password required to write to a write-reserved workbook. If this argument is omitted and the workbook requires a password, the user will be prompted for the password.</param>
      <param name="IgnoreReadOnlyRecommended">Optional Object. True to have Microsoft Excel not display the read-only recommended message (if the workbook was saved with the Read-Only Recommended option).</param>
      <param name="Origin">Optional Object. If the file is a text file, this argument indicates where it originated (so that code pages and Carriage Return/Line Feed (CR/LF) can be mapped correctly). Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> constants: xlMacintosh, xlWindows, or xlMSDOS. If this argument is omitted, the current operating system is used.</param>
      <param name="Delimiter">Optional Object. If the file is a text file and the Format argument is 6, this argument is a string that specifies the character to be used as the delimiter. For example, use Chr(9) for tabs, use "," for commas, use ";" for semicolons, or use a custom character. Only the first character of the string is used.</param>
      <param name="Editable">Optional Object. If the file is a Microsoft Excel 4.0 add-in, this argument is True to open the add-in so that it’s a visible window. If this argument is False or omitted, the add-in is opened as hidden, and it cannot be unhidden. This option doesn't apply to add-ins created in Microsoft Excel 5.0 or later. If the file is an Excel template, use True to open the specified template for editing or False to open a new workbook based on the specified template. The default value is False.</param>
      <param name="Notify">Optional Object. If the file cannot be opened in read/write mode, this argument is True to add the file to the file notification list. Microsoft Excel will open the file as read-only, poll the file notification list, and then notify the user when the file becomes available. If this argument is False or omitted, no notification is requested, and any attempts to open an unavailable file will fail.</param>
      <param name="Converter">Optional Object. The index of the first file converter to try when opening the file. The specified file converter is tried first; if this converter doesn’t recognize the file, all other converters are tried. The converter index consists of the row numbers of the converters returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" /> property.</param>
      <param name="AddToMru">Optional Object. True to add this workbook to the list of recently used files. The default value is False.</param>
      <param name="Local">Optional Object. True saves files against the language of Microsoft Excel (including control panel settings). False (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</param>
      <param name="CorruptLoad">Optional Object. Can be one of the following constants: xlNormalLoad, xlRepairFile, and xlExtractData. The default behavior if no value is specified is usually normal, but may be safe load or data recovery if Excel has already attempted to open the file. The first attempt is normal. If Excel stops operating while opening the file, the second attempt is safe load. If Excel again stops operating, the next attempt is data recovery.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Workbooks.OpenDatabase(System.String,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object representing a database.</summary>
      <param name="Filename">Required String. The connection string.</param>
      <param name="CommandText">Optional Object. The command text of the query.</param>
      <param name="CommandType">Optional Object. The command type of the query. The following command types are available: Default, SQL, and Table.</param>
      <param name="BackgroundQuery">Optional Object. The background of the query.</param>
      <param name="ImportDataAs">Optional Object. Determines the format of the query.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Workbooks.OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Loads and parses a text file as a new workbook with a single sheet that contains the parsed text-file data.</summary>
      <param name="Filename">Required String. Specifies the file name of the text file to be opened and parsed.</param>
      <param name="Origin">Optional Object. Specifies the origin of the text file. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> constants: xlMacintosh, xlWindows, or xlMSDOS. Additionally, this could be an integer representing the code page number of the desired code page. For example, "1256" would specify that the encoding of the source text file is Arabic (Windows). If this argument is omitted, the method uses the current setting of the File Origin option in the Text Import Wizard.</param>
      <param name="StartRow">Optional Object. The row number at which to start parsing text. The default value is 1.</param>
      <param name="DataType">Optional Object. Specifies the column format of the data in the file. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" /> constants: xlDelimited or xlFixedWidth. If this argument is not specified, Microsoft Excel attempts to determine the column format when it opens the file.</param>
      <param name="TextQualifier">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />. Specifies the text qualifier. Can be one of these <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> constants.xlTextQualifierDoubleQuote<paramref name="default" />xlTextQualifierNonexlTextQualifierSingleQuote</param>
      <param name="ConsecutiveDelimiter">Optional Object. True to have consecutive delimiters considered one delimiter. The default is False.</param>
      <param name="Tab">Optional Object. True to have the tab character be the delimiter (<paramref name="DataType" /> must be xlDelimited). The default value is False.</param>
      <param name="Semicolon">Optional Object. True to have the semicolon character be the delimiter (<paramref name="DataType" /> must be xlDelimited). The default value is False.</param>
      <param name="Comma">Optional Object. True to have the comma character be the delimiter (<paramref name="DataType" /> must be xlDelimited). The default value is False.</param>
      <param name="Space">Optional Object. True to have the space character be the delimiter (<paramref name="DataType" /> must be xlDelimited). The default value is False.</param>
      <param name="Other">Optional Object. True to have the character specified by the <paramref name="OtherChar" /> argument be the delimiter (<paramref name="DataType" /> must be xlDelimited). The default value is False.</param>
      <param name="OtherChar">Optional Object (required if <paramref name="Other" /> is True). Specifies the delimiter character when <paramref name="Other" /> is True. If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</param>
      <param name="FieldInfo">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" />. An array containing parse information for individual columns of data. The interpretation depends on the value of <paramref name="DataType" />. When the data is delimited, this argument is an array of two-element arrays, with each two-element array specifying the conversion options for a particular column. The first element is the column number (1-based), and the second element is one of theXlColumnDataType constants specifying how the column is parsed.xlGeneralFormat GeneralxlTextFormat TextxlMDYFormat MDY datexlDMYFormat DMY datexlYMDFormat YMD datexlMYDFormat MYD datexlDYMFormat DYM datexlYDMFormat YDM datexlEMDFormat EMD datexlSkipColumn Skip ColumnYou can use xlEMDFormat only if you have installed and selected Taiwanese language support. The xlEMDFormat constant specifies that Taiwanese era dates are being used.The column specifiers can be in any order. If there's no column specifier for a particular column in the input data, the column is parsed with the General setting.NotesIf you specify that a column is to be skipped, you must explicitly state the type for all remaining columns or the data will not parse correctly.If there is a recognizable date in the data, the cell will be formatted as a date in the worksheet even if the setting for the column is General. Additionally, if you specify one of the above date formats for a column and the data does not contain a recognized date, then the cell format in the worksheet will be General.If the source data has fixed-width columns, the first element in each two-element array specifies the position of the starting character in the column (as an integer; character 0 (zero) is the first character). The second element in the two-element array specifies the parse option for the column as a number between 0 and 9, as listed in the preceding table.</param>
      <param name="TextVisualLayout">Optional Object. The visual layout of the text.</param>
      <param name="DecimalSeparator">Optional Object. The decimal separator that Microsoft Excel uses when recognizing numbers. The default setting is the system setting.</param>
      <param name="ThousandsSeparator">Optional Object. The thousands separator that Excel uses when recognizing numbers. The default setting is the system setting.The following table shows the results of importing text into Excel for various import settings. Numeric results are displayed in the rightmost column.</param>
      <param name="TrailingMinusNumbers">Optional Object.</param>
      <param name="Local">Optional Object.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Workbooks.OpenXML(System.String,System.Object,System.Object)">
      <summary>Opens an XML data file. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</summary>
      <param name="Filename">Required String. The name of the file to open.</param>
      <param name="Stylesheets">Optional Object. Either a single value or an array of values that specify which XSL Transformation (XSLT) style sheet processing instructions to apply.</param>
      <param name="LoadOption">Optional Object. Specifies how Excel opens the XML data file. Can be one of these <see cref="T:Microsoft.Office.Interop.Excel.XlXmlLoadOption" /> constants:xlXmlLoadImportToList Places the contents of the XML data file in an XML list.xlXmlLoadMapXml Displays the schema of the XML data file in the XML Structure task pane.xlXmlLoadOpenXml Opens the XML data file. The contents of the file will be flattened.xlXmlLoadPromptUser Prompts the user to choose how to open the file.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Workbooks.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Worksheet">
      <summary>Represents a worksheet.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorksheetClass">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.#ctor"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass._CheckSpelling(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass._CodeName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass._DisplayRightToLeft"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass._Evaluate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass._PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Activate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.add_Activate(Microsoft.Office.Interop.Excel.DocEvents_ActivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.add_BeforeDoubleClick(Microsoft.Office.Interop.Excel.DocEvents_BeforeDoubleClickEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.add_BeforeRightClick(Microsoft.Office.Interop.Excel.DocEvents_BeforeRightClickEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.add_Calculate(Microsoft.Office.Interop.Excel.DocEvents_CalculateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.add_Change(Microsoft.Office.Interop.Excel.DocEvents_ChangeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.add_Deactivate(Microsoft.Office.Interop.Excel.DocEvents_DeactivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.add_FollowHyperlink(Microsoft.Office.Interop.Excel.DocEvents_FollowHyperlinkEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.add_PivotTableAfterValueChange(Microsoft.Office.Interop.Excel.DocEvents_PivotTableAfterValueChangeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.add_PivotTableBeforeAllocateChanges(Microsoft.Office.Interop.Excel.DocEvents_PivotTableBeforeAllocateChangesEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.add_PivotTableBeforeCommitChanges(Microsoft.Office.Interop.Excel.DocEvents_PivotTableBeforeCommitChangesEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.add_PivotTableBeforeDiscardChanges(Microsoft.Office.Interop.Excel.DocEvents_PivotTableBeforeDiscardChangesEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.add_PivotTableChangeSync(Microsoft.Office.Interop.Excel.DocEvents_PivotTableChangeSyncEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.add_PivotTableUpdate(Microsoft.Office.Interop.Excel.DocEvents_PivotTableUpdateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.add_SelectionChange(Microsoft.Office.Interop.Excel.DocEvents_SelectionChangeEventHandler)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.Application"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Arcs(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.AutoFilter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.AutoFilterMode"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorksheetClass.BeforeDoubleClick"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorksheetClass.BeforeRightClick"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Buttons(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Calculate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.Cells"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorksheetClass.Change"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.ChartObjects(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.CheckBoxes(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.CheckSpelling(System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.CircleInvalid"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.CircularReference"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.ClearArrows"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.ClearCircles"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.CodeName"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.Columns"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.Comments"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.ConsolidationFunction"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.ConsolidationOptions"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.ConsolidationSources"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Copy(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.Creator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.CustomProperties"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorksheetClass.Deactivate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Delete"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.DisplayAutomaticPageBreaks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.DisplayPageBreaks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.DisplayRightToLeft"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorksheetClass.DocEvents_Event_Activate"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorksheetClass.DocEvents_Event_Calculate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.DrawingObjects(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Drawings(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.DropDowns(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.EnableAutoFilter"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.EnableCalculation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.EnableFormatConditionsCalculation"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.EnableOutlining"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.EnablePivotTable"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.EnableSelection"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Evaluate(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.FilterMode"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorksheetClass.FollowHyperlink"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.GroupBoxes(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.GroupObjects(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.HPageBreaks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.Hyperlinks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.Index"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Labels(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Lines(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.ListBoxes(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.ListObjects"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.MailEnvelope"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Move(System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.Name"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.Names"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.Next"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.OLEObjects(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.OnCalculate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.OnData"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.OnDoubleClick"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.OnEntry"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.OnSheetActivate"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.OnSheetDeactivate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.OptionButtons(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.Outline"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Ovals(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.PageSetup"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.Parent"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Paste(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Pictures(System.Object)"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorksheetClass.PivotTableAfterValueChange"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorksheetClass.PivotTableBeforeAllocateChanges"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorksheetClass.PivotTableBeforeCommitChanges"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorksheetClass.PivotTableBeforeDiscardChanges"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorksheetClass.PivotTableChangeSync"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.PivotTables(System.Object)"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorksheetClass.PivotTableUpdate"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.Previous"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.PrintedCommentPages"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.PrintPreview(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.ProtectContents"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.ProtectDrawingObjects"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.Protection"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.ProtectionMode"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.ProtectScenarios"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.QueryTables"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.Range(System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Rectangles(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.remove_Activate(Microsoft.Office.Interop.Excel.DocEvents_ActivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.remove_BeforeDoubleClick(Microsoft.Office.Interop.Excel.DocEvents_BeforeDoubleClickEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.remove_BeforeRightClick(Microsoft.Office.Interop.Excel.DocEvents_BeforeRightClickEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.remove_Calculate(Microsoft.Office.Interop.Excel.DocEvents_CalculateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.remove_Change(Microsoft.Office.Interop.Excel.DocEvents_ChangeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.remove_Deactivate(Microsoft.Office.Interop.Excel.DocEvents_DeactivateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.remove_FollowHyperlink(Microsoft.Office.Interop.Excel.DocEvents_FollowHyperlinkEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.remove_PivotTableAfterValueChange(Microsoft.Office.Interop.Excel.DocEvents_PivotTableAfterValueChangeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.remove_PivotTableBeforeAllocateChanges(Microsoft.Office.Interop.Excel.DocEvents_PivotTableBeforeAllocateChangesEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.remove_PivotTableBeforeCommitChanges(Microsoft.Office.Interop.Excel.DocEvents_PivotTableBeforeCommitChangesEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.remove_PivotTableBeforeDiscardChanges(Microsoft.Office.Interop.Excel.DocEvents_PivotTableBeforeDiscardChangesEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.remove_PivotTableChangeSync(Microsoft.Office.Interop.Excel.DocEvents_PivotTableChangeSyncEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.remove_PivotTableUpdate(Microsoft.Office.Interop.Excel.DocEvents_PivotTableUpdateEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.remove_SelectionChange(Microsoft.Office.Interop.Excel.DocEvents_SelectionChangeEventHandler)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.ResetAllPageBreaks"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.Rows"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Scenarios(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.Scripts"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.ScrollArea"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.ScrollBars(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Select(System.Object)"></member>
    <member name="E:Microsoft.Office.Interop.Excel.WorksheetClass.SelectionChange"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.SetBackgroundPicture(System.String)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.Shapes"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.ShowAllData"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.ShowDataForm"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.SmartTags"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.Sort"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Spinners(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.StandardHeight"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.StandardWidth"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.Tab"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.TextBoxes(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.TransitionExpEval"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.TransitionFormEntry"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.Type"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Unprotect(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.UsedRange"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.Visible"></member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.VPageBreaks"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.XmlDataQuery(System.String,System.Object,System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.XmlMapQuery(System.String,System.Object,System.Object)"></member>
    <member name="T:Microsoft.Office.Interop.Excel.WorksheetFunction">
      <summary>Used as a container for Microsoft Excel worksheet functions that can be called from Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction._WSFunction(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AccrInt(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the accrued interest for a security that pays periodic interest.</summary>
      <param name="Arg1">Issue date - Security's issue date.</param>
      <param name="Arg2">First interest - Security's first interest date.</param>
      <param name="Arg3">Settlement - Security's settlement date</param>
      <param name="Arg4">Rate - Security's annual coupon rate.</param>
      <param name="Arg5">Par - Security's par value.</param>
      <param name="Arg6">Frequency - Number of coupon payments per year.</param>
      <param name="Arg7">Basis - The type of day count basis to use.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AccrIntM(System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the accrued interest for a security that pays interest at maturity.</summary>
      <param name="Arg1">The security's issue date.</param>
      <param name="Arg2">The security's maturity date.</param>
      <param name="Arg3">The security's annual coupon rate.</param>
      <param name="Arg4">The security's par value. If you omit par, ACCRINTM uses $1,000.</param>
      <param name="Arg5">The type of day count basis to use.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Acos(System.Double)">
      <summary>Returns the arccosine, or inverse cosine, of a number. The arccosine is the angle whose cosine is <paramref name="Arg1" />. The returned angle is given in radians in the range 0 (zero) to pi.</summary>
      <param name="Arg1">The cosine of the angle you want and must be from -1 to 1.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Acosh(System.Double)">
      <summary>Returns the inverse hyperbolic cosine of a number. Number must be greater than or equal to 1. The inverse hyperbolic cosine is the value whose hyperbolic cosine is <paramref name="Arg1" />, so Acosh(Cosh(number)) equals <paramref name="Arg1" />.</summary>
      <param name="Arg1">Any real number equal to or greater than 1.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Aggregate(System.Double,System.Double,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns an aggregate in a list or database.</summary>
      <param name="Arg1">Function_num - A number from 1 to 19 that specifies which function to use. </param>
      <param name="Arg2">Options - A numerical value that determines which values to ignore in the evaluation range for the function. </param>
      <param name="Arg3">Ref1 - The first numeric argument for functions that take multiple numeric arguments for which you want the aggregate value.</param>
      <param name="Arg4">Ref2 - Ref30 - Numeric arguments 2 to 30 for which you want the aggregate value.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AmorDegrc(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the depreciation for each accounting period. This function is provided for the French accounting system.</summary>
      <param name="Arg1">The cost of the asset.</param>
      <param name="Arg2">The date of the purchase of the asset.</param>
      <param name="Arg3">The date of the end of the first period.</param>
      <param name="Arg4">The salvage value at the end of the life of the asset.</param>
      <param name="Arg5">The period.</param>
      <param name="Arg6">The rate of depreciation.</param>
      <param name="Arg7">The year basis to be used.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AmorLinc(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the depreciation for each accounting period. This function is provided for the French accounting system.</summary>
      <param name="Arg1">The cost of the asset.</param>
      <param name="Arg2">The date of the purchase of the asset.</param>
      <param name="Arg3">The date of the end of the first period.</param>
      <param name="Arg4">The salvage value at the end of the life of the asset.</param>
      <param name="Arg5">The period.</param>
      <param name="Arg6">The rate of depreciation.</param>
      <param name="Arg7">The year basis to be used.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.And(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns true if all its arguments are true; returns false if one or more argument is false.</summary>
      <param name="Arg1">1 to 30 conditions you want to test that can be either true or false.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetFunction.Application">
      <summary>When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object. You can use this property with an OLE Automation object to return the application of that object. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Asc(System.String)">
      <summary>For Double-byte character set (DBCS) languages, changes full-width (double-byte) characters to half-width (single-byte) characters.</summary>
      <param name="Arg1">The text or a reference to a cell that contains the text you want to change. If text does not contain any full-width letters, text is not changed.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Asin(System.Double)">
      <summary>Returns the arcsine, or inverse sine, of a number. The arcsine is the angle whose sine is <paramref name="Arg1" />. The returned angle is given in radians in the range -pi/2 to pi/2.</summary>
      <param name="Arg1">The sine of the angle you want and must be from -1 to 1.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Asinh(System.Double)">
      <summary>Returns the inverse hyperbolic sine of a number. The inverse hyperbolic sine is the value whose hyperbolic sine is <paramref name="Arg1" />, so Asinh(Sinh(number)) equals <paramref name="Arg1" />.</summary>
      <param name="Arg1">Any real number.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Atan2(System.Double,System.Double)">
      <summary>Returns the arctangent, or inverse tangent, of the specified x- and y-coordinates. The arctangent is the angle from the x-axis to a line containing the origin (0, 0) and a point with coordinates (x_num, y_num). The angle is given in radians between -pi and pi, excluding -pi.</summary>
      <param name="Arg1">The x-coordinate of the point.</param>
      <param name="Arg2">The y-coordinate of the point.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Atanh(System.Double)">
      <summary>Returns the inverse hyperbolic tangent of a number. Number must be between -1 and 1 (excluding -1 and 1). </summary>
      <param name="Arg1">Any real number between 1 and -1.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AveDev(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the average of the absolute deviations of data points from their mean. AveDev is a measure of the variability in a data set.</summary>
      <param name="Arg1">1 to 30 arguments for which you want the average of the absolute deviations. You can also use a single array or a reference to an array instead of arguments separated by commas.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Average(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the average (arithmetic mean) of the arguments.</summary>
      <param name="Arg1">1 to 30 numeric arguments for which you want the average.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AverageIf(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
      <summary>Returns the average (arithmetic mean) of all the cells in a range that meet a given criteria.</summary>
      <param name="Arg1">One or more cells to average.</param>
      <param name="Arg2">The criteria in the form of a number, expression, cell reference, or text that defines which cells are averaged. For example, criteria can be expressed as 32, "32", "&gt;32", "apples", or B4.</param>
      <param name="Arg3">The actual set of cells to average. If omitted, range is used.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AverageIfs(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the average (arithmetic mean) of all cells that meet multiple criteria.</summary>
      <param name="Arg1">One or more ranges in which to evaluate the associated criteria.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BahtText(System.Double)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BesselI(System.Object,System.Object)">
      <summary>Returns the modified Bessel function, which is equivalent to the Bessel function evaluated for purely imaginary arguments.</summary>
      <param name="Arg1">The value at which to evaluate the function.</param>
      <param name="Arg2">The order of the Bessel function. If n is not an integer, it is truncated.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BesselJ(System.Object,System.Object)">
      <summary>Returns the Bessel function.</summary>
      <param name="Arg1">The value at which to evaluate the function.</param>
      <param name="Arg2">The order of the Bessel function. If n is not an integer, it is truncated.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BesselK(System.Object,System.Object)">
      <summary>Returns the modified Bessel function, which is equivalent to the Bessel functions evaluated for purely imaginary arguments.</summary>
      <param name="Arg1">The value at which to evaluate the function.</param>
      <param name="Arg2">The order of the function. If n is not an integer, it is truncated.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BesselY(System.Object,System.Object)">
      <summary>Returns the Bessel function, which is also called the Weber function or the Neumann function.</summary>
      <param name="Arg1">The value at which to evaluate the function.</param>
      <param name="Arg2">The order of the function. If n is not an integer, it is truncated.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)">
      <summary>Returns the beta cumulative distribution function.</summary>
      <param name="Arg1">The value between A and B at which to evaluate the function.</param>
      <param name="Arg2">The Alpha parameter of the distribution.</param>
      <param name="Arg3">The Beta parameter of the distribution.</param>
      <param name="Arg4">Cumulative - a logical value that determines the form of the function. If cumulative is true, BETA.DIST returns the cumulative distribution function; if false, it returns the probability density function.</param>
      <param name="Arg5">An optional lower bound to the interval of x.</param>
      <param name="Arg6">An optional upper bound to the interval of x.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Inv(System.Double,System.Double,System.Double,System.Object,System.Object)">
      <summary>Returns the inverse of the cumulative distribution function for a specified beta distribution. That is, if probability = Beta_Dist(x,...), then Beta_Inv(probability,...) = x.</summary>
      <param name="Arg1">A probability associated with the beta distribution.</param>
      <param name="Arg2">The Alpha parameter of the distribution.</param>
      <param name="Arg3">The Beta parameter the distribution.</param>
      <param name="Arg4">An optional lower bound to the interval of x.</param>
      <param name="Arg5">An optional upper bound to the interval of x.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BetaDist(System.Double,System.Double,System.Double,System.Object,System.Object)">
      <summary>Returns the beta cumulative distribution function.</summary>
      <param name="Arg1">The value between A and B at which to evaluate the function.</param>
      <param name="Arg2">A parameter of the distribution.</param>
      <param name="Arg3">A parameter of the distribution.</param>
      <param name="Arg4">An optional lower bound to the interval of x.</param>
      <param name="Arg5">An optional upper bound to the interval of x.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BetaInv(System.Double,System.Double,System.Double,System.Object,System.Object)">
      <summary>Returns the inverse of the cumulative distribution function for a specified beta distribution. That is, if probability = BetaDist(x,...), then BetaInv(probability,...) = x.</summary>
      <param name="Arg1">A probability associated with the beta distribution.</param>
      <param name="Arg2">The Alpha parameter of the distribution.</param>
      <param name="Arg3">The Beta parameter the distribution.</param>
      <param name="Arg4">An optional lower bound to the interval of x.</param>
      <param name="Arg5">An optional upper bound to the interval of x.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bin2Dec(System.Object)">
      <summary>Converts a binary number to decimal.</summary>
      <param name="Arg1">The binary number you want to convert. Number cannot contain more than 10 characters (10 bits). The most significant bit of number is the sign bit. The remaining 9 bits are magnitude bits. Negative numbers are represented using two's-complement notation.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bin2Hex(System.Object,System.Object)">
      <summary>Converts a binary number to hexadecimal.</summary>
      <param name="Arg1">The binary number you want to convert. Number cannot contain more than 10 characters (10 bits). The most significant bit of number is the sign bit. The remaining 9 bits are magnitude bits. Negative numbers are represented using two's-complement notation.</param>
      <param name="Arg2">The number of characters to use. If places is omitted, Bin2Hex uses the minimum number of characters necessary. Places is useful for padding the return value with leading 0s (zeros).</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bin2Oct(System.Object,System.Object)">
      <summary>Converts a binary number to octal.</summary>
      <param name="Arg1">The binary number you want to convert. Number cannot contain more than 10 characters (10 bits). The most significant bit of number is the sign bit. The remaining 9 bits are magnitude bits. Negative numbers are represented using two's-complement notation.</param>
      <param name="Arg2">The number of characters to use. If places is omitted, Bin2Oct uses the minimum number of characters necessary. Places is useful for padding the return value with leading 0s (zeros).</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Binom_Dist(System.Double,System.Double,System.Double,System.Boolean)">
      <summary>Returns the individual term binomial distribution probability.</summary>
      <param name="Arg1">Number_s - the number of successes in trials.</param>
      <param name="Arg2">Trials - the number of independent trials.</param>
      <param name="Arg3">Probability_s - the probability of success on each trial.</param>
      <param name="Arg4">Cumulative - a logical value that determines the form of the function. If cumulative is True, then the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Binom_Dist(System.Double,System.Double,System.Double,System.Boolean)" /> method returns the cumulative distribution function, which is the probability that there are at most number_s successes; if False, it returns the probability mass function, which is the probability that there are number_s successes.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Binom_Inv(System.Double,System.Double,System.Double)">
      <summary>Returns the inverse of the individual term binomial distribution probability.</summary>
      <param name="Arg1">Trials - the number of Bernoulli trials.</param>
      <param name="Arg2">Probability_s - the probability of a success on each trial.</param>
      <param name="Arg3">Alpha - the criterion value.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BinomDist(System.Double,System.Double,System.Double,System.Boolean)">
      <summary>Returns the individual term binomial distribution probability.</summary>
      <param name="Arg1">The number of successes in trials.</param>
      <param name="Arg2">The number of independent trials.</param>
      <param name="Arg3">The probability of success on each trial.</param>
      <param name="Arg4">A logical value that determines the form of the function. If cumulative is true, then BinomDist returns the cumulative distribution function, which is the probability that there are at most number_s successes; if false, it returns the probability mass function, which is the probability that there are number_s successes.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ceiling(System.Double,System.Double)">
      <summary>Returns number rounded up, away from zero, to the nearest multiple of significance.</summary>
      <param name="Arg1">Number - the value you want to round.</param>
      <param name="Arg2">Significance - the multiple to which you want to round.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ceiling_Precise(System.Double,System.Object)">
      <summary>Returns the specified number rounded to the nearest multiple of significance.</summary>
      <param name="Arg1">Number - the value you want to round.</param>
      <param name="Arg2">Significance - the multiple to which you want to round.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiDist(System.Double,System.Double)">
      <summary>Returns the one-tailed probability of the chi-squared distribution. </summary>
      <param name="Arg1">The value at which you want to evaluate the distribution.</param>
      <param name="Arg2">The number of degrees of freedom.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiInv(System.Double,System.Double)">
      <summary>Returns the inverse of the one-tailed probability of the chi-squared distribution.</summary>
      <param name="Arg1">A probability associated with the chi-squared distribution.</param>
      <param name="Arg2">The number of degrees of freedom.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Dist(System.Double,System.Double,System.Boolean)">
      <summary>Returns the chi-squared distribution.</summary>
      <param name="Arg1">X - The value at which you want to evaluate the distribution.</param>
      <param name="Arg2">Deg_freedom - The number of degrees of freedom.</param>
      <param name="Arg3">Cumulative - A logical value that determines the form of the function. If cumulative is true, CHISQ_DIST returns the cumulative distribution function; if false, it returns the probability density function.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Dist_RT(System.Double,System.Double)">
      <summary>Returns the right-tailed probability of the chi-squared distribution.</summary>
      <param name="Arg1">The value at which you want to evaluate the distribution.</param>
      <param name="Arg2">The number of degrees of freedom.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Inv(System.Double,System.Double)">
      <summary>Returns the inverse of the left-tailed probability of the chi-squared distribution.</summary>
      <param name="Arg1">Probability - A probability associated with the chi-squared distribution.</param>
      <param name="Arg2">Deg_freedom - The number of degrees of freedom.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Inv_RT(System.Double,System.Double)">
      <summary>Returns the inverse of the right-tailed probability of the chi-squared distribution.</summary>
      <param name="Arg1">A probability associated with the chi-squared distribution.</param>
      <param name="Arg2">The number of degrees of freedom.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Test(System.Object,System.Object)">
      <summary>Returns the test for independence.</summary>
      <param name="Arg1">The range of data that contains observations to test against expected values.</param>
      <param name="Arg2">The range of data that contains the ratio of the product of row totals and column totals to the grand total.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiTest(System.Object,System.Object)">
      <summary>Returns the test for independence. </summary>
      <param name="Arg1">The range of data that contains observations to test against expected values.</param>
      <param name="Arg2">ImportantThis function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage. This function is still available for compatibility with earlier versions of Excel. However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality. For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Test(System.Object,System.Object)" /> method. The range of data that contains the ratio of the product of row totals and column totals to the grand total.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Choose(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Uses <paramref name="Arg1" /> as the index to return a value from the list of value arguments.</summary>
      <param name="Arg1">Specifies which value argument is selected. Arg1 must be a number between 1 and 29, or a formula or reference to a cell containing a number between 1 and 29.</param>
      <param name="Arg2">1 to 29 value arguments from which Choose selects a value or an action to perform based on Arg1. The arguments can be numbers, cell references, defined names, formulas, functions, or text.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Clean(System.String)">
      <summary>Removes all nonprintable characters from text.</summary>
      <param name="Arg1">Any worksheet information from which you want to remove nonprintable characters.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Combin(System.Double,System.Double)">
      <summary>Returns the number of combinations for a given number of items. Use Combin to determine the total possible number of groups for a given number of items.</summary>
      <param name="Arg1">The number of items.</param>
      <param name="Arg2">The number of items in each combination.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)">
      <summary>Converts real and imaginary coefficients into a complex number of the form x + yi or x + yj.</summary>
      <param name="Arg1">The real coefficient of the complex number.</param>
      <param name="Arg2">The imaginary coefficient of the complex number.</param>
      <param name="Arg3">The suffix for the imaginary component of the complex number. If omitted, suffix is assumed to be "i".</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Confidence(System.Double,System.Double,System.Double)">
      <summary>Returns a value that you can use to construct a confidence interval for a population mean.</summary>
      <param name="Arg1">The significance level used to compute the confidence level. The confidence level equals 100*(1 - alpha)%, or in other words, an alpha of 0.05 indicates a 95 percent confidence level.</param>
      <param name="Arg2">The population standard deviation for the data range and is assumed to be known.</param>
      <param name="Arg3">The sample size.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Confidence_Norm(System.Double,System.Double,System.Double)">
      <summary>Returns a value that you can use to construct a confidence interval for a population mean.</summary>
      <param name="Arg1">The significance level used to compute the confidence level. The confidence level equals 100*(1 - alpha)%, or in other words, an alpha of 0.05 indicates a 95 percent confidence level.</param>
      <param name="Arg2">The population standard deviation for the data range and is assumed to be known.</param>
      <param name="Arg3">The sample size.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Confidence_T(System.Double,System.Double,System.Double)">
      <summary>Returns the confidence interval for a population mean, using a Student's t distribution.</summary>
      <param name="Arg1">Alpha - The significance level used to compute the confidence level. The confidence level equals 100*(1 - alpha)%, or in other words, an alpha of 0.05 indicates a 95 percent confidence level.</param>
      <param name="Arg2">Standard_dev - The population standard deviation for the data range and is assumed to be known.</param>
      <param name="Arg3">Size - The sample size.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Convert(System.Object,System.Object,System.Object)">
      <summary>Converts a number from one measurement system to another. For example, Convert can translate a table of distances in miles to a table of distances in kilometers.</summary>
      <param name="Arg1">The value in from_units to convert.</param>
      <param name="Arg2">The units for number.</param>
      <param name="Arg3">The units for the result. Convert accepts the following text values (in quotation marks) for from_unit and to_unit which are listed in the Remarks section below.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Correl(System.Object,System.Object)">
      <summary>Returns the correlation coefficient of the <paramref name="Arg1" /> and <paramref name="Arg2" /> cell ranges.</summary>
      <param name="Arg1">A cell range of values.</param>
      <param name="Arg2">A second cell range of values.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Cosh(System.Double)">
      <summary>Returns the hyperbolic cosine of a number.</summary>
      <param name="Arg1">Any real number for which you want to find the hyperbolic cosine.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Count(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Counts the number of cells that contain numbers and counts numbers within the list of arguments.</summary>
      <param name="Arg1">1 to 30 arguments that can contain or refer to a variety of different types of data, but only numbers are counted.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CountA(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Counts the number of cells that are not empty and the values within the list of arguments.</summary>
      <param name="Arg1">1 to 30 arguments representing the values you want to count.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CountBlank(Microsoft.Office.Interop.Excel.Range)">
      <summary>Counts empty cells in a specified range of cells.</summary>
      <param name="Arg1">The range from which you want to count the blank cells.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CountIf(Microsoft.Office.Interop.Excel.Range,System.Object)">
      <summary>Counts the number of cells within a range that meet the given criteria.</summary>
      <returns>Returns <see cref="T:System.Double" />.</returns>
      <param name="Arg1">The range of cells from which you want to count cells.</param>
      <param name="Arg2">The criteria in the form of a number, expression, cell reference, or text that defines which cells will be counted. For example, criteria can be expressed as 32, "32", "&gt;32", "apples", or B4.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CountIfs(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Counts the number of cells within a range that meet multiple criteria.</summary>
      <param name="Arg1">One or more ranges in which to evaluate the associated criteria.</param>
      <param name="Arg2">One or more criteria in the form of a number, expression, cell reference, or text that define which cells will be counted. For example, criteria can be expressed as 32, "32", "&gt;32", "apples", or B4.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CoupDayBs(System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the number of days from the beginning of the coupon period to the settlement date.</summary>
      <param name="Arg1">The security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</param>
      <param name="Arg2">The security's maturity date. The maturity date is the date when the security expires.</param>
      <param name="Arg3">The number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</param>
      <param name="Arg4">The type of day count basis to use.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CoupDays(System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the number of days in the coupon period that contains the settlement date.</summary>
      <param name="Arg1">The security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</param>
      <param name="Arg2">The security's maturity date. The maturity date is the date when the security expires.</param>
      <param name="Arg3">The number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</param>
      <param name="Arg4">The type of day count basis to use.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CoupDaysNc(System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the number of days from the settlement date to the next coupon date.</summary>
      <param name="Arg1">The security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</param>
      <param name="Arg2">The security's maturity date. The maturity date is the date when the security expires.</param>
      <param name="Arg3">The number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</param>
      <param name="Arg4">The type of day count basis to use.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CoupNcd(System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns a number that represents the next coupon date after the settlement date.</summary>
      <param name="Arg1">The security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</param>
      <param name="Arg2">The security's maturity date. The maturity date is the date when the security expires.</param>
      <param name="Arg3">The number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</param>
      <param name="Arg4">The type of day count basis to use.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CoupNum(System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the number of coupons payable between the settlement date and maturity date, rounded up to the nearest whole coupon.</summary>
      <param name="Arg1">The security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</param>
      <param name="Arg2">The security's maturity date. The maturity date is the date when the security expires.</param>
      <param name="Arg3">The number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</param>
      <param name="Arg4">The type of day count basis to use.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CoupPcd(System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the previous coupon date before the settlement date.</summary>
      <param name="Arg1">The security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</param>
      <param name="Arg2">The security's maturity date. The maturity date is the date when the security expires.</param>
      <param name="Arg3">The number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</param>
      <param name="Arg4">The type of day count basis to use.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Covar(System.Object,System.Object)">
      <summary>Returns covariance, the average of the products of deviations for each data point pair.</summary>
      <param name="Arg1">The first cell range of integers.</param>
      <param name="Arg2">The second cell range of integers.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Covariance_P(System.Object,System.Object)">
      <summary>Returns population covariance, the average of the products of deviations for each data point pair.</summary>
      <param name="Arg1">The first cell range of integers.</param>
      <param name="Arg2">The second cell range of integers.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Covariance_S(System.Object,System.Object)">
      <summary>Returns the sample covariance, the average of the products of deviations for each data point pair in two data sets.</summary>
      <param name="Arg1">Array1 - The first cell range of integers.</param>
      <param name="Arg2">Array2 - The second cell range of integers.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetFunction.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. Read-only long.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CritBinom(System.Double,System.Double,System.Double)">
      <summary>Returns the smallest value for which the cumulative binomial distribution is greater than or equal to a criterion value.</summary>
      <param name="Arg1">The number of Bernoulli trials.</param>
      <param name="Arg2">The probability of a success on each trial.</param>
      <param name="Arg3">The criterion value.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CumIPmt(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the cumulative interest paid on a loan between start_period and end_period.</summary>
      <param name="Arg1">The interest rate.</param>
      <param name="Arg2">The total number of payment periods.</param>
      <param name="Arg3">The present value.</param>
      <param name="Arg4">The first period in the calculation. Payment periods are numbered beginning with 1.</param>
      <param name="Arg5">The last period in the calculation.</param>
      <param name="Arg6">The timing of the payment.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CumPrinc(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the cumulative principal paid on a loan between start_period and end_period.</summary>
      <param name="Arg1">The interest rate.</param>
      <param name="Arg2">The total number of payment periods.</param>
      <param name="Arg3">The present value.</param>
      <param name="Arg4">The first period in the calculation. Payment periods are numbered beginning with 1.</param>
      <param name="Arg5">The last period in the calculation.</param>
      <param name="Arg6">The last period in the calculation.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DAverage(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
      <summary>Averages the values in a column of a list or database that match conditions you specify.</summary>
      <param name="Arg1">The range of cells that makes up the list or database. A database is a list of related data in which rows of related information are records, and columns of data are fields. The first row of the list contains labels for each column.</param>
      <param name="Arg2">Indicates which column is used in the function. Enter the column label enclosed between double quotation marks, such as "Age" or "Yield," or a number (without quotation marks) that represents the position of the column within the list: 1 for the first column, 2 for the second column, and so on.</param>
      <param name="Arg3">The range of cells that contains the conditions you specify. You can use any range for the criteria argument, as long as it includes at least one column label and at least one cell below the column label in which you specify a condition for the column.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Days360(System.Object,System.Object,System.Object)">
      <summary>Returns the number of days between two dates based on a 360-day year (twelve 30-day months), which is used in some accounting calculations.</summary>
      <param name="Arg1">The two dates between which you want to know the number of days. If start_date (Arg1) occurs after end_date (Arg2), Days360 returns a negative number. Dates should be entered by using the DATE function, or as results of other formulas or functions.</param>
      <param name="Arg2">The two dates between which you want to know the number of days. If start_date (Arg1) occurs after end_date (Arg2), Days360 returns a negative number. Dates should be entered by using the DATE function, or as results of other formulas or functions.</param>
      <param name="Arg3">A Boolean value that specifies whether to use the U.S. or European method in the calculation.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Db(System.Double,System.Double,System.Double,System.Double,System.Object)">
      <summary>Returns the depreciation of an asset for a specified period using the fixed-declining balance method.</summary>
      <param name="Arg1">Cost - the initial cost of the asset.</param>
      <param name="Arg2">Salvage - the value at the end of the depreciation (sometimes called the salvage value of the asset).</param>
      <param name="Arg3">Life - the number of periods over which the asset is being depreciated (sometimes called the useful life of the asset).</param>
      <param name="Arg4">Period - the period for which you want to calculate the depreciation. Period must use the same units as life.</param>
      <param name="Arg5">Month - the number of months in the first year. If month is omitted, it is assumed to be 12.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dbcs(System.String)">
      <summary>Converts half-width (single-byte) letters within a character string to full-width (double-byte) characters. The name of the function (and the characters that it converts) depends upon the language settings.</summary>
      <param name="Arg1">The text or a reference to a cell that contains the text that you want to change.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DCount(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
      <summary>Counts the cells that contain numbers in a column of a list or database that match conditions that you specify.</summary>
      <param name="Arg1">Database - the range of cells that makes up the list or database. A database is a list of related data in which rows of related information are records, and columns of data are fields. The first row of the list contains labels for each column.</param>
      <param name="Arg2">Field - indicates which column is used in the function. Enter the column label enclosed between double quotation marks, such as "Age" or "Yield," or a number (without quotation marks) that represents the position of the column within the list: 1 for the first column, 2 for the second column, and so on.</param>
      <param name="Arg3">Criteria - the range of cells that contains the conditions that you specify. You can use any range for the criteria argument, as long as the argument includes at least one column label and at least one cell below the column label in which you specify a condition for the column.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DCountA(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
      <summary>Counts the nonblank cells in a column of a list or database that match conditions that you specify.</summary>
      <param name="Arg1">Database - the range of cells that makes up the list or database. A database is a list of related data in which rows of related information are records, and columns of data are fields. The first row of the list contains labels for each column.</param>
      <param name="Arg2">Field - indicates which column is used in the function. Enter the column label enclosed between double quotation marks, such as "Age" or "Yield," or a number (without quotation marks) that represents the position of the column within the list: 1 for the first column, 2 for the second column, and so on.</param>
      <param name="Arg3">Criteria - the range of cells that contains the conditions that you specify. You can use any range for the criteria argument, as long as it includes at least one column label and at least one cell below the column label in which you specify a condition for the column.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ddb(System.Double,System.Double,System.Double,System.Double,System.Object)">
      <summary>Returns the depreciation of an asset for a specified period using the double-declining balance method or some other method you specify.</summary>
      <param name="Arg1">Cost - the initial cost of the asset.</param>
      <param name="Arg2">Salvage - the value at the end of the depreciation (sometimes called the salvage value of the asset). This value can be 0.</param>
      <param name="Arg3">Life - the number of periods over which the asset is being depreciated (sometimes called the useful life of the asset).</param>
      <param name="Arg4">Period - the period for which you want to calculate the depreciation. Period must use the same units as life.</param>
      <param name="Arg5">Factor - the rate at which the balance declines. If factor is omitted, it is assumed to be 2 (the double-declining balance method).</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dec2Bin(System.Object,System.Object)">
      <summary>Converts a decimal number to binary.</summary>
      <param name="Arg1">Number - the decimal integer you want to convert. If number is negative, valid place values are ignored and Dec2Bin returns a 10-character (10-bit) binary number in which the most significant bit is the sign bit. The remaining 9 bits are magnitude bits. Negative numbers are represented using two's-complement notation.</param>
      <param name="Arg2">Places - the number of characters to use. If places is omitted, Dec2Bin uses the minimum number of characters necessary. Places is useful for padding the return value with leading 0s (zeros).</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dec2Hex(System.Object,System.Object)">
      <summary>Converts a decimal number to hexadecimal.</summary>
      <param name="Arg1">Number - the decimal integer you want to convert. If number is negative, places is ignored and Dec2Hex returns a 10-character (40-bit) hexadecimal number in which the most significant bit is the sign bit. The remaining 39 bits are magnitude bits. Negative numbers are represented using two's-complement notation.</param>
      <param name="Arg2">Places - the number of characters to use. If places is omitted, Dec2Hex uses the minimum number of characters necessary. Places is useful for padding the return value with leading 0s (zeros).</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dec2Oct(System.Object,System.Object)">
      <summary>Converts a decimal number to octal.</summary>
      <param name="Arg1">Number - the decimal integer you want to convert. If number is negative, places is ignored and Dec2Oct returns a 10-character (30-bit) octal number in which the most significant bit is the sign bit. The remaining 29 bits are magnitude bits. Negative numbers are represented using two's-complement notation.</param>
      <param name="Arg2">Places - the number of characters to use. If places is omitted, Dec2Oct uses the minimum number of characters necessary. Places is useful for padding the return value with leading 0s (zeros).</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Degrees(System.Double)">
      <summary>Converts radians into degrees.</summary>
      <param name="Arg1">Angle - the angle in radians that you want to convert.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Delta(System.Object,System.Object)">
      <summary>Tests whether two values are equal. Returns 1 if number1 = number2; returns 0 otherwise.</summary>
      <param name="Arg1">Number1 - the first number.</param>
      <param name="Arg2">Number2 - the second number. If omitted, number2 is assumed to be zero.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DevSq(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the sum of squares of deviations of data points from their sample mean.</summary>
      <param name="Arg1">Number1, number2, ... - are 1 to 30 arguments for which you want to calculate the sum of squared deviations. You can also use a single array or a reference to an array instead of arguments separated by commas.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DGet(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
      <summary>Extracts a single value from a column of a list or database that matches conditions that you specify.</summary>
      <param name="Arg1">Database - the range of cells that makes up the list or database. A database is a list of related data in which rows of related information are records, and columns of data are fields. The first row of the list contains labels for each column.</param>
      <param name="Arg2">Field - indicates which column is used in the function. Enter the column label enclosed between double quotation marks, such as "Age" or "Yield," or a number (without quotation marks) that represents the position of the column within the list: 1 for the first column, 2 for the second column, and so on.</param>
      <param name="Arg3">Criteria - the range of cells that contains the conditions that you specify. You can use any range for the criteria argument, as long as it includes at least one column label and at least one cell below the column label in which you specify a condition for the column.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Disc(System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the discount rate for a security.</summary>
      <param name="Arg1">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</param>
      <param name="Arg2">Maturity - the security's maturity date. The maturity date is the date when the security expires.</param>
      <param name="Arg3">Pr - the security's price per $100 face value.</param>
      <param name="Arg4">Redemption - the security's redemption value per $100 face value.</param>
      <param name="Arg5">Basis - the type of day count basis to use.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DMax(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
      <summary>Returns the largest number in a column of a list or database that matches conditions you that specify.</summary>
      <param name="Arg1">Database - the range of cells that makes up the list or database. A database is a list of related data in which rows of related information are records, and columns of data are fields. The first row of the list contains labels for each column.</param>
      <param name="Arg2">Field - indicates which column is used in the function. Enter the column label enclosed between double quotation marks, such as "Age" or "Yield," or a number (without quotation marks) that represents the position of the column within the list: 1 for the first column, 2 for the second column, and so on.</param>
      <param name="Arg3">Criteria - the range of cells that contains the conditions that you specify. You can use any range for the criteria argument, as long as it includes at least one column label and at least one cell below the column label in which you specify a condition for the column.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DMin(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
      <summary>Returns the smallest number in a column of a list or database that matches conditions that you specify.</summary>
      <param name="Arg1">Database - the range of cells that makes up the list or database. A database is a list of related data in which rows of related information are records, and columns of data are fields. The first row of the list contains labels for each column.</param>
      <param name="Arg2">Field - indicates which column is used in the function. Enter the column label enclosed between double quotation marks, such as "Age" or "Yield," or a number (without quotation marks) that represents the position of the column within the list: 1 for the first column, 2 for the second column, and so on.</param>
      <param name="Arg3">Criteria - the range of cells that contains the conditions that you specify. You can use any range for the criteria argument, as long as it includes at least one column label and at least one cell below the column label in which you specify a condition for the column.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dollar(System.Double,System.Object)">
      <summary>The function described in this Help topic converts a number to text format and applies a currency symbol. The name of the function (and the symbol that it applies) depends upon your language settings.</summary>
      <param name="Arg1">Number - a number, a reference to a cell containing a number, or a formula that evaluates to a number.</param>
      <param name="Arg2">Decimals - the number of digits to the right of the decimal point. If decimals is negative, number is rounded to the left of the decimal point. If you omit decimals, it is assumed to be 2.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DollarDe(System.Object,System.Object)">
      <summary>Converts a dollar price expressed as a fraction into a dollar price expressed as a decimal number. Use DOLLARDE to convert fractional dollar numbers, such as securities prices, to decimal numbers.</summary>
      <param name="Arg1">Fractional_dollar - is a number expressed as a fraction.</param>
      <param name="Arg2">Fraction - the integer to use in the denominator of the fraction.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DollarFr(System.Object,System.Object)">
      <summary>Converts a dollar price expressed as a decimal number into a dollar price expressed as a fraction. Use DOLLARFR to convert decimal numbers to fractional dollar numbers, such as securities prices.</summary>
      <param name="Arg1">Decimal_dollar - is a decimal number.</param>
      <param name="Arg2">Fraction - the integer to use in the denominator of a fraction.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DProduct(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
      <summary>Multiplies the values in a column of a list or database that match conditions that you specify.</summary>
      <param name="Arg1">Database is the range of cells that makes up the list or database. A database is a list of related data in which rows of related information are records, and columns of data are fields. The first row of the list contains labels for each column.</param>
      <param name="Arg2">Field indicates which column is used in the function. Enter the column label enclosed between double quotation marks, such as "Age" or "Yield," or a number (without quotation marks) that represents the position of the column within the list: 1 for the first column, 2 for the second column, and so on.</param>
      <param name="Arg3">Criteria is the range of cells that contains the conditions that you specify. You can use any range for the criteria argument, as long as it includes at least one column label and at least one cell below the column label in which you specify a condition for the column.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DStDev(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
      <summary>Estimates the standard deviation of a population based on a sample by using the numbers in a column of a list or database that match conditions that you specify.</summary>
      <param name="Arg1">Database - the range of cells that makes up the list or database. A database is a list of related data in which rows of related information are records, and columns of data are fields. The first row of the list contains labels for each column.</param>
      <param name="Arg2">Field - indicates which column is used in the function. Enter the column label enclosed between double quotation marks, such as "Age" or "Yield," or a number (without quotation marks) that represents the position of the column within the list: 1 for the first column, 2 for the second column, and so on.</param>
      <param name="Arg3">Criteria - the range of cells that contains the conditions that you specify. You can use any range for the criteria argument, as long as it includes at least one column label and at least one cell below the column label in which you specify a condition for the column.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DStDevP(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
      <summary>Calculates the standard deviation of a population based on the entire population by using the numbers in a column of a list or database that match conditions that you specify.</summary>
      <param name="Arg1">Database - is the range of cells that makes up the list or database. A database is a list of related data in which rows of related information are records, and columns of data are fields. The first row of the list contains labels for each column.</param>
      <param name="Arg2">Field - indicates which column is used in the function. Enter the column label enclosed between double quotation marks, such as "Age" or "Yield," or a number (without quotation marks) that represents the position of the column within the list: 1 for the first column, 2 for the second column, and so on.</param>
      <param name="Arg3">Criteria - the range of cells that contains the conditions that you specify. You can use any range for the criteria argument, as long as it includes at least one column label and at least one cell below the column label in which you specify a condition for the column.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DSum(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
      <summary>Adds the numbers in a column of a list or database that match conditions that you specify.</summary>
      <param name="Arg1">Database - the range of cells that makes up the list or database. A database is a list of related data in which rows of related information are records, and columns of data are fields. The first row of the list contains labels for each column.</param>
      <param name="Arg2">Field - indicates which column is used in the function. Enter the column label enclosed between double quotation marks, such as "Age" or "Yield," or a number (without quotation marks) that represents the position of the column within the list: 1 for the first column, 2 for the second column, and so on.</param>
      <param name="Arg3">Criteria - the range of cells that contains the conditions that you specify. You can use any range for the criteria argument, as long as it includes at least one column label and at least one cell below the column label in which you specify a condition for the column.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dummy19(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dummy21(System.Double,System.Double)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Duration(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the Macauley duration for an assumed par value of $100. Duration is defined as the weighted average of the present value of the cash flows and is used as a measure of a bond price's response to changes in yield.</summary>
      <param name="Arg1">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</param>
      <param name="Arg2">Maturity - the security's maturity date. The maturity date is the date when the security expires.</param>
      <param name="Arg3">Coupon - the security's annual coupon rate.</param>
      <param name="Arg4">Yld - the security's annual yield.</param>
      <param name="Arg5">Frequency - the number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</param>
      <param name="Arg6">Basis - the type of day count basis to use.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DVar(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
      <summary>Estimates the variance of a population based on a sample by using the numbers in a column of a list or database that match conditions that you specify.</summary>
      <param name="Arg1">Database - the range of cells that makes up the list or database. A database is a list of related data in which rows of related information are records, and columns of data are fields. The first row of the list contains labels for each column.</param>
      <param name="Arg2">Field - indicates which column is used in the function. Enter the column label enclosed between double quotation marks, such as "Age" or "Yield," or a number (without quotation marks) that represents the position of the column within the list: 1 for the first column, 2 for the second column, and so on.</param>
      <param name="Arg3">Criteria - the range of cells that contains the conditions that you specify. You can use any range for the criteria argument, as long as it includes at least one column label and at least one cell below the column label in which you specify a condition for the column.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DVarP(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
      <summary>Calculates the variance of a population based on the entire population by using the numbers in a column of a list or database that match conditions that you specify.</summary>
      <param name="Arg1">Database - the range of cells that makes up the list or database. A database is a list of related data in which rows of related information are records, and columns of data are fields. The first row of the list contains labels for each column.</param>
      <param name="Arg2">Field - indicates which column is used in the function. Enter the column label enclosed between double quotation marks, such as "Age" or "Yield," or a number (without quotation marks) that represents the position of the column within the list: 1 for the first column, 2 for the second column, and so on.</param>
      <param name="Arg3">Criteria - the range of cells that contains the conditions that you specify. You can use any range for the criteria argument, as long as it includes at least one column label and at least one cell below the column label in which you specify a condition for the column.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.EDate(System.Object,System.Object)">
      <summary>Returns the serial number that represents the date that is the indicated number of months before or after a specified date (the start_date). Use EDATE to calculate maturity dates or due dates that fall on the same day of the month as the date of issue.</summary>
      <param name="Arg1">Start_date - a date that represents the start date. Dates should be entered by using the DATE function, or as results of other formulas or functions. For example, use DATE(2008,5,23) for the 23rd day of May, 2008. Problems can occur if dates are entered as text.</param>
      <param name="Arg2">Months - the number of months before or after start_date. A positive value for months yields a future date; a negative value yields a past date.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Effect(System.Object,System.Object)">
      <summary>Returns the effective annual interest rate, given the nominal annual interest rate and the number of compounding periods per year.</summary>
      <param name="Arg1">Nominal_rate - the nominal interest rate.</param>
      <param name="Arg2">Npery - the number of compounding periods per year.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.EoMonth(System.Object,System.Object)">
      <summary>Returns the serial number for the last day of the month that is the indicated number of months before or after start_date. Use EOMONTH to calculate maturity dates or due dates that fall on the last day of the month.</summary>
      <param name="Arg1">Start_date - a date that represents the starting date. Dates should be entered by using the DATE function, or as results of other formulas or functions. For example, use DATE(2008,5,23) for the 23rd day of May, 2008. Problems can occur if dates are entered as text.</param>
      <param name="Arg2">Months - the number of months before or after start_date. A positive value for months yields a future date; a negative value yields a past date.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Erf(System.Object,System.Object)">
      <summary>Returns the error function integrated between lower_limit and upper_limit.</summary>
      <param name="Arg1">Lower_limit - the lower bound for integrating Erf.</param>
      <param name="Arg2">Upper_limit - the upper bound for integrating Erf. If omitted, Erf integrates between zero and lower_limit.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Erf_Precise(System.Object)">
      <summary>Returns the error function integrated between zero and lower_limit.</summary>
      <param name="Arg1">Lower_limit - the lower bound for integrating ERF.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ErfC(System.Object)">
      <summary>Returns the complementary ERF function integrated between the specified parameter  and infinity.</summary>
      <param name="Arg1">The first argument.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ErfC_Precise(System.Object)">
      <summary>Returns the complementary error function integrated between the specified value  and infinity.</summary>
      <param name="Arg1">The value to compute against.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Even(System.Double)">
      <summary>Returns number rounded up to the nearest even integer. You can use this function for processing items that come in twos. For example, a packing crate accepts rows of one or two items. The crate is full when the number of items, rounded up to the nearest two, matches the crate's capacity.</summary>
      <param name="Arg1">Number - the value to round.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Expon_Dist(System.Double,System.Double,System.Boolean)">
      <summary>Returns the exponential distribution. Use EXPON_DIST to model the time between events, such as how long an automated bank teller takes to deliver cash. For example, you can use EXPON_DIST to determine the probability that the process takes at most 1 minute.</summary>
      <param name="Arg1">X - the value of the function.</param>
      <param name="Arg2">Lambda - the parameter value.</param>
      <param name="Arg3">Cumulative - a logical value that indicates which form of the exponential function to provide. If cumulative is true, Expon_Dist returns the cumulative distribution function; if false, it returns the probability density function.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ExponDist(System.Double,System.Double,System.Boolean)">
      <summary>Returns the exponential distribution. Use ExponDist to model the time between events, such as how long an automated bank teller takes to deliver cash. For example, you can use ExponDist to determine the probability that the process takes at most 1 minute.</summary>
      <param name="Arg1">X - the value of the function.</param>
      <param name="Arg2">Lambda - the parameter value.</param>
      <param name="Arg3">Cumulative - a logical value that indicates which form of the exponential function to provide. If cumulative is true, ExponDist returns the cumulative distribution function; if false, it returns the probability density function.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Dist(System.Double,System.Double,System.Double,System.Boolean)">
      <summary>Returns the F probability distribution.</summary>
      <param name="Arg1">X - The value at which to evaluate the function.</param>
      <param name="Arg2">Deg_freedom1 - The numerator degrees of freedom.</param>
      <param name="Arg3">Deg_freedom2 - The denominator degrees of freedom.</param>
      <param name="Arg4">Cumulative - A logical value that determines the form of the function. If cumulative is true, F_Dist returns the cumulative distribution function; if false, it returns the probability density function.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Dist_RT(System.Double,System.Double,System.Double)">
      <summary>Returns the right-tailed F probability distribution. You can use this function to determine whether two data sets have different degrees of diversity. For example, you can examine the test scores of men and women entering high school and determine if the variability in the females is different from that found in the males.</summary>
      <param name="Arg1">X - the value at which to evaluate the function.</param>
      <param name="Arg2">Degrees_freedom1 - the numerator degrees of freedom.</param>
      <param name="Arg3">Degrees_freedom2 - the denominator degrees of freedom.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Inv(System.Double,System.Double,System.Double)">
      <summary>Returns the inverse of the F probability distribution.</summary>
      <param name="Arg1">Probability - A probability associated with the F cumulative distribution.</param>
      <param name="Arg2">Deg_freedom1 - The numerator degrees of freedom.</param>
      <param name="Arg3">Deg_freedom2 - The denominator degrees of freedom.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Inv_RT(System.Double,System.Double,System.Double)">
      <summary>Returns the inverse of the right-tailed F probability distribution. If p = F_DIST_RT(x,...), then F_INV_RT(p,...) = x.</summary>
      <param name="Arg1">Probability - a probability associated with the F cumulative distribution.</param>
      <param name="Arg2">Degrees_freedom1 - the numerator degrees of freedom.</param>
      <param name="Arg3">Degrees_freedom2 - the denominator degrees of freedom.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Test(System.Object,System.Object)">
      <summary>Returns the result of an F-test. An F-test returns the two-tailed probability that the variances in array1 and array2 are not significantly different. Use this function to determine whether two samples have different variances. For example, given test scores from public and private schools, you can test whether these schools have different levels of test score diversity.</summary>
      <param name="Arg1">Array1 - the first array or range of data.</param>
      <param name="Arg2">Array2 - the second array or range of data.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Fact(System.Double)">
      <summary>Returns the factorial of a number. The factorial of a number is equal to 1*2*3*...* number.</summary>
      <param name="Arg1">Number - the nonnegative number you want the factorial of. If number is not an integer, it is truncated.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FactDouble(System.Object)">
      <summary>Returns the double factorial of a number.</summary>
      <param name="Arg1">Number - the value for which to return the double factorial. If number is not an integer, it is truncated.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FDist(System.Double,System.Double,System.Double)">
      <summary>Returns the F probability distribution. You can use this function to determine whether two data sets have different degrees of diversity. For example, you can examine the test scores of men and women entering high school and determine if the variability in the females is different from that found in the males.</summary>
      <param name="Arg1">X - the value at which to evaluate the function.</param>
      <param name="Arg2">Degrees_freedom1 - the numerator degrees of freedom.</param>
      <param name="Arg3">Degrees_freedom2 - the denominator degrees of freedom.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)">
      <summary>Finds specific information in a worksheet.</summary>
      <param name="Arg1">The name of the worksheet.</param>
      <param name="Arg2">The name of the range.</param>
      <param name="Arg3">The name of an argument to refine the search.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FindB(System.String,System.String,System.Object)">
      <summary>
        <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> and FindB locate one text string within a second text string, and return the number of the starting position of the first text string from the first character of the second text string. </summary>
      <param name="Arg1">Find_text - the text you want to find.</param>
      <param name="Arg2">Within_text - the text containing the text you want to find.</param>
      <param name="Arg3">Start_num - specifies the character at which to start the search. The first character in within_text is character number 1. If you omit start_num, it is assumed to be 1.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FInv(System.Double,System.Double,System.Double)">
      <summary>Returns the inverse of the F probability distribution. If p = FDIST(x,...), then FINV(p,...) = x.</summary>
      <param name="Arg1">Probability - a probability associated with the F cumulative distribution.</param>
      <param name="Arg2">Degrees_freedom1 - the numerator degrees of freedom.</param>
      <param name="Arg3">Degrees_freedom2 - is the denominator degrees of freedom.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Fisher(System.Double)">
      <summary>Returns the Fisher transformation at x. This transformation produces a function that is normally distributed rather than skewed. Use this function to perform hypothesis testing on the correlation coefficient.</summary>
      <param name="Arg1">x - a numeric value for which you want the transformation.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FisherInv(System.Double)">
      <summary>Returns the inverse of the Fisher transformation. Use this transformation when analyzing correlations between ranges or arrays of data. If y = FISHER(x), then FISHERINV(y) = x.</summary>
      <param name="Arg1">y - the value for which you want to perform the inverse of the transformation.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Fixed(System.Double,System.Object,System.Object)">
      <summary>Rounds a number to the specified number of decimals, formats the number in decimal format using a period and commas, and returns the result as text.</summary>
      <param name="Arg1">Number - the number you want to round and convert to text.</param>
      <param name="Arg2">Decimals - the number of digits to the right of the decimal point.</param>
      <param name="Arg3">No_commas - a logical value that, if true, prevents Fixed from including commas in the returned text.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Floor(System.Double,System.Double)">
      <summary>Rounds number down, toward zero, to the nearest multiple of significance.</summary>
      <param name="Arg1">Number - the numeric value you want to round.</param>
      <param name="Arg2">Significance - the multiple to which you want to round.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Floor_Precise(System.Double,System.Object)">
      <summary>Rounds the specified number to the nearest multiple of significance.</summary>
      <param name="Arg1">Number - the numeric value you want to round.</param>
      <param name="Arg2">Significance - the multiple to which you want to round.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Forecast(System.Double,System.Object,System.Object)">
      <summary>Calculates, or predicts, a future value by using existing values. The predicted value is a y-value for a given x-value. The known values are existing x-values and y-values, and the new value is predicted by using linear regression. You can use this function to predict future sales, inventory requirements, or consumer trends.</summary>
      <param name="Arg1">X - the data point for which you want to predict a value.</param>
      <param name="Arg2">Known_y's - the dependent array or range of data.</param>
      <param name="Arg3">Known_x's - the independent array or range of data.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Frequency(System.Object,System.Object)">
      <summary>Calculates how often values occur within a range of values, and then returns a vertical array of numbers. For example, use Frequency to count the number of test scores that fall within ranges of scores. Because Frequency returns an array, it must be entered as an array formula.</summary>
      <param name="Arg1">Data_array - an array of or reference to a set of values for which you want to count frequencies. If data_array contains no values, Frequency returns an array of zeros.</param>
      <param name="Arg2">Bins_array - an array of or reference to intervals into which you want to group the values in data_array. If bins_array contains no values, Frequency returns the number of elements in data_array.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FTest(System.Object,System.Object)">
      <summary>Returns the result of an F-test. An F-test returns the two-tailed probability that the variances in array1 and array2 are not significantly different. Use this function to determine whether two samples have different variances. For example, given test scores from public and private schools, you can test whether these schools have different levels of test score diversity.</summary>
      <param name="Arg1">Array1 - the first array or range of data.</param>
      <param name="Arg2">Array2 - the second array or range of data.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Fv(System.Double,System.Double,System.Double,System.Object,System.Object)">
      <summary>Returns the future value of an investment based on periodic, constant payments and a constant interest rate.</summary>
      <param name="Arg1">Rate - the interest rate per period.</param>
      <param name="Arg2">Nper - the total number of payment periods in an annuity.</param>
      <param name="Arg3">Pmt - the payment made each period; it cannot change over the life of the annuity. Typically, pmt contains principal and interest but no other fees or taxes. If pmt is omitted, you must include the pv argument.</param>
      <param name="Arg4">Pv - the present value, or the lump-sum amount that a series of future payments is worth right now. If pv is omitted, it is assumed to be 0 (zero), and you must include the pmt argument.</param>
      <param name="Arg5">Type - the number 0 or 1 and indicates when payments are due. If type is omitted, it is assumed to be 0.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FVSchedule(System.Object,System.Object)">
      <summary>Returns the future value of an initial principal after applying a series of compound interest rates. Use FVSCHEDULE to calculate the future value of an investment with a variable or adjustable rate.</summary>
      <param name="Arg1">Principal - the present value.</param>
      <param name="Arg2">Schedule - an array of interest rates to apply.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gamma_Dist(System.Double,System.Double,System.Double,System.Boolean)">
      <summary>Returns the gamma distribution. You can use this function to study variables that may have a skewed distribution. The gamma distribution is commonly used in queuing analysis.</summary>
      <param name="Arg1">X - the value at which you want to evaluate the distribution.</param>
      <param name="Arg2">Alpha - a parameter to the distribution.</param>
      <param name="Arg3">Beta - a parameter to the distribution. If beta = 1, Gamma_Dist returns the standard gamma distribution.</param>
      <param name="Arg4">Cumulative - a logical value that determines the form of the function. If cumulative is true, Gamma_Dist returns the cumulative distribution function; if false, it returns the probability density function.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gamma_Inv(System.Double,System.Double,System.Double)">
      <summary>Returns the inverse of the gamma cumulative distribution. If p = GAMMA_DIST(x,...), then GAMMA_INV(p,...) = x.</summary>
      <param name="Arg1">Probability - the probability associated with the gamma distribution.</param>
      <param name="Arg2">Alpha - a parameter to the distribution.</param>
      <param name="Arg3">Beta - a parameter to the distribution. If beta = 1, Gamma_Inv returns the standard gamma distribution.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GammaDist(System.Double,System.Double,System.Double,System.Boolean)">
      <summary>Returns the gamma distribution. You can use this function to study variables that may have a skewed distribution. The gamma distribution is commonly used in queuing analysis.</summary>
      <param name="Arg1">X - the value at which you want to evaluate the distribution.</param>
      <param name="Arg2">Alpha - a parameter to the distribution.</param>
      <param name="Arg3">Beta - a parameter to the distribution. If beta = 1, GammaDist returns the standard gamma distribution.</param>
      <param name="Arg4">Cumulative - a logical value that determines the form of the function. If cumulative is true, GammaDist returns the cumulative distribution function; if false, it returns the probability density function.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GammaInv(System.Double,System.Double,System.Double)">
      <summary>Returns the inverse of the gamma cumulative distribution. If p = GAMMADIST(x,...), then GAMMAINV(p,...) = x.</summary>
      <param name="Arg1">Probability - the probability associated with the gamma distribution.</param>
      <param name="Arg2">Alpha - a parameter to the distribution.</param>
      <param name="Arg3">Beta - a parameter to the distribution. If beta = 1, GammaInv returns the standard gamma distribution.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GammaLn(System.Double)">
      <summary>Returns the natural logarithm of the gamma function, Γ(x).</summary>
      <param name="Arg1">X - the value for which you want to calculate GAMMALN.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GammaLn_Precise(System.Double)">
      <summary>Returns the natural logarithm of the gamma function, Γ(x).</summary>
      <param name="Arg1">X - the value for which you want to calculate GAMMALN.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gcd(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the greatest common divisor of two or more integers. The greatest common divisor is the largest integer that divides both number1 and number2 without a remainder.</summary>
      <param name="Arg1">Number1, number2, ... - 1 to 29 values. If any value is not an integer, it is truncated.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GeoMean(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the geometric mean of an array or range of positive data. For example, you can use GEOMEAN to calculate average growth rate given compound interest with variable rates.</summary>
      <param name="Arg1">Number1, number2, ... - 1 to 30 arguments for which you want to calculate the mean. You can also use a single array or a reference to an array instead of arguments separated by commas.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GeStep(System.Object,System.Object)">
      <summary>Returns 1 if number ≥ step; returns 0 (zero) otherwise. Use this function to filter a set of values. For example, by summing several GeStep functions you calculate the count of values that exceed a threshold.</summary>
      <param name="Arg1">Number - the value to test against step.</param>
      <param name="Arg2">Step - the threshold value. If you omit a value for step, GeStep uses zero.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Growth(System.Object,System.Object,System.Object,System.Object)">
      <summary>Calculates predicted exponential growth by using existing data. Growth returns the y-values for a series of new x-values that you specify by using existing x-values and y-values. You can also use the Growth worksheet function to fit an exponential curve to existing x-values and y-values.</summary>
      <param name="Arg1">Known_y's - the set of y-values you already know in the relationship y = b*m^x.</param>
      <param name="Arg2">Known_x's - an optional set of x-values that you may already know in the relationship y = b*m^x.</param>
      <param name="Arg3">New_x's - new x-values for which you want Growth to return corresponding y-values.</param>
      <param name="Arg4">Const - a logical value specifying whether to force the constant b to equal 1.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HarMean(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the harmonic mean of a data set. The harmonic mean is the reciprocal of the arithmetic mean of reciprocals.</summary>
      <param name="Arg1">Number1, number2, ... - 1 to 30 arguments for which you want to calculate the mean. You can also use a single array or a reference to an array instead of arguments separated by commas.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Hex2Bin(System.Object,System.Object)">
      <summary>Converts a hexadecimal number to binary.</summary>
      <param name="Arg1">Number - the hexadecimal number you want to convert. Number cannot contain more than 10 characters. The most significant bit of number is the sign bit (40th bit from the right). The remaining 9 bits are magnitude bits. Negative numbers are represented using two's-complement notation.</param>
      <param name="Arg2">Places - the number of characters to use. If places is omitted, Hex2Bin uses the minimum number of characters necessary. Places is useful for padding the return value with leading 0s (zeros).</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Hex2Dec(System.Object)">
      <summary>Converts a hexadecimal number to decimal.</summary>
      <param name="Arg1">Number - the hexadecimal number you want to convert. Number cannot contain more than 10 characters (40 bits). The most significant bit of number is the sign bit. The remaining 39 bits are magnitude bits. Negative numbers are represented using two's-complement notation.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Hex2Oct(System.Object,System.Object)">
      <summary>Converts a hexadecimal number to octal.</summary>
      <param name="Arg1">Number - the hexadecimal number you want to convert. Number cannot contain more than 10 characters. The most significant bit of number is the sign bit. The remaining 39 bits are magnitude bits. Negative numbers are represented using two's-complement notation.</param>
      <param name="Arg2">Places - the number of characters to use. If places is omitted, Hex2Oct uses the minimum number of characters necessary. Places is useful for padding the return value with leading 0s (zeros).</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)">
      <summary>Searches for a value in the top row of a table or an array of values, and then returns a value in the same column from a row you specify in the table or array. Use HLookup when your comparison values are located in a row across the top of a table of data, and you want to look down a specified number of rows. Use <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" /> when your comparison values are located in a column to the left of the data you want to find.</summary>
      <param name="Arg1">Lookup_value - the value to be found in the first row of the table. Lookup_value can be a value, a reference, or a text string.</param>
      <param name="Arg2">Table_array - a table of information in which data is looked up. Use a reference to a range or a range name.</param>
      <param name="Arg3">Row_index_num - the row number in table_array from which the matching value will be returned. A row_index_num of 1 returns the first row value in table_array, a row_index_num of 2 returns the second row value in table_array, and so on. If row_index_num is less than 1, HLookup returns the #VALUE! error value; if row_index_num is greater than the number of rows on table_array, HLookup returns the #REF! error value.</param>
      <param name="Arg4">Range_lookup - a logical value that specifies whether you want HLookup to find an exact match or an approximate match. If true or omitted, an approximate match is returned. In other words, if an exact match is not found, the next largest value that is less than lookup_value is returned. If false, HLookup will find an exact match. If one is not found, the error value #N/A is returned.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HypGeom_Dist(System.Double,System.Double,System.Double,System.Double,System.Boolean)">
      <summary>Returns the hypergeometric distribution. HypGeom_Dist returns the probability of a given number of sample successes, given the sample size, population successes, and population size. Use HypGeom_Dist for problems with a finite population, where each observation is either a success or a failure, and where each subset of a given size is chosen with equal likelihood.</summary>
      <param name="Arg1">Sample_s - the number of successes in the sample.</param>
      <param name="Arg2">Number_sample - the size of the sample.</param>
      <param name="Arg3">Population_s - the number of successes in the population.</param>
      <param name="Arg4">Number_population - the population size.</param>
      <param name="Arg5">Cumulative - a logical value that determines the form of the function. If cumulative is true, then HypGeom_Dist returns the cumulative distribution function; if false, it returns the probability mass function.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HypGeomDist(System.Double,System.Double,System.Double,System.Double)">
      <summary>Returns the hypergeometric distribution. HypGeomDist returns the probability of a given number of sample successes, given the sample size, population successes, and population size. Use HypGeomDist for problems with a finite population, where each observation is either a success or a failure, and where each subset of a given size is chosen with equal likelihood.</summary>
      <param name="Arg1">Sample_s - the number of successes in the sample.</param>
      <param name="Arg2">Number_sample - the size of the sample.</param>
      <param name="Arg3">Population_s - the number of successes in the population.</param>
      <param name="Arg4">Number_population - the population size.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IfError(System.Object,System.Object)">
      <summary>Returns a value you specify if a formula evaluates to an error; otherwise, returns the result of the formula. Use the IfError function to trap and handle errors in a formula.</summary>
      <param name="Arg1">Value - the argument that is checked for an error.</param>
      <param name="Arg2">Value_if_error - the value to return if the formula evaluates to an error. The following error types are evaluated: #N/A, #VALUE!, #REF!, #DIV/0!, #NUM!, #NAME?, or #NULL!.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImAbs(System.Object)">
      <summary>Returns the absolute value (modulus) of a complex number in x + yi or x + yj text format.</summary>
      <param name="Arg1">Inumber - a complex number for which you want the absolute value.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Imaginary(System.Object)">
      <summary>Returns the imaginary coefficient of a complex number in x + yi or x + yj text format.</summary>
      <param name="Arg1">Inumber - a complex number for which you want the imaginary coefficient.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImArgument(System.Object)">
      <summary>Returns the argument (theta), an angle expressed in radians, such that: </summary>
      <param name="Arg1">Inumber is a complex number for which you want the argument theta.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImConjugate(System.Object)">
      <summary>Returns the complex conjugate of a complex number in x + yi or x + yj text format.</summary>
      <param name="Arg1">Inumber - a complex number for which you want the conjugate.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImCos(System.Object)">
      <summary>Returns the cosine of a complex number in x + yi or x + yj text format.</summary>
      <param name="Arg1">Inumber - a complex number for which you want the cosine.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImDiv(System.Object,System.Object)">
      <summary>Returns the quotient of two complex numbers in x + yi or x + yj text format.</summary>
      <param name="Arg1">Inumber1 - the complex numerator or dividend.</param>
      <param name="Arg2">Inumber2 - the complex denominator or divisor.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImExp(System.Object)">
      <summary>Returns the exponential of a complex number in x + yi or x + yj text format.</summary>
      <param name="Arg1">Inumber - a complex number for which you want the exponential.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImLn(System.Object)">
      <summary>Returns the natural logarithm of a complex number in x + yi or x + yj text format.</summary>
      <param name="Arg1">Inumber - a complex number for which you want the natural logarithm.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImLog10(System.Object)">
      <summary>Returns the common logarithm (base 10) of a complex number in x + yi or x + yj text format.</summary>
      <param name="Arg1">Inumber - a complex number for which you want the common logarithm.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImLog2(System.Object)">
      <summary>Returns the base-2 logarithm of a complex number in x + yi or x + yj text format.</summary>
      <param name="Arg1">Inumber - a complex number for which you want the base-2 logarithm.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImPower(System.Object,System.Object)">
      <summary>Returns a complex number in x + yi or x + yj text format raised to a power.</summary>
      <param name="Arg1">Inumber - a complex number you want to raise to a power.</param>
      <param name="Arg2">Number - the power to which you want to raise the complex number.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImProduct(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the product of 2 to 29 complex numbers in x + yi or x + yj text format.</summary>
      <param name="Arg1">Inumber1, inumber2,… - 1 to 29 complex numbers to multiply.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImReal(System.Object)">
      <summary>Returns the real coefficient of a complex number in x + yi or x + yj text format.</summary>
      <param name="Arg1">Inumber - a complex number for which you want the real coefficient.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImSin(System.Object)">
      <summary>Returns the sine of a complex number in x + yi or x + yj text format.</summary>
      <param name="Arg1">Inumber - a complex number for which you want the sine.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImSqrt(System.Object)">
      <summary>Returns the square root of a complex number in x + yi or x + yj text format.</summary>
      <param name="Arg1">Inumber - a complex number for which you want the square root.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImSub(System.Object,System.Object)">
      <summary>Returns the difference of two complex numbers in x + yi or x + yj text format.</summary>
      <param name="Arg1">Inumber1 - the complex number from which to subtract inumber2.</param>
      <param name="Arg2">Inumber2 - the complex number to subtract from inumber1.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImSum(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the sum of two or more complex numbers in x + yi or x + yj text format.</summary>
      <param name="Arg1">Inumber1,inumber2,... - 1 to 29 complex numbers to add.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Index(System.Object,System.Double,System.Object,System.Object)">
      <summary>Returns a value or the reference to a value from within a table or range. There are two forms of the Index function: the array form and the reference form.</summary>
      <param name="Arg1">Array or Reference - a range of cells or an array constant. For references, it is the reference to one or more cell ranges.</param>
      <param name="Arg2">Row_num - selects the row in array from which to return a value. If row_num is omitted, column_num is required. For references, the number of the row in reference from which to return a reference</param>
      <param name="Arg3">Column_num - selects the column in array from which to return a value. If column_num is omitted, row_num is required. For reference, the number of the column in reference from which to return a reference.</param>
      <param name="Arg4">Area_num - only used when returning references. Selects a range in reference from which to return the intersection of row_num and column_num. The first area selected or entered is numbered 1, the second is 2, and so on. If area_num is omitted, Index uses area 1.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)">
      <summary>Calculates the point at which a line will intersect the y-axis by using existing x-values and y-values. The intercept point is based on a best-fit regression line plotted through the known x-values and known y-values. Use the Intercept function when you want to determine the value of the dependent variable when the independent variable is 0 (zero). For example, you can use the Intercept function to predict a metal's electrical resistance at 0°C when your data points were taken at room temperature and higher.</summary>
      <param name="Arg1">Known_y's - the dependent set of observations or data.</param>
      <param name="Arg2">Known_x's - the independent set of observations or data.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IntRate(System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the interest rate for a fully invested security.</summary>
      <param name="Arg1">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</param>
      <param name="Arg2">Maturity - the security's maturity date. The maturity date is the date when the security expires.</param>
      <param name="Arg3">Investment - the amount invested in the security.</param>
      <param name="Arg4">Redemption - the amount to be received at maturity.</param>
      <param name="Arg5">Basis - the type of day count basis to use.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ipmt(System.Double,System.Double,System.Double,System.Double,System.Object,System.Object)">
      <summary>Returns the interest payment for a given period for an investment based on periodic, constant payments and a constant interest rate.</summary>
      <param name="Arg1">Rate - the interest rate per period.</param>
      <param name="Arg2">Per - the period for which you want to find the interest and must be in the range 1 to nper.</param>
      <param name="Arg3">Nper - the total number of payment periods in an annuity.</param>
      <param name="Arg4">Pv - the present value, or the lump-sum amount that a series of future payments is worth right now.</param>
      <param name="Arg5">Fv - the future value, or a cash balance you want to attain after the last payment is made. If fv is omitted, it is assumed to be 0 (the future value of a loan, for example, is 0).</param>
      <param name="Arg6">Type - the number 0 or 1 and indicates when payments are due. If type is omitted, it is assumed to be 0.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Irr(System.Object,System.Object)">
      <summary>Returns the internal rate of return for a series of cash flows represented by the numbers in values. These cash flows do not have to be even, as they would be for an annuity. However, the cash flows must occur at regular intervals, such as monthly or annually. The internal rate of return is the interest rate received for an investment consisting of payments (negative values) and income (positive values) that occur at regular periods.</summary>
      <param name="Arg1">Values - an array or a reference to cells that contain numbers for which you want to calculate the internal rate of return.</param>
      <param name="Arg2">Guess - a number that you guess is close to the result of IRR.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsErr(System.Object)">
      <summary>Checks the type of value and returns true or false depending if the value refers to any error value except #N/A.</summary>
      <param name="Arg1">Value - the value you want tested. Value can be a blank (empty cell), error, logical, text, number, or reference value, or a name referring to any of these, that you want to test.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsError(System.Object)">
      <summary>Checks the type of value and returns true or false depending on if the value refers to any error value (#N/A, #VALUE!, #REF!, #DIV/0!, #NUM!, #NAME?, or #NULL!).</summary>
      <param name="Arg1">Value - the value you want tested. Value can be a blank (empty cell), error, logical, text, number, or reference value, or a name referring to any of these, that you want to test.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsEven(System.Object)">
      <summary>Checks the type of value and returns true or false depending if the value is even.</summary>
      <param name="Arg1">Value - the value you want tested. Value can be a blank (empty cell), error, logical, text, number, or reference value, or a name referring to any of these, that you want to test.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsLogical(System.Object)">
      <summary>Checks the type of value and returns true or false depending if the value refers to a logical value.</summary>
      <param name="Arg1">Value - the value you want tested. Value can be a blank (empty cell), error, logical, text, number, or reference value, or a name referring to any of these, that you want to test.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNA(System.Object)">
      <summary>Checks the type of value and returns true or false depending on if the value refers to the #N/A (value not available) error value.</summary>
      <param name="Arg1">Value - the value you want tested. Value can be a blank (empty cell), error, logical, text, number, or reference value, or a name referring to any of these, that you want to test.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNonText(System.Object)">
      <summary>Checks the type of value and returns true or false depending if the value refers to any item that is not text. (Note that this function returns true if value refers to a blank cell.)</summary>
      <param name="Arg1">Value - the value you want tested. Value can be a blank (empty cell), error, logical, text, number, or reference value, or a name referring to any of these, that you want to test.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)">
      <summary>Checks the type of value and returns true or false depending if the value refers to a number.</summary>
      <param name="Arg1">Value - the value you want tested. Value can be a blank (empty cell), error, logical, text, number, or reference value, or a name referring to any of these, that you want to test.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ISO_Ceiling(System.Double,System.Object)">
      <summary>Returns a number that is rounded up to the nearest integer or to the nearest multiple of significance.</summary>
      <param name="Arg1">Number - The value to be rounded.</param>
      <param name="Arg2">Significance - The optional multiple to which number is to be rounded. If significance is omitted, its default value is 1.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsOdd(System.Object)">
      <summary>Checks the type of value and returns true or false depending if the value is odd.</summary>
      <param name="Arg1">Value - the value you want tested. Value can be a blank (empty cell), error, logical, text, number, or reference value, or a name referring to any of these, that you want to test.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ispmt(System.Double,System.Double,System.Double,System.Double)">
      <summary>Calculates the interest paid during a specific period of an investment. This function is provided for compatibility with Lotus 1-2-3.</summary>
      <param name="Arg1">Rate - the interest rate for the investment.</param>
      <param name="Arg2">Per - the period for which you want to find the interest, and must be between 1 and nper.</param>
      <param name="Arg3">Nper - the total number of payment periods for the investment.</param>
      <param name="Arg4">Pv - the present value of the investment. For a loan, pv is the loan amount.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsText(System.Object)">
      <summary>Checks the type of value and returns true or false depending if the value refers to text.</summary>
      <param name="Arg1">Value - the value you want tested. Value can be a blank (empty cell), error, logical, text, number, or reference value, or a name referring to any of these, that you want to test.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsThaiDigit(System.String)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Kurt(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the kurtosis of a data set. Kurtosis characterizes the relative peakedness or flatness of a distribution compared with the normal distribution. Positive kurtosis indicates a relatively peaked distribution. Negative kurtosis indicates a relatively flat distribution.</summary>
      <param name="Arg1">Number1, number2, ... - 1 to 30 arguments for which you want to calculate kurtosis. You can also use a single array or a reference to an array instead of arguments separated by commas.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Large(System.Object,System.Double)">
      <summary>Returns the k-th largest value in a data set. You can use this function to select a value based on its relative standing. For example, you can use Large to return the highest, runner-up, or third-place score.</summary>
      <param name="Arg1">Array - the array or range of data for which you want to determine the k-th largest value.</param>
      <param name="Arg2">K - the position (from the largest) in the array or cell range of data to return.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Lcm(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the least common multiple of integers. The least common multiple is the smallest positive integer that is a multiple of all integer arguments number1, number2, and so on. Use LCM to add fractions with different denominators.</summary>
      <param name="Arg1">Number1, number2,... - 1 to 29 values for which you want the least common multiple. If value is not an integer, it is truncated.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)">
      <summary>Calculates the statistics for a line by using the "least squares" method to calculate a straight line that best fits your data, and returns an array that describes the line. Because this function returns an array of values, it must be entered as an array formula.</summary>
      <param name="Arg1">Known_y's - the set of y-values you already know in the relationship y = mx + b.</param>
      <param name="Arg2">Known_x's - an optional set of x-values that you may already know in the relationship y = mx + b.</param>
      <param name="Arg3">Const - a logical value specifying whether to force the constant b to equal 0.</param>
      <param name="Arg4">Stats - a logical value specifying whether to return additional regression statistics.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ln(System.Double)">
      <summary>Returns the natural logarithm of a number. Natural logarithms are based on the constant e (2.71828182845904).</summary>
      <param name="Arg1">Number - the positive real number for which you want the natural logarithm.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Log(System.Double,System.Object)">
      <summary>Returns the logarithm of a number to the base you specify.</summary>
      <param name="Arg1">Number - the positive real number for which you want the logarithm.</param>
      <param name="Arg2">Base - the base of the logarithm. If base is omitted, it is assumed to be 10.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Log10(System.Double)">
      <summary>Returns the base-10 logarithm of a number.</summary>
      <param name="Arg1">Number - the positive real number for which you want the base-10 logarithm.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogEst(System.Object,System.Object,System.Object,System.Object)">
      <summary>In regression analysis, calculates an exponential curve that fits your data and returns an array of values that describes the curve. Because this function returns an array of values, it must be entered as an array formula.</summary>
      <param name="Arg1">Known_y's - the set of y-values you already know in the relationship y = b*m^x.</param>
      <param name="Arg2">Known_x's - an optional set of x-values that you may already know in the relationship y = b*m^x.</param>
      <param name="Arg3">Const - a logical value specifying whether to force the constant b to equal 1.</param>
      <param name="Arg4">Stats - a logical value specifying whether to return additional regression statistics.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogInv(System.Double,System.Double,System.Double)">
      <summary>Use the lognormal distribution to analyze logarithmically transformed data.</summary>
      <param name="Arg1">Probability - a probability associated with the lognormal distribution.</param>
      <param name="Arg2">Mean - the mean of ln(x).</param>
      <param name="Arg3">Standard_dev - the standard deviation of ln(x).</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogNorm_Dist(System.Double,System.Double,System.Double,System.Boolean)">
      <summary>Returns the lognormal distribution of x, where ln(x) is normally distributed with parameters mean and standard_dev. Use this function to analyze data that has been logarithmically transformed.</summary>
      <param name="Arg1">X - The value at which to evaluate the function.</param>
      <param name="Arg2">Mean - The mean of ln(x).</param>
      <param name="Arg3">Standard_dev - The standard deviation of ln(x).</param>
      <param name="Arg4">Cumulative - A logical value that determines the form of the function. If cumulative is true, LogNorm_Dist returns the cumulative distribution function; if false, it returns the probability density function.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogNorm_Inv(System.Double,System.Double,System.Double)">
      <summary>Returns the inverse of the lognormal cumulative distribution function. Use the lognormal distribution to analyze logarithmically transformed data.</summary>
      <param name="Arg1">Probability - A probability associated with the lognormal distribution.</param>
      <param name="Arg2">Mean - The mean of ln(x).</param>
      <param name="Arg3">Standard_dev - The standard deviation of ln(x).</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogNormDist(System.Double,System.Double,System.Double)">
      <summary>Returns the cumulative lognormal distribution of x, where ln(x) is normally distributed with parameters mean and standard_dev. Use this function to analyze data that has been logarithmically transformed.</summary>
      <param name="Arg1">X - the value at which to evaluate the function.</param>
      <param name="Arg2">Mean - the mean of ln(x).</param>
      <param name="Arg3">Standard_dev - the standard deviation of ln(x).</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Lookup(System.Object,System.Object,System.Object)">
      <summary>Returns a value either from a one-row or one-column range or from an array. The LOOKUP function has two syntax forms:  the vector form and the array form.</summary>
      <param name="Arg1">Lookup_value - A value that Lookup searches for in the first vector. Lookup_value can be a number, text, a logical value, or a name or reference that refers to a value.</param>
      <param name="Arg2">Lookup_vector or Array - In Vector form, a range that contains only one row or one column. The values in lookup_vector can be text, numbers, or logical values. In array form, a range of cells that contains text, numbers, or logical values that you want to compare with lookup_value.</param>
      <param name="Arg3">Result_vector - Only used with the Vector form. A range that contains only one row or column. It must be the same size as lookup_vector.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Match(System.Object,System.Object,System.Object)">
      <summary>Returns the relative position of an item in an array that matches a specified value in a specified order. Use Match instead of one of the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Lookup(System.Object,System.Object,System.Object)" /> functions when you need the position of an item in a range instead of the item itself.</summary>
      <param name="Arg1">Lookup_value - the value you use to find the value you want in a table.</param>
      <param name="Arg2">Lookup_array - a contiguous range of cells containing possible lookup values. Lookup_array must be an array or an array reference.</param>
      <param name="Arg3">Match_type - the number -1, 0, or 1. Match_type specifies how Microsoft Excel matches lookup_value with values in lookup_array.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Max(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the largest value in a set of values.</summary>
      <param name="Arg1">Number1, number2, ... - 1 to 30 numbers for which you want to find the maximum value.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MDeterm(System.Object)">
      <summary>Returns the matrix determinant of an array.</summary>
      <param name="Arg1">Array - a numeric array with an equal number of rows and columns.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MDuration(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the modified Macauley duration for a security with an assumed par value of $100.</summary>
      <param name="Arg1">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</param>
      <param name="Arg2">Maturity - the security's maturity date. The maturity date is the date when the security expires.</param>
      <param name="Arg3">Coupon - the security's annual coupon rate.</param>
      <param name="Arg4">Yld - the security's annual yield.</param>
      <param name="Arg5">Frequency - the number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</param>
      <param name="Arg6">Basis - the type of day count basis to use.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Median(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the median of the given numbers. The median is the number in the middle of a set of numbers.</summary>
      <param name="Arg1">Number1, number2, ... - 1 to 30 numbers for which you want the median.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Min(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the smallest number in a set of values.</summary>
      <param name="Arg1">Number1, number2, ... - 1 to 30 numbers for which you want to find the minimum value.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MInverse(System.Object)">
      <summary>Returns the inverse matrix for the matrix stored in an array.</summary>
      <param name="Arg1">Array - a numeric array with an equal number of rows and columns.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MIrr(System.Object,System.Double,System.Double)">
      <summary>Returns the modified internal rate of return for a series of periodic cash flows. MIRR considers both the cost of the investment and the interest received on reinvestment of cash.</summary>
      <param name="Arg1">Values - an array or a reference to cells that contain numbers. These numbers represent a series of payments (negative values) and income (positive values) occurring at regular periods.</param>
      <param name="Arg2">Finance_rate - the interest rate you pay on the money used in the cash flows.</param>
      <param name="Arg3">Reinvest_rate - the interest rate you receive on the cash flows as you reinvest them.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MMult(System.Object,System.Object)">
      <summary>Returns the matrix product of two arrays. The result is an array with the same number of rows as array1 and the same number of columns as array2.</summary>
      <param name="Arg1">Array1, array2 - the arrays you want to multiply.</param>
      <param name="Arg2">Array1, array2 - the arrays you want to multiply.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Mode(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the most frequently occurring, or repetitive, value in an array or range of data. </summary>
      <param name="Arg1">Number1, number2, ... - 1 to 30 arguments for which you want to calculate the mode. You can also use a single array or a reference to an array instead of arguments separated by commas.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Mode_Mult(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns a vertical array of the most frequently occurring, or repetitive, values in an array or range of data.</summary>
      <param name="Arg1">Number1 - The first number argument for which you want to calculate the mode.</param>
      <param name="Arg2">Number2 - Number30 - Number arguments from 2 to 30 for which you want to calculate the mode. You can also use a single array or a reference to an array instead of arguments separated by commas.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Mode_Sngl(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the most frequently occurring, or repetitive, value in an array or range of data.</summary>
      <param name="Arg1">Number1, number2, ... - 1 to 30 arguments for which you want to calculate the mode. You can also use a single array or a reference to an array instead of arguments separated by commas (,).</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MRound(System.Object,System.Object)">
      <summary>Returns a number rounded to the desired multiple.</summary>
      <param name="Arg1">Number - the value to round.</param>
      <param name="Arg2">Multiple - the multiple to which you want to round number.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MultiNomial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the ratio of the factorial of a sum of values to the product of factorials.</summary>
      <param name="Arg1">Number1,number2, ... - 1 to 29 values for which you want the multinomial.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NegBinom_Dist(System.Double,System.Double,System.Double,System.Boolean)">
      <summary>Returns the negative binomial distribution. NegBinom_Dist returns the probability that there will be number_f failures before the number_s-th success, when the constant probability of a success is probability_s. This function is similar to the binomial distribution, except that the number of successes is fixed, and the number of trials is variable. Like the binomial, trials are assumed to be independent.</summary>
      <param name="Arg1">Number_f - the number of failures.</param>
      <param name="Arg2">Number_s - the threshold number of successes.</param>
      <param name="Arg3">Probability_s - the probability of a success.</param>
      <param name="Arg4">Cumulative - A logical value that determines the form of the function. If cumulative is true, NegBinom_Dist returns the cumulative distribution function; if false, it returns the probability density function.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NegBinomDist(System.Double,System.Double,System.Double)">
      <summary>Returns the negative binomial distribution. NegBinomDist returns the probability that there will be number_f failures before the number_s-th success, when the constant probability of a success is probability_s. This function is similar to the binomial distribution, except that the number of successes is fixed, and the number of trials is variable. Like the binomial, trials are assumed to be independent.</summary>
      <param name="Arg1">Number_f - the number of failures.</param>
      <param name="Arg2">Number_s - the threshold number of successes.</param>
      <param name="Arg3">Probability_s - the probability of a success.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NetworkDays(System.Object,System.Object,System.Object)">
      <summary>Returns the number of whole working days between start_date and end_date. Working days exclude weekends and any dates identified in holidays. Use NetworkDays to calculate employee benefits that accrue based on the number of days worked during a specific term.</summary>
      <param name="Arg1">Start_date - a date that represents the start date.</param>
      <param name="Arg2">End_date - a date that represents the end date.</param>
      <param name="Arg3">Holidays - an optional range of one or more dates to exclude from the working calendar, such as state and federal holidays and floating holidays. The list can be either a range of cells that contains the dates or an array constant of the serial numbers that represent the dates.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NetworkDays_Intl(System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the number of whole workdays between two dates using parameters to indicate which and how many days are weekend days. Weekend days and any days that are specified as holidays are not considered as workdays.</summary>
      <param name="Arg1">Start_date - The start date for which the difference is to be computed. The start_date can be earlier than, the same as, or later than the end_date.</param>
      <param name="Arg2">End_date - The end date for which the difference is to be computed. The start_date can be earlier than, the same as, or later than the end_date.</param>
      <param name="Arg3">Weekend - Indicates the days of the week that are weekend days and are not included in the number of whole working days between start_date and end_date. Weekend is a weekend number or string that specifies when weekends occur.</param>
      <param name="Arg4">Holidays - An optional set of one or more dates that are to be excluded from the working day calendar. Holidays is a range of cells that contain the dates, or an array constant of the serial values that represent those dates. The ordering of dates or serial values in holidays can be arbitrary.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Nominal(System.Object,System.Object)">
      <summary>Returns the nominal annual interest rate, given the effective rate and the number of compounding periods per year.</summary>
      <param name="Arg1">Effect_rate - the effective interest rate.</param>
      <param name="Arg2">Npery - the number of compounding periods per year.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_Dist(System.Double,System.Double,System.Double,System.Boolean)">
      <summary>Returns the normal distribution for the specified mean and standard deviation. This function has a wide range of applications in statistics, including hypothesis testing.</summary>
      <param name="Arg1">X - The value for which you want the distribution.</param>
      <param name="Arg2">Mean - The arithmetic mean of the distribution.</param>
      <param name="Arg3">Standard_dev - The standard deviation of the distribution.</param>
      <param name="Arg4">Cumulative - A logical value that determines the form of the function. If cumulative is true, Norm_Dist returns the cumulative distribution function; if false, it returns the probability mass function.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_Inv(System.Double,System.Double,System.Double)">
      <summary>Returns the inverse of the normal cumulative distribution for the specified mean and standard deviation.</summary>
      <param name="Arg1">Probability - A probability corresponding to the normal distribution.</param>
      <param name="Arg2">Mean - The arithmetic mean of the distribution.</param>
      <param name="Arg3">Standard_dev - The standard deviation of the distribution.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Dist(System.Double,System.Boolean)">
      <summary>Returns the standard normal cumulative distribution function. The distribution has a mean of 0 (zero) and a standard deviation of one. Use this function in place of a table of standard normal curve areas.</summary>
      <param name="Arg1">Z - The value for which you want the distribution.</param>
      <param name="Arg2">Cumulative - A logical value that determines the form of the function. If cumulative is true, Norm_S_Dist returns the cumulative distribution function; if false, it returns the probability mass function.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Inv(System.Double)">
      <summary>Returns the inverse of the standard normal cumulative distribution. The distribution has a mean of 0 (zero) and a standard deviation of one.</summary>
      <param name="Arg1">Probability - A probability corresponding to the normal distribution.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormDist(System.Double,System.Double,System.Double,System.Boolean)">
      <summary>Returns the normal distribution for the specified mean and standard deviation. This function has a very wide range of applications in statistics, including hypothesis testing.</summary>
      <param name="Arg1">X - the value for which you want the distribution.</param>
      <param name="Arg2">Mean - the arithmetic mean of the distribution.</param>
      <param name="Arg3">Standard_dev - the standard deviation of the distribution.</param>
      <param name="Arg4">Cumulative - a logical value that determines the form of the function. If cumulative is true, NormDist returns the cumulative distribution function; if false, it returns the probability mass function.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormInv(System.Double,System.Double,System.Double)">
      <summary>Returns the inverse of the normal cumulative distribution for the specified mean and standard deviation.</summary>
      <param name="Arg1">Probability - a probability corresponding to the normal distribution.</param>
      <param name="Arg2">Mean - the arithmetic mean of the distribution.</param>
      <param name="Arg3">Standard_dev - the standard deviation of the distribution.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormSDist(System.Double)">
      <summary>Returns the standard normal cumulative distribution function. The distribution has a mean of 0 (zero) and a standard deviation of one. Use this function in place of a table of standard normal curve areas.</summary>
      <param name="Arg1">Z - the value for which you want the distribution.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormSInv(System.Double)">
      <summary>Returns the inverse of the standard normal cumulative distribution. The distribution has a mean of zero and a standard deviation of one.</summary>
      <param name="Arg1">Probability - a probability corresponding to the normal distribution.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NPer(System.Double,System.Double,System.Double,System.Object,System.Object)">
      <summary>Returns the number of periods for an investment based on periodic, constant payments and a constant interest rate.</summary>
      <param name="Arg1">Rate - the interest rate per period.</param>
      <param name="Arg2">Pmt - the payment made each period; it cannot change over the life of the annuity. Typically, pmt contains principal and interest but no other fees or taxes.</param>
      <param name="Arg3">Pv - the present value, or the lump-sum amount that a series of future payments is worth right now.</param>
      <param name="Arg4">Fv - the future value, or a cash balance you want to attain after the last payment is made. If fv is omitted, it is assumed to be 0 (the future value of a loan, for example, is 0).</param>
      <param name="Arg5">Type - the number 0 or 1 and indicates when payments are due.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Npv(System.Double,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Calculates the net present value of an investment by using a discount rate and a series of future payments (negative values) and income (positive values).</summary>
      <param name="Arg1">Rate - the rate of discount over the length of one period.</param>
      <param name="Arg2">Value1, value2, ... - 1 to 29 arguments representing the payments and income.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Oct2Bin(System.Object,System.Object)">
      <summary>Converts an octal number to binary.</summary>
      <param name="Arg1">Number - the octal number you want to convert. Number may not contain more than 10 characters. The most significant bit of number is the sign bit. The remaining 29 bits are magnitude bits. Negative numbers are represented using two's-complement notation.</param>
      <param name="Arg2">Places - the number of characters to use. If places is omitted, Oct2Bin uses the minimum number of characters necessary. Places is useful for padding the return value with leading 0s (zeros).</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Oct2Dec(System.Object)">
      <summary>Converts an octal number to decimal.</summary>
      <param name="Arg1">Number - the octal number you want to convert. Number may not contain more than 10 octal characters (30 bits). The most significant bit of number is the sign bit. The remaining 29 bits are magnitude bits. Negative numbers are represented using two's-complement notation.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Oct2Hex(System.Object,System.Object)">
      <summary>Converts an octal number to hexadecimal.</summary>
      <param name="Arg1">Number - the octal number you want to convert. Number may not contain more than 10 octal characters (30 bits). The most significant bit of number is the sign bit. The remaining 29 bits are magnitude bits. Negative numbers are represented using two's-complement notation.</param>
      <param name="Arg2">Places - the number of characters to use. If places is omitted, Oct2Hex uses the minimum number of characters necessary. Places is useful for padding the return value with leading 0s (zeros).</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Odd(System.Double)">
      <summary>Returns number rounded up to the nearest odd integer.</summary>
      <param name="Arg1">Number - the value to round.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.OddFPrice(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the price per $100 face value of a security having an odd (short or long) first period.</summary>
      <param name="Arg1">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</param>
      <param name="Arg2">Maturity - the security's maturity date. The maturity date is the date when the security expires.</param>
      <param name="Arg3">Issue - the security's issue date.</param>
      <param name="Arg4">First_coupon - the security's first coupon date.</param>
      <param name="Arg5">Rate - the security's interest rate.</param>
      <param name="Arg6">Yld - the security's annual yield.</param>
      <param name="Arg7">Redemption - the security's redemption value per $100 face value.</param>
      <param name="Arg8">Frequency - the number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</param>
      <param name="Arg9">Basis - the type of day count basis to use.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.OddFYield(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the yield of a security that has an odd (short or long) first period.</summary>
      <param name="Arg1">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</param>
      <param name="Arg2">Maturity - the security's maturity date. The maturity date is the date when the security expires.</param>
      <param name="Arg3">Issue - the security's issue date.</param>
      <param name="Arg4">First_coupon - the security's first coupon date.</param>
      <param name="Arg5">Rate - the security's interest rate.</param>
      <param name="Arg6">Pr - the security's price.</param>
      <param name="Arg7">Redemption - the security's redemption value per $100 face value.</param>
      <param name="Arg8">Frequency - the number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</param>
      <param name="Arg9">Basis - the type of day count basis to use.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.OddLPrice(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the price per $100 face value of a security having an odd (short or long) last coupon period.</summary>
      <param name="Arg1">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</param>
      <param name="Arg2">Maturity - the security's maturity date. The maturity date is the date when the security expires.</param>
      <param name="Arg3">Last_interest - the security's last coupon date.</param>
      <param name="Arg4">Rate - the security's interest rate.</param>
      <param name="Arg5">Yld - the security's annual yield.</param>
      <param name="Arg6">Redemption - the security's redemption value per $100 face value.</param>
      <param name="Arg7">Frequency - the number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</param>
      <param name="Arg8">Basis - the type of day count basis to use.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.OddLYield(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the yield of a security that has an odd (short or long) last period.</summary>
      <param name="Arg1">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</param>
      <param name="Arg2">Maturity - the security's maturity date. The maturity date is the date when the security expires.</param>
      <param name="Arg3">Last_interest - the security's last coupon date.</param>
      <param name="Arg4">Rate - the security's interest rate.</param>
      <param name="Arg5">Pr - the security's price.</param>
      <param name="Arg6">Redemption - the security's redemption value per $100 face value.</param>
      <param name="Arg7">Frequency - the number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</param>
      <param name="Arg8">Basis - the type of day count basis to use.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Or(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns true if any argument is true; returns false if all arguments are false.</summary>
      <param name="Arg1">Logical1,logical2,... - 1 to 30 conditions you want to test that can be either true or false.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetFunction.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pearson(System.Object,System.Object)">
      <summary>Returns the Pearson product moment correlation coefficient, r, a dimensionless index that ranges from -1.0 to 1.0 inclusive and reflects the extent of a linear relationship between two data sets.</summary>
      <param name="Arg1">Array1 - a set of independent values.</param>
      <param name="Arg2">Array2 - a set of dependent values.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Percentile(System.Object,System.Double)">
      <summary>Returns the k-th percentile of values in a range. You can use this function to establish a threshold of acceptance. For example, you can decide to examine candidates who score above the 90th percentile.</summary>
      <param name="Arg1">Array - the array or range of data that defines relative standing.</param>
      <param name="Arg2">K - the percentile value in the range 0..1, inclusive.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Percentile_Exc(System.Object,System.Double)">
      <summary>Returns the k-th percentile of values in a range, where k is in the range 0..1, exclusive.</summary>
      <param name="Arg1">Array - The array or range of data that defines relative standing.</param>
      <param name="Arg2">K - The percentile value in the range 0..1, exclusive.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Percentile_Inc(System.Object,System.Double)">
      <summary>Returns the k-th percentile of values in a range. You can use this function to establish a threshold of acceptance. For example, you can examine candidates who score above the 90th percentile.</summary>
      <param name="Arg1">Array - The array or range of data that defines relative standing.</param>
      <param name="Arg2">K - The percentile value in the range 0..1, inclusive.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PercentRank(System.Object,System.Double,System.Object)">
      <summary>Returns the rank of a value in a data set as a percentage of the data set. This function can be used to evaluate the relative standing of a value within a data set. For example, you can use PercentRank to evaluate the standing of an aptitude test score among all scores for the test.</summary>
      <param name="Arg1">Array - the array or range of data with numeric values that defines relative standing.</param>
      <param name="Arg2">X - the value for which you want to know the rank.</param>
      <param name="Arg3">Significance - an optional value that identifies the number of significant digits for the returned percentage value. If omitted, PercentRank uses three digits (0.xxx).</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PercentRank_Exc(System.Object,System.Double,System.Object)">
      <summary>Returns the rank of a value in a data set as a percentage (0..1, exclusive) of the data set.</summary>
      <param name="Arg1">Array - The array or range of data with numeric values that defines relative standing.</param>
      <param name="Arg2">X - The value for which you want to know the rank.</param>
      <param name="Arg3">Significance - A value that identifies the number of significant digits for the returned percentage value. If omitted, PercentRank_Exc uses three digits (0.xxx).</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PercentRank_Inc(System.Object,System.Double,System.Object)">
      <summary>Returns the rank of a value in a data set as a percentage (0..1, inclusive) of the data set. This function can be used to evaluate the relative standing of a value within a data set. For example, you can use PercentRank_Inc to evaluate the standing of an aptitude test score among all scores for the test.</summary>
      <param name="Arg1">Array - The array or range of data with numeric values that defines relative standing.</param>
      <param name="Arg2">X - The value for which you want to know the rank.</param>
      <param name="Arg3">Significance - An optional value that identifies the number of significant digits for the returned percentage value. If omitted, PercentRank_Inc uses three digits (0.xxx).</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Permut(System.Double,System.Double)">
      <summary>Returns the number of permutations for a given number of objects that can be selected from number objects. A permutation is any set or subset of objects or events where internal order is significant. Permutations are different from combinations, for which the internal order is not significant. Use this function for lottery-style probability calculations.</summary>
      <param name="Arg1">Number - an integer that describes the number of objects.</param>
      <param name="Arg2">Number_chosen - an integer that describes the number of objects in each permutation.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Phonetic(Microsoft.Office.Interop.Excel.Range)">
      <summary>Extracts the phonetic (furigana) characters from a text string.</summary>
      <param name="Arg1">Reference - a text string or a reference to a single cell or a range of cells that contain a furigana text string.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pi">
      <summary>Returns the number 3.14159265358979, the mathematical constant pi, accurate to 15 digits.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pmt(System.Double,System.Double,System.Double,System.Object,System.Object)">
      <summary>Calculates the payment for a loan based on constant payments and a constant interest rate.</summary>
      <param name="Arg1">Rate - the interest rate for the loan.</param>
      <param name="Arg2">Nper - the total number of payments for the loan.</param>
      <param name="Arg3">Pv - the present value, or the total amount that a series of future payments is worth now; also known as the principal.</param>
      <param name="Arg4">Fv - the future value, or a cash balance you want to attain after the last payment is made. If fv is omitted, it is assumed to be 0 (zero), that is, the future value of a loan is 0.</param>
      <param name="Arg5">Type - the number 0 (zero) or 1 and indicates when payments are due.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Poisson(System.Double,System.Double,System.Boolean)">
      <summary>Returns the Poisson distribution. A common application of the Poisson distribution is predicting the number of events over a specific time, such as the number of cars arriving at a toll plaza in 1 minute.</summary>
      <param name="Arg1">X - the number of events.</param>
      <param name="Arg2">Mean - the expected numeric value.</param>
      <param name="Arg3">Cumulative - a logical value that determines the form of the probability distribution returned. If cumulative is TRUE, POISSON returns the cumulative Poisson probability that the number of random events occurring will be between zero and x inclusive; if FALSE, it returns the Poisson probability mass function that the number of events occurring will be exactly x.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Poisson_Dist(System.Double,System.Double,System.Boolean)">
      <summary>Returns the Poisson distribution. A common application of the Poisson distribution is predicting the number of events over a specific time, such as the number of cars arriving at a toll plaza in one minute.</summary>
      <param name="Arg1">X - The number of events.</param>
      <param name="Arg2">Mean - The expected numeric value.</param>
      <param name="Arg3">Cumulative - A logical value that determines the form of the probability distribution returned. If cumulative is true, Poisson_Dist returns the cumulative Poisson probability that the number of random events occurring will be between 0 (zero) and x inclusive; if false, it returns the Poisson probability mass function that the number of events occurring will be exactly x.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Power(System.Double,System.Double)">
      <summary>Returns the result of a number raised to a power.</summary>
      <param name="Arg1">Number - the base number. It can be any real number.</param>
      <param name="Arg2">Power - the exponent to which the base number is raised.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ppmt(System.Double,System.Double,System.Double,System.Double,System.Object,System.Object)">
      <summary>Returns the payment on the principal for a given period for an investment based on periodic, constant payments and a constant interest rate.</summary>
      <param name="Arg1">Rate - the interest rate per period.</param>
      <param name="Arg2">Per - the period and must be in the range 1 to nper.</param>
      <param name="Arg3">Nper - the total number of payment periods in an annuity.</param>
      <param name="Arg4">Pv - the present value — the total amount that a series of future payments is worth now.</param>
      <param name="Arg5">Fv - the future value, or a cash balance you want to attain after the last payment is made. If fv is omitted, it is assumed to be 0 (zero), that is, the future value of a loan is 0.</param>
      <param name="Arg6">Type - the number 0 or 1 and indicates when payments are due.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Price(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the price per $100 face value of a security that pays periodic interest.</summary>
      <param name="Arg1">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</param>
      <param name="Arg2">Maturity - the security's maturity date. The maturity date is the date when the security expires.</param>
      <param name="Arg3">Rate - the security's annual coupon rate.</param>
      <param name="Arg4">Yld - the security's annual yield.</param>
      <param name="Arg5">Redemption - the security's redemption value per $100 face value.</param>
      <param name="Arg6">Frequency - the number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</param>
      <param name="Arg7">Basis - the type of day count basis to use.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PriceDisc(System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the price per $100 face value of a discounted security.</summary>
      <param name="Arg1">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</param>
      <param name="Arg2">Maturity - the security's maturity date. The maturity date is the date when the security expires.</param>
      <param name="Arg3">Discount - the security's discount rate.</param>
      <param name="Arg4">Redemption - the security's redemption value per $100 face value.</param>
      <param name="Arg5">Basis - the type of day count basis to use.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PriceMat(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the price per $100 face value of a security that pays interest at maturity.</summary>
      <param name="Arg1">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</param>
      <param name="Arg2">Maturity - the security's maturity date. The maturity date is the date when the security expires.</param>
      <param name="Arg3">Issue - the security's issue date, expressed as a serial date number.</param>
      <param name="Arg4">Rate - the security's interest rate at date of issue.</param>
      <param name="Arg5">Yld - the security's annual yield.</param>
      <param name="Arg6">Basis - the type of day count basis to use.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Prob(System.Object,System.Object,System.Double,System.Object)">
      <summary>Returns the probability that values in a range are between two limits. If upper_limit is not supplied, returns the probability that values in x_range are equal to lower_limit.</summary>
      <param name="Arg1">X_range - the range of numeric values of x with which there are associated probabilities.</param>
      <param name="Arg2">Prob_range - a set of probabilities associated with values in x_range.</param>
      <param name="Arg3">Lower_limit - the lower bound on the value for which you want a probability.</param>
      <param name="Arg4">Upper_limit - the optional upper bound on the value for which you want a probability.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Product(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Multiplies all the numbers given as arguments and returns the product.</summary>
      <param name="Arg1">Number1, number2, ... - 1 to 30 numbers that you want to multiply.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Proper(System.String)">
      <summary>Capitalizes the first letter in a text string and any other letters in text that follow any character other than a letter. Converts all other letters to lowercase letters.</summary>
      <param name="Arg1">Text - text enclosed in quotation marks, a formula that returns text, or a reference to a cell containing the text you want to partially capitalize.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)">
      <summary>Returns the present value of an investment. The present value is the total amount that a series of future payments is worth now. For example, when you borrow money, the loan amount is the present value to the lender.</summary>
      <param name="Arg1">Rate - the interest rate per period. For example, if you obtain an automobile loan at a 10 percent annual interest rate and make monthly payments, your interest rate per month is 10%/12, or 0.83%. You would enter 10%/12, or 0.83%, or 0.0083, into the formula as the rate.</param>
      <param name="Arg2">Nper - the total number of payment periods in an annuity. For example, if you get a four-year car loan and make monthly payments, your loan has 4*12 (or 48) periods. You would enter 48 into the formula for nper.</param>
      <param name="Arg3">Pmt - the payment made each period and cannot change over the life of the annuity. Typically, pmt includes principal and interest but no other fees or taxes. For example, the monthly payments on a $10,000, four-year car loan at 12 percent are $263.33. You would enter -263.33 into the formula as the pmt. If pmt is omitted, you must include the fv argument.</param>
      <param name="Arg4">Fv - the future value, or a cash balance you want to attain after the last payment is made. If fv is omitted, it is assumed to be 0 (the future value of a loan, for example, is 0). For example, if you want to save $50,000 to pay for a special project in 18 years, then $50,000 is the future value. You could then make a conservative guess at an interest rate and determine how much you must save each month. If fv is omitted, you must include the pmt argument.</param>
      <param name="Arg5">Type - the number 0 or 1 and indicates when payments are due.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Quartile(System.Object,System.Double)">
      <summary>Returns the quartile of a data set. Quartiles often are used in sales and survey data to divide populations into groups. For example, you can use Quartile to find the top 25 percent of incomes in a population.</summary>
      <param name="Arg1">Array - the array or cell range of numeric values for which you want the quartile value.</param>
      <param name="Arg2">Quart - indicates which value to return.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Quartile_Exc(System.Object,System.Double)">
      <summary>Returns the quartile of the data set, based on percentile values from 0..1, exclusive.</summary>
      <param name="Arg1">Array - The array or cell range of numeric values for which you want the quartile value.</param>
      <param name="Arg2">Quart - The value to return.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Quartile_Inc(System.Object,System.Double)">
      <summary>Returns the quartile of a data set based on percentile values from 0..1, inclusive. Quartiles often are used in sales and survey data to divide populations into groups. For example, you can use QUARTILE_INC to find the top 25 percent of incomes in a population.</summary>
      <param name="Arg1">Array - the array or cell range of numeric values for which you want the quartile value.</param>
      <param name="Arg2">Quart - The value to return.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Quotient(System.Object,System.Object)">
      <summary>Returns the integer portion of a division. Use this function when you want to discard the remainder of a division.</summary>
      <param name="Arg1">Numerator - the dividend.</param>
      <param name="Arg2">Denominator - the divisor.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Radians(System.Double)">
      <summary>Converts degrees to radians.</summary>
      <param name="Arg1">Angle - an angle in degrees that you want to convert.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RandBetween(System.Object,System.Object)">
      <summary>Returns a random integer number between the numbers you specify. A new random integer number is returned every time the worksheet is calculated.</summary>
      <param name="Arg1">Bottom - the smallest integer RANDBETWEEN will return.</param>
      <param name="Arg2">Top - the largest integer RANDBETWEEN will return.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rank(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object)">
      <summary>Returns the rank of a number in a list of numbers. The rank of a number is its size relative to other values in a list. (If you were to sort the list, the rank of the number would be its position.)</summary>
      <param name="Arg1">Number - the number whose rank you want to find.</param>
      <param name="Arg2">Ref - an array of, or a reference to, a list of numbers. Nonnumeric values in ref are ignored.</param>
      <param name="Arg3">Order - a number specifying how to rank number.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rank_Avg(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object)">
      <summary>Returns the rank of a number in a list of numbers; that is its size relative to other values in the list. If more than one value has the same rank, the average rank is returned.</summary>
      <param name="Arg1">Number - The number whose rank you want to find.</param>
      <param name="Arg2">Ref - An array of, or a reference to, a list of numbers. Non-numeric values in reference are ignored.</param>
      <param name="Arg3">Order - A number that specifies how to rank number. If the order is 0 (zero) or omitted, Microsoft Excel ranks the number as if the reference was a list sorted in descending order. If the order is any non-zero value, Microsoft Excel ranks number as if the reference were a list sorted in ascending order.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rank_Eq(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object)">
      <summary>Returns the rank of a number in a list of numbers. The rank of a number is its size relative to other values in a list. (If you were to sort the list, the rank of the number would be its position.)</summary>
      <param name="Arg1">Number - The number whose rank you want to find.</param>
      <param name="Arg2">Ref - An array of, or a reference to, a list of numbers. Non-numeric values in reference are ignored.</param>
      <param name="Arg3">Order - A number that specifies how to rank the number.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rate(System.Double,System.Double,System.Double,System.Object,System.Object,System.Object)">
      <summary>Returns the interest rate per period of an annuity. RATE is calculated by iteration and can have zero or more solutions. If the successive results of RATE do not converge to within 0.0000001 after 20 iterations, RATE returns the #NUM! error value.</summary>
      <param name="Arg1">Nper - the total number of payment periods in an annuity.</param>
      <param name="Arg2">Pmt - the payment made each period and cannot change over the life of the annuity. Typically, pmt includes principal and interest but no other fees or taxes. If pmt is omitted, you must include the fv argument.</param>
      <param name="Arg3">Pv - the present value — the total amount that a series of future payments is worth now.</param>
      <param name="Arg4">Fv - the future value, or a cash balance you want to attain after the last payment is made. If fv is omitted, it is assumed to be 0 (the future value of a loan, for example, is 0).</param>
      <param name="Arg5">Type - the number 0 or 1 and indicates when payments are due.</param>
      <param name="Arg6">Guess - your guess for what the rate will be.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Received(System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the amount received at maturity for a fully invested security.</summary>
      <param name="Arg1">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</param>
      <param name="Arg2">Maturity - the security's maturity date. The maturity date is the date when the security expires.</param>
      <param name="Arg3">Investment - the amount invested in the security.</param>
      <param name="Arg4">Discount - the security's discount rate.</param>
      <param name="Arg5">Basis - the type of day count basis to use.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)">
      <summary>Replaces part of a text string, based on the number of characters you specify, with a different text string.</summary>
      <param name="Arg1">Text in which you want to replace some characters.</param>
      <param name="Arg2">The position of the character in <paramref name="Arg1" /> that you want to replace with <paramref name="Arg4" />.</param>
      <param name="Arg3">The number of characters in <paramref name="Arg1" /> that you want the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)" /> method to replace with <paramref name="Arg4" />.</param>
      <param name="Arg4">Text that will replace characters in <paramref name="Arg1" />.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ReplaceB(System.String,System.Double,System.Double,System.String)">
      <summary>REPLACEB replaces part of a text string, based on the number of bytes you specify, with a different text string. </summary>
      <param name="Arg1">Old_text - text in which you want to replace some characters.</param>
      <param name="Arg2">Start_num - the position of the character in old_text that you want to replace with new_text.</param>
      <param name="Arg3">Num_chars - the number of characters in old_text that you want REPLACE to replace with new_text.</param>
      <param name="Arg4">New_text - the text that will replace characters in old_text.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rept(System.String,System.Double)">
      <summary>Repeats text a given number of times. Use REPT to fill a cell with a number of instances of a text string.</summary>
      <param name="Arg1">Text - the text you want to repeat.</param>
      <param name="Arg2">Number_times - a positive number specifying the number of times to repeat text.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Roman(System.Double,System.Object)">
      <summary>Converts an Arabic numeral to roman, as text.</summary>
      <param name="Arg1">Number - the Arabic numeral you want converted.</param>
      <param name="Arg2">Form - a number specifying the type of roman numeral you want. The roman numeral style ranges from Classic to Simplified, becoming more concise as the value of form increases.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Round(System.Double,System.Double)">
      <summary>Rounds a number to a specified number of digits.</summary>
      <param name="Arg1">Number - the number you want to round.</param>
      <param name="Arg2">Num_digits - specifies the number of digits to which you want to round number.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RoundBahtDown(System.Double)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RoundBahtUp(System.Double)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RoundDown(System.Double,System.Double)">
      <summary>Rounds a number down, toward zero.</summary>
      <param name="Arg1">Number - any real number that you want rounded down.</param>
      <param name="Arg2">Num_digits - the number of digits to which you want to round number.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RoundUp(System.Double,System.Double)">
      <summary>Rounds a number up, away from 0 (zero).</summary>
      <param name="Arg1">Number - any real number that you want rounded up.</param>
      <param name="Arg2">Num_digits - the number of digits to which you want to round number.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RSq(System.Object,System.Object)">
      <summary>Returns the square of the Pearson product moment correlation coefficient through data points in known_y's and known_x's. For more information, see <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pearson(System.Object,System.Object)" />. The r-squared value can be interpreted as the proportion of the variance in y attributable to the variance in x.</summary>
      <param name="Arg1">Known_y's - an array or range of data points.</param>
      <param name="Arg2">Known_x's - an array or range of data points.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RTD(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>This method connects to a source to receive real-time data.</summary>
      <param name="progID">A string representing the real-time server programmatic identifier.</param>
      <param name="server">server name, Null string or vbNullString constant.</param>
      <param name="topic1">
        <paramref name="topic1" /> –<paramref name="topic28" /> A String representing a topic.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Search(System.String,System.String,System.Object)">
      <summary>Search and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> locate one text string within a second text string, and return the number of the starting position of the first text string from the first character of the second text string. </summary>
      <param name="Arg1">Find_text - the text you want to find.</param>
      <param name="Arg2">Within_text - the text in which you want to search for find_text.</param>
      <param name="Arg3">Start_num - the character number in within_text at which you want to start searching.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)">
      <summary>SEARCH and SEARCHB locate one text string within a second text string, and return the number of the starting position of the first text string from the first character of the second text string.</summary>
      <param name="Arg1">Find_text - the text you want to find.</param>
      <param name="Arg2">Within_text - the text in which you want to search for find_text.</param>
      <param name="Arg3">Start_num - the character number in within_text at which you want to start searching.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SeriesSum(System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the sum of a power series based on the formula: SERIES(x,n,m,a)= a1xn+a2x(n+m)+a3x(n+2m)+…+aix(n+(i-1)m)</summary>
      <param name="Arg1">X - the input value to the power series.</param>
      <param name="Arg2">N - the initial power to which you want to raise x.</param>
      <param name="Arg3">M - the step by which to increase n for each term in the series.</param>
      <param name="Arg4">Coefficients - a set of coefficients by which each successive power of x is multiplied. The number of values in coefficients determines the number of terms in the power series. For example, if there are three values in coefficients, then there will be three terms in the power series.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Sinh(System.Double)">
      <summary>Returns the hyperbolic sine of a number.</summary>
      <param name="Arg1">Number is any real number.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Skew(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the skewness of a distribution. Skewness characterizes the degree of asymmetry of a distribution around its mean. Positive skewness indicates a distribution with an asymmetric tail extending toward more positive values. Negative skewness indicates a distribution with an asymmetric tail extending toward more negative values.</summary>
      <param name="Arg1">Number1, number2 ... - 1 to 30 arguments for which you want to calculate skewness. You can also use a single array or a reference to an array instead of arguments separated by commas.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Sln(System.Double,System.Double,System.Double)">
      <summary>Returns the straight-line depreciation of an asset for one period.</summary>
      <param name="Arg1">Cost - the initial cost of the asset.</param>
      <param name="Arg2">Salvage - the value at the end of the depreciation (sometimes called the salvage value of the asset).</param>
      <param name="Arg3">Life - the number of periods over which the asset is depreciated (sometimes called the useful life of the asset).</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)">
      <summary>Returns the slope of the linear regression line through data points in known_y's and known_x's. The slope is the vertical distance divided by the horizontal distance between any two points on the line, which is the rate of change along the regression line.</summary>
      <param name="Arg1">Known_y's - an array or cell range of numeric dependent data points.</param>
      <param name="Arg2">Known_x's - the set of independent data points.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Small(System.Object,System.Double)">
      <summary>Returns the k-th smallest value in a data set. Use this function to return values with a particular relative standing in a data set.</summary>
      <param name="Arg1">Array - an array or range of numerical data for which you want to determine the k-th smallest value.</param>
      <param name="Arg2">K - the position (from the smallest) in the array or range of data to return.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SqrtPi(System.Object)">
      <summary>Returns the square root of (number * pi).</summary>
      <param name="Arg1">Number - the number by which pi is multiplied.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Standardize(System.Double,System.Double,System.Double)">
      <summary>Returns a normalized value from a distribution characterized by mean and standard_dev.</summary>
      <param name="Arg1">X - the value you want to normalize.</param>
      <param name="Arg2">Mean - the arithmetic mean of the distribution.</param>
      <param name="Arg3">Standard_dev - the standard deviation of the distribution.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Estimates standard deviation based on a sample. The standard deviation is a measure of how widely values are dispersed from the average value (the mean).</summary>
      <param name="Arg1">Number1, number2, ... - 1 to 30 number arguments corresponding to a sample of a population. You can also use a single array or a reference to an array instead of arguments separated by commas.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Calculates standard deviation based on the entire population given as arguments. The standard deviation is a measure of how widely values are dispersed from the average value (the mean).</summary>
      <param name="Arg1">Number1, number2, ... - 1 to 30 number arguments corresponding to a population. You can also use a single array or a reference to an array instead of arguments separated by commas (,).</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev_S(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Estimates standard deviation based on a sample. The standard deviation is a measure of how widely values are dispersed from the average value (the mean).</summary>
      <param name="Arg1">Number1, number2, ... - 1 to 30 number arguments corresponding to a sample of a population. You can also use a single array or a reference to an array instead of arguments separated by commas.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDevP(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Calculates standard deviation based on the entire population given as arguments. The standard deviation is a measure of how widely values are dispersed from the average value (the mean).</summary>
      <param name="Arg1">Number1, number2, ... - 1 to 30 number arguments corresponding to a sample of a population. You can also use a single array or a reference to an array instead of arguments separated by commas.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StEyx(System.Object,System.Object)">
      <summary>Returns the standard error of the predicted y-value for each x in the regression. The standard error is a measure of the amount of error in the prediction of y for an individual x.</summary>
      <param name="Arg1">Known_y's - an array or range of dependent data points.</param>
      <param name="Arg2">Known_x's - an array or range of independent data points.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Substitute(System.String,System.String,System.String,System.Object)">
      <summary>Substitutes new_text for old_text in a text string. Use SUBSTITUTE when you want to replace specific text in a text string; use REPLACE when you want to replace any text that occurs in a specific location in a text string.</summary>
      <param name="Arg1">Text - the text or the reference to a cell containing text for which you want to substitute characters.</param>
      <param name="Arg2">Old_text - the text you want to replace.</param>
      <param name="Arg3">New_text - the text you want to replace old_text with.</param>
      <param name="Arg4">Instance_num - specifies which occurrence of old_text you want to replace with new_text. If you specify instance_num, only that instance of old_text is replaced. Otherwise, every occurrence of old_text in text is changed to new_text.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Subtotal(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Creates subtotals. </summary>
      <param name="Arg1">A number indicating the aggregation function to be used by the method.</param>
      <param name="Arg2">The first <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object for which a subtotal is to be calculated.</param>
      <param name="Arg3">
        <paramref name="Arg3" /> –<paramref name="Arg30" /> Subsequent <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objects for which a subtotal is to be calculated.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Sum(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Adds all the numbers in a range of cells.</summary>
      <param name="Arg1">Number1, number2, ... - 1 to 30 arguments for which you want the total value or sum.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumIf(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
      <summary>Adds the cells specified by a given criteria.</summary>
      <param name="Arg1">Range - the range of cells that you want evaluated by criteria.</param>
      <param name="Arg2">Criteria - the criteria in the form of a number, expression, or text that defines which cells will be added. For example, criteria can be expressed as 32, "32", "&gt;32", or "apples".</param>
      <param name="Arg3">Sum_range - the actual cells to add if their corresponding cells in range match criteria. If sum_range is omitted, the cells in range are both evaluated by criteria and added if they match criteria.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumIfs(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Adds the cells in a range that meet multiple criteria.</summary>
      <param name="Arg1">Sum_range - the range to sum.</param>
      <param name="Arg2">Criteria_range1, criteria_range2, … - one or more ranges in which to evaluate the associated criteria.</param>
      <param name="Arg3">Criteria1, criteria2, … - one or more criteria in the form of a number, expression, cell reference, or text that define which cells will be added. For example, criteria can be expressed as 32, "32", "&gt;32", "apples", or B4.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumProduct(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Multiplies corresponding components in the given arrays, and returns the sum of those products.</summary>
      <param name="Arg1">Array1, array2, array3, ... - 2 to 30 arrays whose components you want to multiply and then add.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumSq(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the sum of the squares of the arguments.</summary>
      <param name="Arg1">Number1, number2, ... - 1 to 30 arguments for which you want the sum of the squares. You can also use a single array or a reference to an array instead of arguments separated by commas.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumX2MY2(System.Object,System.Object)">
      <summary>Returns the sum of the difference of squares of corresponding values in two arrays.</summary>
      <param name="Arg1">Array_x - the first array or range of values.</param>
      <param name="Arg2">Array_y - the second array or range of values.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumX2PY2(System.Object,System.Object)">
      <summary>Returns the sum of the sum of squares of corresponding values in two arrays. The sum of the sum of squares is a common term in many statistical calculations.</summary>
      <param name="Arg1">Array_x - the first array or range of values.</param>
      <param name="Arg2">Array_y - the second array or range of values.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumXMY2(System.Object,System.Object)">
      <summary>Returns the sum of squares of differences of corresponding values in two arrays.</summary>
      <param name="Arg1">Array_x - the first array or range of values.</param>
      <param name="Arg2">Array_y - the second array or range of values.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Syd(System.Double,System.Double,System.Double,System.Double)">
      <summary>Returns the sum-of-years' digits depreciation of an asset for a specified period.</summary>
      <param name="Arg1">Cost - the initial cost of the asset.</param>
      <param name="Arg2">Salvage - the value at the end of the depreciation (sometimes called the salvage value of the asset).</param>
      <param name="Arg3">Life - the number of periods over which the asset is depreciated (sometimes called the useful life of the asset).</param>
      <param name="Arg4">Per - the period and must use the same units as life.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist(System.Double,System.Double,System.Boolean)">
      <summary>Returns a Student t-distribution where a numeric value (x) is a calculated value of t for which the Percentage Points are computed.</summary>
      <param name="Arg1">X - The numeric value at which to evaluate the distribution.</param>
      <param name="Arg2">Deg_freedom - An integer that indicates the number of degrees of freedom.</param>
      <param name="Arg3">Cumulative - A logical value that determines the form of the function. If cumulative is true, T_Dist returns the cumulative distribution function; if false, it returns the probability density function.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist_2T(System.Double,System.Double)">
      <summary>Returns the two-tailed Student t-distribution.</summary>
      <param name="Arg1">X - The numeric value at which to evaluate the distribution.</param>
      <param name="Arg2">Deg_freedom - An integer that indicates the number of degrees of freedom.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist_RT(System.Double,System.Double)">
      <summary>Returns the right-tailed Student t-distribution where a numeric value (x) is a calculated value of t for which the Percentage Points are to be computed. The t-distribution is used in the hypothesis testing of small sample data sets. Use this function in place of a table of critical values for the t-distribution.</summary>
      <param name="Arg1">X - The numeric value at which to evaluate the distribution.</param>
      <param name="Arg2">Degrees_freedom - An integer that indicates the number of degrees of freedom.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Inv(System.Double,System.Double)">
      <summary>Returns the left-tailed inverse of the Student t-distribution.</summary>
      <param name="Arg1">Probability - The probability associated with the Student t-distribution.</param>
      <param name="Arg2">Deg_freedom - The number of degrees of freedom with which to characterize the distribution.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Inv_2T(System.Double,System.Double)">
      <summary>Returns the t-value of the Student t-distribution as a function of the probability and the degrees of freedom.</summary>
      <param name="Arg1">Probability - The probability associated with the two-tailed Student t-distribution.</param>
      <param name="Arg2">Degrees_freedom - The number of degrees of freedom with which to characterize the distribution.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Test(System.Object,System.Object,System.Double,System.Double)">
      <summary>Returns the probability associated with a Student t-Test. Use T_TEST to determine whether two samples are likely to have come from the same two underlying populations that have the same mean.</summary>
      <param name="Arg1">Array1 - The first data set.</param>
      <param name="Arg2">Array2 - The second data set.</param>
      <param name="Arg3">Tails - Specifies the number of distribution tails. If tails = 1, T_Test uses the one-tailed distribution. If tails = 2, T_Test uses the two-tailed distribution.</param>
      <param name="Arg4">Type - The kind of t-Test to perform.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Tanh(System.Double)">
      <summary>Returns the hyperbolic tangent of a number.</summary>
      <param name="Arg1">Number - any real number.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TBillEq(System.Object,System.Object,System.Object)">
      <summary>Returns the bond-equivalent yield for a Treasury bill.</summary>
      <param name="Arg1">Settlement - the Treasury bill's settlement date. The security settlement date is the date after the issue date when the Treasury bill is traded to the buyer.</param>
      <param name="Arg2">Maturity - the Treasury bill's maturity date. The maturity date is the date when the Treasury bill expires.</param>
      <param name="Arg3">ImportantDates should be entered by using the DATE function, or as results of other formulas or functions. For example, use DATE(2008,5,23) for the 23rd day of May, 2008. Problems can occur if dates are entered as text.Discount - the Treasury bill's discount rate.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TBillPrice(System.Object,System.Object,System.Object)">
      <summary>Returns the price per $100 face value for a Treasury bill.</summary>
      <param name="Arg1">Settlement - the Treasury bill's settlement date. The security settlement date is the date after the issue date when the Treasury bill is traded to the buyer.</param>
      <param name="Arg2">Maturity - the Treasury bill's maturity date. The maturity date is the date when the Treasury bill expires.</param>
      <param name="Arg3">Discount - the Treasury bill's discount rate.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TBillYield(System.Object,System.Object,System.Object)">
      <summary>Returns the yield for a Treasury bill.</summary>
      <param name="Arg1">Settlement - the Treasury bill's settlement date. The security settlement date is the date after the issue date when the Treasury bill is traded to the buyer.</param>
      <param name="Arg2">Maturity - the Treasury bill's maturity date. The maturity date is the date when the Treasury bill expires.</param>
      <param name="Arg3">Pr - the Treasury bill's price per $100 face value.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TDist(System.Double,System.Double,System.Double)">
      <summary>Returns the Percentage Points (probability) for the Student t-distribution where a numeric value (x) is a calculated value of t for which the Percentage Points are to be computed. The t-distribution is used in the hypothesis testing of small sample data sets. Use this function in place of a table of critical values for the t-distribution.</summary>
      <param name="Arg1">X - the numeric value at which to evaluate the distribution.</param>
      <param name="Arg2">Degrees_freedom - an integer indicating the number of degrees of freedom.</param>
      <param name="Arg3">Tails - specifies the number of distribution tails to return. If tails = 1, TDIST returns the one-tailed distribution. If tails = 2, TDIST returns the two-tailed distribution.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Text(System.Object,System.String)">
      <summary>Converts a value to text in a specific number format.</summary>
      <param name="Arg1">A numeric value, a formula that evaluates to a numeric value, or a reference to a cell containing a numeric value.</param>
      <param name="Arg2">A number format in text form in the Category box on the Number tab in the Format Cells dialog box.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiDayOfWeek(System.Double)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiDigit(System.String)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiMonthOfYear(System.Double)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiNumSound(System.Double)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiNumString(System.Double)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiStringLength(System.String)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiYear(System.Double)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TInv(System.Double,System.Double)">
      <summary>Returns the t-value of the Student's t-distribution as a function of the probability and the degrees of freedom.</summary>
      <param name="Arg1">Probability - the probability associated with the two-tailed Student's t-distribution.</param>
      <param name="Arg2">Degrees_freedom - the number of degrees of freedom with which to characterize the distribution.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Transpose(System.Object)">
      <summary>Returns a vertical range of cells as a horizontal range, or vice versa. TRANSPOSE must be entered as an array formula in a range that has the same number of rows and columns, respectively, as an array has columns and rows. Use TRANSPOSE to shift the vertical and horizontal orientation of an array on a worksheet.</summary>
      <param name="Arg1">Array - an array or range of cells on a worksheet that you want to transpose. The transpose of an array is created by using the first row of the array as the first column of the new array, the second row of the array as the second column of the new array, and so on.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Trend(System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns values along a linear trend. Fits a straight line (using the method of least squares) to the arrays known_y's and known_x's. Returns the y-values along that line for the array of new_x's that you specify.</summary>
      <param name="Arg1">Known_y's - the set of y-values you already know in the relationship y = mx + b.</param>
      <param name="Arg2">Known_x's - an optional set of x-values that you may already know in the relationship y = mx + b.</param>
      <param name="Arg3">New_x's - new x-values for which you want TREND to return corresponding y-values.</param>
      <param name="Arg4">Const - a logical value specifying whether to force the constant b to equal 0.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Trim(System.String)">
      <summary>Removes all spaces from text except for single spaces between words. Use TRIM on text that you have received from another application that may have irregular spacing.</summary>
      <param name="Arg1">Text - the text from which you want spaces removed.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TrimMean(System.Object,System.Double)">
      <summary>Returns the mean of the interior of a data set. TRIMMEAN calculates the mean taken by excluding a percentage of data points from the top and bottom tails of a data set. You can use this function when you wish to exclude outlying data from your analysis.</summary>
      <param name="Arg1">Array - the array or range of values to trim and average.</param>
      <param name="Arg2">Percent - the fractional number of data points to exclude from the calculation. For example, if percent = 0.2, 4 points are trimmed from a data set of 20 points (20 x 0.2): 2 from the top and 2 from the bottom of the set.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TTest(System.Object,System.Object,System.Double,System.Double)">
      <summary>Returns the probability associated with a Student's t-Test. Use TTEST to determine whether two samples are likely to have come from the same two underlying populations that have the same mean.</summary>
      <param name="Arg1">Array1 - the first data set.</param>
      <param name="Arg2">Array2 - the second data set.</param>
      <param name="Arg3">Tails - specifies the number of distribution tails. If tails = 1, TTEST uses the one-tailed distribution. If tails = 2, TTEST uses the two-tailed distribution.</param>
      <param name="Arg4">Type - the kind of t-Test to perform.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.USDollar(System.Double,System.Double)">
      <summary>Converts a number to text format and applies a currency symbol. The name of the method (and the symbol that it applies) depends upon the language settings. </summary>
      <param name="Arg1">A reference to a cell containing a number, or a formula that evaluates to a number.</param>
      <param name="Arg2">The number of digits to the right of the decimal point. If Arg2 is negative, the number is rounded to the left of the decimal point. If you omit decimals, it is assumed to be 2.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Estimates variance based on a sample.</summary>
      <param name="Arg1">Number1, number2, ... - 1 to 30 number arguments corresponding to a sample of a population.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Calculates variance based on the entire population.</summary>
      <param name="Arg1">Number1, number2, ... - 1 to 30 number arguments that correspond to a population.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var_S(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Estimates variance based on a sample.</summary>
      <param name="Arg1">Number1, number2, ... - 1 to 30 number arguments corresponding to a sample of a population.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VarP(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Calculates variance based on the entire population.</summary>
      <param name="Arg1">Number1, number2, ... - 1 to 30 number arguments corresponding to a population.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Vdb(System.Double,System.Double,System.Double,System.Double,System.Double,System.Object,System.Object)">
      <summary>Returns the depreciation of an asset for any period you specify, including partial periods, using the double-declining balance method or some other method you specify. VDB stands for variable declining balance.</summary>
      <param name="Arg1">Cost - the initial cost of the asset.</param>
      <param name="Arg2">Salvage - the value at the end of the depreciation (sometimes called the salvage value of the asset). This value can be 0.</param>
      <param name="Arg3">Life - the number of periods over which the asset is depreciated (sometimes called the useful life of the asset).</param>
      <param name="Arg4">Start_period - the starting period for which you want to calculate the depreciation. Start_period must use the same units as life.</param>
      <param name="Arg5">End_period - the ending period for which you want to calculate the depreciation. End_period must use the same units as life.</param>
      <param name="Arg6">Factor - the rate at which the balance declines. If factor is omitted, it is assumed to be 2 (the double-declining balance method). Change factor if you do not want to use the double-declining balance method. For a description of the double-declining balance method, see <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ddb(System.Double,System.Double,System.Double,System.Double,System.Object)" />.</param>
      <param name="Arg7">No_switch - a logical value specifying whether to switch to straight-line depreciation when depreciation is greater than the declining balance calculation.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)">
      <summary>Searches for a value in the first column of a table array and returns a value in the same row from another column in the table array. </summary>
      <param name="Arg1">Lookup_value - the value to search in the first column of the table array. Lookup_value can be a value or a reference. If lookup_value is smaller than the smallest value in the first column of table_array, VLOOKUP returns the #N/A error value.</param>
      <param name="Arg2">Table_array - two or more columns of data. Use a reference to a range or a range name. The values in the first column of table_array are the values searched by lookup_value. These values can be text, numbers, or logical values. Uppercase and lowercase text are equivalent.</param>
      <param name="Arg3">Col_index_num - the column number in table_array from which the matching value must be returned. A col_index_num of 1 returns the value in the first column in table_array; a col_index_num of 2 returns the value in the second column in table_array, and so on.</param>
      <param name="Arg4">Range_lookup - a logical value that specifies whether you want the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" /> method to find an exact match or an approximate match:</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Weekday(System.Object,System.Object)">
      <summary>Returns the day of the week corresponding to a date. The day is given as an integer, ranging from 1 (Sunday) to 7 (Saturday), by default.</summary>
      <param name="Arg1">Serial_number - a sequential number that represents the date of the day you are trying to find. Dates should be entered by using the DATE function, or as results of other formulas or functions. For example, use DATE(2008,5,23) for the 23rd day of May, 2008. Problems can occur if dates are entered as text.</param>
      <param name="Arg2">Return_type - a number that determines the type of return value.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.WeekNum(System.Object,System.Object)">
      <summary>Returns a number that indicates where the week falls numerically within a year.</summary>
      <param name="Arg1">Serial_num - a date within the week. Dates should be entered by using the DATE function, or as results of other formulas or functions. For example, use DATE(2008,5,23) for the 23rd day of May, 2008. Problems can occur if dates are entered as text.</param>
      <param name="Arg2">Return_type - a number that determines on which day the week begins. The default is 1.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Weibull(System.Double,System.Double,System.Double,System.Boolean)">
      <summary>Returns the Weibull distribution. Use this distribution in reliability analysis, such as calculating a device's mean time to failure.</summary>
      <param name="Arg1">X - the value at which to evaluate the function.</param>
      <param name="Arg2">Alpha - a parameter to the distribution.</param>
      <param name="Arg3">Beta - a parameter to the distribution.</param>
      <param name="Arg4">Cumulative - determines the form of the function.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Weibull_Dist(System.Double,System.Double,System.Double,System.Boolean)">
      <summary>Returns the Weibull distribution. Use this distribution in reliability analysis, such as calculating the mean time to failure for a device.</summary>
      <param name="Arg1">X - The value at which to evaluate the function.</param>
      <param name="Arg2">Alpha - A parameter to the distribution.</param>
      <param name="Arg3">Beta - A parameter to the distribution.</param>
      <param name="Arg4">Cumulative - Determines the form of the function.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.WorkDay(System.Object,System.Object,System.Object)">
      <summary>Returns a number that represents a date that is the indicated number of working days before or after a date (the starting date). Working days exclude weekends and any dates identified as holidays. Use WORKDAY to exclude weekends or holidays when you calculate invoice due dates, expected delivery times, or the number of days of work performed.</summary>
      <param name="Arg1">Start_date - a date that represents the start date.</param>
      <param name="Arg2">Days - the number of nonweekend and nonholiday days before or after start_date. A positive value for days yields a future date; a negative value yields a past date.</param>
      <param name="Arg3">Holidays - an optional list of one or more dates to exclude from the working calendar, such as state and federal holidays and floating holidays. The list can be either a range of cells that contain the dates or an array constant of the serial numbers that represent the dates.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.WorkDay_Intl(System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the serial number of the date before or after a specified number of workdays with custom weekend parameters. Weekend parameters indicate which and how many days are weekend days. Weekend days and any days that are specified as holidays are not considered as workdays.</summary>
      <param name="Arg1">Start_date - The start date, truncated to integer.</param>
      <param name="Arg2">Days - The number of workdays before or after the start_date. A positive value yields a future date; a negative value yields a past date; a 0 (zero) value yields the start_date. Day-offset is truncated to an integer.</param>
      <param name="Arg3">Weekend - Indicates the days of the week that are weekend days and are not considered working days. Weekend is a weekend number or string that specifies when weekends occur.</param>
      <param name="Arg4">Holidays - An optional set of one or more dates that are to be excluded from the working day calendar. Holidays is a range of cells that contain the dates, or an array constant of the serial values that represent those dates. The ordering of dates or serial values in holidays can be arbitrary.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Xirr(System.Object,System.Object,System.Object)">
      <summary>Returns the internal rate of return for a schedule of cash flows that is not necessarily periodic. To calculate the internal rate of return for a series of periodic cash flows, use the IRR function.</summary>
      <param name="Arg1">Values - a series of cash flows that corresponds to a schedule of payments in dates. The first payment is optional and corresponds to a cost or payment that occurs at the beginning of the investment. If the first value is a cost or payment, it must be a negative value. All succeeding payments are discounted based on a 365-day year. The series of values must contain at least one positive and one negative value.</param>
      <param name="Arg2">Dates - a schedule of payment dates that corresponds to the cash flow payments. The first payment date indicates the beginning of the schedule of payments. All other dates must be later than this date, but they may occur in any order. Dates should be entered by using the DATE function, or as results of other formulas or functions. For example, use DATE(2008,5,23) for the 23rd day of May, 2008. Problems can occur if dates are entered as text.</param>
      <param name="Arg3">Guess - a number that you guess is close to the result of Xirr.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Xnpv(System.Object,System.Object)">
      <summary>Returns the net present value for a schedule of cash flows that is not necessarily periodic. </summary>
      <param name="Arg1">A series of cash flows that corresponds to a schedule of payments in dates. The first payment is optional and corresponds to a cost or payment that occurs at the beginning of the investment.</param>
      <param name="Arg2">A schedule of payment dates that corresponds to the cash flow payments. The first payment date indicates the beginning of the schedule of payments. All other dates must be later than this date, but they may occur in any order.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.YearFrac(System.Object,System.Object,System.Object)">
      <summary>Calculates the fraction of the year represented by the number of whole days between two dates (the start_date and the end_date). Use the YEARFRAC worksheet function to identify the proportion of a whole year's benefits or obligations to assign to a specific term.</summary>
      <param name="Arg1">Start_date - a date that represents the start date.</param>
      <param name="Arg2">End_date - a date that represents the end date.</param>
      <param name="Arg3">Basis - the type of day count basis to use.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.YieldDisc(System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the annual yield for a discounted security.</summary>
      <param name="Arg1">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</param>
      <param name="Arg2">Maturity - the security's maturity date. The maturity date is the date when the security expires.</param>
      <param name="Arg3">Pr - the security's price per $100 face value.</param>
      <param name="Arg4">Redemption - the security's redemption value per $100 face value.</param>
      <param name="Arg5">Basis - the type of day count basis to use.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.YieldMat(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns the annual yield of a security that pays interest at maturity.</summary>
      <param name="Arg1">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</param>
      <param name="Arg2">Maturity - the security's maturity date. The maturity date is the date when the security expires.</param>
      <param name="Arg3">Issue - the security's issue date, expressed as a serial date number.</param>
      <param name="Arg4">Rate - the security's interest rate at date of issue.</param>
      <param name="Arg5">Pr - the security's price per $100 face value.</param>
      <param name="Arg6">Basis - the type of day count basis to use.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Z_Test(System.Object,System.Double,System.Object)">
      <summary>Returns the one-tailed probability-value of a z-test. For a given hypothesized population mean, Z_TEST returns the probability that the sample mean would be greater than the average of observations in the data set (array) — that is, the observed sample mean.</summary>
      <param name="Arg1">Array is the array or range of data against which to test the hypothesized population mean.</param>
      <param name="Arg2">The value to test.</param>
      <param name="Arg3">Sigma - The population (known) standard deviation. If omitted, the sample standard deviation is used.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ZTest(System.Object,System.Double,System.Object)">
      <summary>Returns the one-tailed probability-value of a z-test. For a given hypothesized population mean, ZTEST returns the probability that the sample mean would be greater than the average of observations in the data set (array) — that is, the observed sample mean.</summary>
      <param name="Arg1">Array is the array or range of data against which to test the hypothesized population mean.</param>
      <param name="Arg2">The value to test.</param>
      <param name="Arg3">Sigma - the population (known) standard deviation. If omitted, the sample standard deviation is used.</param>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.Worksheets">
      <summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> objects in the specified or active workbook. Each Worksheet object represents a worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Worksheets._Default(System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Worksheets._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)">
      <summary>Creates a new worksheet, chart, or macro sheet. The new worksheet becomes the active sheet.</summary>
      <param name="Before">Optional Object. An object that specifies the sheet before which the new sheet is added.</param>
      <param name="After">Optional Object. An object that specifies the sheet after which the new sheet is added.</param>
      <param name="Count">Optional Object. The number of sheets to be added. The default value is one</param>
      <param name="Type">Optional Object. Specifies the sheet type. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" /> constants: xlWorksheet, xlChart, xlExcel4MacroSheet, or xlExcel4IntlMacroSheet. If you are inserting a sheet based on an existing template, specify the path to the template. The default value is xlWorksheet.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Worksheets.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Worksheets.Copy(System.Object,System.Object)">
      <summary>Copies the sheet to another location in the workbook.</summary>
      <param name="Before">Optional Object. The sheet before which the copied sheet will be placed. You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</param>
      <param name="After">Optional Object. The sheet after which the copied sheet will be placed. You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Worksheets.Count">
      <summary>Returns the number of objects in the collection. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Worksheets.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Worksheets.Delete">
      <summary>Deletes the object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Worksheets.FillAcrossSheets(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlFillWith)">
      <summary>Copies a range to the same area on all other worksheets in a collection.</summary>
      <param name="Range">Required <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object. The range to fill on all the worksheets in the collection. The range must be from a worksheet within the collection.</param>
      <param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFillWith" />. Specifies how to copy the range.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Worksheets.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.Worksheets.HPageBreaks">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> collection that represents the horizontal page breaks on the sheet. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Worksheets.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Worksheets.Move(System.Object,System.Object)">
      <summary>Moves the sheet to another location in the workbook.</summary>
      <param name="Before">Optional Object. The sheet before which the moved sheet will be placed. You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</param>
      <param name="After">Optional Object. The sheet after which the moved sheet will be placed. You cannot specify <paramref name="After" /> if you specify Before.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Worksheets.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Worksheets.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Prints the object.</summary>
      <param name="From">Optional Object. The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
      <param name="To">Optional Object. The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
      <param name="Copies">Optional Object. The number of copies to print. If this argument is omitted, one copy is printed.</param>
      <param name="Preview">Optional Object. True to have Microsoft Excel invoke print preview before printing the object. False (or omitted) to print the object immediately.</param>
      <param name="ActivePrinter">Optional Object. Sets the name of the active printer.</param>
      <param name="PrintToFile">Optional Object. True to print to a file. If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</param>
      <param name="Collate">Optional Object. True to collate multiple copies.</param>
      <param name="PrToFileName">Optional Object. If <paramref name="PrintToFile" /> is set to True, this argument specifies the name of the file you want to print to.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Worksheets.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Worksheets.PrintPreview(System.Object)">
      <summary>Shows a preview of the object as it would look when printed.</summary>
      <param name="EnableChanges">Enables changes to the object.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.Worksheets.Select(System.Object)">
      <summary>Selects the object.</summary>
      <param name="Replace">Optional Object (used only with sheets). True to replace the current selection with the specified object. False to extend the current selection to include any previously selected objects and the specified object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Worksheets.Visible">
      <summary>Determines whether the object is visible. Read/write Object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.Worksheets.VPageBreaks">
      <summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection that represents the vertical page breaks on the sheet. Read-only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.WorksheetView">
      <summary>A collection of all the WorksheetView objects in the specified or active workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetView.Application">
      <summary>When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application. When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the creator of the specified object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel._Application" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetView.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
      </returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetView.DisplayFormulas">
      <summary>Returns or sets if formulas should be displayed or hidden in the current worksheet view. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetView.DisplayGridlines">
      <summary>True if gridlines are displayed. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetView.DisplayHeadings">
      <summary>True if both row and column headings are displayed; False if no headings are displayed. Read/write.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetView.DisplayOutline">
      <summary>True if outline symbols are displayed.</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetView.DisplayZeros">
      <summary>True if zero values are displayed. Read/write .</summary>
      <returns>Boolean</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetView.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.WorksheetView.Sheet">
      <summary>Returns the sheet name for the specified <see cref="T:Microsoft.Office.Interop.Excel.WorksheetView" /> object. Read-only.</summary>
      <returns>Object</returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlAboveBelow">
      <summary>Specifies if the values are above or below average.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAboveBelow.xlAboveAverage">
      <summary>Above average.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAboveBelow.xlBelowAverage">
      <summary>Below average.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAboveBelow.xlEqualAboveAverage">
      <summary>Equal above average.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAboveBelow.xlEqualBelowAverage">
      <summary>Equal below average.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAboveBelow.xlAboveStdDev">
      <summary>Above standard deviation.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAboveBelow.xlBelowStdDev">
      <summary>Below standard deviation</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlActionType">
      <summary>Specifies the action that should be performed.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlActionType.xlActionTypeUrl">
      <summary>URL.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlActionType.xlActionTypeRowset">
      <summary>Rowset.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlActionType.xlActionTypeReport">
      <summary>Report.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlActionType.xlActionTypeDrillthrough">
      <summary>Drill through.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlAllocation">
      <summary>Specifies when to calculate changes when performing what-if analysis on a PivotTable based on an OLAP data source.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAllocation.xlManualAllocation">
      <summary>Calculate changes manually.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAllocation.xlAutomaticAllocation">
      <summary>Calculate changes automatically after each value is changed.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlAllocationMethod">
      <summary>Specifies the method to use to allocate values when performing what-if analysis on a PivotTable report based on an OLAP data source.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAllocationMethod.xlEqualAllocation">
      <summary>Use equal allocation.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAllocationMethod.xlWeightedAllocation">
      <summary>Use weighted allocation.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlAllocationValue">
      <summary>Specifies what value to allocate when performing what-if analysis on a PivotTable report based on an OLAP data source.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAllocationValue.xlAllocateValue">
      <summary>The value entered divided by the number of allocations.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAllocationValue.xlAllocateIncrement">
      <summary>Increment based on the old value.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlApplicationInternational">
      <summary>Specifies country/region and international settings.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xl24HourClock">
      <summary>True if you’re using 24-hour time; False if you’re using 12-hour time.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xl4DigitYears">
      <summary>True if you’re using four-digit years; False if you’re using two-digit years.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlAlternateArraySeparator">
      <summary>Alternate array item separator to be used if the current array separator is the same as the decimal separator.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlColumnSeparator">
      <summary>Character used to separate columns in array literals.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCountryCode">
      <summary>Country/Region version of Microsoft Excel.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCountrySetting">
      <summary>Current country/region setting in the Windows Control Panel.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCurrencyBefore">
      <summary>True if the currency symbol precedes the currency values; False if it follows them.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCurrencyCode">
      <summary>Currency symbol.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCurrencyDigits">
      <summary>Number of decimal digits to be used in currency formats.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCurrencyLeadingZeros">
      <summary>True if leading zeros are displayed for zero currency values.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCurrencyMinusSign">
      <summary>True if you’re using a minus sign for negative numbers; False if you’re using parentheses.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCurrencyNegative">
      <summary>Currency format for negative currency values:0 = (symbolx) or (xsymbol)1 = -symbolx or -xsymbol2 = symbol-x or x-symbol3 = symbolx- or xsymbol-where symbol is the currency symbol of the country or region. Note that the position of the currency symbol is determined by xlCurrencyBefore.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCurrencySpaceBefore">
      <summary>True if a space is added before the currency symbol.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCurrencyTrailingZeros">
      <summary>True if trailing zeros are displayed for zero currency values.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlDateOrder">
      <summary>Order of date elements:0 = month-day-year1 = day-month-year2 = year-month-day</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlDateSeparator">
      <summary>Date separator (/).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlDayCode">
      <summary>Day symbol (d).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlDayLeadingZero">
      <summary>True if a leading zero is displayed in days.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlDecimalSeparator">
      <summary>Decimal separator.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlGeneralFormatName">
      <summary>Name of the General number format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlHourCode">
      <summary>Hour symbol (h).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlLeftBrace">
      <summary>Character used instead of the left brace ({) in array literals.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlLeftBracket">
      <summary>Character used instead of the left bracket ([) in R1C1-style relative references.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlListSeparator">
      <summary>List separator.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlLowerCaseColumnLetter">
      <summary>Lowercase column letter.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlLowerCaseRowLetter">
      <summary>Lowercase row letter.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlMDY">
      <summary>True if the date order is month-day-year for dates displayed in the long form; False if the date order is day-month-year.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlMetric">
      <summary>True if you’re using the metric system; False if you’re using the English measurement system.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlMinuteCode">
      <summary>Minute symbol (m).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlMonthCode">
      <summary>Month symbol (m).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlMonthLeadingZero">
      <summary>True if a leading zero is displayed in months (when months are displayed as numbers).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlMonthNameChars">
      <summary>Always returns three characters for backward compatibility. Abbreviated month names are read from Microsoft Windows and can be any length.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlNoncurrencyDigits">
      <summary>Number of decimal digits to be used in noncurrency formats.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlNonEnglishFunctions">
      <summary>True if you’re not displaying functions in English.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlRightBrace">
      <summary>Character used instead of the right brace (}) in array literals.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlRightBracket">
      <summary>Character used instead of the right bracket (]) in R1C1-style references.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlRowSeparator">
      <summary>Character used to separate rows in array literals.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlSecondCode">
      <summary>Second symbol (s).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlThousandsSeparator">
      <summary>Zero or thousands separator.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlTimeLeadingZero">
      <summary>True if a leading zero is displayed in times.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlTimeSeparator">
      <summary>Time separator (:).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlUpperCaseColumnLetter">
      <summary>Uppercase column letter.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlUpperCaseRowLetter">
      <summary>Uppercase row letter (for R1C1-style references).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlWeekdayNameChars">
      <summary>Always returns three characters for backward compatibility. Abbreviated weekday names are read from Microsoft Windows and can be any length.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlYearCode">
      <summary>Year symbol in number formats (y).</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlApplyNamesOrder">
      <summary>Specifies which range name is listed first when a cell reference is replaced by a row-oriented and column-oriented range name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplyNamesOrder.xlColumnThenRow">
      <summary>Columns listed before rows.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlApplyNamesOrder.xlRowThenColumn">
      <summary>Rows listed before columns.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlArabicModes">
      <summary>Specifies spelling rules for the Arabic spelling checker.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlArabicModes.xlArabicNone">
      <summary>The spelling checker ignores spelling rules regarding either Arabic words ending with the letter yaa or Arabic words beginning with an alef hamza.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlArabicModes.xlArabicStrictAlefHamza">
      <summary>The spelling checker uses spelling rules regarding Arabic words beginning with an alef hamza.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlArabicModes.xlArabicStrictFinalYaa">
      <summary>The spelling checker uses spelling rules regarding Arabic words ending with the letter yaa.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlArabicModes.xlArabicBothStrict">
      <summary>The spelling checker uses spelling rules regarding both Arabic words ending with the letter yaa and Arabic words beginning with an alef hamza.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlArrangeStyle">
      <summary>Specifies how windows are arranged on the screen.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlArrangeStyle.xlArrangeStyleCascade">
      <summary>Windows are cascaded.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlArrangeStyle.xlArrangeStyleHorizontal">
      <summary>Windows are arranged horizontally</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlArrangeStyle.xlArrangeStyleTiled">
      <summary>default. Windows are tiled.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlArrangeStyle.xlArrangeStyleVertical">
      <summary>Windows are arranged vertically.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlArrowHeadLength">
      <summary>Specifies the length of the arrowhead at the end of a line.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlArrowHeadLength.xlArrowHeadLengthLong">
      <summary>Longest arrowhead.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlArrowHeadLength.xlArrowHeadLengthMedium">
      <summary>Medium-length arrowhead.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlArrowHeadLength.xlArrowHeadLengthShort">
      <summary>Shortest arrowhead.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlArrowHeadStyle">
      <summary>Specifies the type of arrowhead to apply to the line end.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlArrowHeadStyle.xlArrowHeadStyleClosed">
      <summary>Small arrowhead with curved edge at connection to line.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlArrowHeadStyle.xlArrowHeadStyleDoubleClosed">
      <summary>Large diamond-shaped arrowhead.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlArrowHeadStyle.xlArrowHeadStyleDoubleOpen">
      <summary>Large arrowhead with curved edge at connection to line.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlArrowHeadStyle.xlArrowHeadStyleNone">
      <summary>No arrowhead.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlArrowHeadStyle.xlArrowHeadStyleOpen">
      <summary>Large triangular arrowhead.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlArrowHeadWidth">
      <summary>Specifies the width of the arrowhead at the line end.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlArrowHeadWidth.xlArrowHeadWidthMedium">
      <summary>Medium-width arrowhead.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlArrowHeadWidth.xlArrowHeadWidthNarrow">
      <summary>Narrowest arrowhead.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlArrowHeadWidth.xlArrowHeadWidthWide">
      <summary>Widest arrowhead.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlAutoFillType">
      <summary>Specifies how the target range is to be filled, based on the contents of the source range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillCopy">
      <summary>Copy the values and formats from the source range to the target range, repeating if necessary.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillDays">
      <summary>Extend the names of the days of the week in the source range into the target range. Formats are copied from the source range to the target range, repeating if necessary.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillDefault">
      <summary>Excel determines the values and formats used to fill the target range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillFormats">
      <summary>Copy only the formats from the source range to the target range, repeating if necessary.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillMonths">
      <summary>Extend the names of the months in the source range into the target range. Formats are copied from the source range to the target range, repeating if necessary.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillSeries">
      <summary>Extend the values in the source range into the target range as a series (e.g., '1, 2' is extended as '3, 4, 5'). Formats are copied from the source range to the target range, repeating if necessary.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillValues">
      <summary>Copy only the values from the source range to the target range, repeating if necessary.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillWeekdays">
      <summary>Extend the names of the days of the workweek in the source range into the target range. Formats are copied from the source range to the target range, repeating if necessary.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillYears">
      <summary>Extend the years in the source range into the target range. Formats are copied from the source range to the target range, repeating if necessary.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlGrowthTrend">
      <summary>Extend the numeric values from the source range into the target range, assuming that the relationships between the numbers in the source range are multiplicative (e.g., '1, 2,' is extended as '4, 8, 16' assuming that each number is a result of multiplying the previous number by some value). Formats are copied from the source range to the target range, repeating if necessary.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlLinearTrend">
      <summary>Extend the numeric values from the source range into the target range, assuming that the relationships between the numbers is additive (e.g., '1, 2,' is extended as '3, 4, 5' assuming that each number is a result of adding some value to the previous number). Formats are copied from the source range to the target range, repeating if necessary.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlAutoFilterOperator">
      <summary>Specifies the operator to use to associate two criteria applied by a filter.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlAnd">
      <summary>Logical AND of Criteria1 and Criteria2.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlBottom10Items">
      <summary>Lowest-valued items displayed (number of items specified in Criteria1).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlBottom10Percent">
      <summary>Lowest-valued items displayed (percentage specified in Criteria1).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlOr">
      <summary>Logical OR of Criteria1 and Criteria2.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlTop10Items">
      <summary>Highest-valued items displayed (number of items specified in Criteria1).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlTop10Percent">
      <summary>Lowest-valued items displayed (percentage of items specified in Criteria1).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlFilterValues">
      <summary>Filter values</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlFilterCellColor">
      <summary>Color of the cell</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlFilterFontColor">
      <summary>Color of the font</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlFilterIcon">
      <summary>Filter icon</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlFilterDynamic">
      <summary>Dynamic filter</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlFilterNoFill">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlFilterAutomaticFontColor">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlFilterNoIcon">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlAxisCrosses">
      <summary>Specifies the point on the specified axis where the other axis crosses.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAxisCrosses.xlAxisCrossesAutomatic">
      <summary>Microsoft Excel sets the axis crossing point.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAxisCrosses.xlAxisCrossesCustom">
      <summary>The CrossesAt property specifies the axis crossing point.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAxisCrosses.xlAxisCrossesMaximum">
      <summary>The axis crosses at the maximum value.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAxisCrosses.xlAxisCrossesMinimum">
      <summary>The axis crosses at the minimum value.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlAxisGroup">
      <summary>Specifies the type of axis group.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAxisGroup.xlPrimary">
      <summary>Primary axis group.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAxisGroup.xlSecondary">
      <summary>Secondary axis group.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlAxisType">
      <summary>Specifies the axis type.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAxisType.xlCategory">
      <summary>Axis displays categories.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis">
      <summary>Axis displays data series.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlAxisType.xlValue">
      <summary>Axis displays values.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlBackground">
      <summary>Specifies the background type for text in charts.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBackground.xlBackgroundAutomatic">
      <summary>Excel controls the background.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBackground.xlBackgroundOpaque">
      <summary>Opaque.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBackground.xlBackgroundTransparent">
      <summary>Transparent.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlBarShape">
      <summary>Specifies the shape used with the 3-D bar or column chart.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBarShape.xlBox">
      <summary>Box.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBarShape.xlPyramidToPoint">
      <summary>Pyramid, coming to point at value.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBarShape.xlPyramidToMax">
      <summary>Pyramid, truncated at value.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBarShape.xlCylinder">
      <summary>Cylinder.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBarShape.xlConeToPoint">
      <summary>Cone, coming to point at value.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBarShape.xlConeToMax">
      <summary>Cone, truncated at value.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlBordersIndex">
      <summary>Specifies the border to be retrieved.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBordersIndex.xlInsideHorizontal">
      <summary>Horizontal borders for all cells in the range except borders on the outside of the range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBordersIndex.xlInsideVertical">
      <summary>Vertical borders for all the cells in the range except borders on the outside of the range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBordersIndex.xlDiagonalDown">
      <summary>Border running from the upper left-hand corner to the lower right of each cell in the range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBordersIndex.xlDiagonalUp">
      <summary>Border running from the lower left-hand corner to the upper right of each cell in the range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBordersIndex.xlEdgeBottom">
      <summary>Border at the bottom of the range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBordersIndex.xlEdgeLeft">
      <summary>Border at the left-hand edge of the range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBordersIndex.xlEdgeRight">
      <summary>Border at the right-hand edge of the range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBordersIndex.xlEdgeTop">
      <summary>Border at the top of the range.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlBorderWeight">
      <summary>Specifies the weight of the border around a range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBorderWeight.xlHairline">
      <summary>Hairline (thinnest border).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBorderWeight.xlMedium">
      <summary>Medium.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBorderWeight.xlThick">
      <summary>Thick (widest border).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin">
      <summary>Thin.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlBuiltInDialog">
      <summary>Specifies which dialog box to display.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOpen">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOpenLinks">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSaveAs">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFileDelete">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPageSetup">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPrint">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPrinterSetup">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogArrangeAll">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWindowSize">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWindowMove">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogRun">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSetPrintTitles">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFont">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogDisplay">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogProtectDocument">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogCalculation">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogExtract">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogDataDelete">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSort">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogDataSeries">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogTable">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormatNumber">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogAlignment">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogStyle">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogBorder">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogCellProtection">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogColumnWidth">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogClear">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPasteSpecial">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogEditDelete">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogInsert">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPasteNames">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogDefineName">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogCreateNames">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormulaGoto">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormulaFind">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGalleryArea">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGalleryBar">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGalleryColumn">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGalleryLine">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGalleryPie">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGalleryScatter">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogCombination">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGridlines">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogAxes">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogAttachText">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPatterns">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogMainChart">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOverlay">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogScale">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormatLegend">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormatText">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogParse">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogUnhide">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWorkspace">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogActivate">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogCopyPicture">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogDeleteName">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogDeleteFormat">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogNew">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogRowHeight">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormatMove">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormatSize">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormulaReplace">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSelectSpecial">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogApplyNames">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogReplaceFont">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSplit">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOutline">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSaveWorkbook">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogCopyChart">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormatFont">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogNote">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSetUpdateStatus">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogColorPalette">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogChangeLink">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogAppMove">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogAppSize">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogMainChartType">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOverlayChartType">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOpenMail">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSendMail">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogStandardFont">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogConsolidate">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSortSpecial">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGallery3dArea">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGallery3dColumn">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGallery3dLine">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGallery3dPie">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogView3d">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGoalSeek">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWorkgroup">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFillGroup">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogUpdateLink">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPromote">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogDemote">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogShowDetail">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogObjectProperties">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSaveNewObject">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogApplyStyle">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogAssignToObject">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogObjectProtection">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogCreatePublisher">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSubscribeTo">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogShowToolbar">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPrintPreview">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogEditColor">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormatMain">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormatOverlay">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogEditSeries">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogDefineStyle">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGalleryRadar">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogEditionOptions">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogZoom">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogInsertObject">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSize">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogMove">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormatAuto">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGallery3dBar">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGallery3dSurface">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogCustomizeToolbar">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWorkbookAdd">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWorkbookMove">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWorkbookCopy">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWorkbookOptions">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSaveWorkspace">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogChartWizard">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogAssignToTool">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPlacement">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFillWorkgroup">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWorkbookNew">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogScenarioCells">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogScenarioAdd">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogScenarioEdit">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogScenarioSummary">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPivotTableWizard">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPivotFieldProperties">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOptionsCalculation">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOptionsEdit">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOptionsView">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogAddinManager">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogMenuEditor">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogAttachToolbars">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOptionsChart">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogVbaInsertFile">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogVbaProcedureDefinition">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogRoutingSlip">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogMailLogon">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogInsertPicture">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGalleryDoughnut">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogChartTrend">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWorkbookInsert">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOptionsTransition">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOptionsGeneral">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFilterAdvanced">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogMailNextLetter">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogDataLabel">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogInsertTitle">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFontProperties">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogMacroOptions">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWorkbookUnhide">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWorkbookName">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGalleryCustom">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogAddChartAutoformat">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogChartAddData">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogTabOrder">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSubtotalCreate">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWorkbookTabSplit">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWorkbookProtect">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogScrollbarProperties">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPivotShowPages">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogTextToColumns">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormatCharttype">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPivotFieldGroup">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPivotFieldUngroup">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogCheckboxProperties">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogLabelProperties">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogListboxProperties">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogEditboxProperties">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOpenText">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPushbuttonProperties">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFilter">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFunctionWizard">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSaveCopyAs">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOptionsListsAdd">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSeriesAxes">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSeriesX">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSeriesY">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogErrorbarX">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogErrorbarY">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormatChart">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSeriesOrder">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogMailEditMailer">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogStandardWidth">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogScenarioMerge">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogProperties">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSummaryInfo">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFindFile">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogActiveCellFont">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogVbaMakeAddin">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFileSharing">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogAutoCorrect">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogCustomViews">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogInsertNameLabel">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSeriesShape">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogChartOptionsDataLabels">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogChartOptionsDataTable">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSetBackgroundPicture">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogDataValidation">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogChartType">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogChartLocation">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog._xlDialogPhonetic">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogChartSourceData">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog._xlDialogChartSourceData">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSeriesOptions">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPivotTableOptions">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPivotSolveOrder">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPivotCalculatedField">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPivotCalculatedItem">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogConditionalFormatting">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogInsertHyperlink">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogProtectSharing">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOptionsME">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPublishAsWebPage">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPhonetic">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogNewWebQuery">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogImportTextFile">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogExternalDataProperties">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWebOptionsGeneral">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWebOptionsFiles">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWebOptionsPictures">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWebOptionsEncoding">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWebOptionsFonts">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPivotClientServerSet">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPropertyFields">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSearch">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogEvaluateFormula">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogDataLabelMultiple">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogChartOptionsDataLabelMultiple">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogErrorChecking">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWebOptionsBrowsers">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogCreateList">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPermission">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogMyPermission">
      <summary>Displays the dialog box described in the constant name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogDocumentInspector">
      <summary>Document Inspector dialog box</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogNameManager">
      <summary>NameManager dialog box</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogNewName">
      <summary>NewName dialog box</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSparklineInsertLine">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSparklineInsertColumn">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSparklineInsertWinLoss">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSlicerSettings">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSlicerCreation">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSlicerPivotTableConnections">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPivotTableSlicerConnections">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPivotTableWhatIfAnalysisSettings">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSetManager">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSetMDXEditor">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSetTupleEditorOnRows">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSetTupleEditorOnColumns">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlCalcFor">
      <summary>Specifies what should be calculated.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCalcFor.xlAllValues">
      <summary>All values.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCalcFor.xlRowGroups">
      <summary>Row groups.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCalcFor.xlColGroups">
      <summary>Column groups.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlCalculatedMemberType">
      <summary>Specifies the type of a calculated member in a pivot table.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCalculatedMemberType.xlCalculatedMember">
      <summary>The member uses a Multidimensional Expression (MDX) formula.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCalculatedMemberType.xlCalculatedSet">
      <summary>The member contains an MDX formula for a set in a cube field.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlCalculation">
      <summary>Specifies the calculation mode.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCalculation.xlCalculationAutomatic">
      <summary>Excel controls recalculation.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCalculation.xlCalculationManual">
      <summary>Calculation is done when the user requests it.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCalculation.xlCalculationSemiautomatic">
      <summary>Excel controls recalculation but ignores changes in tables.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlCalculationInterruptKey">
      <summary>Specifies which key interrupts recalculation.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCalculationInterruptKey.xlNoKey">
      <summary>No key press can interrupt recalculation.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCalculationInterruptKey.xlEscKey">
      <summary>Pressing the ESC key interrupts recalculation.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCalculationInterruptKey.xlAnyKey">
      <summary>Pressing any key interrupts recalculation.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlCalculationState">
      <summary>Specifies the calculation state of the application.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCalculationState.xlDone">
      <summary>Calculations complete.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCalculationState.xlCalculating">
      <summary>Calculations in process.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCalculationState.xlPending">
      <summary>Changes that trigger calculation have been made, but a recalculation has not yet been performed.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlCategoryType">
      <summary>Specifies the type of the category axis.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCategoryType.xlCategoryScale">
      <summary>Axis groups data by an arbitrary set of categories.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCategoryType.xlTimeScale">
      <summary>Axis groups data on a time scale.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCategoryType.xlAutomaticScale">
      <summary>Excel controls the axis type.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlCellChangedState">
      <summary>Specifies whether a PivotTable value cell has been edited or recalculated since the PivotTable report was created or the last commit operation was performed.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellNotChanged">
      <summary>The value in the cell has not been edited or recalculated.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellChanged">
      <summary>The value in the cell has been edited or recalculated.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCellChangedState.xlCellChangeApplied">
      <summary>The value in the cell has been edited or recalculated, and that change has been applied to the data source. (Applies only PivotTable reports with OLAP data sources)</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlCellInsertionMode">
      <summary>Specifies the way rows on the specified worksheet are added or deleted to accommodate the number of rows in a recordset returned by a query.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCellInsertionMode.xlOverwriteCells">
      <summary>No new cells or rows are added to the worksheet. Data in surrounding cells is overwritten to accommodate any overflow.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCellInsertionMode.xlInsertDeleteCells">
      <summary>Partial rows are inserted or deleted to match the exact number of rows required for the new recordset.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCellInsertionMode.xlInsertEntireRows">
      <summary>Entire rows are inserted, if necessary, to accommodate any overflow. No cells or rows are deleted from the worksheet.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlCellType">
      <summary>Specifies the type of cells.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeBlanks">
      <summary>Empty cells</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeConstants">
      <summary>Cells containing constants</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeFormulas">
      <summary>Cells containing formulas</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeLastCell">
      <summary>The last cell in the used range</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeComments">
      <summary>Cells containing notes</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeVisible">
      <summary>All visible cells</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeAllFormatConditions">
      <summary>Cells of any format</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeSameFormatConditions">
      <summary>Cells having the same format</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeAllValidation">
      <summary>Cells having validation criteria</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeSameValidation">
      <summary>Cells having the same validation criteria</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlChartElementPosition">
      <summary>Specifies the position of the chart element.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartElementPosition.xlChartElementPositionAutomatic">
      <summary>Automatically sets the position of the chart element.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartElementPosition.xlChartElementPositionCustom">
      <summary>Specifies a specific position for the chart element.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlChartGallery">
      <summary>Specifies a chart gallery.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartGallery.xlBuiltIn">
      <summary>The built-in gallery.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartGallery.xlUserDefined">
      <summary>The user-defined gallery.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartGallery.xlAnyGallery">
      <summary>Either of the galleries.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlChartItem">
      <summary>Specifies the type of the chart item.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlDataLabel">
      <summary>Data label.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlChartArea">
      <summary>Chart area.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlSeries">
      <summary>Series.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlChartTitle">
      <summary>Chart title.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlWalls">
      <summary>Walls.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlCorners">
      <summary>Corners.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlDataTable">
      <summary>Data table.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlTrendline">
      <summary>Trend line.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlErrorBars">
      <summary>Error bars.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlXErrorBars">
      <summary>X error bars.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlYErrorBars">
      <summary>Y error bars.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlLegendEntry">
      <summary>Legend entry.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlLegendKey">
      <summary>Legend key.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlShape">
      <summary>Shape.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlMajorGridlines">
      <summary>Major gridlines.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlMinorGridlines">
      <summary>Minor gridlines.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlAxisTitle">
      <summary>Axis title.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlUpBars">
      <summary>Up bars.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlPlotArea">
      <summary>Plot area.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlDownBars">
      <summary>Down bars.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlAxis">
      <summary>Axis.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlSeriesLines">
      <summary>Series lines.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlFloor">
      <summary>Floor.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlLegend">
      <summary>Legend.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlHiLoLines">
      <summary>HiLo lines.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlDropLines">
      <summary>Drop lines.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlRadarAxisLabels">
      <summary>Radar axis labels.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlNothing">
      <summary>Nothing.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlLeaderLines">
      <summary>Leader lines.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlDisplayUnitLabel">
      <summary>Display unit label.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlPivotChartFieldButton">
      <summary>PivotChart field button.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlPivotChartDropZone">
      <summary>PivotChart drop zone.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlChartLocation">
      <summary>Specifies where to relocate a chart.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartLocation.xlLocationAsNewSheet">
      <summary>Chart is moved to a new sheet.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartLocation.xlLocationAsObject">
      <summary>Chart is to be embedded in an existing sheet.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartLocation.xlLocationAutomatic">
      <summary>Excel controls chart location.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlChartPicturePlacement">
      <summary>Specifies the placement of a user-selected picture on a bar in a 3-D bar or column.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartPicturePlacement.xlSides">
      <summary>Display on sides.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartPicturePlacement.xlEnd">
      <summary>Display on end.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartPicturePlacement.xlEndSides">
      <summary>Display on end and sides.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartPicturePlacement.xlFront">
      <summary>Display on front.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartPicturePlacement.xlFrontSides">
      <summary>Display on front and sides.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartPicturePlacement.xlFrontEnd">
      <summary>Display on front and end.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartPicturePlacement.xlAllFaces">
      <summary>Display on all faces.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlChartPictureType">
      <summary>Specifies how pictures are displayed on a column, bar picture chart, or legend key.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartPictureType.xlStackScale">
      <summary>Picture is sized to a specified number of units and repeated the length of the bar.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartPictureType.xlStack">
      <summary>Picture is sized to repeat a maximum of 15 times in the longest stacked bar.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartPictureType.xlStretch">
      <summary>Picture is stretched the full length of stacked bar.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlChartSplitType">
      <summary>Specifies the values displayed in the second chart in a pie chart or a bar of pie chart.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartSplitType.xlSplitByPosition">
      <summary>Second chart displays the smallest values in the data series. The number of values to display is specified by the SplitValue property.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartSplitType.xlSplitByPercentValue">
      <summary>Second chart displays values less than some percentage of the total value. The percentage is specified by the SplitValue property.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartSplitType.xlSplitByCustomSplit">
      <summary>Arbitrary slides are displayed in the second chart.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartSplitType.xlSplitByValue">
      <summary>Second chart displays values less than the value specified by the SplitValue property.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlChartType">
      <summary>Specifies the chart type.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlColumnClustered">
      <summary>Clustered Column</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlColumnStacked">
      <summary>Stacked Column</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlColumnStacked100">
      <summary>100% Stacked Column</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DColumnClustered">
      <summary>3D Clustered Column</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DColumnStacked">
      <summary>3D Stacked Column </summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DColumnStacked100">
      <summary>3D 100% Stacked Column</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlBarClustered">
      <summary>Clustered Bar</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlBarStacked">
      <summary>Stacked Bar</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlBarStacked100">
      <summary>100% Stacked Bar</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DBarClustered">
      <summary>3D Clustered Bar</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DBarStacked">
      <summary>3D Stacked Bar</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DBarStacked100">
      <summary>3D 100% Stacked Bar</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlLineStacked">
      <summary>Stacked Line</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlLineStacked100">
      <summary>100% Stacked Line</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlLineMarkers">
      <summary>Line with Markers</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlLineMarkersStacked">
      <summary>Stacked Line with Markers</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlLineMarkersStacked100">
      <summary>100% Stacked Line with Markers</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlPieOfPie">
      <summary>Pie of Pie</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlPieExploded">
      <summary>Exploded Pie</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DPieExploded">
      <summary>Exploded 3D Pie</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlBarOfPie">
      <summary>Bar of Pie</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlXYScatterSmooth">
      <summary>Scatter with Smoothed Lines</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlXYScatterSmoothNoMarkers">
      <summary>Scatter with Smoothed Lines and No Data Markers</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlXYScatterLines">
      <summary>Scatter with Lines.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlXYScatterLinesNoMarkers">
      <summary>Scatter with Lines and No Data Markers</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlAreaStacked">
      <summary>Stacked Area</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlAreaStacked100">
      <summary>100% Stacked Area</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DAreaStacked">
      <summary>3D Stacked Area</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DAreaStacked100">
      <summary>100% Stacked Area</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlDoughnutExploded">
      <summary>Exploded Doughnut</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlRadarMarkers">
      <summary>Radar with Data Markers</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlRadarFilled">
      <summary>Filled Radar</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlSurface">
      <summary>3D Surface</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlSurfaceWireframe">
      <summary>3D Surface (wireframe)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlSurfaceTopView">
      <summary>Surface (Top View)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlSurfaceTopViewWireframe">
      <summary>Surface (Top View wireframe)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlBubble">
      <summary>Bubble</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlBubble3DEffect">
      <summary>Bubble with 3D effects</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlStockHLC">
      <summary>High-Low-Close</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlStockOHLC">
      <summary>Open-High-Low-Close</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlStockVHLC">
      <summary>Volume-High-Low-Close</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlStockVOHLC">
      <summary>Volume-Open-High-Low-Close</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlCylinderColClustered">
      <summary>Clustered Cone Column</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlCylinderColStacked">
      <summary>Stacked Cone Column</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlCylinderColStacked100">
      <summary>100% Stacked Cylinder Column</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlCylinderBarClustered">
      <summary>Clustered Cylinder Bar</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlCylinderBarStacked">
      <summary>Stacked Cylinder Bar</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlCylinderBarStacked100">
      <summary>100% Stacked Cylinder Bar</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlCylinderCol">
      <summary>3D Cylinder Column</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlConeColClustered">
      <summary>Clustered Cone Column</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlConeColStacked">
      <summary>Stacked Cone Column</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlConeColStacked100">
      <summary>100% Stacked Cone Column</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlConeBarClustered">
      <summary>Clustered Cone Bar</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlConeBarStacked">
      <summary>Stacked Cone Bar</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlConeBarStacked100">
      <summary>100% Stacked Cone Bar</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlConeCol">
      <summary>3D Cone Column</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlPyramidColClustered">
      <summary>Clustered Pyramid Column</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlPyramidColStacked">
      <summary>Stacked Pyramid Column</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlPyramidColStacked100">
      <summary>100% Stacked Pyramid Column</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlPyramidBarClustered">
      <summary>Clustered Pyramid Bar</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlPyramidBarStacked">
      <summary>Stacked Pyramid Bar</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlPyramidBarStacked100">
      <summary>100% Stacked Pyramid Bar</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlPyramidCol">
      <summary>3D Pyramid Column</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DColumn">
      <summary>3D Column</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlLine">
      <summary>Line</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DLine">
      <summary>3D Line</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DPie">
      <summary>3D Pie</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlPie">
      <summary>Pie</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlXYScatter">
      <summary>Scatter</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DArea">
      <summary>3D Area</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlArea">
      <summary>Area</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlDoughnut">
      <summary>Doughnut</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlRadar">
      <summary>Radar</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlCheckInVersionType">
      <summary>Specifies the type of version for the document checked in when using the CheckIn method.  Applies to workbooks stored in a SharePoint library.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCheckInVersionType.xlCheckInMinorVersion">
      <summary>Check in the minor version.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCheckInVersionType.xlCheckInMajorVersion">
      <summary>Check in the major version.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCheckInVersionType.xlCheckInOverwriteVersion">
      <summary>Overwrite current version on the server.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlClipboardFormat">
      <summary>Specifies the format of an item on the Windows clipboard.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatBIFF12">
      <summary>Binary Interchange file format 12</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatBIFF">
      <summary>Binary Interchange file format for Excel version 2.x.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatBIFF2">
      <summary>Binary Interchange file format for Excel version 2.x.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatBIFF3">
      <summary>Binary Interchange file format for Excel version 3.x.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatBIFF4">
      <summary>Binary Interchange file format for Excel version 4.x.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatBinary">
      <summary>Binary.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatBitmap">
      <summary>Windows version 2.0-compatible bitmap.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatCGM">
      <summary>Computer Graphics Metafile.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatCSV">
      <summary>Comma-separated values.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatDIF">
      <summary>VisiCalc Data Interchange Format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatDspText">
      <summary>OEM text.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatEmbeddedObject">
      <summary>Object to be inserted into the file.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatEmbedSource">
      <summary>Source.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatLink">
      <summary>Link.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatLinkSource">
      <summary>Line to source.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatLinkSourceDesc">
      <summary>Link to description of source.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatMovie">
      <summary>Movie.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatNative">
      <summary>Native format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatObjectDesc">
      <summary>Object description.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatObjectLink">
      <summary>Link to object.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatOwnerLink">
      <summary>Link to owner.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatPICT">
      <summary>Metafile picture structure (.wmf).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatPrintPICT">
      <summary>Metafile picture structure for printing.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatRTF">
      <summary>Rich Text Format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatScreenPICT">
      <summary>Metafile picture structure for screen display.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatStandardFont">
      <summary>A standard font.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatStandardScale">
      <summary>Standard scale.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatSYLK">
      <summary>Microsoft symbolic link (SYLK) format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatTable">
      <summary>Excel fast table format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatText">
      <summary>Null-terminated string containing a carriage return and line feed at the end of each line.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatToolFace">
      <summary>Graphics associated with a Macintosh tool.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatToolFacePICT">
      <summary>Tool face as a metafile picture structure.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatVALU">
      <summary>VALU.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatWK1">
      <summary>Lotus 1-2-3 Release 2.01 and Release 2.2.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlCmdType">
      <summary>Specifies the value of the CommandText property.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCmdType.xlCmdCube">
      <summary>Contains a cube name for an OLAP data source.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCmdType.xlCmdSql">
      <summary>Contains an SQL statement.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCmdType.xlCmdTable">
      <summary>Contains a table name for accessing OLE DB data sources.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCmdType.xlCmdDefault">
      <summary>Contains command text that the OLE DB provider understands</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCmdType.xlCmdList">
      <summary>Contains a pointer to list data.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlColorIndex">
      <summary>Specifies the color of a selected feature such as border, font, or fill.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic">
      <summary>Automatic color.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexNone">
      <summary>No color.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlColumnDataType">
      <summary>Specifies how a column is to be parsed.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlGeneralFormat">
      <summary>General.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlTextFormat">
      <summary>Text.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlMDYFormat">
      <summary>MDY date format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlDMYFormat">
      <summary>DMY date format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlYMDFormat">
      <summary>YMD date format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlMYDFormat">
      <summary>MYD date format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlDYMFormat">
      <summary>DYM date format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlYDMFormat">
      <summary>YDM date format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlSkipColumn">
      <summary>Column is not parsed.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlEMDFormat">
      <summary>EMD date format.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlCommandUnderlines">
      <summary>Specifies the state of the command underlines in Microsoft Excel for the Macintosh.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCommandUnderlines.xlCommandUnderlinesAutomatic">
      <summary>Excel controls the display of command underlines.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCommandUnderlines.xlCommandUnderlinesOff">
      <summary>Command underlines are not displayed.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCommandUnderlines.xlCommandUnderlinesOn">
      <summary>Command underlines are displayed.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlCommentDisplayMode">
      <summary>Specifies the way cells display comments and comment indicators.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCommentDisplayMode.xlNoIndicator">
      <summary>Display neither the comment nor the comment indicator at any time.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCommentDisplayMode.xlCommentIndicatorOnly">
      <summary>Display comment indicator only. Display comment when mouse pointer is moved over cell.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCommentDisplayMode.xlCommentAndIndicator">
      <summary>Display comment and indicator at all times.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlConditionValueTypes">
      <summary>Specifies the types of condition values that can be used.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConditionValueTypes.xlConditionValueNone">
      <summary>No conditional value.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConditionValueTypes.xlConditionValueNumber">
      <summary>Number is used.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConditionValueTypes.xlConditionValueLowestValue">
      <summary>Lowest value from the list of values.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConditionValueTypes.xlConditionValueHighestValue">
      <summary>Highest value from the list of values.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConditionValueTypes.xlConditionValuePercent">
      <summary>Percentage is used.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConditionValueTypes.xlConditionValueFormula">
      <summary>Formula is used.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConditionValueTypes.xlConditionValuePercentile">
      <summary>Percentile is used.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConditionValueTypes.xlConditionValueAutomaticMin">
      <summary>The shortest data bar is proportional to the minimum value in the range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConditionValueTypes.xlConditionValueAutomaticMax">
      <summary>The longest data bar is proportional to the maximum value in the range.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlConnectionType">
      <summary>Specifies the type of database connection.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConnectionType.xlConnectionTypeOLEDB">
      <summary>OLEDB</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConnectionType.xlConnectionTypeODBC">
      <summary>ODBC</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConnectionType.xlConnectionTypeXMLMAP">
      <summary>XML MAP</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConnectionType.xlConnectionTypeTEXT">
      <summary>Text</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConnectionType.xlConnectionTypeWEB">
      <summary>Web</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction">
      <summary>Specifies the subtotal function.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlAverage">
      <summary>Average.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlCount">
      <summary>Count.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlCountNums">
      <summary>Count numerical values only.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlMax">
      <summary>Maximum.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlMin">
      <summary>Minimum.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlProduct">
      <summary>Multiply.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlStDev">
      <summary>Standard deviation, based on a sample.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlStDevP">
      <summary>Standard deviation, based on the whole population.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlSum">
      <summary>Sum.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlVar">
      <summary>Variation, based on a sample.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlVarP">
      <summary>Variation, based on the whole population.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlUnknown">
      <summary>No subtotal function specified.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlContainsOperator">
      <summary>Specifies the operator used in a function.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlContainsOperator.xlContains">
      <summary>Contains a specified value.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlContainsOperator.xlDoesNotContain">
      <summary>Does not contain the specified value.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlContainsOperator.xlBeginsWith">
      <summary>Begins with a specified value.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlContainsOperator.xlEndsWith">
      <summary>Endswith the specified value</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat">
      <summary>Specifies the format of the picture being copied.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlBitmap">
      <summary>Bitmap (.bmp, .jpg, .gif).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture">
      <summary>Drawn picture (.png, .wmf, .mix).</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlCorruptLoad">
      <summary>Specifies the processing for a file when it is opened.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCorruptLoad.xlNormalLoad">
      <summary>Workbook is opened normally.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCorruptLoad.xlRepairFile">
      <summary>Excel is attempting to repair the workbook.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCorruptLoad.xlExtractData">
      <summary>Excel is attempting to recover the data in the workbook.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlCreator">
      <summary>Specifies the 32-bit creator code for Excel for Macintosh (decimal 1480803660, Hex 5843454C, string XCEL).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCreator.xlCreatorCode">
      <summary>The Excel for Macintosh creator code.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlCredentialsMethod">
      <summary>Specifies the type of credentials method used.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCredentialsMethod.xlCredentialsMethodIntegrated">
      <summary>Integrated.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCredentialsMethod.xlCredentialsMethodNone">
      <summary>No credentials used.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCredentialsMethod.xlCredentialsMethodStored">
      <summary>Use stored credentials.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlCubeFieldSubType">
      <summary>Specifies the subtype of the CubeField.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCubeFieldSubType.xlCubeHierarchy">
      <summary>Hierarchy</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCubeFieldSubType.xlCubeMeasure">
      <summary>Measure</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCubeFieldSubType.xlCubeSet">
      <summary>Set</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCubeFieldSubType.xlCubeAttribute">
      <summary>Attribute</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCubeFieldSubType.xlCubeCalculatedMeasure">
      <summary>Calculated Measure</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCubeFieldSubType.xlCubeKPIValue">
      <summary>KPI Value</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCubeFieldSubType.xlCubeKPIGoal">
      <summary>KPI Goal</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCubeFieldSubType.xlCubeKPIStatus">
      <summary>KPI Status</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCubeFieldSubType.xlCubeKPITrend">
      <summary>KPI Trend</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCubeFieldSubType.xlCubeKPIWeight">
      <summary>KPI Weight</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlCubeFieldType">
      <summary>Specifies whether the OLAP field is a hierarchy, set, or measure field.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCubeFieldType.xlHierarchy">
      <summary>Hierarchy.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCubeFieldType.xlMeasure">
      <summary>Measure.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCubeFieldType.xlSet">
      <summary>Set.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlCutCopyMode">
      <summary>Specifies whether status is Copy mode or Cut mode.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCutCopyMode.xlCopy">
      <summary>In Copy mode</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCutCopyMode.xlCut">
      <summary>In Cut mode</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlCVError">
      <summary>Specifies the cell error number and value.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCVError.xlErrDiv0">
      <summary>Error number: 2007</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCVError.xlErrNA">
      <summary>Error number: 2042</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCVError.xlErrName">
      <summary>Error number: 2029</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCVError.xlErrNull">
      <summary>Error number: 2000</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCVError.xlErrNum">
      <summary>Error number: 2036</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCVError.xlErrRef">
      <summary>Error number: 2023</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlCVError.xlErrValue">
      <summary>Error number: 2015</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlDataBarAxisPosition">
      <summary>Specifies the axis position for a range of cells with conditional formatting as data bars.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataBarAxisPosition.xlDataBarAxisAutomatic">
      <summary>Display the axis at a variable position based on the ratio of the minimum negative value to the maximum positive value in the range. Positive values are displayed in a left-to-right direction. Negative values are displayed in a right-to-left direction. When all values are positive or all values are negative, no axis is displayed.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataBarAxisPosition.xlDataBarAxisMidpoint">
      <summary>Display the axis at the midpoint of the cell regardless of the set of values in the range. Positive values are displayed in a left-to-right direction. Negative values are displayed in a right-to-left direction.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataBarAxisPosition.xlDataBarAxisNone">
      <summary>No axis is displayed, and both positive and negative values are displayed in the left-to-right direction.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlDataBarBorderType">
      <summary>Specifies the border of a data bar.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataBarBorderType.xlDataBarBorderNone">
      <summary>The data bar has no border.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataBarBorderType.xlDataBarBorderSolid">
      <summary>The data bar has a solid border.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlDataBarFillType">
      <summary>Specifies how a data bar is filled with color.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataBarFillType.xlDataBarFillSolid">
      <summary>The data bar is filled with solid color.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataBarFillType.xlDataBarFillGradient">
      <summary>The data bar is filled with a color gradient.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlDataBarNegativeColorType">
      <summary>Specifies whether to use the same border and fill color as postive data bars.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataBarNegativeColorType.xlDataBarColor">
      <summary>Use the color specified in the Negative Value and Axis Setting dialog box or by using the <see cref="P:Microsoft.Office.Interop.Excel.NegativeBarFormat.ColorType" /> and <see cref="P:Microsoft.Office.Interop.Excel.NegativeBarFormat.BorderColorType" /> properties of the <see cref="T:Microsoft.Office.Interop.Excel.NegativeBarFormat" /> object.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataBarNegativeColorType.xlDataBarSameAsPositive">
      <summary>Use the same color as positive data bars.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlDataLabelPosition">
      <summary>Specifies where the data label is positioned.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataLabelPosition.xlLabelPositionCenter">
      <summary>Data label centered on data point or inside bar or pie.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataLabelPosition.xlLabelPositionAbove">
      <summary>Data label above point.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataLabelPosition.xlLabelPositionBelow">
      <summary>Data label below point.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataLabelPosition.xlLabelPositionLeft">
      <summary>Data label positioned at bottom of bar or pie.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataLabelPosition.xlLabelPositionRight">
      <summary>Data label positioned at top of bar or pie.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataLabelPosition.xlLabelPositionOutsideEnd">
      <summary>Data label positioned at top of bar or pie.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataLabelPosition.xlLabelPositionInsideEnd">
      <summary>Data label positioned arbitrarily.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataLabelPosition.xlLabelPositionInsideBase">
      <summary>Data label positioned arbitrarily.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataLabelPosition.xlLabelPositionBestFit">
      <summary>Excel controls position of data label.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataLabelPosition.xlLabelPositionMixed">
      <summary>Data label positioned at bottom of bar or pie.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataLabelPosition.xlLabelPositionCustom">
      <summary>Data label centered on data point or inside bar or pie.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlDataLabelSeparator">
      <summary>Specifies the separator used with data labels.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataLabelSeparator.xlDataLabelSeparatorDefault">
      <summary>Excel selects the separator.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlDataLabelsType">
      <summary>Specifies the type of data label to apply.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowNone">
      <summary>No data labels.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue">
      <summary>default. Value for the point (assumed if this argument isn't specified).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowPercent">
      <summary>Percentage of the total. Available only for pie charts and doughnut charts.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowLabel">
      <summary>Category for the point.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowLabelAndPercent">
      <summary>Percentage of the total, and category for the point. Available only for pie charts and doughnut charts.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowBubbleSizes">
      <summary>Show the size of the bubble in reference to the absolute value.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlDataSeriesDate">
      <summary>Specifies the type of date to apply to a data series.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlDay">
      <summary>Day.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlMonth">
      <summary>Month.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlWeekday">
      <summary>Weekdays.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlYear">
      <summary>Year.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlDataSeriesType">
      <summary>Specifies the data series to create.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataSeriesType.xlAutoFill">
      <summary>Fill series according to AutoFill settings.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataSeriesType.xlChronological">
      <summary>Fill with date values.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataSeriesType.xlGrowth">
      <summary>Extend values, assuming a multiplicative progression (e.g., "1, 2' is extended as '4, 8, 16').</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDataSeriesType.xlDataSeriesLinear">
      <summary>Extend values, assuming an additive progression (e.g., '1, 2' is extended as '3, 4, 5').</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlDeleteShiftDirection">
      <summary>Specifies how to shift cells to replace deleted cells.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDeleteShiftDirection.xlShiftToLeft">
      <summary>Cells are shifted to the left.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDeleteShiftDirection.xlShiftUp">
      <summary>Cells are shifted up.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlDirection">
      <summary>Specifies the direction in which to move.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDirection.xlDown">
      <summary>Down.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDirection.xlToLeft">
      <summary>To left.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDirection.xlToRight">
      <summary>To right.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDirection.xlUp">
      <summary>Up.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs">
      <summary>Specifies how blank cells are plotted on a chart.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlInterpolated">
      <summary>Values are interpolated into the chart.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlNotPlotted">
      <summary>Blank cells are not plotted.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlZero">
      <summary>Blanks are plotted as zero.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects">
      <summary>Specifies how shapes are displayed.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects.xlDisplayShapes">
      <summary>Show all shapes.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects.xlHide">
      <summary>Hide all shapes.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects.xlPlaceholders">
      <summary>Show only placeholders.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlDisplayUnit">
      <summary>Specifies the display unit label for an axis.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDisplayUnit.xlHundreds">
      <summary>Hundreds.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDisplayUnit.xlThousands">
      <summary>Thousands.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDisplayUnit.xlTenThousands">
      <summary>Tens of thousands.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDisplayUnit.xlHundredThousands">
      <summary>Hundreds of thousands.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDisplayUnit.xlMillions">
      <summary>Millions.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDisplayUnit.xlTenMillions">
      <summary>Tens of millions.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDisplayUnit.xlHundredMillions">
      <summary>Hundreds of millions.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDisplayUnit.xlThousandMillions">
      <summary>Thousands of millions.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDisplayUnit.xlMillionMillions">
      <summary>Millions of millions.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlDupeUnique">
      <summary>Specifies whether duplicate or unique values shoud be displayed.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDupeUnique.xlUnique">
      <summary>Display unique values.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDupeUnique.xlDuplicate">
      <summary>Display duplicate values.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle">
      <summary>Specifies the icon used in message boxes displayed during validation.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDVAlertStyle.xlValidAlertStop">
      <summary>Stop icon.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDVAlertStyle.xlValidAlertWarning">
      <summary>Warning icon.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDVAlertStyle.xlValidAlertInformation">
      <summary>Information icon.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlDVType">
      <summary>Specifies the type of validation test to be performed in conjunction with values.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDVType.xlValidateInputOnly">
      <summary>Only validate when user changes the value.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDVType.xlValidateWholeNumber">
      <summary>Whole numeric values.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDVType.xlValidateDecimal">
      <summary>Numeric values.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDVType.xlValidateList">
      <summary>Value must be present in a specified list.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDVType.xlValidateDate">
      <summary>Date values.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDVType.xlValidateTime">
      <summary>Time values.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDVType.xlValidateTextLength">
      <summary>Length of text.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDVType.xlValidateCustom">
      <summary>Data is validated using an arbitrary formula.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria">
      <summary>Specifies the filter criterion.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterToday">
      <summary>Filter all values related to the current date.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterYesterday">
      <summary>Filter all values related to yesterday.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterTomorrow">
      <summary>Filter all values related to tomorrow.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterThisWeek">
      <summary>Filter all values related to the current week.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterLastWeek">
      <summary>Filter all values related to last week.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterNextWeek">
      <summary>Filter all values related to next week.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterThisMonth">
      <summary>Filter all values related to the current month. </summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterLastMonth">
      <summary>Filter all values related to last month.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterNextMonth">
      <summary>Filter all values related to next month.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterThisQuarter">
      <summary>Filter all values related to the current quarter.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterLastQuarter">
      <summary>Filter all values related to last quarter.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterNextQuarter">
      <summary>Filter all values related to next quarter.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterThisYear">
      <summary>Filter all values related to the current year.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterLastYear">
      <summary>Filter all values related to last year.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterNextYear">
      <summary>Filter all values related to next  year.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterYearToDate">
      <summary>Filter all values from today until a year ago.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterAllDatesInPeriodQuarter1">
      <summary>Filter all dates in Quarter1.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterAllDatesInPeriodQuarter2">
      <summary>Filter all dates in Quarter2.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterAllDatesInPeriodQuarter3">
      <summary>Filter all dates in Quarter3.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterAllDatesInPeriodQuarter4">
      <summary>Filter all dates in Quarter4.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterAllDatesInPeriodJanuary">
      <summary>Filter all dates in January.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterAllDatesInPeriodFebruray">
      <summary>Filter all dates in February.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterAllDatesInPeriodMarch">
      <summary>Filter all dates in March.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterAllDatesInPeriodApril">
      <summary>Filter all dates in April.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterAllDatesInPeriodMay">
      <summary>Filter all dates in May.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterAllDatesInPeriodJune">
      <summary>Filter all dates in June.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterAllDatesInPeriodJuly">
      <summary>Filter all dates in July.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterAllDatesInPeriodAugust">
      <summary>Filter all dates in August.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterAllDatesInPeriodSeptember">
      <summary>Filter all dates in September.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterAllDatesInPeriodOctober">
      <summary>Filter all dates in October.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterAllDatesInPeriodNovember">
      <summary>Filter all dates in November.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterAllDatesInPeriodDecember">
      <summary>Filter all dates in December.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterAboveAverage">
      <summary>Filter all above-average values.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlDynamicFilterCriteria.xlFilterBelowAverage">
      <summary>Filter all below-average values.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlEditionFormat">
      <summary>Specifies the format of the published edition. This is Macintosh only and should not be used.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlEditionFormat.xlBIFF">
      <summary>Binary Interchange file format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlEditionFormat.xlPICT">
      <summary>Metafile picture structure (.wmf).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlEditionFormat.xlRTF">
      <summary>Rich Text Format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlEditionFormat.xlVALU">
      <summary>VALU.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlEditionOptionsOption">
      <summary>This enumeration is for Macintosh only and should not be used.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlEditionOptionsOption.xlAutomaticUpdate">
      <summary>This constant is for Macintosh only and should not be used.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlEditionOptionsOption.xlCancel">
      <summary>This constant is for Macintosh only and should not be used.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlEditionOptionsOption.xlChangeAttributes">
      <summary>This constant is for Macintosh only and should not be used.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlEditionOptionsOption.xlManualUpdate">
      <summary>This constant is for Macintosh only and should not be used.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlEditionOptionsOption.xlOpenSource">
      <summary>This constant is for Macintosh only and should not be used.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlEditionOptionsOption.xlSelect">
      <summary>This constant is for Macintosh only and should not be used.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlEditionOptionsOption.xlSendPublisher">
      <summary>This constant is for Macintosh only and should not be used.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlEditionOptionsOption.xlUpdateSubscriber">
      <summary>This constant is for Macintosh only and should not be used.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlEditionType">
      <summary>Specifies the type of edition to be changed.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlEditionType.xlPublisher">
      <summary>Publisher.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlEditionType.xlSubscriber">
      <summary>Subscriber.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlEnableCancelKey">
      <summary>Specifies how Microsoft Excel handles CTRL+BREAK (or ESC or COMMAND+PERIOD) user interruptions to the running procedure.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlEnableCancelKey.xlDisabled">
      <summary>Cancel key trapping is completely disabled.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlEnableCancelKey.xlErrorHandler">
      <summary>The interrupt is sent to the running procedure as an error, trappable by an error handler set up with an On Error GoTo statement. The trappable error code is 18.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlEnableCancelKey.xlInterrupt">
      <summary>The current procedure is interrupted, and the user can debug or end the procedure.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlEnableSelection">
      <summary>Specifies what can be selected on the sheet.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlEnableSelection.xlNoRestrictions">
      <summary>Anything may be selected.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlEnableSelection.xlUnlockedCells">
      <summary>Only unlocked cells may be selected.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlEnableSelection.xlNoSelection">
      <summary>Nothing may be selected.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlEndStyleCap">
      <summary>Specifies the end style for error bars.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlEndStyleCap.xlCap">
      <summary>Caps applied.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlEndStyleCap.xlNoCap">
      <summary>No caps applied.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlErrorBarDirection">
      <summary>Specifies which axis values are to receive error bars.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlErrorBarDirection.xlX">
      <summary>Bars run parallel to the Y axis for X-axis values.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlErrorBarDirection.xlY">
      <summary>Bars run parallel to the X axis for Y-axis values.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlErrorBarInclude">
      <summary>Specifies which error bar parts to include.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlErrorBarInclude.xlErrorBarIncludeBoth">
      <summary>Both positive and negative error range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlErrorBarInclude.xlErrorBarIncludeMinusValues">
      <summary>Only negative error range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlErrorBarInclude.xlErrorBarIncludeNone">
      <summary>No error bar range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlErrorBarInclude.xlErrorBarIncludePlusValues">
      <summary>Only positive error range.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlErrorBarType">
      <summary>Specifies the range marked by error bars.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlErrorBarType.xlErrorBarTypeCustom">
      <summary>Range is set by fixed values or cell values.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlErrorBarType.xlErrorBarTypeFixedValue">
      <summary>Fixed-length error bars.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlErrorBarType.xlErrorBarTypePercent">
      <summary>Percentage of range to be covered by the error bars.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlErrorBarType.xlErrorBarTypeStDev">
      <summary>Shows range for specified number of standard deviations.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlErrorBarType.xlErrorBarTypeStError">
      <summary>Shows standard error range.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlErrorChecks">
      <summary>Specifies the type of error object to be retrieved from the Errors collection.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlErrorChecks.xlEvaluateToError">
      <summary>The cell evaluates to an error value.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlErrorChecks.xlTextDate">
      <summary>The cell contains a text date with 2-digit years.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlErrorChecks.xlNumberAsText">
      <summary>The cell contains a number stored as text.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlErrorChecks.xlInconsistentFormula">
      <summary>The cell contains an inconsistent formula for a region.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlErrorChecks.xlOmittedCells">
      <summary>The cell contains a formula omitting a cell for a region.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlErrorChecks.xlUnlockedFormulaCells">
      <summary>The cell, which is unlocked, contains a formula.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlErrorChecks.xlEmptyCellReferences">
      <summary>The cell contains a formula referring to empty cells.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlErrorChecks.xlListDataValidation">
      <summary>The cell contains a value inconsistent with list data validation.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlErrorChecks.xlInconsistentListFormula">
      <summary>The cell contains an inconsistent formula for a list.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlFileAccess">
      <summary>Specifies the new access mode for the object.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileAccess.xlReadOnly">
      <summary>Read only.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileAccess.xlReadWrite">
      <summary>Read/write.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlFileFormat">
      <summary>Specifies the file format when saving the spreadsheet.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlAddIn">
      <summary>Microsoft Office Excel Add-In.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlCSV">
      <summary>Comma separated value.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlCSVMac">
      <summary>Comma separated value.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlCSVMSDOS">
      <summary>Comma separated value.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlCSVWindows">
      <summary>Comma separated value.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlDBF2">
      <summary>Dbase 2 format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlDBF3">
      <summary>Dbase 3 format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlDBF4">
      <summary>Dbase 4 format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlDIF">
      <summary>Data Interchange format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlExcel2">
      <summary>Excel version 2.0.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlExcel2FarEast">
      <summary>Excel version 2.0 far east.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlExcel3">
      <summary>Excel version 3.0.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlExcel4">
      <summary>Excel version 4.0.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlExcel5">
      <summary>Excel version 5.0.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlExcel7">
      <summary>Excel 95.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlExcel9795">
      <summary>Excel version 95 and 97.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlExcel4Workbook">
      <summary>Excel version 4.0. Workbook format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlIntlAddIn">
      <summary>Microsoft Office Excel Add-In international format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlIntlMacro">
      <summary>Deprecated format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWorkbookNormal">
      <summary>Excel workbook format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlSYLK">
      <summary>Symbolic link format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlTemplate">
      <summary>Excel template format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlCurrentPlatformText">
      <summary>Specifies a type of text format</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlTextMac">
      <summary>Specifies a type of text format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlTextMSDOS">
      <summary>Specifies a type of text format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlTextPrinter">
      <summary>Specifies a type of text format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlTextWindows">
      <summary>Specifies a type of text format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWJ2WD1">
      <summary>Deprecated format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWK1">
      <summary>Lotus 1-2-3 format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWK1ALL">
      <summary>Lotus 1-2-3 format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWK1FMT">
      <summary>Lotus 1-2-3 format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWK3">
      <summary>Lotus 1-2-3 format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWK4">
      <summary>Lotus 1-2-3 format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWK3FM3">
      <summary>Lotus 1-2-3 format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWKS">
      <summary>Lotus 1-2-3 format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWorks2FarEast">
      <summary>Microsoft Works 2.0 format</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWQ1">
      <summary>Quattro Pro format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWJ3">
      <summary>Deprecated format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWJ3FJ3">
      <summary>Deprecated format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlUnicodeText">
      <summary>Specifies a type of text format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlHtml">
      <summary>Web page format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWebArchive">
      <summary>MHT format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlXMLSpreadsheet">
      <summary>Excel Spreadsheet format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlExcel12">
      <summary>Excel12</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlOpenXMLWorkbook">
      <summary>Open XML Workbook</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlOpenXMLWorkbookMacroEnabled">
      <summary>Open XML Workbook Macro Enabled</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlOpenXMLTemplateMacroEnabled">
      <summary>Open XML Template Macro Enabled</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlTemplate8">
      <summary>Template 8</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlOpenXMLTemplate">
      <summary>Open XML Template</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlAddIn8">
      <summary>Microsoft Excel 97-2003 Add-In</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlOpenXMLAddIn">
      <summary>Open XML Add-In</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlExcel8">
      <summary>Excel8</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlOpenDocumentSpreadsheet">
      <summary>OpenDocument Spreadsheet</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWorkbookDefault">
      <summary>Workbook default</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlFileValidationPivotMode">
      <summary>Specifies how to validate the data caches for PivotTable reports.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileValidationPivotMode.xlFileValidationPivotDefault">
      <summary>Validate the contents of data caches as specified by the PivotOptions registry setting (default).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileValidationPivotMode.xlFileValidationPivotRun">
      <summary>Validate the contents of all data caches regardless of the registry setting.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFileValidationPivotMode.xlFileValidationPivotSkip">
      <summary>Do not validate the contents of data caches.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlFillWith">
      <summary>Specifies how to copy the range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFillWith.xlFillWithAll">
      <summary>Copy contents and formats.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFillWith.xlFillWithContents">
      <summary>Copy contents only.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFillWith.xlFillWithFormats">
      <summary>Copy formats only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlFilterAction">
      <summary>Specifies whether data is to be copied or left in place during a filter operation.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFilterAction.xlFilterCopy">
      <summary>Copy filtered data to new location.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFilterAction.xlFilterInPlace">
      <summary>Leave data in place.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlFilterAllDatesInPeriod">
      <summary>Specifies how dates should be filtered in the specified period.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFilterAllDatesInPeriod.xlFilterAllDatesInPeriodYear">
      <summary>Filter all dates for the specified year.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFilterAllDatesInPeriod.xlFilterAllDatesInPeriodMonth">
      <summary>Filter all dates for the specified month.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFilterAllDatesInPeriod.xlFilterAllDatesInPeriodDay">
      <summary>Filter all dates for the specified date.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFilterAllDatesInPeriod.xlFilterAllDatesInPeriodHour">
      <summary>Filter all dates for the specified hour.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFilterAllDatesInPeriod.xlFilterAllDatesInPeriodMinute">
      <summary>Filter all dates until the specified minute.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFilterAllDatesInPeriod.xlFilterAllDatesInPeriodSecond">
      <summary>Filter all dates until the specified second.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlFindLookIn">
      <summary>Specifies the type of data to search.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFindLookIn.xlFormulas">
      <summary>Formulas.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFindLookIn.xlComments">
      <summary>Comments.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFindLookIn.xlValues">
      <summary>Values.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality">
      <summary>Specifies the quality of speadsheets saved in different fixed formats.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityStandard">
      <summary>Standard quality</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityMinimum">
      <summary>Minimum quality</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlFixedFormatType">
      <summary>Specifies the type of file format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypePDF">
      <summary>"PDF" — Portable Document Format file (.pdf).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypeXPS">
      <summary>"XPS" — XPS Document (.xps).
</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator">
      <summary>Specifies the operator to use to compare a formula against the value in a cell or, for xlBetween and xlNotBetween, to compare two formulas.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlBetween">
      <summary>Between. Can only be used if two formulas are provided.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlNotBetween">
      <summary>Not between. Can only be used if two formulas are provided.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlEqual">
      <summary>Equal.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlNotEqual">
      <summary>Not equal.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlGreater">
      <summary>Greater than.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlLess">
      <summary>Less than.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlGreaterEqual">
      <summary>Greater than or equal to.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlLessEqual">
      <summary>Less than or equal to.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlFormatConditionType">
      <summary>Specifies whether the conditional format is based on a cell value or an expression.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlCellValue">
      <summary>The conditional format is based on a cell value.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlExpression">
      <summary>The conditional format is based on an expression.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlColorScale">
      <summary>Color scale</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlDatabar">
      <summary>Databar</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlTop10">
      <summary>Top 10 values</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlIconSets">
      <summary>Icon sets</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlUniqueValues">
      <summary>Unique values</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlTextString">
      <summary>Text string</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlBlanksCondition">
      <summary>Blanks condition</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlTimePeriod">
      <summary>Time period</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlAboveAverageCondition">
      <summary>Above average condition</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlNoBlanksCondition">
      <summary>No blanks condition</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlErrorsCondition">
      <summary>Errors condition</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlNoErrorsCondition">
      <summary>No errors condition</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlFormatFilterTypes">
      <summary>Specifies the types of format filters.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatFilterTypes.xlFilterBottom">
      <summary>Bottom.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatFilterTypes.xlFilterTop">
      <summary>Top.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatFilterTypes.xlFilterBottomPercent">
      <summary>Bottom Percent.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormatFilterTypes.xlFilterTopPercent">
      <summary>Top Percent.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlFormControl">
      <summary>Specifies the type of the form control.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormControl.xlButtonControl">
      <summary>Button.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormControl.xlCheckBox">
      <summary>Check box.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormControl.xlDropDown">
      <summary>Combo box.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormControl.xlEditBox">
      <summary>Text box.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormControl.xlGroupBox">
      <summary>Group box.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormControl.xlLabel">
      <summary>Label.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormControl.xlListBox">
      <summary>List box.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormControl.xlOptionButton">
      <summary>Option button.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormControl.xlScrollBar">
      <summary>Scroll bar.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormControl.xlSpinner">
      <summary>Spinner.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlFormulaLabel">
      <summary>Specifies the formula label type for the specified range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormulaLabel.xlNoLabels">
      <summary>No labels.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormulaLabel.xlRowLabels">
      <summary>Row labels only.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormulaLabel.xlColumnLabels">
      <summary>Column labels only.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlFormulaLabel.xlMixedLabels">
      <summary>Row and column labels.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlGenerateTableRefs">
      <summary>Specifies the type of table references.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlGenerateTableRefs.xlGenerateTableRefA1">
      <summary>A1 Table References.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlGenerateTableRefs.xlGenerateTableRefStruct">
      <summary>Table Names.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlGradientFillType">
      <summary>Specifies the type of gradient fill.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlGradientFillType.xlGradientFillLinear">
      <summary>Gradient is filled in a straight line.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlGradientFillType.xlGradientFillPath">
      <summary>Gradient is filled in a non-linear or curved path.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlHAlign">
      <summary>Specifies the horizontal alignment for the object.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignCenter">
      <summary>Center.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignCenterAcrossSelection">
      <summary>Center across selection.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignDistributed">
      <summary>Distribute.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignFill">
      <summary>Fill.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignGeneral">
      <summary>Align according to data type.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignJustify">
      <summary>Justify.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignLeft">
      <summary>Left.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignRight">
      <summary>Right.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlHebrewModes">
      <summary>Specifies the mode for the Hebrew spelling checker.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlHebrewModes.xlHebrewFullScript">
      <summary>The conventional script type as required by the Hebrew Language Academy when writing non-diacritisized text.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlHebrewModes.xlHebrewPartialScript">
      <summary>In this mode the speller accepts words both in Full Script and Partial Script. Some words will be flagged since this spelling is not authorized in either Full script or Partial script.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlHebrewModes.xlHebrewMixedScript">
      <summary>In this mode the speller accepts any word recognized as Hebrew, whether in Full Script, Partial Script, or any non-conventional spelling variation that is known to the speller. </summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlHebrewModes.xlHebrewMixedAuthorizedScript">
      <summary>The Hebrew traditional script. </summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlHighlightChangesTime">
      <summary>Specifies which set of changes is shown in a shared workbook.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlHighlightChangesTime.xlSinceMyLastSave">
      <summary>Show changes made since last save by last user.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlHighlightChangesTime.xlAllChanges">
      <summary>Show all changes.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlHighlightChangesTime.xlNotYetReviewed">
      <summary>Show only changes not yet reviewed.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlHtmlType">
      <summary>Specifies the type of HTML generated by Microsoft Excel when you save the specified item to a Web page and whether the item is static or interactive.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlHtmlType.xlHtmlStatic">
      <summary>Use static (noninteractive) HTML for viewing only.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlHtmlType.xlHtmlCalc">
      <summary>Use the Spreadsheet component.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlHtmlType.xlHtmlList">
      <summary>Use the PivotTable component.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlHtmlType.xlHtmlChart">
      <summary>Use the Chart component.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlIcon">
      <summary>Specifies the icon for a criterion in an icon set conditional formatting rule.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconNoCellIcon">
      <summary>No Cell Icon</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconGreenUpArrow">
      <summary>Green Up Arrow</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconYellowSideArrow">
      <summary>Yellow Side Arrow</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconRedDownArrow">
      <summary>Red Down Arrow</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconGrayUpArrow">
      <summary>Gray Up Arrow</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconGraySideArrow">
      <summary>Gray Side Arrow</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconGrayDownArrow">
      <summary>Gray Down Arrow</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconGreenFlag">
      <summary>Green Flag</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconYellowFlag">
      <summary>Yellow Flag</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconRedFlag">
      <summary>Red Flag</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconGreenCircle">
      <summary>Green Circle</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconYellowCircle">
      <summary>Yellow Circle</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconRedCircleWithBorder">
      <summary>Red Circle With Border</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconBlackCircleWithBorder">
      <summary>Black Circle With Border</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconGreenTrafficLight">
      <summary>Green Traffic Light</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconYellowTrafficLight">
      <summary>Yellow Traffic Light</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconRedTrafficLight">
      <summary>Red Traffic Light</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconYellowTriangle">
      <summary>Yellow Triangle</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconRedDiamond">
      <summary>Red Diamond</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconGreenCheckSymbol">
      <summary>Green Check Symbol</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconYellowExclamationSymbol">
      <summary>Yellow Exclamation Symbol</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconRedCrossSymbol">
      <summary>Red Cross Symbol</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconGreenCheck">
      <summary>Green Check</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconYellowExclamation">
      <summary>Yellow Exclamation</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconRedCross">
      <summary>Red Cross</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconYellowUpInclineArrow">
      <summary>Yellow Up Incline Arrow</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconYellowDownInclineArrow">
      <summary>Yellow Down Incline Arrow</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconGrayUpInclineArrow">
      <summary>Gray Up Incline Arrow</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconGrayDownInclineArrow">
      <summary>Gray Down Incline Arrow</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconRedCircle">
      <summary>Red Circle</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconPinkCircle">
      <summary>Pink Circle</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconGrayCircle">
      <summary>Gray Circle</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconBlackCircle">
      <summary>Black Circle</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconCircleWithOneWhiteQuarter">
      <summary>Circle With One White Quarter</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconCircleWithTwoWhiteQuarters">
      <summary>Circle With Two White Quarters</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconCircleWithThreeWhiteQuarters">
      <summary>Circle With Three White Quarters</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconWhiteCircleAllWhiteQuarters">
      <summary>White Circle All White Quarters</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIcon0Bars">
      <summary>0 Bars</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIcon1Bar">
      <summary>1 Bar</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIcon2Bars">
      <summary>2 Bars</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIcon3Bars">
      <summary>3 Bars</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIcon4Bars">
      <summary>4 Bars</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconGoldStar">
      <summary>Gold Star</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconHalfGoldStar">
      <summary>Half Gold Star</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconSilverStar">
      <summary>Silver Star</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconGreenUpTriangle">
      <summary>Green Up Triangle</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconYellowDash">
      <summary>Yellow Dash</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIconRedDownTriangle">
      <summary>Red Down Triangle</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIcon4FilledBoxes">
      <summary>4 Filled Boxes</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIcon3FilledBoxes">
      <summary>3 Filled Boxes</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIcon2FilledBoxes">
      <summary>2 Filled Boxes</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIcon1FilledBox">
      <summary>1 Filled Box</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIcon.xlIcon0FilledBoxes">
      <summary>0 Filled Boxes</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlIconSet">
      <summary>Specifies the type of icon set.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIconSet.xlCustomSet">
      <summary />
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIconSet.xl3Arrows">
      <summary>3 Arrows</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIconSet.xl3ArrowsGray">
      <summary>3 Arrows Gray</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIconSet.xl3Flags">
      <summary>3 Flags</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIconSet.xl3TrafficLights1">
      <summary>3 Traffic Lights 1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIconSet.xl3TrafficLights2">
      <summary>3 Traffic Lights 2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIconSet.xl3Signs">
      <summary>3 Signs</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIconSet.xl3Symbols">
      <summary>3 Symbols</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIconSet.xl3Symbols2">
      <summary>3 Symbols 2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIconSet.xl4Arrows">
      <summary>4 Arrows</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIconSet.xl4ArrowsGray">
      <summary>4 Arrows Gray</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIconSet.xl4RedToBlack">
      <summary>4 Red To Black</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIconSet.xl4CRV">
      <summary>4 CRV</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIconSet.xl4TrafficLights">
      <summary>4 Traffic Lights</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIconSet.xl5Arrows">
      <summary>5 Arrows</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIconSet.xl5ArrowsGray">
      <summary>5 Arrows Gray</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIconSet.xl5CRV">
      <summary>5 CRV</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIconSet.xl5Quarters">
      <summary>5 Quarters</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIconSet.xl3Stars">
      <summary />
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIconSet.xl3Triangles">
      <summary />
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIconSet.xl5Boxes">
      <summary />
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlIMEMode">
      <summary>Specifies the description of the Japanese input rules.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIMEMode.xlIMEModeNoControl">
      <summary>No control.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIMEMode.xlIMEModeOn">
      <summary>Mode on.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIMEMode.xlIMEModeOff">
      <summary>Off (English mode).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIMEMode.xlIMEModeDisable">
      <summary>Disable.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIMEMode.xlIMEModeHiragana">
      <summary>Hiragana.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIMEMode.xlIMEModeKatakana">
      <summary>Katakana.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIMEMode.xlIMEModeKatakanaHalf">
      <summary>Half-width Katakana.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIMEMode.xlIMEModeAlphaFull">
      <summary>Full-width alphanumeric.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIMEMode.xlIMEModeAlpha">
      <summary>Half-width alphanumeric.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIMEMode.xlIMEModeHangulFull">
      <summary>Full-width Hangul.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlIMEMode.xlIMEModeHangul">
      <summary>Hangul.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlImportDataAs">
      <summary>Specifies the format in which to return data from a database.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlImportDataAs.xlQueryTable">
      <summary>Returns the data as a QueryTable.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlImportDataAs.xlPivotTableReport">
      <summary>Returns the data as a PivotTable.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlImportDataAs.xlTable">
      <summary />
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlInsertFormatOrigin">
      <summary>Specifies from where to copy the format for inserted rows.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlInsertFormatOrigin.xlFormatFromLeftOrAbove">
      <summary>From cells above and/or to the left.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlInsertFormatOrigin.xlFormatFromRightOrBelow">
      <summary>From cells below and/or to the right.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlInsertShiftDirection">
      <summary>Specifies the direction in which to shift cells during an insertion.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlInsertShiftDirection.xlShiftDown">
      <summary>Shift cells down.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlInsertShiftDirection.xlShiftToRight">
      <summary>Shift cells to the right.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlLayoutFormType">
      <summary>Specifies the way the specified PivotTable items appear—in table format or in outline format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLayoutFormType.xlTabular">
      <summary>Default.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLayoutFormType.xlOutline">
      <summary>The LayoutSubtotalLocation property specifies where the subtotal appears in the PivotTable report.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlLayoutRowType">
      <summary>Specifies the type of layout row.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLayoutRowType.xlCompactRow">
      <summary>Compact Row</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLayoutRowType.xlTabularRow">
      <summary>Tabular Row</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLayoutRowType.xlOutlineRow">
      <summary>Outline Row</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlLegendPosition">
      <summary>Specifies the position of the legend on a chart.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLegendPosition.xlLegendPositionBottom">
      <summary>Below the chart.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLegendPosition.xlLegendPositionCorner">
      <summary>In the upper right-hand corner of the chart border.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLegendPosition.xlLegendPositionLeft">
      <summary>To the left of the chart.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLegendPosition.xlLegendPositionRight">
      <summary>To the right of the chart.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLegendPosition.xlLegendPositionTop">
      <summary>Above the chart.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLegendPosition.xlLegendPositionCustom">
      <summary>A custom position.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlLineStyle">
      <summary>Specifies the line style for the border.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlContinuous">
      <summary>Continuous line.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDash">
      <summary>Dashed line.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDashDot">
      <summary>Alternating dashes and dots.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDashDotDot">
      <summary>Dash followed by two dots.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDot">
      <summary>Dotted line.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDouble">
      <summary>Double line.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlSlantDashDot">
      <summary>Slanted dashes.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlLineStyleNone">
      <summary>No line.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlLink">
      <summary>Specifies the type of link.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLink.xlExcelLinks">
      <summary>The link is to an Excel worksheet.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLink.xlOLELinks">
      <summary>The link is to an OLE source.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLink.xlPublishers">
      <summary>Macintosh only.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLink.xlSubscribers">
      <summary>Macintosh only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlLinkInfo">
      <summary>Specifies the type of information to be returned.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLinkInfo.xlEditionDate">
      <summary>Applies only to editions in Macintosh.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLinkInfo.xlUpdateState">
      <summary>Whether link updates automatically or manually.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLinkInfo.xlLinkInfoStatus">
      <summary>Link status.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlLinkInfoType">
      <summary>Specifies the type of link.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLinkInfoType.xlLinkInfoOLELinks">
      <summary>OLE or DDE server.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLinkInfoType.xlLinkInfoPublishers">
      <summary>Publisher.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLinkInfoType.xlLinkInfoSubscribers">
      <summary>Subscriber.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlLinkStatus">
      <summary>Specifies the status of a link.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLinkStatus.xlLinkStatusOK">
      <summary>No errors.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLinkStatus.xlLinkStatusMissingFile">
      <summary>File missing.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLinkStatus.xlLinkStatusMissingSheet">
      <summary>Sheet missing.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLinkStatus.xlLinkStatusOld">
      <summary>Status may be out of date.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLinkStatus.xlLinkStatusSourceNotCalculated">
      <summary>Not yet calculated.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLinkStatus.xlLinkStatusIndeterminate">
      <summary>Unable to determine status.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLinkStatus.xlLinkStatusNotStarted">
      <summary>Not started.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLinkStatus.xlLinkStatusInvalidName">
      <summary>Invalid name.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLinkStatus.xlLinkStatusSourceNotOpen">
      <summary>Not open.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLinkStatus.xlLinkStatusSourceOpen">
      <summary>Source document is open.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLinkStatus.xlLinkStatusCopiedValues">
      <summary>Copied values.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlLinkType">
      <summary>Specifies the type of link.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLinkType.xlLinkTypeExcelLinks">
      <summary>A link to a Microsoft Excel source.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLinkType.xlLinkTypeOLELinks">
      <summary>A link to an OLE source.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlListConflict">
      <summary>Specifies the conflict resolution options for updating a list on a Microsoft Windows SharePoint Services site with the changes made to a list in a Microsoft Excel worksheet.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlListConflict.xlListConflictDialog">
      <summary>Display a dialog that allows the user to choose how to resolve conflicts.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlListConflict.xlListConflictRetryAllConflicts">
      <summary>Overwrite the version of the data stored on the SharePoint site.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlListConflict.xlListConflictDiscardAllConflicts">
      <summary>Accept the version of the data stored on the SharePoint site.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlListConflict.xlListConflictError">
      <summary>Raise an error if a conflict occurs.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlListDataType">
      <summary>Specifies the data type of a list column connected to a Microsoft Windows SharePoint Services site.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeNone">
      <summary>Type not specified.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeText">
      <summary>Plain text.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeMultiLineText">
      <summary>Plain text with multiple lines.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeNumber">
      <summary>Numerical.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeCurrency">
      <summary>Currency.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeDateTime">
      <summary>Date/time.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeChoice">
      <summary>Single-choice field.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeChoiceMulti">
      <summary>Multiple-choice field.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeListLookup">
      <summary>Lookup list.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeCheckbox">
      <summary>Check box.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeHyperLink">
      <summary>Hyperlink.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeCounter">
      <summary>Counter.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeMultiLineRichText">
      <summary>Rich text format with multiple lines.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlListObjectSourceType">
      <summary>Specifies the current source of the list.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlListObjectSourceType.xlSrcExternal">
      <summary>External data source (Microsoft Windows SharePoint Services site).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlListObjectSourceType.xlSrcRange">
      <summary>Microsoft Office Excel range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlListObjectSourceType.xlSrcXml">
      <summary>XML.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlListObjectSourceType.xlSrcQuery">
      <summary>Query.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlLocationInTable">
      <summary>Specifies the part of the PivotTable report that contains the upper-left corner of a range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLocationInTable.xlColumnHeader">
      <summary>Column header.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLocationInTable.xlColumnItem">
      <summary>Column item.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLocationInTable.xlDataHeader">
      <summary>Data header.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLocationInTable.xlDataItem">
      <summary>Data item.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLocationInTable.xlPageHeader">
      <summary>Page header.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLocationInTable.xlPageItem">
      <summary>Page item.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLocationInTable.xlRowHeader">
      <summary>Row header.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLocationInTable.xlRowItem">
      <summary>Row item.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLocationInTable.xlTableBody">
      <summary>Table body.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlLookAt">
      <summary>Specifies whether a match is made against the whole of the search text or any part of the search text.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLookAt.xlPart">
      <summary>Match against any part of the search text.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLookAt.xlWhole">
      <summary>Match against the whole of the search text.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlLookFor">
      <summary>Specifies what to look for in searches.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLookFor.xlLookForBlanks">
      <summary>Blanks.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLookFor.xlLookForErrors">
      <summary>Errors.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlLookFor.xlLookForFormulas">
      <summary>Formulas.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlMailSystem">
      <summary>Specifies the mail system that is installed on the host machine.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMailSystem.xlMAPI">
      <summary>MAPI-complaint system.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMailSystem.xlNoMailSystem">
      <summary>No mail system.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMailSystem.xlPowerTalk">
      <summary>PowerTalk mail system.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlMarkerStyle">
      <summary>Specifies the marker style for a point or series in a line chart, scatter chart, or radar chart.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMarkerStyle.xlMarkerStyleAutomatic">
      <summary>Automatic markers</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMarkerStyle.xlMarkerStyleCircle">
      <summary>Circular markers</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMarkerStyle.xlMarkerStyleDash">
      <summary>Long bar markers</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMarkerStyle.xlMarkerStyleDiamond">
      <summary>Diamond-shaped markers</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMarkerStyle.xlMarkerStyleDot">
      <summary>Short bar markers</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMarkerStyle.xlMarkerStyleNone">
      <summary>No markers</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMarkerStyle.xlMarkerStylePicture">
      <summary>Picture markers</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMarkerStyle.xlMarkerStylePlus">
      <summary>Square markers with a plus sign</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMarkerStyle.xlMarkerStyleSquare">
      <summary>Square markers</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMarkerStyle.xlMarkerStyleStar">
      <summary>Square markers with an asterisk</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMarkerStyle.xlMarkerStyleTriangle">
      <summary>Triangular markers</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMarkerStyle.xlMarkerStyleX">
      <summary>Square markers with an X</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlMeasurementUnits">
      <summary>Specifies the measurement units.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMeasurementUnits.xlInches">
      <summary>Inches</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMeasurementUnits.xlCentimeters">
      <summary>Centimeters</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMeasurementUnits.xlMillimeters">
      <summary>Millimeters</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlMouseButton">
      <summary>Specifies which mouse button was pressed.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMouseButton.xlNoButton">
      <summary>No button was pressed.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMouseButton.xlPrimaryButton">
      <summary>The primary button (normally the left mouse button) was pressed.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMouseButton.xlSecondaryButton">
      <summary>The secondary button (normally the right mouse button) was pressed.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlMousePointer">
      <summary>Specifies the appearance of the mouse pointer in Microsoft Excel.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMousePointer.xlIBeam">
      <summary>The I-beam pointer.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMousePointer.xlDefault">
      <summary>The default pointer.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMousePointer.xlNorthwestArrow">
      <summary>The northwest-arrow pointer.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMousePointer.xlWait">
      <summary>The hourglass pointer.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlMSApplication">
      <summary>Specifies a Microsoft application.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMSApplication.xlMicrosoftAccess">
      <summary>Microsoft Access.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMSApplication.xlMicrosoftFoxPro">
      <summary>Microsoft FoxPro.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMSApplication.xlMicrosoftMail">
      <summary>The Microsoft Mail application (Outlook).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMSApplication.xlMicrosoftPowerPoint">
      <summary>Microsoft PowerPoint.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMSApplication.xlMicrosoftProject">
      <summary>Microsoft Project.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMSApplication.xlMicrosoftSchedulePlus">
      <summary>Microsoft Schedule Plus.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlMSApplication.xlMicrosoftWord">
      <summary>Microsoft Word.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlOartHorizontalOverflow">
      <summary>Specifies the horizontal overflow setting for a text frame.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlOartHorizontalOverflow.xlOartHorizontalOverflowOverflow">
      <summary>Allow text to overflow the text frame horizontally.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlOartHorizontalOverflow.xlOartHorizontalOverflowClip">
      <summary>Hide text that does not fit horizontally in the text frame.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlOartVerticalOverflow">
      <summary>Specifies the vertical overflow setting for a text frame.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlOartVerticalOverflow.xlOartVerticalOverflowOverflow">
      <summary>Allow text to overflow the text frame vertically (can be from the top, bottom, or both depending on the text alignment).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlOartVerticalOverflow.xlOartVerticalOverflowClip">
      <summary>Hide text that does not fit vertically within the text frame.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlOartVerticalOverflow.xlOartVerticalOverflowEllipsis">
      <summary>Hide text that does not fit vertically within the text frame, and add an ellipsis at the end of the visible text.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlObjectSize">
      <summary>Specifies the way a chart is scaled to fit on a page.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlObjectSize.xlFitToPage">
      <summary>Print the chart as large as possible, while retaining the chart's height-to-width ratio as shown on the screen</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlObjectSize.xlFullPage">
      <summary>Print the chart to fit the page, adjusting the height-to-width ratio as necessary.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlObjectSize.xlScreenSize">
      <summary>Print the chart the same size as it appears on the screen.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlOLEType">
      <summary>Specifies the OLE object type.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlOLEType.xlOLEControl">
      <summary>ActiveX control.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlOLEType.xlOLEEmbed">
      <summary>Embedded OLE object.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlOLEType.xlOLELink">
      <summary>Linked OLE object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlOLEVerb">
      <summary>Specifies the verb that the server of the OLE object should act on.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlOLEVerb.xlVerbOpen">
      <summary>Open the object.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlOLEVerb.xlVerbPrimary">
      <summary>Perform the primary action for the server.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlOrder">
      <summary>Specifies the order in which cells are processed.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlOrder.xlDownThenOver">
      <summary>Process down the rows before processing across pages or page fields to the right.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlOrder.xlOverThenDown">
      <summary>Process across pages or page fields to the right before moving down the rows.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlOrientation">
      <summary>Specifies the text orientation.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlOrientation.xlDownward">
      <summary>Text runs downward.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlOrientation.xlHorizontal">
      <summary>Text runs horizontally.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlOrientation.xlUpward">
      <summary>Text runs upward.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlOrientation.xlVertical">
      <summary>Text runs downward and is centered in the cell.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPageBreak">
      <summary>Specifies page break location in the worksheet.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPageBreak.xlPageBreakAutomatic">
      <summary>Excel will automatically add page breaks.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPageBreak.xlPageBreakManual">
      <summary>Page breaks are manually inserted.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPageBreak.xlPageBreakNone">
      <summary>Page breaks are not inserted in the worksheet.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPageBreakExtent">
      <summary>Specifies whether a page break is full screen or applies only within the print area.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPageBreakExtent.xlPageBreakFull">
      <summary>Full screen.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPageBreakExtent.xlPageBreakPartial">
      <summary>Only within print area.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPageOrientation">
      <summary>Specifies the page orientation when the worksheet is printed.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPageOrientation.xlLandscape">
      <summary>Landscape mode.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPageOrientation.xlPortrait">
      <summary>Portrait mode.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPaperSize">
      <summary>Specifies the size of the paper.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaper10x14">
      <summary>10 in. x 14 in.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaper11x17">
      <summary>11 in. x 17 in.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperA3">
      <summary>A3 (297 mm x 420 mm)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperA4">
      <summary>A4 (210 mm x 297 mm)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperA4Small">
      <summary>A4 Small (210 mm x 297 mm)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperA5">
      <summary>A5 (148 mm x 210 mm)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperB4">
      <summary>B4 (250 mm x 354 mm)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperB5">
      <summary>A5 (148 mm x 210 mm)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperCsheet">
      <summary>C size sheet</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperDsheet">
      <summary>D size sheet</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelope10">
      <summary>Envelope #10 (4-1/8 in. x 9-1/2 in.)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelope11">
      <summary>Envelope #11 (4-1/2 in. x 10-3/8 in.)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelope12">
      <summary>Envelope #12 (4-1/2 in. x 11 in.)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelope14">
      <summary>Envelope #14 (5 in. x 11-1/2 in.)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelope9">
      <summary>Envelope #9 (3-7/8 in. x 8-7/8 in.)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelopeB4">
      <summary>Envelope B4 (250 mm x 353 mm)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelopeB5">
      <summary>Envelope B5 (176 mm x 250 mm)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelopeB6">
      <summary>Envelope B6 (176 mm x 125 mm)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelopeC3">
      <summary>Envelope C3 (324 mm x 458 mm)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelopeC4">
      <summary>Envelope C4 (229 mm x 324 mm)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelopeC5">
      <summary>Envelope C5 (162 mm x 229 mm)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelopeC6">
      <summary>Envelope C6 (114 mm x 162 mm)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelopeC65">
      <summary>Envelope C65 (114 mm x 229 mm)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelopeDL">
      <summary>Envelope DL (110 mm x 220 mm)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelopeItaly">
      <summary>Envelope (110 mm x 230 mm)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelopeMonarch">
      <summary>Envelope Monarch (3-7/8 in. x 7-1/2 in.)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelopePersonal">
      <summary>Envelope (3-5/8 in. x 6-1/2 in.)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEsheet">
      <summary>E size sheet</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperExecutive">
      <summary>Executive (7-1/2 in. x 10-1/2 in.)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperFanfoldLegalGerman">
      <summary>German Legal Fanfold (8-1/2 in. x 13 in.)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperFanfoldStdGerman">
      <summary>German Legal Fanfold (8-1/2 in. x 13 in.)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperFanfoldUS">
      <summary>U.S. Standard Fanfold (14-7/8 in. x 11 in.)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperFolio">
      <summary>Folio (8-1/2 in. x 13 in.)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperLedger">
      <summary>Ledger (17 in. x 11 in.)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperLegal">
      <summary>Legal (8-1/2 in. x 14 in.)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperLetter">
      <summary>Letter (8-1/2 in. x 11 in.)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperLetterSmall">
      <summary>Letter Small (8-1/2 in. x 11 in.)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperNote">
      <summary>Note (8-1/2 in. x 11 in.)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperQuarto">
      <summary>Quarto (215 mm x 275 mm)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperStatement">
      <summary>Statement (5-1/2 in. x 8-1/2 in.)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperTabloid">
      <summary>Tabloid (11 in. x 17 in.)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperUser">
      <summary>User-defined</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlParameterDataType">
      <summary>Specifies the data type of a query parameter.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeUnknown">
      <summary>Type unknown.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeChar">
      <summary>String.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeNumeric">
      <summary>Numeric.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeDecimal">
      <summary>Decimal.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeInteger">
      <summary>Integer.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeSmallInt">
      <summary>Small integer.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeFloat">
      <summary>Float.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeReal">
      <summary>Real.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeDouble">
      <summary>Double.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeVarChar">
      <summary>Variable-length string.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeDate">
      <summary>Date.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeTime">
      <summary>Time.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeTimestamp">
      <summary>Time stamp.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeLongVarChar">
      <summary>Long string.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeBinary">
      <summary>Binary.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeVarBinary">
      <summary>Variable-length binary.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeLongVarBinary">
      <summary>Long binary.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeBigInt">
      <summary>Big integer.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeTinyInt">
      <summary>Tiny integer.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeBit">
      <summary>Bit.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeWChar">
      <summary>Unicode character string.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlParameterType">
      <summary>Specifies how to determine the value of the parameter for the specified query table.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlParameterType.xlPrompt">
      <summary>Displays a dialog box that prompts the user for the value. The Value argument specifies the text shown in the dialog box.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlParameterType.xlConstant">
      <summary>Uses the value specified by the Value argument.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlParameterType.xlRange">
      <summary>Uses the value of the cell in the upper-left corner of the range. The Value argument specifies a Range object.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation">
      <summary>Specifies how numeric data will be calculated with the destinations cells in the worksheet.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationAdd">
      <summary>Copied data will be added with the value in the destination cell.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationDivide">
      <summary>Copied data will be divided with the value in the destination cell.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationMultiply">
      <summary>Copied data will be multiplied with the value in the destination cell.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone">
      <summary>No calculation will be done in the paste operation.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationSubtract">
      <summary>Copied data will be subtracted with the value in the destination cell.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPasteType">
      <summary>Specifies the part of the range to be pasted.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll">
      <summary>Everything will be pasted.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAllUsingSourceTheme">
      <summary>Everything will be pasted using the source theme.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAllExceptBorders">
      <summary>Everything except borders will be pasted.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormats">
      <summary>Formatting will be pasted.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormulas">
      <summary>Formulas will be pasted.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteComments">
      <summary>Comments will be pasted.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteValues">
      <summary>Only the values will be pasted.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteColumnWidths">
      <summary>The column width of the source cell will be applied to the destination cell.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteValidation">
      <summary>Validation from the source cell is applied to the destination cell.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormulasAndNumberFormats">
      <summary>Formulas and number formats are pasted.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteValuesAndNumberFormats">
      <summary>Only the values number formats will be pasted.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPattern">
      <summary>Specifies the interior pattern of a chart or interior object.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternAutomatic">
      <summary>Excel controls the pattern.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternChecker">
      <summary>Checkerboard.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternCrissCross">
      <summary>Criss-cross lines.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternDown">
      <summary>Dark diagonal lines running from the upper left to the lower right.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternGray16">
      <summary>16% gray.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternGray25">
      <summary>25% gray.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternGray50">
      <summary>50% gray.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternGray75">
      <summary>75% gray.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternGray8">
      <summary>8% gray.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternGrid">
      <summary>Grid.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternHorizontal">
      <summary>Dark horizontal lines.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternLightDown">
      <summary>Light diagonal lines running from the upper left to the lower right.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternLightHorizontal">
      <summary>Light horizontal lines.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternLightUp">
      <summary>Light diagonal lines running from the lower left to the upper right.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternLightVertical">
      <summary>Light vertical bars.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternNone">
      <summary>No pattern.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternSemiGray75">
      <summary>75% dark moiré.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternSolid">
      <summary>Solid color.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternUp">
      <summary>Dark diagonal lines running from the lower left to the upper right.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternVertical">
      <summary>Dark vertical bars.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternLinearGradient">
      <summary />
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternRectangularGradient">
      <summary />
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPhoneticAlignment">
      <summary>Specifies the alignment for phonetic text.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPhoneticAlignment.xlPhoneticAlignNoControl">
      <summary>Excel controls alignment.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPhoneticAlignment.xlPhoneticAlignLeft">
      <summary>Left aligned.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPhoneticAlignment.xlPhoneticAlignCenter">
      <summary>Centered.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPhoneticAlignment.xlPhoneticAlignDistributed">
      <summary>Distributed.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPhoneticCharacterType">
      <summary>Specifies the type of phonetic text in a cell.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPhoneticCharacterType.xlKatakanaHalf">
      <summary>Half-size Katakana.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPhoneticCharacterType.xlKatakana">
      <summary>Katakana.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPhoneticCharacterType.xlHiragana">
      <summary>Hiragana.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPhoneticCharacterType.xlNoConversion">
      <summary>No conversion.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPictureAppearance">
      <summary>Specifies how the picture should be copied.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPictureAppearance.xlPrinter">
      <summary>The picture is copied as it will look when it's printed.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen">
      <summary>The picture is copied to resemble its display on the screen as closely as possible</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPictureConvertorType">
      <summary>Specifies how to convert a graphic.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlBMP">
      <summary>Windows version 2.0 compatible bitmap.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlCGM">
      <summary>Computer Graphics Metafile.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlDRW">
      <summary>DRW.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlDXF">
      <summary>DXF.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlEPS">
      <summary>Encapsulated Postscript.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlHGL">
      <summary>HGL.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlPCT">
      <summary>Bitmap Graphic (Apple PICT format).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlPCX">
      <summary>PC Paintbrush Bitmap Graphic.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlPIC">
      <summary>PIC.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlPLT">
      <summary>PLT.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlTIF">
      <summary>Tagged Image Format File.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlWMF">
      <summary>Windows Metafile.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlWPG">
      <summary>WordPerfect/DrawPerfect Graphic.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPieSliceIndex">
      <summary>Specifies which position on the slice to return the coordinate of.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPieSliceIndex.xlOuterCounterClockwisePoint">
      <summary>The outermost counterclockwise point of the circumference of a slice.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPieSliceIndex.xlOuterCenterPoint">
      <summary>The outer center point of the circumference of a slice.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPieSliceIndex.xlOuterClockwisePoint">
      <summary>The outermost clockwise point of the circumference of a slice.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPieSliceIndex.xlMidClockwiseRadiusPoint">
      <summary>The midpoint of the most clockwise radius of a slice.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPieSliceIndex.xlCenterPoint">
      <summary>The center point of a pie slice.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPieSliceIndex.xlMidCounterClockwiseRadiusPoint">
      <summary>The midpoint of the most counterclockwise radius of a slice.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPieSliceIndex.xlInnerClockwisePoint">
      <summary>The innermost point of the most clockwise radius of a doughnut slice.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPieSliceIndex.xlInnerCenterPoint">
      <summary>The innermost center point of a doughnut slice.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPieSliceIndex.xlInnerCounterClockwisePoint">
      <summary>The innermost point of the most counterclockwise radius of a doughnut slice.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPieSliceLocation">
      <summary>Specifies the horizontal or vertical position of a point on a pie chart, in points, from the top or left edge of the object to the top or left edge of the chart area.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPieSliceLocation.xlHorizontalCoordinate">
      <summary>The horizontal coordinate (x)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPieSliceLocation.xlVerticalCoordinate">
      <summary>The vertical coordinate (y)</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPivotCellType">
      <summary>Specifies the PivotTable entity the cell corresponds to.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotCellType.xlPivotCellValue">
      <summary>Any cell in the data area (except a blank row).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotCellType.xlPivotCellPivotItem">
      <summary>A cell in the row or column area which is not a subtotal, grand total, custom subtotal, or blank line.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotCellType.xlPivotCellSubtotal">
      <summary>A cell in the row or column area which is a subtotal.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotCellType.xlPivotCellGrandTotal">
      <summary>A cell in a row or column area which is a grand total.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotCellType.xlPivotCellDataField">
      <summary>A data field label (not the Data button).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotCellType.xlPivotCellPivotField">
      <summary>The button for a field (not the Data button).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotCellType.xlPivotCellPageFieldItem">
      <summary>The cell that shows the selected item of a Page field.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotCellType.xlPivotCellCustomSubtotal">
      <summary>A cell in the row or column area that is a custom subtotal.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotCellType.xlPivotCellDataPivotField">
      <summary>The Data button.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotCellType.xlPivotCellBlankCell">
      <summary>A structural blank cell in the PivotTable.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope">
      <summary>This enumeration specifies the conditional formatting applied for filtering values from the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlSelectionScope">
      <summary>Based on the specified selection criteria.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlFieldsScope">
      <summary>Based on the specified fields.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlDataFieldScope">
      <summary>Based on the data in the specified fields.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation">
      <summary>Specifies the type of calculation performed by a data PivotField when a custom calculation is used.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation.xlDifferenceFrom">
      <summary>The difference from the value of the Base item in the Base field.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation.xlIndex">
      <summary>Data calculated as ((value in cell) x (Grand Total of Grand Totals)) / ((Grand Row Total) x (Grand Column Total))</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation.xlNoAdditionalCalculation">
      <summary>No calculation.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation.xlPercentDifferenceFrom">
      <summary>Percentage difference from the value of the Base item in the Base field.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation.xlPercentOf">
      <summary>Percentage of the value of the Base item in the Base field.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation.xlPercentOfColumn">
      <summary>Percentage of the total for the column or series.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation.xlPercentOfRow">
      <summary>Percentage of the total for the row or category.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation.xlPercentOfTotal">
      <summary>Percentage of the grand total of all the data or data points in the report.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation.xlRunningTotal">
      <summary>Data for successive items in the Base field as a running total.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation.xlPercentOfParentRow">
      <summary>Percentage of the total of the parent row.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation.xlPercentOfParentColumn">
      <summary>Percentage of the total of the parent column.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation.xlPercentOfParent">
      <summary>Percentage of the total of the specified parent Base field.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation.xlPercentRunningTotal">
      <summary>Percentatge of the running total of the specified Base field.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation.xlRankAscending">
      <summary>Rank smallest to largest.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation.xlRankDecending">
      <summary>Rank largest to smallest.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPivotFieldDataType">
      <summary>Specifies the type of data in the PivotTable field.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldDataType.xlDate">
      <summary>Date.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldDataType.xlNumber">
      <summary>Number.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldDataType.xlText">
      <summary>Text.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation">
      <summary>Specifies the location of the field in a PivotTable report.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlColumnField">
      <summary>Column.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlDataField">
      <summary>Data.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlHidden">
      <summary>Hidden.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField">
      <summary>Page.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField">
      <summary>Row.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPivotFieldRepeatLabels">
      <summary>Specifies whether to repeat all field item labels in a PivotTable report.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldRepeatLabels.xlDoNotRepeatLabels">
      <summary>Do not repeat item labels.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldRepeatLabels.xlRepeatLabels">
      <summary>Repeat all item labels.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPivotFilterType">
      <summary>The type of filter applied.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlTopCount">
      <summary>Filters for the specified number of values from the top of a list</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlBottomCount">
      <summary>Filters for the specified number of values from the bottom of a list</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlTopPercent">
      <summary>Filters for the specified percentage of values from a list</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlBottomPercent">
      <summary>Filters for the specified percentage of values from the bottom of a list</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlTopSum">
      <summary>Sum of the values from the top of the list</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlBottomSum">
      <summary>Sum of the values from the bottom of the list</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlValueEquals">
      <summary>Filters for all values that match the specified value</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlValueDoesNotEqual">
      <summary>Filters for all values that do not match the specified value</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlValueIsGreaterThan">
      <summary>Filters for all values that are greater than the specified value</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlValueIsGreaterThanOrEqualTo">
      <summary>Filters for all values that are greater than or match the specified value</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlValueIsLessThan">
      <summary>Filters for all values that are less than the specified value</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlValueIsLessThanOrEqualTo">
      <summary>Filters for all values that are less than or match the specified value</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlValueIsBetween">
      <summary>Filters for all values that are between a specified range of values</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlValueIsNotBetween">
      <summary>Filters for all values that are not between a specified range of values</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlCaptionEquals">
      <summary>Filters for all captions that match the specified string</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlCaptionDoesNotEqual">
      <summary>Filters for all captions that do not match the specified string</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlCaptionBeginsWith">
      <summary>Filters for all captions beginning with the specified string</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlCaptionDoesNotBeginWith">
      <summary>Filters for all captions that do not begin with the specified string</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlCaptionEndsWith">
      <summary>Filters for all captions that end with the specified string</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlCaptionDoesNotEndWith">
      <summary>Filters for all captions that do not end with the specified string</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlCaptionContains">
      <summary>Filters for all captions that contain the specified string</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlCaptionDoesNotContain">
      <summary>Filters for all captions that do not contain the specified string</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlCaptionIsGreaterThan">
      <summary>Filters for all captions that are greater than the specified value</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlCaptionIsGreaterThanOrEqualTo">
      <summary>Filters for all captions that are greater than or match the specified value</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlCaptionIsLessThan">
      <summary>Filters for all captions that are less than the specified value</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlCaptionIsLessThanOrEqualTo">
      <summary>Filters for all captions that are less than or match the specified value</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlCaptionIsBetween">
      <summary>Filters for all captions that are between a specified range of values</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlCaptionIsNotBetween">
      <summary>Filters for all captions that are not between a specified range of values</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlSpecificDate">
      <summary>Filters for all dates that match a specified date</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlNotSpecificDate">
      <summary>Filters for all dates that do not match a specified date</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlBefore">
      <summary>Filters for all dates before a specified date</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlBeforeOrEqualTo">
      <summary>Filters for all dates on or before a specified date</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlAfter">
      <summary>Filters for all dates after a specified date</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlAfterOrEqualTo">
      <summary>Filters for all dates on or after a specified date</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlDateBetween">
      <summary>Filters for all dates that are between a specified range of dates</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlDateNotBetween">
      <summary />
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlDateTomorrow">
      <summary>Filters for all dates that apply to the next day</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlDateToday">
      <summary>Filters for all dates that apply to the current date</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlDateYesterday">
      <summary>Filters for all dates that apply to the previous day</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlDateNextWeek">
      <summary>Filters for all dates that apply to the next week</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlDateThisWeek">
      <summary>Filters for all dates that apply to the current week</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlDateLastWeek">
      <summary>Filters for all dates that apply to the previous week</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlDateNextMonth">
      <summary>Filters for all dates that apply to the next month</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlDateThisMonth">
      <summary>Filters for all dates that apply to the current month</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlDateLastMonth">
      <summary>Filters for all dates that apply to the previous month</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlDateNextQuarter">
      <summary>Filters for all dates that apply to the next quarter</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlDateThisQuarter">
      <summary>Filters for all dates that apply to the current quarter</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlDateLastQuarter">
      <summary>Filters for all dates that apply to the previous quarter</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlDateNextYear">
      <summary>Filters for all dates that apply to the next year</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlDateThisYear">
      <summary>Filters for all dates that apply to the current year</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlDateLastYear">
      <summary>Filters for all dates that apply to the previous year</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlYearToDate">
      <summary>Filters for all values that are within one year of a specified date</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlAllDatesInPeriodQuarter1">
      <summary>Filters for all dates in Quarter1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlAllDatesInPeriodQuarter2">
      <summary>Filters for all dates in Quarter2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlAllDatesInPeriodQuarter3">
      <summary>Filters for all dates in Quarter3</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlAllDatesInPeriodQuarter4">
      <summary>Filters for all dates in Quarter 4</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlAllDatesInPeriodJanuary">
      <summary>Filters for all dates in January</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlAllDatesInPeriodFebruary">
      <summary>Filters for all dates in February</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlAllDatesInPeriodMarch">
      <summary>Filters for all dates in March</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlAllDatesInPeriodApril">
      <summary>Filters for all dates in April</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlAllDatesInPeriodMay">
      <summary>Filters for all dates in May</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlAllDatesInPeriodJune">
      <summary>Filters for all dates in June</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlAllDatesInPeriodJuly">
      <summary>Filters for all dates in July</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlAllDatesInPeriodAugust">
      <summary>Filters for all dates in August</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlAllDatesInPeriodSeptember">
      <summary>Filters for all dates in September</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlAllDatesInPeriodOctober">
      <summary>Filters for all dates in October</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlAllDatesInPeriodNovember">
      <summary>Filters for all dates in November</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFilterType.xlAllDatesInPeriodDecember">
      <summary>Filters for all dates in December</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPivotFormatType">
      <summary>Specifies the type of report formatting to be applied to the specified PivotTable report.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlReport1">
      <summary>Use the xlReport1 formatting for the PivotTable.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlReport2">
      <summary>Use the xlReport2 formatting for the PivotTable.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlReport3">
      <summary>Use the xlReport3 formatting for the PivotTable.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlReport4">
      <summary>Use the xlReport4 formatting for the PivotTable.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlReport5">
      <summary>Use the xlReport5 formatting for the PivotTable.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlReport6">
      <summary>Use the xlReport6 formatting for the PivotTable.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlReport7">
      <summary>Use the xlReport7 formatting for the PivotTable.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlReport8">
      <summary>Use the xlReport8 formatting for the PivotTable.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlReport9">
      <summary>Use the xlReport9 formatting for the PivotTable.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlReport10">
      <summary>Use the xlReport10 formatting for the PivotTable.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlTable1">
      <summary>Use the xlReport1 formatting for the PivotTable.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlTable2">
      <summary>Use the xlTable2 formatting for the PivotTable.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlTable3">
      <summary>Use the xlTable3 formatting for the PivotTable.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlTable4">
      <summary>Use the xlTable4 formatting for the PivotTable.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlTable5">
      <summary>Use the xlTable5 formatting for the PivotTable.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlTable6">
      <summary>Use the xlTable6 formatting for the PivotTable.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlTable7">
      <summary>Use the xlTable7 formatting for the PivotTable.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlTable8">
      <summary>Use the xlTable8 formatting for the PivotTable.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlTable9">
      <summary>Use the xlTable9 formatting for the PivotTable.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlTable10">
      <summary>Use the xlReport1 formatting for the PivotTable.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlPTClassic">
      <summary>PivotTable classic format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlPTNone">
      <summary>Does not apply formatting to the PivotTable report.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPivotLineType">
      <summary>Specifies the type of the PivotLine.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotLineType.xlPivotLineRegular">
      <summary>Regular PivotLine with pivot items.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotLineType.xlPivotLineSubtotal">
      <summary>Subtotal line.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotLineType.xlPivotLineGrandTotal">
      <summary>Grand Total line.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotLineType.xlPivotLineBlank">
      <summary>Blank line after each group.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPivotTableMissingItems">
      <summary>Specifies the maximum number of unique items per PivotField allowed.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotTableMissingItems.xlMissingItemsDefault">
      <summary>The default number of unique items per PivotField allowed.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotTableMissingItems.xlMissingItemsNone">
      <summary>No unique items per PivotField allowed (zero).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotTableMissingItems.xlMissingItemsMax">
      <summary>The maximum number of unique items per PivotField allowed (32,500).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotTableMissingItems.xlMissingItemsMax2">
      <summary>The maximum number of unique items per PivotField allowed (10,48,576) for a pre-short_Excel2007 PivotTable.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType">
      <summary>Specifies the source of the report data.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlScenario">
      <summary>Data is based on scenarios created using the Scenario Manager..</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlConsolidation">
      <summary>Multiple consolidation ranges</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlDatabase">
      <summary>Microsoft Excel list or database</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlExternal">
      <summary>Data from another application </summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlPivotTable">
      <summary>Same source as another PivotTable report</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPivotTableVersionList">
      <summary>Specifies the version of a PivotTable or a PivotCache. Creating PivotTables with a specific version ensures that tables created in behave in the same manner as they did in the corresponding version of Excel.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotTableVersionList.xlPivotTableVersion2000">
      <summary>Excel 2000</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotTableVersionList.xlPivotTableVersion10">
      <summary>Excel 2002</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotTableVersionList.xlPivotTableVersion11">
      <summary>Excel 2003</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotTableVersionList.xlPivotTableVersion12">
      <summary>Excel 2007</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotTableVersionList.xlPivotTableVersion14">
      <summary>Excel 2010</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPivotTableVersionList.xlPivotTableVersionCurrent">
      <summary>Provided only for backward compatibility</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPlacement">
      <summary>Specifies the way an object is attached to its underlying cells.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPlacement.xlFreeFloating">
      <summary>Object is free floating.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPlacement.xlMove">
      <summary>Object is moved with the cells.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPlacement.xlMoveAndSize">
      <summary>Object is moved and sized with the cells.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPlatform">
      <summary>Specifies the platform that a text file originated on.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPlatform.xlMacintosh">
      <summary>Macintosh.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPlatform.xlMSDOS">
      <summary>MS-DOS.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPlatform.xlWindows">
      <summary>Microsoft Windows.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPortugueseReform">
      <summary>Specifies the mode for checking the spelling of Portuguese.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPortugueseReform.xlPortuguesePreReform">
      <summary>The spelling checker recognizes only pre-reform spellings.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPortugueseReform.xlPortuguesePostReform">
      <summary>The spelling checker recognizes only post-reform spellings.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPortugueseReform.xlPortugueseBoth">
      <summary>The spelling checker recognizes both pre-reform and post-reform spellings.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPrintErrors">
      <summary>Specifies the type of print error displayed.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPrintErrors.xlPrintErrorsDisplayed">
      <summary>Display all print errors.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPrintErrors.xlPrintErrorsBlank">
      <summary>Print errors are blank.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPrintErrors.xlPrintErrorsDash">
      <summary>Print errors are displayed as dashes.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPrintErrors.xlPrintErrorsNA">
      <summary>Display print errors as not available.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPrintLocation">
      <summary>Specifies the way comments are printed with the sheet.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPrintLocation.xlPrintSheetEnd">
      <summary>Print the comments as end notes at the end of the worksheet.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPrintLocation.xlPrintInPlace">
      <summary>Comments will be printed where they were inserted in the worksheet.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPrintLocation.xlPrintNoComments">
      <summary>Comments will not printed.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPriority">
      <summary>Specifies the priority of a SendMailer message.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPriority.xlPriorityHigh">
      <summary>High.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPriority.xlPriorityLow">
      <summary>Low.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPriority.xlPriorityNormal">
      <summary>Normal.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPropertyDisplayedIn">
      <summary>Specifies where to display the property.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPropertyDisplayedIn.xlDisplayPropertyInPivotTable">
      <summary>Displays member property in the PivotTable only. This is the default value.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPropertyDisplayedIn.xlDisplayPropertyInTooltip">
      <summary>Displays member property in both the tooltip and the PivotTable. </summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPropertyDisplayedIn.xlDisplayPropertyInPivotTableAndTooltip">
      <summary>Displays member property in the tooltip only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlProtectedViewCloseReason">
      <summary>Specifies how the Protected View window was closed.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlProtectedViewCloseReason.xlProtectedViewCloseNormal">
      <summary>The window was closed normally.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlProtectedViewCloseReason.xlProtectedViewCloseEdit">
      <summary>The window was closed when the user clicked the Enable Editing button.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlProtectedViewCloseReason.xlProtectedViewCloseForced">
      <summary>The window was closed because the application shut it down forcefully or stopped responding.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlProtectedViewWindowState">
      <summary>Specifies the state of the Protected View window.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlProtectedViewWindowState.xlProtectedViewWindowNormal">
      <summary>Normal</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlProtectedViewWindowState.xlProtectedViewWindowMinimized">
      <summary>Minimized</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlProtectedViewWindowState.xlProtectedViewWindowMaximized">
      <summary>Maximized</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlPTSelectionMode">
      <summary>Specifies what may be selected in a PivotTable during a structured selection. These constants may be combined to select multiple types.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPTSelectionMode.xlLabelOnly">
      <summary>Label.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPTSelectionMode.xlDataAndLabel">
      <summary>Data and labels.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPTSelectionMode.xlDataOnly">
      <summary>Data.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPTSelectionMode.xlOrigin">
      <summary>Origin.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPTSelectionMode.xlButton">
      <summary>Buttons.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPTSelectionMode.xlBlanks">
      <summary>Blanks.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlPTSelectionMode.xlFirstRow">
      <summary>First row.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlQueryType">
      <summary>Specifies the type of query used by Microsoft Excel to populate the query table or PivotTable cache.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlQueryType.xlODBCQuery">
      <summary>Based on an ODBC data source</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlQueryType.xlDAORecordset">
      <summary>Based on a DAO recordset query, for query tables only</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlQueryType.xlWebQuery">
      <summary>Based on a Web page, for query tables only</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlQueryType.xlOLEDBQuery">
      <summary>Based on an OLE DB query, including OLAP data sources</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlQueryType.xlTextImport">
      <summary>Based on a text file, for query tables only</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlQueryType.xlADORecordset">
      <summary>Based on an ADO recordset query</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat">
      <summary>Specifies the predefined format when a range is automatically formatted.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormat3DEffects1">
      <summary>3-D effects 1.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormat3DEffects2">
      <summary>3-D effects 2.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatAccounting1">
      <summary>Accounting 1.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatAccounting2">
      <summary>Accounting 2.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatAccounting3">
      <summary>Accounting 3.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatAccounting4">
      <summary>Accounting 4.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic1">
      <summary>Classic 1.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic2">
      <summary>Classic 2.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic3">
      <summary>Classic 3.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatColor1">
      <summary>Color 1.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatColor2">
      <summary>Color 2.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatColor3">
      <summary>Color 3.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatList1">
      <summary>List 1.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatList2">
      <summary>List 2.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatList3">
      <summary>List 3.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatLocalFormat1">
      <summary>Local Format 1.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatLocalFormat2">
      <summary>Local Format 2.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatLocalFormat3">
      <summary>Local Format 3.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatLocalFormat4">
      <summary>Local Format 4.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport1">
      <summary>Report 1.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport2">
      <summary>Report 2.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport3">
      <summary>Report 3.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport4">
      <summary>Report 4.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport5">
      <summary>Report 5.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport6">
      <summary>Report 6.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport7">
      <summary>Report 7.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport8">
      <summary>Report 8.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport9">
      <summary>Report 9.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport10">
      <summary>Report 10.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassicPivotTable">
      <summary>Classic pivot table.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable1">
      <summary>Table 1.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable2">
      <summary>Table 2.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable3">
      <summary>Table 3.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable4">
      <summary>Table 4.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable5">
      <summary>Table 5.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable6">
      <summary>Table 6.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable7">
      <summary>Table 7.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable8">
      <summary>Table 8.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable9">
      <summary>Table 9.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable10">
      <summary>Table 10.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatPTNone">
      <summary>No specified pivot table format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatNone">
      <summary>No specified format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatSimple">
      <summary>Simple.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlRangeValueDataType">
      <summary>Specifies the range value data type.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeValueDataType.xlRangeValueDefault">
      <summary>default If the specified Range object is empty, returns the value Empty (use the IsEmpty function to test for this case). If the Range object contains more than one cell, returns an array of values (use the IsArray function to test for this case).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeValueDataType.xlRangeValueXMLSpreadsheet">
      <summary>Returns the values, formatting, formulas and names of the specified Range object in the XML Spreadsheet format.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRangeValueDataType.xlRangeValueMSPersistXML">
      <summary>Returns the recordset representation of the specified Range object in an XML format.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlReferenceStyle">
      <summary>Specifies the reference style.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1">
      <summary>default. Use xlA1 to return an A1-style reference.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlReferenceStyle.xlR1C1">
      <summary>Use xlR1C1 to return an R1C1-style reference.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlReferenceType">
      <summary>Specifies cell reference style when a formula is being converted.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlReferenceType.xlAbsolute">
      <summary>Convert to absolute row and column style.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlReferenceType.xlAbsRowRelColumn">
      <summary>Convert to absolute row and relative column style.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlReferenceType.xlRelative">
      <summary>Convert to relative row and column style.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlReferenceType.xlRelRowAbsColumn">
      <summary>Convert to relative row and absolute column style.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType">
      <summary>Specifies the type information to be removed from the document information.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType.xlRDIComments">
      <summary>Removes comments from the document information.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType.xlRDIRemovePersonalInformation">
      <summary>Removes personal information from the document information.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType.xlRDIEmailHeader">
      <summary>Removes email headers from the document information.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType.xlRDIRoutingSlip">
      <summary>Removes routing slip information from the document information.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType.xlRDISendForReview">
      <summary>Removes the send for review information from the document information.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType.xlRDIDocumentProperties">
      <summary>Removes document properties from the document information.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType.xlRDIDocumentWorkspace">
      <summary>Removes workspace data from the document information.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType.xlRDIInkAnnotations">
      <summary>Removes ink annotations from the document information.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType.xlRDIScenarioComments">
      <summary>Removes scenario comments from the document information.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType.xlRDIPublishInfo">
      <summary>Removes the pubish information data from the document information.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType.xlRDIDocumentServerProperties">
      <summary>Removes server properties from the document information.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType.xlRDIDocumentManagementPolicy">
      <summary>Removes document management policy data from the document information.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType.xlRDIContentType">
      <summary>Removes content type data from the document information.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType.xlRDIDefinedNameComments">
      <summary>Removes defined name comments from the documentation information.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType.xlRDIInactiveDataConnections">
      <summary>Removes inactive data connection data from the document information.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType.xlRDIPrinterPath">
      <summary>Removes printer paths from the document information.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType.xlRDIAll">
      <summary>Removes all documentation information.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlRgbColor">
      <summary>Specifies the RGB color.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbAliceBlue">
      <summary>Alice Blue</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbAntiqueWhite">
      <summary>Antique White</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbAqua">
      <summary>Aqua</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbAquamarine">
      <summary>Aquamarine</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbAzure">
      <summary>Azure</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbBeige">
      <summary>Beige</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbBisque">
      <summary>Bisque</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbBlack">
      <summary>Black</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbBlanchedAlmond">
      <summary>Blanched Almond</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbBlue">
      <summary>Blue</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbBlueViolet">
      <summary>Blue Violet</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbBrown">
      <summary>Brown</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbBurlyWood">
      <summary>Burly Wood</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbCadetBlue">
      <summary>Cadet Blue</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbChartreuse">
      <summary>Chartreuse</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbCoral">
      <summary>Coral</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbCornflowerBlue">
      <summary>Cornflower Blue</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbCornsilk">
      <summary>Cornsilk</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbCrimson">
      <summary>Crimson</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbDarkBlue">
      <summary>Dark Blue</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbDarkCyan">
      <summary>Dark Cyan</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbDarkGoldenrod">
      <summary>Dark Goldenrod</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbDarkGreen">
      <summary>Dark Green</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbDarkGray">
      <summary>Dark Gray</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbDarkGrey">
      <summary>Dark Grey</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbDarkKhaki">
      <summary>Dark Khaki</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbDarkMagenta">
      <summary>Dark Magenta</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbDarkOliveGreen">
      <summary>Dark Olive Green</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbDarkOrange">
      <summary>Dark Orange</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbDarkOrchid">
      <summary>Dark Orchid</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbDarkRed">
      <summary>Dark Red</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbDarkSalmon">
      <summary>Dark Salmon</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbDarkSeaGreen">
      <summary>Dark Sea Green</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbDarkSlateBlue">
      <summary>Dark Slate Blue</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbDarkSlateGray">
      <summary>Dark Slate Gray</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbDarkSlateGrey">
      <summary>Dark Slate Grey</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbDarkTurquoise">
      <summary>Dark Turquoise</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbDarkViolet">
      <summary>Dark Violet</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbDeepPink">
      <summary>Deep Pink</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbDeepSkyBlue">
      <summary>Deep Sky Blue</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbDimGray">
      <summary>Dim Gray</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbDimGrey">
      <summary>Dim Grey</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbDodgerBlue">
      <summary>Dodger Blue</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbFireBrick">
      <summary>Fire Brick</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbFloralWhite">
      <summary>Floral White</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbForestGreen">
      <summary>Forest Green</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbFuchsia">
      <summary>Fuchsia</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbGainsboro">
      <summary>Gainsboro</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbGhostWhite">
      <summary>Ghost White</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbGold">
      <summary>Gold</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbGoldenrod">
      <summary>Goldenrod</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbGray">
      <summary>Gray</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbGreen">
      <summary>Green</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbGrey">
      <summary>Grey</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbGreenYellow">
      <summary>Green Yellow</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbHoneydew">
      <summary>Honeydew</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbHotPink">
      <summary>Hot Pink</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbIndianRed">
      <summary>Indian Red</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbIndigo">
      <summary>Indigo</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbIvory">
      <summary>Ivory</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbKhaki">
      <summary>Khaki</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbLavender">
      <summary>Lavender</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbLavenderBlush">
      <summary>Lavender Blush</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbLawnGreen">
      <summary>Lawn Green</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbLemonChiffon">
      <summary>Lemon Chiffon</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbLightBlue">
      <summary>Light Blue</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbLightCoral">
      <summary>Light Coral</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbLightCyan">
      <summary>Light Cyan</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbLightGoldenrodYellow">
      <summary>LightGoldenrodYellow</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbLightGray">
      <summary>Light Gray</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbLightGreen">
      <summary>Light Green</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbLightGrey">
      <summary>Light Grey</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbLightPink">
      <summary>Light Pink</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbLightSalmon">
      <summary>Light Salmon</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbLightSeaGreen">
      <summary>Light Sea Green</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbLightSkyBlue">
      <summary>Light Sky Blue</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbLightSlateGray">
      <summary>Light Slate Gray</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbLightSlateGrey">
      <summary />
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbLightSteelBlue">
      <summary>Light Steel Blue</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbLightYellow">
      <summary>Light Yellow</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbLime">
      <summary>Lime</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbLimeGreen">
      <summary>Lime Green</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbLinen">
      <summary>Linen</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbMaroon">
      <summary>Maroon</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbMediumAquamarine">
      <summary>Medium Aquamarine</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbMediumBlue">
      <summary>Medium Blue</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbMediumOrchid">
      <summary>Medium Orchid</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbMediumPurple">
      <summary>Medium Purple</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbMediumSeaGreen">
      <summary>Medium Sea Green</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbMediumSlateBlue">
      <summary>Medium Slate Blue</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbMediumSpringGreen">
      <summary>Medium Spring Green</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbMediumTurquoise">
      <summary>Medium Turquoise</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbMediumVioletRed">
      <summary>Medium Violet Red</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbMidnightBlue">
      <summary>Midnight Blue</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbMintCream">
      <summary>Mint Cream</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbMistyRose">
      <summary>Misty Rose</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbMoccasin">
      <summary>Moccasin</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbNavajoWhite">
      <summary>Navajo White</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbNavy">
      <summary>Navy</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbNavyBlue">
      <summary>Navy Blue</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbOldLace">
      <summary>Old Lace</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbOlive">
      <summary>Olive</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbOliveDrab">
      <summary>Olive Drab</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbOrange">
      <summary>Orange</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbOrangeRed">
      <summary>Orange Red</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbOrchid">
      <summary>Orchid</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbPaleGoldenrod">
      <summary>Pale Goldenrod</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbPaleGreen">
      <summary>Pale Green</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbPaleTurquoise">
      <summary>Pale Turquoise</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbPaleVioletRed">
      <summary>Pale Violet Red</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbPapayaWhip">
      <summary>Papaya Whip</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbPeachPuff">
      <summary>Peach Puff</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbPeru">
      <summary>Peru</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbPink">
      <summary>Pink</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbPlum">
      <summary>Plum</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbPowderBlue">
      <summary>Powder Blue</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbPurple">
      <summary>Purple</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbRed">
      <summary>Red</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbRosyBrown">
      <summary>Rosy Brown</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbRoyalBlue">
      <summary>Royal Blue</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbSalmon">
      <summary>Salmon</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbSandyBrown">
      <summary>Sandy Brown</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbSeaGreen">
      <summary>Sea Green</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbSeashell">
      <summary>Seashell</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbSienna">
      <summary>Sienna</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbSilver">
      <summary>Silver</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbSkyBlue">
      <summary>Sky Blue</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbSlateBlue">
      <summary>Slate Blue</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbSlateGray">
      <summary>Slate Gray</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbSlateGrey">
      <summary />
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbSnow">
      <summary>Snow</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbSpringGreen">
      <summary>Spring Green</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbSteelBlue">
      <summary>Steel Blue</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbTan">
      <summary>Tan</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbTeal">
      <summary>Teal</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbThistle">
      <summary>Thistle</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbTomato">
      <summary>Tomato</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbTurquoise">
      <summary>Turquoise</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbYellow">
      <summary>Yellow</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbYellowGreen">
      <summary>Yellow Green</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbViolet">
      <summary>Violet</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbWheat">
      <summary>Wheat</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbWhite">
      <summary>White</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRgbColor.rgbWhiteSmoke">
      <summary>White Smoke</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlRobustConnect">
      <summary>Specifies how the PivotTable cache connects to its data source.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRobustConnect.xlAsRequired">
      <summary>The cache uses external source info to reconnect using the Connection property.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRobustConnect.xlAlways">
      <summary>The cache always uses external source information (as defined by the SourceConnectionFile or SourceDataFile property) to reconnect.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRobustConnect.xlNever">
      <summary>The cache never uses source info to reconnect.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlRoutingSlipDelivery">
      <summary>Specifies the routing delivery method.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRoutingSlipDelivery.xlAllAtOnce">
      <summary>Deliver to all recipients simultaneously.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRoutingSlipDelivery.xlOneAfterAnother">
      <summary>Deliver to recipients one after another.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlRoutingSlipStatus">
      <summary>Specifies the status of the routing slip.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRoutingSlipStatus.xlNotYetRouted">
      <summary>Routing slip has not yet been sent.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRoutingSlipStatus.xlRoutingComplete">
      <summary>Routing is complete.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRoutingSlipStatus.xlRoutingInProgress">
      <summary>Routing is in progress.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlRowCol">
      <summary>Specifies whether the values corresponding to a particular data series are in rows or columns.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns">
      <summary>Data series is in a row.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows">
      <summary>Data series is in a column.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlRunAutoMacro">
      <summary>Specifies the automatic macro to run.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRunAutoMacro.xlAutoActivate">
      <summary>Auto_Activate macros</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRunAutoMacro.xlAutoClose">
      <summary>Auto_Close macros</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRunAutoMacro.xlAutoDeactivate">
      <summary>Auto_Deactivate macros</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlRunAutoMacro.xlAutoOpen">
      <summary>Auto_Open macros</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSaveAction">
      <summary>Specifies during file close if the file will be saved.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSaveAction.xlDoNotSaveChanges">
      <summary>Changes will not be saved.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSaveAction.xlSaveChanges">
      <summary>Changes will be saved.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSaveAsAccessMode">
      <summary>Specifies the access mode for the Save As function.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlExclusive">
      <summary>(exclusive mode)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange">
      <summary>default (don't change the access mode)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlShared">
      <summary>(share list)</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution">
      <summary>Specifies the way conflicts are to be resolved whenever a shared workbook is updated.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSaveConflictResolution.xlLocalSessionChanges">
      <summary>The local user's changes are always accepted.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSaveConflictResolution.xlOtherSessionChanges">
      <summary>The local user's changes are always rejected.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSaveConflictResolution.xlUserResolution">
      <summary>A dialog box asks the user to resolve the conflict.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlScaleType">
      <summary>Specifies the scale type of the value axis.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlScaleType.xlScaleLinear">
      <summary>Linear.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlScaleType.xlScaleLogarithmic">
      <summary>Logarithmic.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSearchDirection">
      <summary>Specifies the search direction when searching a range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSearchDirection.xlNext">
      <summary>Search for next matching value in range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSearchDirection.xlPrevious">
      <summary>Search for previous matching value in range.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSearchOrder">
      <summary>Specifies the order in which to search the range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSearchOrder.xlByColumns">
      <summary>Searches down through a column, then moves to the next column.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSearchOrder.xlByRows">
      <summary>Searches across a row, then moves to the next row.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSearchWithin">
      <summary>Specifies the extent of the search for the range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSearchWithin.xlWithinSheet">
      <summary>Limit search to current sheet.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSearchWithin.xlWithinWorkbook">
      <summary>Search whole workbook.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSheetType">
      <summary>Specifies the worksheet type.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSheetType.xlChart">
      <summary>Chart.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSheetType.xlDialogSheet">
      <summary>Dialog sheet.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSheetType.xlExcel4IntlMacroSheet">
      <summary>Excel version 4 international macro sheet.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSheetType.xlExcel4MacroSheet">
      <summary>Excel version 4 macro sheet.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSheetType.xlWorksheet">
      <summary>Worksheet.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSheetVisibility">
      <summary>Specifies whether the object is visible.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSheetVisibility.xlSheetVisible">
      <summary>Displays the sheet.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSheetVisibility.xlSheetHidden">
      <summary>Hides the worksheet which the user can unhide via menu.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSheetVisibility.xlSheetVeryHidden">
      <summary>Hides the object so that the only way for you to make it visible again is by setting this property to True (the user cannot make the object visible).</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSizeRepresents">
      <summary>Specifies what the bubble size represents on a bubble chart.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSizeRepresents.xlSizeIsWidth">
      <summary>Width of the bubble.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSizeRepresents.xlSizeIsArea">
      <summary>Area of the bubble.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSlicerCrossFilterType">
      <summary>Specifies the type of cross filtering used by the specified slicer cache and how it is visualized.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSlicerCrossFilterType.xlSlicerNoCrossFilter">
      <summary>Cross filtering is turned off entirely, so all tiles are displayed and active (not dimmed) regardless of filtering selections in other slicers.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSlicerCrossFilterType.xlSlicerCrossFilterShowItemsWithDataAtTop">
      <summary>Cross filtering is turned on for this slicer cache, any tile with no data for a filtering selection in other slicers connected to the same data source will be dimmed. Additionally, tiles with data are moved to the top in the slicer. (Default)</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSlicerCrossFilterType.xlSlicerCrossFilterShowItemsWithNoData">
      <summary>Cross filtering is turned on for this slicer cache, any tile with no data for a filtering selection in other slicers connected to the same data source will be dimmed.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSlicerSort">
      <summary>Specifies whether items displayed in the slicer are sorted, and if they are sorted, whether they are sorted in ascending or descending order by item captions.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSlicerSort.xlSlicerSortDataSourceOrder">
      <summary>Slicer items are displayed in the order provided by the data source.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSlicerSort.xlSlicerSortAscending">
      <summary>Slicer items are sorted in ascending order by item captions.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSlicerSort.xlSlicerSortDescending">
      <summary>Slicer items are sorted in descending order by item captions.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSmartTagControlType">
      <summary>Specifies the type of Smart Document control displayed in the Document Actions task pane.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlSmartTag">
      <summary>Smart tag.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlLink">
      <summary>Link.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlHelp">
      <summary>Help text.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlHelpURL">
      <summary>Absolute URL to Help file.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlSeparator">
      <summary>Separator.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlButton">
      <summary>Button.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlLabel">
      <summary>Label.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlImage">
      <summary>Image.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlCheckbox">
      <summary>Check box.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlTextbox">
      <summary>Text box.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlListbox">
      <summary>List box.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlCombo">
      <summary>Combo box.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlActiveX">
      <summary>ActiveX control.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlRadioGroup">
      <summary>Radio button (option button) group.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSmartTagDisplayMode">
      <summary>Specifies the display features for smart tags.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSmartTagDisplayMode.xlIndicatorAndButton">
      <summary>Display the indicator and button for smart tags.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSmartTagDisplayMode.xlDisplayNone">
      <summary>Nothing is displayed for smart tags.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSmartTagDisplayMode.xlButtonOnly">
      <summary>Displays only the button for smart tags.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSortDataOption">
      <summary>Specifies how to sort text.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal">
      <summary>default. Sorts numeric and text data separately.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortTextAsNumbers">
      <summary>Treat text as numeric data for the sort.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSortMethod">
      <summary>Specifies the type of sort.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin">
      <summary>default. Phonetic Chinese sort order for characters.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSortMethod.xlStroke">
      <summary>Sorting by the quantity of strokes in each character.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSortMethodOld">
      <summary>Specifies how to sort when using East Asian sorting methods.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSortMethodOld.xlCodePage">
      <summary>Sort by code page.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSortMethodOld.xlSyllabary">
      <summary>Sort phonetically.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSortOn">
      <summary>Specifies the parameter on which the data should be sorted.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSortOn.xlSortOnValues">
      <summary>Values.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSortOn.xlSortOnCellColor">
      <summary>Cell color.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSortOn.xlSortOnFontColor">
      <summary>Font color.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSortOn.xlSortOnIcon">
      <summary>Icon.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSortOrder">
      <summary>Specifies the sort order for the specified field or range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending">
      <summary>default. Sorts the specified field in ascending order.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSortOrder.xlDescending">
      <summary>Sorts the specified field in descending order.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSortOrientation">
      <summary>Specifies the sort orientation.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows">
      <summary>default. Sorts by row.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortColumns">
      <summary>Sorts by column.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSortType">
      <summary>Specifies which elements are to be sorted. Use this argument only when sorting PivotTable reports.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSortType.xlSortLabels">
      <summary>Sorts the PivotTable report by labels.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSortType.xlSortValues">
      <summary>Sorts the PivotTable report by values.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSourceType">
      <summary>Identifies the source object.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSourceType.xlSourceWorkbook">
      <summary>A workbook.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSourceType.xlSourceSheet">
      <summary>An entire worksheet.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSourceType.xlSourcePrintArea">
      <summary>A range of cells selected for printing.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSourceType.xlSourceAutoFilter">
      <summary>An AutoFilter range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSourceType.xlSourceRange">
      <summary>A range of cells.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSourceType.xlSourceChart">
      <summary>A chart.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSourceType.xlSourcePivotTable">
      <summary>A PivotTable report.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSourceType.xlSourceQuery">
      <summary>A query table (external data range).</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSpanishModes">
      <summary>Specifies the mode for checking the spelling of Spanish.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSpanishModes.xlSpanishTuteoOnly">
      <summary>Tuteo verb forms only.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSpanishModes.xlSpanishTuteoAndVoseo">
      <summary>Tuteo and Voseo verb forms.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSpanishModes.xlSpanishVoseoOnly">
      <summary>Voseo verb forms only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSparklineRowCol">
      <summary>Specifies how to plot the sparkline when the data on which it is based is in a square-shaped range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSparklineRowCol.xlSparklineNonSquare">
      <summary>The sparkline is not bound to data in a square-shaped range.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSparklineRowCol.xlSparklineRowsSquare">
      <summary>Plot the data by rows.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSparklineRowCol.xlSparklineColumnsSquare">
      <summary>Plot the data by columns.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSparkScale">
      <summary>Specifies how the minimum or maximum value of the vertical axis of the sparkline is scaled relative to other sparklines in the group.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSparkScale.xlSparkScaleGroup">
      <summary>The minimum or maximum value for the vertical axes of all of the sparklines in the group have the same value.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSparkScale.xlSparkScaleSingle">
      <summary>The minimum or maximum value for the vertical axis of each sparkline in the group is automatically set to its own calculated value.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSparkScale.xlSparkScaleCustom">
      <summary>The minimum or maximum value for the vertical axis of the sparkline has a user-defined value.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSparkType">
      <summary>Specifies the type of sparkline.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSparkType.xlSparkLine">
      <summary>A line chart sparkline.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSparkType.xlSparkColumn">
      <summary>A column chart sparkline.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSparkType.xlSparkColumnStacked100">
      <summary>A win/loss chart sparkline.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSpeakDirection">
      <summary>Specifies the order in which the cells are spoken.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSpeakDirection.xlSpeakByRows">
      <summary>Reads across a row, then moves to the next row.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSpeakDirection.xlSpeakByColumns">
      <summary>Reads down a column, then moves to the next column.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSpecialCellsValue">
      <summary>Specifies cells with a particular type of value to include in the result.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSpecialCellsValue.xlErrors">
      <summary>Cells with errors.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSpecialCellsValue.xlLogical">
      <summary>Cells with logical values.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSpecialCellsValue.xlNumbers">
      <summary>Cells with numeric values.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSpecialCellsValue.xlTextValues">
      <summary>Cells with text.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlStdColorScale">
      <summary>Specifies the standard color scale.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlStdColorScale.xlColorScaleRYG">
      <summary>RYG.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlStdColorScale.xlColorScaleGYR">
      <summary>GYR.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlStdColorScale.xlColorScaleBlackWhite">
      <summary>Black over White.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlStdColorScale.xlColorScaleWhiteBlack">
      <summary>White over Black.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSubscribeToFormat">
      <summary>Specifies the format to use when subscribing to a published edition.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSubscribeToFormat.xlSubscribeToPicture">
      <summary>Picture.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSubscribeToFormat.xlSubscribeToText">
      <summary>Text.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSubtototalLocationType">
      <summary>Specifies where the subtotal will be displayed on the worksheet.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSubtototalLocationType.xlAtTop">
      <summary>Subtotal will be on the top.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSubtototalLocationType.xlAtBottom">
      <summary>Subtotal will be on the bottom.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSummaryColumn">
      <summary>Specifies the location of the summary columns in the outline.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSummaryColumn.xlSummaryOnLeft">
      <summary>The summary column will be positioned to the left of the detail columns in the outline.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSummaryColumn.xlSummaryOnRight">
      <summary>The summary column will be positioned to the right of the detail columns in the outline.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSummaryReportType">
      <summary>Specifies the type of summary to be created for scenarios.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSummaryReportType.xlSummaryPivotTable">
      <summary>Display scenarios in a PivotTable report.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSummaryReportType.xlStandardSummary">
      <summary>List scenarios side by side.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlSummaryRow">
      <summary>Specifies the location of the summary rows in the outline.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSummaryRow.xlSummaryAbove">
      <summary>The summary row will be positioned above the detail rows in the outline.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlSummaryRow.xlSummaryBelow">
      <summary>The summary row will be positioned below the detail rows in the outline.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlTableStyleElementType">
      <summary>Specifies the table style element used.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlWholeTable">
      <summary>Whole Table</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlHeaderRow">
      <summary>Header row</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlTotalRow">
      <summary>Total Row</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlGrandTotalRow">
      <summary>Grand total row</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlFirstColumn">
      <summary>First column</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlLastColumn">
      <summary>Last column</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlGrandTotalColumn">
      <summary>Grand total column</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlRowStripe1">
      <summary>Row Stripe1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlRowStripe2">
      <summary>Row Stripe2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlColumnStripe1">
      <summary>Column Stripe1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlColumnStripe2">
      <summary>Column Stripe2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlFirstHeaderCell">
      <summary>First header cell</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlLastHeaderCell">
      <summary>Last header cell</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlFirstTotalCell">
      <summary>First total cell</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlLastTotalCell">
      <summary>Last total cell</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlSubtotalColumn1">
      <summary>Subtotal Column1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlSubtotalColumn2">
      <summary>Subtotal Column2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlSubtotalColumn3">
      <summary>Subtotal Column3</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlSubtotalRow1">
      <summary>Subtotal Row1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlSubtotalRow2">
      <summary>Subtotal Row2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlSubtotalRow3">
      <summary>Subtotal Row3</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlBlankRow">
      <summary>Blank row</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlColumnSubheading1">
      <summary>Column Subheading1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlColumnSubheading2">
      <summary>Column Subheading2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlColumnSubheading3">
      <summary>Column Subheading3</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlRowSubheading1">
      <summary>Row Subheading1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlRowSubheading2">
      <summary>Row Subheading2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlRowSubheading3">
      <summary>Row Subheading3</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlPageFieldLabels">
      <summary>Page field labels</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlPageFieldValues">
      <summary>Page field values</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlSlicerUnselectedItemWithData">
      <summary>An item that is not selected that contains data.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlSlicerUnselectedItemWithNoData">
      <summary>An item that is not selected that does not contain data.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlSlicerSelectedItemWithData">
      <summary>A selected item that contains data.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlSlicerSelectedItemWithNoData">
      <summary>A selected item that does not contain data.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlSlicerHoveredUnselectedItemWithData">
      <summary>An item, hovered over by the user, that is not selected and that contains data.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlSlicerHoveredSelectedItemWithData">
      <summary>A selected item, hovered over by the user, that contains data.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlSlicerHoveredUnselectedItemWithNoData">
      <summary>A selected item, hovered over by the user, that is not selected and that does not contain data.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTableStyleElementType.xlSlicerHoveredSelectedItemWithNoData">
      <summary>A selected item, hovered over by the user, that does not contain data.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlTabPosition">
      <summary>Specifies the first or last tab position.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTabPosition.xlTabPositionFirst">
      <summary>First tab position.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTabPosition.xlTabPositionLast">
      <summary>Last tab position.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlTextParsingType">
      <summary>Specifies the column format for the data in the text file that you’re importing into a query table.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited">
      <summary>default. Indicates the file is delimited by delimiter characters</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTextParsingType.xlFixedWidth">
      <summary>Indicates that the data in the file is arranged in columns of fixed widths.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlTextQualifier">
      <summary>Specifies the delimiter to use to specify text.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote">
      <summary>Double quote (").</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierNone">
      <summary>No delimiter.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierSingleQuote">
      <summary>Single quote (').</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlTextVisualLayoutType">
      <summary>Specifies whether the visual layout of the text being imported is left-to-right or right-to-left.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTextVisualLayoutType.xlTextVisualLTR">
      <summary>Left to right.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTextVisualLayoutType.xlTextVisualRTL">
      <summary>Right to left.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlThemeColor">
      <summary>Specifies the theme color to be used.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlThemeColor.xlThemeColorDark1">
      <summary>Dark1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlThemeColor.xlThemeColorLight1">
      <summary>Light1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlThemeColor.xlThemeColorDark2">
      <summary>Dark2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlThemeColor.xlThemeColorLight2">
      <summary>Light2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlThemeColor.xlThemeColorAccent1">
      <summary>Accent1</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlThemeColor.xlThemeColorAccent2">
      <summary>Accent2</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlThemeColor.xlThemeColorAccent3">
      <summary>Accent3</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlThemeColor.xlThemeColorAccent4">
      <summary>Accent4</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlThemeColor.xlThemeColorAccent5">
      <summary>Accent5</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlThemeColor.xlThemeColorAccent6">
      <summary>Accent6</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlThemeColor.xlThemeColorHyperlink">
      <summary>Hyperlink</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlThemeColor.xlThemeColorFollowedHyperlink">
      <summary>Followed hyperlink</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlThemeFont">
      <summary>Specifies the theme font to use.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlThemeFont.xlThemeFontNone">
      <summary>Do not use any theme font.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlThemeFont.xlThemeFontMajor">
      <summary>Major.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlThemeFont.xlThemeFontMinor">
      <summary>Minor.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlThreadMode">
      <summary>Specifies the control over the multi-threaded calculation mode.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlThreadMode.xlThreadModeAutomatic">
      <summary>Multi-threaded calculation mode is automatic.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlThreadMode.xlThreadModeManual">
      <summary>Multi-threaded calculation mode is manual.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlTickLabelOrientation">
      <summary>Specifies the text orientation for tick-mark labels.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTickLabelOrientation.xlTickLabelOrientationAutomatic">
      <summary>Text orientation set by Excel.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTickLabelOrientation.xlTickLabelOrientationDownward">
      <summary>Text runs down.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTickLabelOrientation.xlTickLabelOrientationHorizontal">
      <summary>Characters run horizontally.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTickLabelOrientation.xlTickLabelOrientationUpward">
      <summary>Text runs up.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTickLabelOrientation.xlTickLabelOrientationVertical">
      <summary>Characters run vertically.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlTickLabelPosition">
      <summary>Specifies the position of tick-mark labels on the specified axis.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTickLabelPosition.xlTickLabelPositionHigh">
      <summary>Top or right side of the chart.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTickLabelPosition.xlTickLabelPositionLow">
      <summary>Bottom or left side of the chart.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTickLabelPosition.xlTickLabelPositionNextToAxis">
      <summary>Next to axis (where axis is not at either side of the chart).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTickLabelPosition.xlTickLabelPositionNone">
      <summary>No tick marks.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlTickMark">
      <summary>Specifies the position of major and minor tick marks for an axis.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTickMark.xlTickMarkCross">
      <summary>Crosses the axis.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTickMark.xlTickMarkInside">
      <summary>Inside the axis.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTickMark.xlTickMarkNone">
      <summary>No mark.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTickMark.xlTickMarkOutside">
      <summary>Outside the axis.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlTimePeriods">
      <summary>Specifies the time period.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTimePeriods.xlToday">
      <summary>Today</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTimePeriods.xlYesterday">
      <summary>Yesterday</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTimePeriods.xlLast7Days">
      <summary>Last 7 days</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTimePeriods.xlThisWeek">
      <summary>This week</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTimePeriods.xlLastWeek">
      <summary>Last week</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTimePeriods.xlLastMonth">
      <summary>Last month</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTimePeriods.xlTomorrow">
      <summary>Tomorrow</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTimePeriods.xlNextWeek">
      <summary>Next week</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTimePeriods.xlNextMonth">
      <summary>Next month</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTimePeriods.xlThisMonth">
      <summary>This month</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlTimeUnit">
      <summary>Specifies unit of time for chart axis and data series.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTimeUnit.xlDays">
      <summary>Days.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTimeUnit.xlMonths">
      <summary>Months.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTimeUnit.xlYears">
      <summary>Years.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlToolbarProtection">
      <summary>Specifies which properties of a toolbar are restricted. Options may be combined using Or.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlToolbarProtection.xlNoButtonChanges">
      <summary>No button changes permitted.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlToolbarProtection.xlNoChanges">
      <summary>No changes of any kind.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlToolbarProtection.xlNoDockingChanges">
      <summary>No changes to toolbar's docking position.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlToolbarProtection.xlToolbarProtectionNone">
      <summary>All changes permitted.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlToolbarProtection.xlNoShapeChanges">
      <summary>No changes to toolbar shape.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlTopBottom">
      <summary>Specifies the top 10 values from the top or bottom of a series of values.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTopBottom.xlTop10Top">
      <summary>Top 10 values</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTopBottom.xlTop10Bottom">
      <summary>Top 10 bottom values</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlTotalsCalculation">
      <summary>Specifies the type of calculation in the Totals row of a list column.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTotalsCalculation.xlTotalsCalculationNone">
      <summary>No calculation.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTotalsCalculation.xlTotalsCalculationSum">
      <summary>Sum.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTotalsCalculation.xlTotalsCalculationAverage">
      <summary>Average.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTotalsCalculation.xlTotalsCalculationCount">
      <summary>Count of non-empty cells.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTotalsCalculation.xlTotalsCalculationCountNums">
      <summary>Count of cells with numeric values.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTotalsCalculation.xlTotalsCalculationMin">
      <summary>Minimum value.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTotalsCalculation.xlTotalsCalculationMax">
      <summary>Maximum value.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTotalsCalculation.xlTotalsCalculationStdDev">
      <summary>Standard deviation.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTotalsCalculation.xlTotalsCalculationVar">
      <summary>Variance.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTotalsCalculation.xlTotalsCalculationCustom">
      <summary>Custom calculation</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlTrendlineType">
      <summary>Specifies how the trendline that smoothes out fluctuations in the data is calculated.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTrendlineType.xlExponential">
      <summary>Uses an equation to calculate the least squares fit through points.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTrendlineType.xlLinear">
      <summary>Uses the linear equation y = mx + b to calculate the least squares fit through points.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTrendlineType.xlLogarithmic">
      <summary>Uses the equation y = c ln x + b to calculate the least squares fit through points.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTrendlineType.xlMovingAvg">
      <summary>Uses a sequence of averages computed from parts of the data series. The number of points equals the total number of points in the series less the number specified for the period.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTrendlineType.xlPolynomial">
      <summary>Uses an equation to calculate the least squares fit through points.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlTrendlineType.xlPower">
      <summary>Uses an equation to calculate the least squares fit through points.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlUnderlineStyle">
      <summary>Specifies the type of underline applied to a font.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlUnderlineStyle.xlUnderlineStyleDouble">
      <summary>Double thick underline.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlUnderlineStyle.xlUnderlineStyleDoubleAccounting">
      <summary>Two thin underlines placed close together.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlUnderlineStyle.xlUnderlineStyleNone">
      <summary>No underlining.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlUnderlineStyle.xlUnderlineStyleSingle">
      <summary>Single underlining.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlUnderlineStyle.xlUnderlineStyleSingleAccounting">
      <summary>Not supported.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlUpdateLinks">
      <summary>Specifies a workbook's setting for updating embedded OLE links.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlUpdateLinks.xlUpdateLinksUserSetting">
      <summary>Embedded OLE links are updated according to the user's settings for the specified workbook.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlUpdateLinks.xlUpdateLinksNever">
      <summary>Embedded OLE links are never updated for the specified workbook.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlUpdateLinks.xlUpdateLinksAlways">
      <summary>Embedded OLE links are always updated for the specified workbook.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlVAlign">
      <summary>Specifies the vertical alignment for the object.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlVAlign.xlVAlignBottom">
      <summary>Bottom.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlVAlign.xlVAlignCenter">
      <summary>Center.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlVAlign.xlVAlignDistributed">
      <summary>Distributed.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlVAlign.xlVAlignJustify">
      <summary>Justify.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlVAlign.xlVAlignTop">
      <summary>Top.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlWBATemplate">
      <summary>Specifies the type of workbook to create.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlWBATemplate.xlWBATChart">
      <summary>Chart.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlWBATemplate.xlWBATExcel4IntlMacroSheet">
      <summary>Excel version 4 macro.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlWBATemplate.xlWBATExcel4MacroSheet">
      <summary>Excel version 4 international macro.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlWBATemplate.xlWBATWorksheet">
      <summary>Worksheet.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlWebFormatting">
      <summary>Specifies how much formatting from a Web page, if any, is applied when a Web page is imported into a query table.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlWebFormatting.xlWebFormattingAll">
      <summary>All formatting is imported.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlWebFormatting.xlWebFormattingRTF">
      <summary>Rich Text Format compatible formatting is imported.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlWebFormatting.xlWebFormattingNone">
      <summary>No formatting is imported.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlWebSelectionType">
      <summary>Specifies whether an entire Web page, all tables on the Web page, or only a specific table is imported into a query table.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlWebSelectionType.xlEntirePage">
      <summary>Entire page.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlWebSelectionType.xlAllTables">
      <summary>All tables.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlWebSelectionType.xlSpecifiedTables">
      <summary>Specified tables.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlWindowState">
      <summary>Specifies the state of the window.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlWindowState.xlMaximized">
      <summary>Maximized.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlWindowState.xlMinimized">
      <summary>Minimized.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlWindowState.xlNormal">
      <summary>Normal.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlWindowType">
      <summary>Specifies how the chart is displayed.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlWindowType.xlChartAsWindow">
      <summary>The chart will open in a new window.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlWindowType.xlChartInPlace">
      <summary>The chart will be displayed on the current worksheet.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlWindowType.xlClipboard">
      <summary>The chart is copied to the clipboard.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlWindowType.xlInfo">
      <summary>This constant has been deprecated.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlWindowType.xlWorkbook">
      <summary>This constant applies to Macintosh only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlWindowView">
      <summary>Specifies the view showing in the window.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlWindowView.xlNormalView">
      <summary>Normal.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlWindowView.xlPageBreakPreview">
      <summary>Page break preview.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlWindowView.xlPageLayoutView">
      <summary>Page layout view.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlXLMMacroType">
      <summary>Specifies, in a Microsoft Excel version 4 macro worksheet, what type of macro a name refers to or whether the name refers to a macro.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlXLMMacroType.xlCommand">
      <summary>Custom command.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlXLMMacroType.xlFunction">
      <summary>Custom function.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlXLMMacroType.xlNotXLM">
      <summary>Not a macro.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlXmlExportResult">
      <summary>Specifies the results of the save or export operation.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlXmlExportResult.xlXmlExportSuccess">
      <summary>The XML data file was successfully exported.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlXmlExportResult.xlXmlExportValidationFailed">
      <summary>The contents of the XML data file do not match the specified schema map.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlXmlImportResult">
      <summary>Specifies the results of the refresh or import operation.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlXmlImportResult.xlXmlImportSuccess">
      <summary>The XML data file was successfully imported.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlXmlImportResult.xlXmlImportElementsTruncated">
      <summary>The contents of the specified XML data file have been truncated because the XML data file is too large for the worksheet.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlXmlImportResult.xlXmlImportValidationFailed">
      <summary>The contents of the XML data file do not match the specified schema map.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlXmlLoadOption">
      <summary>Specifies how Excel opens the XML data file.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlXmlLoadOption.xlXmlLoadPromptUser">
      <summary>Prompts the user to choose how to open the file.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlXmlLoadOption.xlXmlLoadOpenXml">
      <summary>Opens the XML data file. The contents of the file will be flattened.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlXmlLoadOption.xlXmlLoadImportToList">
      <summary>Places the contents of the XML data file in an XML list.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlXmlLoadOption.xlXmlLoadMapXml">
      <summary>Displays the schema of the XML data file in the XML Structure task pane.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XlYesNoGuess">
      <summary>Specifies whether or not the first row contains headers.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess">
      <summary>Excel determines whether there’s a header, and to determine where it is, if there is one.</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo">
      <summary>default. (The entire range should be sorted).</summary>
    </member>
    <member name="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlYes">
      <summary>(The entire range should not be sorted).</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XmlDataBinding">
      <summary>Represents the connection to the source data for an <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlDataBinding._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlDataBinding.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.XmlDataBinding.ClearSettings">
      <summary>Removes the specified data binding.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlDataBinding.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.XmlDataBinding.LoadSettings(System.String)">
      <summary>Initializes the specified data binding with settings from an XML data file or a Data Retrieval Service Connection (.uxdc) file.</summary>
      <param name="Url">Required String. The path to the XML data or Microsoft Office XML Data Source (.uxdc) file. The path is specified in the Uniform Resource Locator (URL) or universal naming convention (UNC) format.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlDataBinding.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.XmlDataBinding.Refresh">
      <summary>Retrieves XML data using the current connection settings of the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlDataBinding" /> object. Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlDataBinding.SourceUrl">
      <summary>Returns a String that represents the path to the XML data file, the Data Retrieval Service Connection (.uxdc) file, or the Web service that provides the source data for the specified data binding. Read-only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XmlMap">
      <summary>Represents an XML map that has been added to a workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlMap._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlMap.AdjustColumnWidth">
      <summary>True if the column widths are automatically adjusted for the best fit each time you refresh the specified query table or XML map. False if the column widths aren’t automatically adjusted with each refresh. The default value is True. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlMap.AppendOnImport">
      <summary>True if you want to append new rows to XML lists that are bound to the specified schema map when you are importing new data or refreshing an existing connection. False if you want to overwrite the contents of cells. The default value is False. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlMap.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlMap.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlMap.DataBinding">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlDataBinding" /> object that represents the binding associated with the specified schema map. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.XmlMap.Delete">
      <summary>Removes the specified XML map from the workbook.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)">
      <summary>Exports the contents of cells mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object to an XML data file. Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" />.</summary>
      <param name="Url">Required String. The path and filename of the XML data file to export to.</param>
      <param name="Overwrite">Required Boolean. Set to True to overwrite the file specified in the <paramref name="URL" /> parameter if the file exists. The default value if False.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)">
      <summary>Exports the contents of cells mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object to a String variable. Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" />.</summary>
      <param name="Data">Required String. The variable to export the data to.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)">
      <summary>Imports data from the specified XML data file into cells that have been mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object. Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</summary>
      <param name="Url">Required String. The path to the XML data to import. The path can be specified in Universal Naming convention (UNC) or Uniform Resource Locator (URL) format. The file can be an XML data file or a valid Office XML data Source Connection (.uxdc) file.</param>
      <param name="Overwrite">Optional Object. Set to True to overwrite existing data. Set to False to append to existing data. The default value is False.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.XmlMap.ImportXml(System.String,System.Object)">
      <summary>Imports XML data from a String variable into cells that have been mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object. Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" /> constant.</summary>
      <param name="XmlData">Required String. The string that contains the XML data to import.</param>
      <param name="Overwrite">Optional Boolean value. Specifies whether to overwrite the contents of cells that are currently mapped to the specified XML map. Set to True to overwrite the cells; set to False to append the data to the existing range. If this parameter is not specified, the current value of the <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.AppendOnImport" /> property of the XML map determines whether the contents of cells are overwritten or not.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlMap.IsExportable">
      <summary>Returns True if Microsoft Excel can use the <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> objects in the specified schema map to export XML data and if all XML lists mapped to the specified schema map can be exported. Read-only Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlMap.Name">
      <summary>Returns or sets the friendly name used to uniquely identify a mapping in the workbook. Read/write String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlMap.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlMap.PreserveColumnFilter">
      <summary>Returns or sets whether filtering is preserved when the specified XML map is refreshed. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlMap.PreserveNumberFormatting">
      <summary>True if number formatting on cells mapped to the specified XML schema map will be preserved when the schema map is refreshed. The default value is False. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlMap.RootElementName">
      <summary>Returns a String that represents the name of the root element for the specified XML schema map. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlMap.RootElementNamespace">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespace" /> object that represents the root element for the specified XML schema map. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlMap.SaveDataSourceDefinition">
      <summary>True if the data source definition of the specified XML schema map is saved with the workbook. The default value is True. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlMap.Schemas">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlSchemas" /> collection that represents the schemas that the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object contains. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlMap.ShowImportExportValidationErrors">
      <summary>Returns or sets whether to display a dialog box that details schema-validation errors when data is imported or exported through the specified XML schema map. The default value is False. Read/write Boolean.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlMap.WorkbookConnection">
      <summary>Retuns a new connection for the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object. Read-only.</summary>
      <returns>
        <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" />
      </returns>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XmlMaps">
      <summary>Represents the collection of <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> objects that have been added to a workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlMaps._Default(System.Object)"></member>
    <member name="M:Microsoft.Office.Interop.Excel.XmlMaps.Add(System.String,System.Object)">
      <summary>Adds an XML map to the specified workbook. Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</summary>
      <param name="Schema">Required String. The schema to be added as an XML map. The string can be a path to a schema file, or to the schema itself. The path can be specified in the Universal Naming Convention (UNC) or Uniform Resource Locator (URL) format.</param>
      <param name="RootElementName">Optional String. The name of the root element. This argument can be ignored if the schema contains only one root element.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlMaps.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlMaps.Count">
      <summary>Returns the number of objects in the collection. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlMaps.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.XmlMaps.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlMaps.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlMaps.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XmlNamespace">
      <summary>Represents a namespace that has been added to a workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlNamespace._Default"></member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlNamespace.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlNamespace.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlNamespace.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlNamespace.Prefix">
      <summary>Returns a String that represents the prefix for the specified XML namespace. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlNamespace.Uri">
      <summary>Returns a String that represents the Uniform Resource Identifier (URI) for the specified XML namespace. Read-only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XmlNamespaces">
      <summary>Represents the collection of <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespace" /> objects in a workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlNamespaces._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlNamespaces.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlNamespaces.Count">
      <summary>Returns the number of objects in the collection. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlNamespaces.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.XmlNamespaces.GetEnumerator"></member>
    <member name="M:Microsoft.Office.Interop.Excel.XmlNamespaces.InstallManifest(System.String,System.Object)">
      <summary>Installs the specified XML expansion pack on the user's computer, making an XML smart document solution available to one or more users.</summary>
      <param name="Path">Required String. The path and file name of the XML expansion pack.</param>
      <param name="InstallForAllUsers">Optional Boolean. True installs the XML expansion pack and makes it available to all users on a machine. False makes the XML expansion pack available for the current user only. Default is False.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlNamespaces.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlNamespaces.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlNamespaces.Value">
      <summary>Returns a String that represents the XML namespaces that have been added to the workbook.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XmlSchema">
      <summary>Represents an XML schema contained by an <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlSchema.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlSchema.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlSchema.Name">
      <summary>Returns the friendly name used to identify an XML schema in an <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object. Read-only String.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlSchema.Namespace">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespace" /> object that represents the target namespace for the specified schema. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlSchema.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlSchema.XML">
      <summary>Returns a String representing the content of the specified schema.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XmlSchemas">
      <summary>Represents the collection of <see cref="T:Microsoft.Office.Interop.Excel.XmlSchema" /> objects contained by an <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlSchemas._Default(System.Object)"></member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlSchemas.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlSchemas.Count">
      <summary>Returns the number of objects in the collection. Read-only Integer.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlSchemas.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.XmlSchemas.GetEnumerator"></member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlSchemas.Item(System.Object)">
      <summary>Returns a single object from a collection.</summary>
      <param name="Index">Required Object. The name or index number of the object.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XmlSchemas.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.XPath">
      <summary>Represents an XPath that has been mapped to a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> or <see cref="T:Microsoft.Office.Interop.Excel.ListColumn" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XPath._Default">
      <summary>Reserved for internal use.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XPath.Application">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application. Read-only.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.XPath.Clear">
      <summary>Clears the schema mapping from the cells mapped to the specified XPath.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XPath.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created. If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XPath.Map">
      <summary>Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object that represents the schema map that contains the specified <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XPath.Parent">
      <summary>Returns the parent object for the specified object. Read-only.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XPath.Repeating">
      <summary>Returns True if the specified <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> object is mapped to an XML list; returns False if the XPath object is mapped to a single cell. Read-only Boolean.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.XPath.SetValue(Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Object,System.Object)">
      <summary>Maps the specified <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> object to a <see cref="T:Microsoft.Office.Interop.Excel.ListColumn" /> object or <see cref="T:Microsoft.Office.Interop.Excel.Range" /> collection. If the XPath object has previously been mapped to the ListColumn object or Range collection, the SetValue method sets the properties of the XPath object.</summary>
      <param name="Map">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />. The schema map that contains information about the XPath object.</param>
      <param name="XPath">Required String. A valid XPath statement.</param>
      <param name="SelectionNamespace">Optional Object. Specifies any namespace prefixes used in the <paramref name="XPath" /> argument. This argument can be omitted if the XPath object doesn't contain any prefixes, or if the XPath object uses the Microsoft Excel prefixes.</param>
      <param name="Repeating">Optional Boolean. Specifies whether the XPath object is to be bound to a column in an XML list, or mapped to a single cell. Set to True to bind the XPath object to a column in an XML list.</param>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.XPath.Value">
      <summary>Returns a String that represents the XPath for the specified object.</summary>
    </member>
  </members>
</doc>