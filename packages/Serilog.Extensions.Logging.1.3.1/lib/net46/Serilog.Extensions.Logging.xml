<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Serilog.Extensions.Logging</name>
    </assembly>
    <members>
        <member name="T:Serilog.SerilogLoggerFactoryExtensions">
            <summary>
            Extends <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> with Serilog configuration methods.
            </summary>
        </member>
        <member name="M:Serilog.SerilogLoggerFactoryExtensions.AddSerilog(Microsoft.Extensions.Logging.ILoggerFactory,Serilog.ILogger)">
            <summary>
            Add Serilog to the logging pipeline.
            </summary>
            <param name="factory">The logger factory to configure.</param>
            <param name="logger">The Serilog logger; if not supplied, the static <see cref="T:Serilog.Log"/> will be used.</param>
            <returns>The logger factory.</returns>
        </member>
        <member name="M:Serilog.SerilogLoggerFactoryExtensions.AddSerilog(Microsoft.Extensions.Logging.ILoggerFactory,Serilog.ILogger,System.Boolean)">
            <summary>
            Add Serilog to the logging pipeline.
            </summary>
            <param name="factory">The logger factory to configure.</param>
            <param name="logger">The Serilog logger; if not supplied, the static <see cref="T:Serilog.Log"/> will be used.</param>
            <param name="dispose">When true, dispose <paramref name="logger"/> when the framework disposes the provider. If the
            logger is not specified but <paramref name="dispose"/> is true, the <see cref="M:Serilog.Log.CloseAndFlush"/> method will be
            called on the static <see cref="T:Serilog.Log"/> class instead.</param>
            <returns>The logger factory.</returns>
        </member>
        <member name="T:Serilog.Extensions.Logging.SerilogLoggerProvider">
            <summary>
            An <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider"/> that pipes events through Serilog.
            </summary>
        </member>
        <member name="M:Serilog.Extensions.Logging.SerilogLoggerProvider.#ctor(Serilog.ILogger,System.Boolean)">
            <summary>
            Construct a <see cref="T:Serilog.Extensions.Logging.SerilogLoggerProvider"/>.
            </summary>
            <param name="logger">A Serilog logger to pipe events through; if null, the static <see cref="T:Serilog.Log"/> class will be used.</param>
            <param name="dispose">If true, the provided logger or static log class will be disposed/closed when the provider is disposed.</param>
        </member>
        <member name="M:Serilog.Extensions.Logging.SerilogLoggerProvider.CreateLogger(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Serilog.Extensions.Logging.SerilogLoggerProvider.BeginScope``1(``0)">
            <inheritdoc />
        </member>
        <member name="M:Serilog.Extensions.Logging.SerilogLoggerProvider.Enrich(Serilog.Events.LogEvent,Serilog.Core.ILogEventPropertyFactory)">
            <inheritdoc />
        </member>
        <member name="M:Serilog.Extensions.Logging.SerilogLoggerProvider.Dispose">
            <inheritdoc />
        </member>
    </members>
</doc>
