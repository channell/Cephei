### YamlMime:ManagedReference
items:
- uid: Cephei.QL.BasisSwapModel
  commentId: T:Cephei.QL.BasisSwapModel
  id: BasisSwapModel
  parent: Cephei.QL
  children:
  - Cephei.QL.BasisSwapModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.BasisSwap.Type> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.Schedule> * Cephei.Cell.Generic.ICell<QLNet.IborIndex> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.Schedule> * Cephei.Cell.Generic.ICell<QLNet.IborIndex> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.IPricingEngine> * Cephei.Cell.Generic.ICell<QLNet.Date>)
  - Cephei.QL.BasisSwapModel.CASH(unit)
  - Cephei.QL.BasisSwapModel.EndDiscounts(Cephei.Cell.Generic.ICell<int>)
  - Cephei.QL.BasisSwapModel.Engine(unit)
  - Cephei.QL.BasisSwapModel.ErrorEstimate(unit)
  - Cephei.QL.BasisSwapModel.EvaluationDate(unit)
  - Cephei.QL.BasisSwapModel.FairLongSpread(unit)
  - Cephei.QL.BasisSwapModel.FairShortSpread(unit)
  - Cephei.QL.BasisSwapModel.float1DayCount(unit)
  - Cephei.QL.BasisSwapModel.float1Schedule(unit)
  - Cephei.QL.BasisSwapModel.float2DayCount(unit)
  - Cephei.QL.BasisSwapModel.float2Schedule(unit)
  - Cephei.QL.BasisSwapModel.Floating1Leg(unit)
  - Cephei.QL.BasisSwapModel.Floating1LegBPS(unit)
  - Cephei.QL.BasisSwapModel.Floating1LegNPV(unit)
  - Cephei.QL.BasisSwapModel.Floating1Schedule(unit)
  - Cephei.QL.BasisSwapModel.Floating2Leg(unit)
  - Cephei.QL.BasisSwapModel.Floating2LegBPS(unit)
  - Cephei.QL.BasisSwapModel.Floating2LegNPV(unit)
  - Cephei.QL.BasisSwapModel.Floating2Schedule(unit)
  - Cephei.QL.BasisSwapModel.iborIndex1(unit)
  - Cephei.QL.BasisSwapModel.IborIndex1(unit)
  - Cephei.QL.BasisSwapModel.iborIndex2(unit)
  - Cephei.QL.BasisSwapModel.IborIndex2(unit)
  - Cephei.QL.BasisSwapModel.IsExpired(unit)
  - Cephei.QL.BasisSwapModel.Leg(Cephei.Cell.Generic.ICell<int>)
  - Cephei.QL.BasisSwapModel.LegBPS(Cephei.Cell.Generic.ICell<int>)
  - Cephei.QL.BasisSwapModel.LegNPV(Cephei.Cell.Generic.ICell<int>)
  - Cephei.QL.BasisSwapModel.MaturityDate(unit)
  - Cephei.QL.BasisSwapModel.nominal(unit)
  - Cephei.QL.BasisSwapModel.Nominal(unit)
  - Cephei.QL.BasisSwapModel.NPV(unit)
  - Cephei.QL.BasisSwapModel.NpvDateDiscount(unit)
  - Cephei.QL.BasisSwapModel.Payer(Cephei.Cell.Generic.ICell<int>)
  - Cephei.QL.BasisSwapModel.PricingEngine(unit)
  - Cephei.QL.BasisSwapModel.Result(Cephei.Cell.Generic.ICell<string>)
  - Cephei.QL.BasisSwapModel.SetPricingEngine(Cephei.Cell.Generic.ICell<QLNet.IPricingEngine>)
  - Cephei.QL.BasisSwapModel.spread1(unit)
  - Cephei.QL.BasisSwapModel.Spread1(unit)
  - Cephei.QL.BasisSwapModel.spread2(unit)
  - Cephei.QL.BasisSwapModel.Spread2(unit)
  - Cephei.QL.BasisSwapModel.StartDate(unit)
  - Cephei.QL.BasisSwapModel.StartDiscounts(Cephei.Cell.Generic.ICell<int>)
  - Cephei.QL.BasisSwapModel.SwapType(unit)
  - Cephei.QL.BasisSwapModel.Type(unit)
  - Cephei.QL.BasisSwapModel.ValuationDate(unit)
  langs:
  - csharp
  - vb
  name: BasisSwapModel
  nameWithType: Cephei.QL.BasisSwapModel
  fullName: Cephei.QL.BasisSwapModel
  type: Class
  source:
    id: Cephei.QL.BasisSwapModel
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 35
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: >-
      [<AutoSerializable(true)>]

      type BasisSwapModel (Type:ICell<Type>, nominal:ICell<double>, float1Schedule:ICell<Schedule>, iborIndex1:ICell<IborIndex>, spread1:ICell<double>, float1DayCount:ICell<DayCounter>, float2Schedule:ICell<Schedule>, iborIndex2:ICell<IborIndex>, spread2:ICell<double>, float2DayCount:ICell<DayCounter>, pricingEngine:ICell<IPricingEngine>, evaluationDate:ICell<Date>)
          inherit Model<BasisSwap>
          interface IDictionary<string,ICell>
          interface ICollection<KeyValuePair<string,ICell>>
          interface IReadOnlyDictionary<string,ICell>
          interface IReadOnlyCollection<KeyValuePair<string,ICell>>
          interface IEnumerable<KeyValuePair<string,ICell>>
          interface IDictionary
          interface ICollection
          interface IEnumerable
          interface IObservable<ICell>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
          interface IObservable<ISession * Model * CellEvent * ICell * DateTime>
          interface IObservable<KeyValuePair<string,float>>
          interface IObservable<KeyValuePair<string,int>>
          interface IObservable<KeyValuePair<string,decimal>>
          interface ICell<BasisSwap>
          interface ICell
          interface ICellEvent
          interface IObservable<BasisSwap>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,BasisSwap>>>
          interface IObservable<ISession * ICell<BasisSwap> * CellEvent * ICell * DateTime>
          interface IObserver<BasisSwap>
    parameters:
    - id: Type
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BasisSwap.Type>
      attributes: []
    - id: nominal
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: float1Schedule
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Schedule>
      attributes: []
    - id: iborIndex1
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IborIndex>
      attributes: []
    - id: spread1
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: float1DayCount
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
    - id: float2Schedule
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Schedule>
      attributes: []
    - id: iborIndex2
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IborIndex>
      attributes: []
    - id: spread2
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: float2DayCount
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
    - id: pricingEngine
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IPricingEngine>
      attributes: []
    - id: evaluationDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    typeParameters: []
  inheritance:
  - TypeRef:System.Object
  - TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:Cephei.Cell.Model
  - TypeRef:Cephei.Cell.Generic.Model`1<QLNet.BasisSwap>
  implements:
  - TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BasisSwap>
  - TypeRef:Cephei.Cell.ICell
  - TypeRef:Cephei.Cell.ICellEvent
  - TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.ICollection
  - TypeRef:System.Collections.IDictionary
  - TypeRef:System.Collections.IEnumerable
  - TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.BasisSwap> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<QLNet.BasisSwap>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.BasisSwap>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  - TypeRef:System.IObserver`1<QLNet.BasisSwap>
  inheritedMembers:
  - Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  - Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  - Cephei.Cell.Generic.Model`1.OnError(exn)
  - Cephei.Cell.Generic.Model`1.OnNext('T)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  - Cephei.Cell.Generic.Model`1.Value(unit)
  - Cephei.Cell.Model.As(string)
  - Cephei.Cell.Model.Bind(unit)
  - Cephei.Cell.Model.Box(unit)
  - Cephei.Cell.Model.Change()
  - Cephei.Cell.Model.Create(Unit -> 'T * string)
  - Cephei.Cell.Model.CreateValue('T * string)
  - Cephei.Cell.Model.Dependants(unit)
  - Cephei.Cell.Model.Dispose(unit)
  - Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.HasFunction(unit)
  - Cephei.Cell.Model.HasValue(unit)
  - Cephei.Cell.Model.Item(string)
  - Cephei.Cell.Model.Mnemonic(unit)
  - Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  - Cephei.Cell.Model.Parent(unit)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  - Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  - Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  - Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  - Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  attributes:
  - type: Microsoft.FSharp.Core.AutoSerializableAttribute
    arguments:
    - type: System.Boolean
      value: true
    namedArguments: []
- uid: Cephei.QL.BasisSwapModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.BasisSwap.Type> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.Schedule> * Cephei.Cell.Generic.ICell<QLNet.IborIndex> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.Schedule> * Cephei.Cell.Generic.ICell<QLNet.IborIndex> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.IPricingEngine> * Cephei.Cell.Generic.ICell<QLNet.Date>)
  commentId: M:Cephei.QL.BasisSwapModel.#ctor(Cephei.Cell.Generic.ICell{QLNet.BasisSwap.Type},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{QLNet.Schedule},Cephei.Cell.Generic.ICell{QLNet.IborIndex},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{QLNet.DayCounter},Cephei.Cell.Generic.ICell{QLNet.Schedule},Cephei.Cell.Generic.ICell{QLNet.IborIndex},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{QLNet.DayCounter},Cephei.Cell.Generic.ICell{QLNet.IPricingEngine},Cephei.Cell.Generic.ICell{QLNet.Date})
  id: '#ctor(Cephei.Cell.Generic.ICell<QLNet.BasisSwap.Type> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.Schedule> * Cephei.Cell.Generic.ICell<QLNet.IborIndex> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.Schedule> * Cephei.Cell.Generic.ICell<QLNet.IborIndex> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.IPricingEngine> * Cephei.Cell.Generic.ICell<QLNet.Date>)'
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'new: ICell<Type> * ICell<double> * ICell<Schedule> * ICell<IborIndex> * ICell<double> * ICell<DayCounter> * ICell<Schedule> * ICell<IborIndex> * ICell<double> * ICell<DayCounter> * ICell<IPricingEngine> * ICell<Date> -> BasisSwapModel'
  nameWithType: 'new: ICell<Type> * ICell<double> * ICell<Schedule> * ICell<IborIndex> * ICell<double> * ICell<DayCounter> * ICell<Schedule> * ICell<IborIndex> * ICell<double> * ICell<DayCounter> * ICell<IPricingEngine> * ICell<Date> -> BasisSwapModel'
  fullName: 'new: Cephei.Cell.Generic.ICell<QLNet.BasisSwap.Type> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.Schedule> * Cephei.Cell.Generic.ICell<QLNet.IborIndex> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.Schedule> * Cephei.Cell.Generic.ICell<QLNet.IborIndex> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.IPricingEngine> * Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.QL.BasisSwapModel'
  type: Constructor
  source:
    id: Cephei.QL.BasisSwapModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.BasisSwap.Type> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.Schedule> * Cephei.Cell.Generic.ICell<QLNet.IborIndex> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.Schedule> * Cephei.Cell.Generic.ICell<QLNet.IborIndex> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.IPricingEngine> * Cephei.Cell.Generic.ICell<QLNet.Date>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 35
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  summary: Implicit constructor.
  syntax:
    content: 'new: Type:ICell<Type> * nominal:ICell<double> * float1Schedule:ICell<Schedule> * iborIndex1:ICell<IborIndex> * spread1:ICell<double> * float1DayCount:ICell<DayCounter> * float2Schedule:ICell<Schedule> * iborIndex2:ICell<IborIndex> * spread2:ICell<double> * float2DayCount:ICell<DayCounter> * pricingEngine:ICell<IPricingEngine> * evaluationDate:ICell<Date> -> BasisSwapModel'
    parameters:
    - id: Type
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BasisSwap.Type>
      attributes: []
    - id: nominal
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: float1Schedule
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Schedule>
      attributes: []
    - id: iborIndex1
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IborIndex>
      attributes: []
    - id: spread1
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: float1DayCount
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
    - id: float2Schedule
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Schedule>
      attributes: []
    - id: iborIndex2
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IborIndex>
      attributes: []
    - id: spread2
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: float2DayCount
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
    - id: pricingEngine
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IPricingEngine>
      attributes: []
    - id: evaluationDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.QL.BasisSwapModel
      attributes: []
  overload: Cephei.QL.BasisSwapModel.#ctor*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.EndDiscounts(Cephei.Cell.Generic.ICell<int>)
  commentId: M:Cephei.QL.BasisSwapModel.EndDiscounts(Cephei.Cell.Generic.ICell{System.Int32})
  id: EndDiscounts(Cephei.Cell.Generic.ICell<int>)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'member EndDiscounts: ICell<int> -> ICell<Nullable<float>>'
  nameWithType: 'member BasisSwapModel.EndDiscounts: ICell<int> -> ICell<Nullable<float>>'
  fullName: 'member Cephei.QL.BasisSwapModel.EndDiscounts: Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<System.Nullable<float>>'
  type: Method
  source:
    id: Cephei.QL.BasisSwapModel.EndDiscounts(Cephei.Cell.Generic.ICell<int>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 145
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member EndDiscounts: j:ICell<int> -> ICell<Nullable<float>>'
    parameters:
    - id: j
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Nullable`1<Microsoft.FSharp.Core.float>>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.EndDiscounts*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.Leg(Cephei.Cell.Generic.ICell<int>)
  commentId: M:Cephei.QL.BasisSwapModel.Leg(Cephei.Cell.Generic.ICell{System.Int32})
  id: Leg(Cephei.Cell.Generic.ICell<int>)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'member Leg: ICell<int> -> ICell<List<CashFlow>>'
  nameWithType: 'member BasisSwapModel.Leg: ICell<int> -> ICell<List<CashFlow>>'
  fullName: 'member Cephei.QL.BasisSwapModel.Leg: Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.CashFlow>>'
  type: Method
  source:
    id: Cephei.QL.BasisSwapModel.Leg(Cephei.Cell.Generic.ICell<int>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 149
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Leg: j:ICell<int> -> ICell<List<CashFlow>>'
    parameters:
    - id: j
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<QLNet.CashFlow>>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.Leg*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.LegBPS(Cephei.Cell.Generic.ICell<int>)
  commentId: M:Cephei.QL.BasisSwapModel.LegBPS(Cephei.Cell.Generic.ICell{System.Int32})
  id: LegBPS(Cephei.Cell.Generic.ICell<int>)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'member LegBPS: ICell<int> -> ICell<Nullable<float>>'
  nameWithType: 'member BasisSwapModel.LegBPS: ICell<int> -> ICell<Nullable<float>>'
  fullName: 'member Cephei.QL.BasisSwapModel.LegBPS: Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<System.Nullable<float>>'
  type: Method
  source:
    id: Cephei.QL.BasisSwapModel.LegBPS(Cephei.Cell.Generic.ICell<int>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 151
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member LegBPS: j:ICell<int> -> ICell<Nullable<float>>'
    parameters:
    - id: j
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Nullable`1<Microsoft.FSharp.Core.float>>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.LegBPS*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.LegNPV(Cephei.Cell.Generic.ICell<int>)
  commentId: M:Cephei.QL.BasisSwapModel.LegNPV(Cephei.Cell.Generic.ICell{System.Int32})
  id: LegNPV(Cephei.Cell.Generic.ICell<int>)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'member LegNPV: ICell<int> -> ICell<Nullable<float>>'
  nameWithType: 'member BasisSwapModel.LegNPV: ICell<int> -> ICell<Nullable<float>>'
  fullName: 'member Cephei.QL.BasisSwapModel.LegNPV: Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<System.Nullable<float>>'
  type: Method
  source:
    id: Cephei.QL.BasisSwapModel.LegNPV(Cephei.Cell.Generic.ICell<int>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 153
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member LegNPV: j:ICell<int> -> ICell<Nullable<float>>'
    parameters:
    - id: j
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Nullable`1<Microsoft.FSharp.Core.float>>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.LegNPV*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.Payer(Cephei.Cell.Generic.ICell<int>)
  commentId: M:Cephei.QL.BasisSwapModel.Payer(Cephei.Cell.Generic.ICell{System.Int32})
  id: Payer(Cephei.Cell.Generic.ICell<int>)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'member Payer: ICell<int> -> ICell<float>'
  nameWithType: 'member BasisSwapModel.Payer: ICell<int> -> ICell<float>'
  fullName: 'member Cephei.QL.BasisSwapModel.Payer: Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.BasisSwapModel.Payer(Cephei.Cell.Generic.ICell<int>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 157
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Payer: j:ICell<int> -> ICell<float>'
    parameters:
    - id: j
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.Payer*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.Result(Cephei.Cell.Generic.ICell<string>)
  commentId: M:Cephei.QL.BasisSwapModel.Result(Cephei.Cell.Generic.ICell{System.String})
  id: Result(Cephei.Cell.Generic.ICell<string>)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'member Result: ICell<string> -> ICell<obj>'
  nameWithType: 'member BasisSwapModel.Result: ICell<string> -> ICell<obj>'
  fullName: 'member Cephei.QL.BasisSwapModel.Result: Cephei.Cell.Generic.ICell<string> -> Cephei.Cell.Generic.ICell<obj>'
  type: Method
  source:
    id: Cephei.QL.BasisSwapModel.Result(Cephei.Cell.Generic.ICell<string>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 165
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Result: tag:ICell<string> -> ICell<obj>'
    parameters:
    - id: tag
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.string>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.obj>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.Result*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.SetPricingEngine(Cephei.Cell.Generic.ICell<QLNet.IPricingEngine>)
  commentId: M:Cephei.QL.BasisSwapModel.SetPricingEngine(Cephei.Cell.Generic.ICell{QLNet.IPricingEngine})
  id: SetPricingEngine(Cephei.Cell.Generic.ICell<QLNet.IPricingEngine>)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'member SetPricingEngine: ICell<IPricingEngine> -> ICell<BasisSwap>'
  nameWithType: 'member BasisSwapModel.SetPricingEngine: ICell<IPricingEngine> -> ICell<BasisSwap>'
  fullName: 'member Cephei.QL.BasisSwapModel.SetPricingEngine: Cephei.Cell.Generic.ICell<QLNet.IPricingEngine> -> Cephei.Cell.Generic.ICell<QLNet.BasisSwap>'
  type: Method
  source:
    id: Cephei.QL.BasisSwapModel.SetPricingEngine(Cephei.Cell.Generic.ICell<QLNet.IPricingEngine>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 167
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member SetPricingEngine: e:ICell<IPricingEngine> -> ICell<BasisSwap>'
    parameters:
    - id: e
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IPricingEngine>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BasisSwap>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.SetPricingEngine*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.StartDiscounts(Cephei.Cell.Generic.ICell<int>)
  commentId: M:Cephei.QL.BasisSwapModel.StartDiscounts(Cephei.Cell.Generic.ICell{System.Int32})
  id: StartDiscounts(Cephei.Cell.Generic.ICell<int>)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'member StartDiscounts: ICell<int> -> ICell<Nullable<float>>'
  nameWithType: 'member BasisSwapModel.StartDiscounts: ICell<int> -> ICell<Nullable<float>>'
  fullName: 'member Cephei.QL.BasisSwapModel.StartDiscounts: Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<System.Nullable<float>>'
  type: Method
  source:
    id: Cephei.QL.BasisSwapModel.StartDiscounts(Cephei.Cell.Generic.ICell<int>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 160
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member StartDiscounts: j:ICell<int> -> ICell<Nullable<float>>'
    parameters:
    - id: j
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Nullable`1<Microsoft.FSharp.Core.float>>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.StartDiscounts*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.spread2(unit)
  commentId: P:Cephei.QL.BasisSwapModel.spread2
  id: spread2(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property spread2: ICell<float>'
  nameWithType: 'property BasisSwapModel.spread2: ICell<float>'
  fullName: 'property Cephei.QL.BasisSwapModel.spread2: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.spread2(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 125
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property spread2: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.spread2*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.spread1(unit)
  commentId: P:Cephei.QL.BasisSwapModel.spread1
  id: spread1(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property spread1: ICell<float>'
  nameWithType: 'property BasisSwapModel.spread1: ICell<float>'
  fullName: 'property Cephei.QL.BasisSwapModel.spread1: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.spread1(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 121
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property spread1: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.spread1*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.nominal(unit)
  commentId: P:Cephei.QL.BasisSwapModel.nominal
  id: nominal(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property nominal: ICell<float>'
  nameWithType: 'property BasisSwapModel.nominal: ICell<float>'
  fullName: 'property Cephei.QL.BasisSwapModel.nominal: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.nominal(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 118
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property nominal: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.nominal*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.iborIndex2(unit)
  commentId: P:Cephei.QL.BasisSwapModel.iborIndex2
  id: iborIndex2(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property iborIndex2: ICell<IborIndex>'
  nameWithType: 'property BasisSwapModel.iborIndex2: ICell<IborIndex>'
  fullName: 'property Cephei.QL.BasisSwapModel.iborIndex2: Cephei.Cell.Generic.ICell<QLNet.IborIndex>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.iborIndex2(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 124
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property iborIndex2: ICell<IborIndex> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IborIndex>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.iborIndex2*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.iborIndex1(unit)
  commentId: P:Cephei.QL.BasisSwapModel.iborIndex1
  id: iborIndex1(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property iborIndex1: ICell<IborIndex>'
  nameWithType: 'property BasisSwapModel.iborIndex1: ICell<IborIndex>'
  fullName: 'property Cephei.QL.BasisSwapModel.iborIndex1: Cephei.Cell.Generic.ICell<QLNet.IborIndex>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.iborIndex1(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 120
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property iborIndex1: ICell<IborIndex> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IborIndex>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.iborIndex1*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.float2Schedule(unit)
  commentId: P:Cephei.QL.BasisSwapModel.float2Schedule
  id: float2Schedule(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property float2Schedule: ICell<Schedule>'
  nameWithType: 'property BasisSwapModel.float2Schedule: ICell<Schedule>'
  fullName: 'property Cephei.QL.BasisSwapModel.float2Schedule: Cephei.Cell.Generic.ICell<QLNet.Schedule>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.float2Schedule(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 123
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property float2Schedule: ICell<Schedule> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Schedule>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.float2Schedule*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.float2DayCount(unit)
  commentId: P:Cephei.QL.BasisSwapModel.float2DayCount
  id: float2DayCount(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property float2DayCount: ICell<DayCounter>'
  nameWithType: 'property BasisSwapModel.float2DayCount: ICell<DayCounter>'
  fullName: 'property Cephei.QL.BasisSwapModel.float2DayCount: Cephei.Cell.Generic.ICell<QLNet.DayCounter>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.float2DayCount(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 126
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property float2DayCount: ICell<DayCounter> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.float2DayCount*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.float1Schedule(unit)
  commentId: P:Cephei.QL.BasisSwapModel.float1Schedule
  id: float1Schedule(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property float1Schedule: ICell<Schedule>'
  nameWithType: 'property BasisSwapModel.float1Schedule: ICell<Schedule>'
  fullName: 'property Cephei.QL.BasisSwapModel.float1Schedule: Cephei.Cell.Generic.ICell<QLNet.Schedule>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.float1Schedule(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 119
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property float1Schedule: ICell<Schedule> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Schedule>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.float1Schedule*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.float1DayCount(unit)
  commentId: P:Cephei.QL.BasisSwapModel.float1DayCount
  id: float1DayCount(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property float1DayCount: ICell<DayCounter>'
  nameWithType: 'property BasisSwapModel.float1DayCount: ICell<DayCounter>'
  fullName: 'property Cephei.QL.BasisSwapModel.float1DayCount: Cephei.Cell.Generic.ICell<QLNet.DayCounter>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.float1DayCount(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 122
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property float1DayCount: ICell<DayCounter> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.float1DayCount*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.ValuationDate(unit)
  commentId: P:Cephei.QL.BasisSwapModel.ValuationDate
  id: ValuationDate(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property ValuationDate: ICell<Date>'
  nameWithType: 'property BasisSwapModel.ValuationDate: ICell<Date>'
  fullName: 'property Cephei.QL.BasisSwapModel.ValuationDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.ValuationDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 169
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property ValuationDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.ValuationDate*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.Type(unit)
  commentId: P:Cephei.QL.BasisSwapModel.Type
  id: Type(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property Type: ICell<Type>'
  nameWithType: 'property BasisSwapModel.Type: ICell<Type>'
  fullName: 'property Cephei.QL.BasisSwapModel.Type: Cephei.Cell.Generic.ICell<QLNet.BasisSwap.Type>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.Type(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 117
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Type: ICell<Type> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BasisSwap.Type>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.Type*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.SwapType(unit)
  commentId: P:Cephei.QL.BasisSwapModel.SwapType
  id: SwapType(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property SwapType: ICell<Type>'
  nameWithType: 'property BasisSwapModel.SwapType: ICell<Type>'
  fullName: 'property Cephei.QL.BasisSwapModel.SwapType: Cephei.Cell.Generic.ICell<QLNet.BasisSwap.Type>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.SwapType(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 144
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property SwapType: ICell<Type> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BasisSwap.Type>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.SwapType*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.StartDate(unit)
  commentId: P:Cephei.QL.BasisSwapModel.StartDate
  id: StartDate(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property StartDate: ICell<Date>'
  nameWithType: 'property BasisSwapModel.StartDate: ICell<Date>'
  fullName: 'property Cephei.QL.BasisSwapModel.StartDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.StartDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 159
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property StartDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.StartDate*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.Spread2(unit)
  commentId: P:Cephei.QL.BasisSwapModel.Spread2
  id: Spread2(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property Spread2: ICell<float>'
  nameWithType: 'property BasisSwapModel.Spread2: ICell<float>'
  fullName: 'property Cephei.QL.BasisSwapModel.Spread2: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.Spread2(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 143
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Spread2: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.Spread2*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.Spread1(unit)
  commentId: P:Cephei.QL.BasisSwapModel.Spread1
  id: Spread1(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property Spread1: ICell<float>'
  nameWithType: 'property BasisSwapModel.Spread1: ICell<float>'
  fullName: 'property Cephei.QL.BasisSwapModel.Spread1: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.Spread1(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 142
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Spread1: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.Spread1*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.PricingEngine(unit)
  commentId: P:Cephei.QL.BasisSwapModel.PricingEngine
  id: PricingEngine(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property PricingEngine: ICell<IPricingEngine>'
  nameWithType: 'property BasisSwapModel.PricingEngine: ICell<IPricingEngine>'
  fullName: 'property Cephei.QL.BasisSwapModel.PricingEngine: Cephei.Cell.Generic.ICell<QLNet.IPricingEngine>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.PricingEngine(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 128
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property PricingEngine: ICell<IPricingEngine> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IPricingEngine>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.PricingEngine*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.NpvDateDiscount(unit)
  commentId: P:Cephei.QL.BasisSwapModel.NpvDateDiscount
  id: NpvDateDiscount(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property NpvDateDiscount: ICell<Nullable<float>>'
  nameWithType: 'property BasisSwapModel.NpvDateDiscount: ICell<Nullable<float>>'
  fullName: 'property Cephei.QL.BasisSwapModel.NpvDateDiscount: Cephei.Cell.Generic.ICell<System.Nullable<float>>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.NpvDateDiscount(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 156
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property NpvDateDiscount: ICell<Nullable<float>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Nullable`1<Microsoft.FSharp.Core.float>>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.NpvDateDiscount*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.Nominal(unit)
  commentId: P:Cephei.QL.BasisSwapModel.Nominal
  id: Nominal(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property Nominal: ICell<float>'
  nameWithType: 'property BasisSwapModel.Nominal: ICell<float>'
  fullName: 'property Cephei.QL.BasisSwapModel.Nominal: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.Nominal(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 141
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Nominal: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.Nominal*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.NPV(unit)
  commentId: P:Cephei.QL.BasisSwapModel.NPV
  id: NPV(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property NPV: ICell<float>'
  nameWithType: 'property BasisSwapModel.NPV: ICell<float>'
  fullName: 'property Cephei.QL.BasisSwapModel.NPV: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.NPV(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 164
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property NPV: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.NPV*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.MaturityDate(unit)
  commentId: P:Cephei.QL.BasisSwapModel.MaturityDate
  id: MaturityDate(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property MaturityDate: ICell<Date>'
  nameWithType: 'property BasisSwapModel.MaturityDate: ICell<Date>'
  fullName: 'property Cephei.QL.BasisSwapModel.MaturityDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.MaturityDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 155
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property MaturityDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.MaturityDate*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.IsExpired(unit)
  commentId: P:Cephei.QL.BasisSwapModel.IsExpired
  id: IsExpired(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property IsExpired: ICell<bool>'
  nameWithType: 'property BasisSwapModel.IsExpired: ICell<bool>'
  fullName: 'property Cephei.QL.BasisSwapModel.IsExpired: Cephei.Cell.Generic.ICell<bool>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.IsExpired(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 148
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property IsExpired: ICell<bool> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.IsExpired*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.IborIndex2(unit)
  commentId: P:Cephei.QL.BasisSwapModel.IborIndex2
  id: IborIndex2(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property IborIndex2: ICell<IborIndex>'
  nameWithType: 'property BasisSwapModel.IborIndex2: ICell<IborIndex>'
  fullName: 'property Cephei.QL.BasisSwapModel.IborIndex2: Cephei.Cell.Generic.ICell<QLNet.IborIndex>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.IborIndex2(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 140
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property IborIndex2: ICell<IborIndex> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IborIndex>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.IborIndex2*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.IborIndex1(unit)
  commentId: P:Cephei.QL.BasisSwapModel.IborIndex1
  id: IborIndex1(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property IborIndex1: ICell<IborIndex>'
  nameWithType: 'property BasisSwapModel.IborIndex1: ICell<IborIndex>'
  fullName: 'property Cephei.QL.BasisSwapModel.IborIndex1: Cephei.Cell.Generic.ICell<QLNet.IborIndex>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.IborIndex1(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 139
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property IborIndex1: ICell<IborIndex> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IborIndex>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.IborIndex1*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.Floating2Schedule(unit)
  commentId: P:Cephei.QL.BasisSwapModel.Floating2Schedule
  id: Floating2Schedule(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property Floating2Schedule: ICell<Schedule>'
  nameWithType: 'property BasisSwapModel.Floating2Schedule: ICell<Schedule>'
  fullName: 'property Cephei.QL.BasisSwapModel.Floating2Schedule: Cephei.Cell.Generic.ICell<QLNet.Schedule>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.Floating2Schedule(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 138
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Floating2Schedule: ICell<Schedule> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Schedule>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.Floating2Schedule*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.Floating2LegNPV(unit)
  commentId: P:Cephei.QL.BasisSwapModel.Floating2LegNPV
  id: Floating2LegNPV(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property Floating2LegNPV: ICell<float>'
  nameWithType: 'property BasisSwapModel.Floating2LegNPV: ICell<float>'
  fullName: 'property Cephei.QL.BasisSwapModel.Floating2LegNPV: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.Floating2LegNPV(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 137
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Floating2LegNPV: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.Floating2LegNPV*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.Floating2LegBPS(unit)
  commentId: P:Cephei.QL.BasisSwapModel.Floating2LegBPS
  id: Floating2LegBPS(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property Floating2LegBPS: ICell<float>'
  nameWithType: 'property BasisSwapModel.Floating2LegBPS: ICell<float>'
  fullName: 'property Cephei.QL.BasisSwapModel.Floating2LegBPS: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.Floating2LegBPS(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 136
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Floating2LegBPS: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.Floating2LegBPS*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.Floating2Leg(unit)
  commentId: P:Cephei.QL.BasisSwapModel.Floating2Leg
  id: Floating2Leg(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property Floating2Leg: ICell<List<CashFlow>>'
  nameWithType: 'property BasisSwapModel.Floating2Leg: ICell<List<CashFlow>>'
  fullName: 'property Cephei.QL.BasisSwapModel.Floating2Leg: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.CashFlow>>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.Floating2Leg(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 135
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Floating2Leg: ICell<List<CashFlow>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<QLNet.CashFlow>>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.Floating2Leg*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.Floating1Schedule(unit)
  commentId: P:Cephei.QL.BasisSwapModel.Floating1Schedule
  id: Floating1Schedule(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property Floating1Schedule: ICell<Schedule>'
  nameWithType: 'property BasisSwapModel.Floating1Schedule: ICell<Schedule>'
  fullName: 'property Cephei.QL.BasisSwapModel.Floating1Schedule: Cephei.Cell.Generic.ICell<QLNet.Schedule>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.Floating1Schedule(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 134
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Floating1Schedule: ICell<Schedule> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Schedule>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.Floating1Schedule*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.Floating1LegNPV(unit)
  commentId: P:Cephei.QL.BasisSwapModel.Floating1LegNPV
  id: Floating1LegNPV(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property Floating1LegNPV: ICell<float>'
  nameWithType: 'property BasisSwapModel.Floating1LegNPV: ICell<float>'
  fullName: 'property Cephei.QL.BasisSwapModel.Floating1LegNPV: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.Floating1LegNPV(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 133
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Floating1LegNPV: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.Floating1LegNPV*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.Floating1LegBPS(unit)
  commentId: P:Cephei.QL.BasisSwapModel.Floating1LegBPS
  id: Floating1LegBPS(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property Floating1LegBPS: ICell<float>'
  nameWithType: 'property BasisSwapModel.Floating1LegBPS: ICell<float>'
  fullName: 'property Cephei.QL.BasisSwapModel.Floating1LegBPS: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.Floating1LegBPS(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 132
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Floating1LegBPS: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.Floating1LegBPS*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.Floating1Leg(unit)
  commentId: P:Cephei.QL.BasisSwapModel.Floating1Leg
  id: Floating1Leg(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property Floating1Leg: ICell<List<CashFlow>>'
  nameWithType: 'property BasisSwapModel.Floating1Leg: ICell<List<CashFlow>>'
  fullName: 'property Cephei.QL.BasisSwapModel.Floating1Leg: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.CashFlow>>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.Floating1Leg(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 131
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Floating1Leg: ICell<List<CashFlow>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<QLNet.CashFlow>>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.Floating1Leg*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.FairShortSpread(unit)
  commentId: P:Cephei.QL.BasisSwapModel.FairShortSpread
  id: FairShortSpread(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property FairShortSpread: ICell<float>'
  nameWithType: 'property BasisSwapModel.FairShortSpread: ICell<float>'
  fullName: 'property Cephei.QL.BasisSwapModel.FairShortSpread: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.FairShortSpread(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 130
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property FairShortSpread: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.FairShortSpread*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.FairLongSpread(unit)
  commentId: P:Cephei.QL.BasisSwapModel.FairLongSpread
  id: FairLongSpread(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property FairLongSpread: ICell<float>'
  nameWithType: 'property BasisSwapModel.FairLongSpread: ICell<float>'
  fullName: 'property Cephei.QL.BasisSwapModel.FairLongSpread: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.FairLongSpread(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 129
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property FairLongSpread: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.FairLongSpread*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.EvaluationDate(unit)
  commentId: P:Cephei.QL.BasisSwapModel.EvaluationDate
  id: EvaluationDate(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property EvaluationDate: ICell<Date>'
  nameWithType: 'property BasisSwapModel.EvaluationDate: ICell<Date>'
  fullName: 'property Cephei.QL.BasisSwapModel.EvaluationDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.EvaluationDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 127
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property EvaluationDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.EvaluationDate*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.ErrorEstimate(unit)
  commentId: P:Cephei.QL.BasisSwapModel.ErrorEstimate
  id: ErrorEstimate(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property ErrorEstimate: ICell<float>'
  nameWithType: 'property BasisSwapModel.ErrorEstimate: ICell<float>'
  fullName: 'property Cephei.QL.BasisSwapModel.ErrorEstimate: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.ErrorEstimate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 163
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property ErrorEstimate: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.ErrorEstimate*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.Engine(unit)
  commentId: P:Cephei.QL.BasisSwapModel.Engine
  id: Engine(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property Engine: ICell<SwapEngine>'
  nameWithType: 'property BasisSwapModel.Engine: ICell<SwapEngine>'
  fullName: 'property Cephei.QL.BasisSwapModel.Engine: Cephei.Cell.Generic.ICell<QLNet.Swap.SwapEngine>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.Engine(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 147
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Engine: ICell<SwapEngine> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Swap.SwapEngine>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.Engine*
  attributes: []
- uid: Cephei.QL.BasisSwapModel.CASH(unit)
  commentId: P:Cephei.QL.BasisSwapModel.CASH
  id: CASH(unit)
  parent: Cephei.QL.BasisSwapModel
  langs:
  - csharp
  - vb
  name: 'property CASH: ICell<float>'
  nameWithType: 'property BasisSwapModel.CASH: ICell<float>'
  fullName: 'property Cephei.QL.BasisSwapModel.CASH: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.BasisSwapModel.CASH(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BasisSwapModel.fs
    startLine: 162
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property CASH: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.BasisSwapModel.CASH*
  attributes: []
references:
- uid: Cephei.QL
  commentId: N:Cephei.QL
  name: Cephei.QL
  nameWithType: Cephei.QL
  fullName: Cephei.QL
- uid: TypeRef:System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
  spec.csharp:
  - {}
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - {}
- uid: TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: ConcurrentDictionary<string,ICell>
  nameWithType: ConcurrentDictionary<string,ICell>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Model
  name: Model
  nameWithType: Model
  fullName: Cephei.Cell.Model
  spec.csharp:
  - {}
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - {}
- uid: TypeRef:Cephei.Cell.Generic.Model`1<QLNet.BasisSwap>
  name: Model<BasisSwap>
  nameWithType: Model<BasisSwap>
  fullName: Cephei.Cell.Generic.Model<QLNet.BasisSwap>
  spec.csharp:
  - uid: Cephei.Cell.Generic.Model`1
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Generic.Model
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.BasisSwap
    name: BasisSwap
    nameWithType: BasisSwap
    fullName: QLNet.BasisSwap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BasisSwap>
  name: ICell<BasisSwap>
  nameWithType: ICell<BasisSwap>
  fullName: Cephei.Cell.Generic.ICell<QLNet.BasisSwap>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.BasisSwap
    name: BasisSwap
    nameWithType: BasisSwap
    fullName: QLNet.BasisSwap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.ICell
  name: ICell
  nameWithType: ICell
  fullName: Cephei.Cell.ICell
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - {}
- uid: TypeRef:Cephei.Cell.ICellEvent
  name: ICellEvent
  nameWithType: ICellEvent
  fullName: Cephei.Cell.ICellEvent
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICellEvent
    name: ICellEvent
    nameWithType: ICellEvent
    fullName: Cephei.Cell.ICellEvent
  - {}
- uid: TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: ICollection<KeyValuePair<string,ICell>>
  nameWithType: ICollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IDictionary<string,ICell>
  nameWithType: IDictionary<string,ICell>
  fullName: System.Collections.Generic.IDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IEnumerable<KeyValuePair<string,ICell>>
  nameWithType: IEnumerable<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IReadOnlyCollection<KeyValuePair<string,ICell>>
  nameWithType: IReadOnlyCollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IReadOnlyDictionary<string,ICell>
  nameWithType: IReadOnlyDictionary<string,ICell>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.ICollection
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
  spec.csharp:
  - {}
  - uid: System.Collections.ICollection
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.ICollection
  - {}
- uid: TypeRef:System.Collections.IDictionary
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
  spec.csharp:
  - {}
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
  - {}
- uid: TypeRef:System.Collections.IEnumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
  spec.csharp:
  - {}
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
  - {}
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  name: IObservable<ICell>
  nameWithType: IObservable<ICell>
  fullName: System.IObservable<Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.BasisSwap> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * ICell<BasisSwap> * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * ICell<BasisSwap> * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<QLNet.BasisSwap> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.BasisSwap
    name: BasisSwap
    nameWithType: BasisSwap
    fullName: QLNet.BasisSwap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<QLNet.BasisSwap>
  name: IObservable<BasisSwap>
  nameWithType: IObservable<BasisSwap>
  fullName: System.IObservable<QLNet.BasisSwap>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.BasisSwap
    name: BasisSwap
    nameWithType: BasisSwap
    fullName: QLNet.BasisSwap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.BasisSwap>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,BasisSwap>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,BasisSwap>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,QLNet.BasisSwap>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: QLNet.BasisSwap
    name: BasisSwap
    nameWithType: BasisSwap
    fullName: QLNet.BasisSwap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  name: IObservable<KeyValuePair<string,decimal>>
  nameWithType: IObservable<KeyValuePair<string,decimal>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,decimal>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.decimal
    name: decimal
    nameWithType: decimal
    fullName: decimal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  name: IObservable<KeyValuePair<string,float>>
  nameWithType: IObservable<KeyValuePair<string,float>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,float>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  name: IObservable<KeyValuePair<string,int>>
  nameWithType: IObservable<KeyValuePair<string,int>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,int>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.int
    name: int
    nameWithType: int
    fullName: int
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObserver`1<QLNet.BasisSwap>
  name: IObserver<BasisSwap>
  nameWithType: IObserver<BasisSwap>
  fullName: System.IObserver<QLNet.BasisSwap>
  spec.csharp:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.BasisSwap
    name: BasisSwap
    nameWithType: BasisSwap
    fullName: QLNet.BasisSwap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  name: "member Bind: ICell<'T> -> unit"
  nameWithType: "member Model.Bind: ICell<'T> -> unit"
  fullName: "member Cephei.Cell.Generic.Model.Bind: Cephei.Cell.Generic.ICell<'T> -> unit"
- uid: Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  name: 'abstract member OnCompleted: unit -> unit'
  nameWithType: 'abstract member Model.OnCompleted: unit -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnCompleted: unit -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnError(exn)
  name: 'abstract member OnError: exn -> unit'
  nameWithType: 'abstract member Model.OnError: exn -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnError: exn -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnNext('T)
  name: "abstract member OnNext: 'T -> unit"
  nameWithType: "abstract member Model.OnNext: 'T -> unit"
  fullName: "abstract member Cephei.Cell.Generic.Model.OnNext: 'T -> unit"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  name: "abstract member Subscribe: IObserver<'T> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<'T> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<'T> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: "abstract member Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  name: "abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Value(unit)
  name: "abstract property Value: 'T"
  nameWithType: "abstract property Model.Value: 'T"
  fullName: "abstract property Cephei.Cell.Generic.Model.Value: 'T"
- uid: Cephei.Cell.Model.As(string)
  name: "member As: string -> ICell<'T>"
  nameWithType: "member Model.As: string -> ICell<'T>"
  fullName: "member Cephei.Cell.Model.As: string -> Cephei.Cell.Generic.ICell<'T>"
- uid: Cephei.Cell.Model.Bind(unit)
  name: 'member Bind: unit -> unit'
  nameWithType: 'member Model.Bind: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Bind: unit -> unit'
- uid: Cephei.Cell.Model.Box(unit)
  name: 'abstract property Box: obj'
  nameWithType: 'abstract property Model.Box: obj'
  fullName: 'abstract property Cephei.Cell.Model.Box: obj'
- uid: Cephei.Cell.Model.Change()
  name: 'abstract member Change: CellChange'
  nameWithType: 'abstract member Model.Change: CellChange'
  fullName: 'abstract member Cephei.Cell.Model.Change: Cephei.Cell.CellChange'
- uid: Cephei.Cell.Model.Create(Unit -> 'T * string)
  name: "member Create: Unit -> 'T * string -> Cell<'T>"
  nameWithType: "member Model.Create: Unit -> 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.Create: Unit -> 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.CreateValue('T * string)
  name: "member CreateValue: 'T * string -> Cell<'T>"
  nameWithType: "member Model.CreateValue: 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.CreateValue: 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.Dependants(unit)
  name: 'abstract property Dependants: IEnumerable<ICellEvent>'
  nameWithType: 'abstract property Model.Dependants: IEnumerable<ICellEvent>'
  fullName: 'abstract property Cephei.Cell.Model.Dependants: System.Collections.Generic.IEnumerable<Cephei.Cell.ICellEvent>'
- uid: Cephei.Cell.Model.Dispose(unit)
  name: 'member Dispose: unit -> unit'
  nameWithType: 'member Model.Dispose: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Dispose: unit -> unit'
- uid: Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  name: 'member GetOrAdd: string * ICell -> ICell'
  nameWithType: 'member Model.GetOrAdd: string * ICell -> ICell'
  fullName: 'member Cephei.Cell.Model.GetOrAdd: string * Cephei.Cell.ICell -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.HasFunction(unit)
  name: 'abstract property HasFunction: bool'
  nameWithType: 'abstract property Model.HasFunction: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasFunction: bool'
- uid: Cephei.Cell.Model.HasValue(unit)
  name: 'abstract property HasValue: bool'
  nameWithType: 'abstract property Model.HasValue: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasValue: bool'
- uid: Cephei.Cell.Model.Item(string)
  name: 'property Item: string -> ICell'
  nameWithType: 'property Model.Item: string -> ICell'
  fullName: 'property Cephei.Cell.Model.Item: string -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Mnemonic(unit)
  name: 'abstract property Mnemonic: string'
  nameWithType: 'abstract property Model.Mnemonic: string'
  fullName: 'abstract property Cephei.Cell.Model.Mnemonic: string'
- uid: Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  name: 'abstract member OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  nameWithType: 'abstract member Model.OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  fullName: 'abstract member Cephei.Cell.Model.OnChange: Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession -> unit'
- uid: Cephei.Cell.Model.Parent(unit)
  name: 'abstract property Parent: ICell'
  nameWithType: 'abstract property Model.Parent: ICell'
  fullName: 'abstract property Cephei.Cell.Model.Parent: Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  name: 'abstract member Subscribe: IObserver<ICell> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ICell> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ICell> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: 'abstract member Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,float>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,int>> -> System.IDisposable'
- uid: Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  name: 'member TryAdd: string * ICell -> bool'
  nameWithType: 'member Model.TryAdd: string * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryAdd: string * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  name: 'member TryRemove: string * ICell byref -> bool'
  nameWithType: 'member Model.TryRemove: string * ICell byref -> bool'
  fullName: 'member Cephei.Cell.Model.TryRemove: string * Cephei.Cell.ICell byref -> bool'
- uid: Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  name: 'member TryUpdate: string * ICell * ICell -> bool'
  nameWithType: 'member Model.TryUpdate: string * ICell * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryUpdate: string * Cephei.Cell.ICell * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  name: 'abstract member add_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.add_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.add_Change: Cephei.Cell.CellChange -> unit'
- uid: Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  name: 'abstract member remove_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.remove_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.remove_Change: Cephei.Cell.CellChange -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  name: 'abstract member Clear: unit -> unit'
  nameWithType: 'abstract member ConcurrentDictionary.Clear: unit -> unit'
  fullName: 'abstract member System.Collections.Concurrent.ConcurrentDictionary.Clear: unit -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  name: "abstract member ContainsKey: 'TKey -> bool"
  nameWithType: "abstract member ConcurrentDictionary.ContainsKey: 'TKey -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.ContainsKey: 'TKey -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  name: 'abstract property Count: int'
  nameWithType: 'abstract property ConcurrentDictionary.Count: int'
  fullName: 'abstract property System.Collections.Concurrent.ConcurrentDictionary.Count: int'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  name: "abstract member GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  nameWithType: "abstract member ConcurrentDictionary.GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.GetEnumerator: unit -> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<'TKey,'TValue>>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  name: "member GetOrAdd: 'TKey * 'TValue -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  name: "member GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * System.Func<'TKey,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  name: 'property IsEmpty: bool'
  nameWithType: 'property ConcurrentDictionary.IsEmpty: bool'
  fullName: 'property System.Collections.Concurrent.ConcurrentDictionary.IsEmpty: bool'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  name: "abstract property Item: 'TKey -> 'TValue"
  nameWithType: "abstract property ConcurrentDictionary.Item: 'TKey -> 'TValue"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Item: 'TKey -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  name: "abstract property Keys: ICollection<'TKey>"
  nameWithType: "abstract property ConcurrentDictionary.Keys: ICollection<'TKey>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Keys: System.Collections.Generic.ICollection<'TKey>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  name: "member ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  nameWithType: "member ConcurrentDictionary.ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.ToArray: unit -> System.Collections.Generic.KeyValuePair<'TKey,'TValue> []"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  name: "member TryAdd: 'TKey * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  name: "abstract member TryGetValue: 'TKey * 'TValue byref -> bool"
  nameWithType: "abstract member ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  name: "member TryRemove: 'TKey * 'TValue byref -> bool"
  nameWithType: "member ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  name: "member TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  name: "abstract property Values: ICollection<'TValue>"
  nameWithType: "abstract property ConcurrentDictionary.Values: ICollection<'TValue>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Values: System.Collections.Generic.ICollection<'TValue>"
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BasisSwap.Type>
  name: ICell<Type>
  nameWithType: ICell<Type>
  fullName: Cephei.Cell.Generic.ICell<QLNet.BasisSwap.Type>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.BasisSwap.Type
    name: Type
    nameWithType: Type
    fullName: QLNet.BasisSwap.Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
  name: ICell<double>
  nameWithType: ICell<double>
  fullName: Cephei.Cell.Generic.ICell<double>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.double
    name: double
    nameWithType: double
    fullName: double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Schedule>
  name: ICell<Schedule>
  nameWithType: ICell<Schedule>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Schedule>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Schedule
    name: Schedule
    nameWithType: Schedule
    fullName: QLNet.Schedule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IborIndex>
  name: ICell<IborIndex>
  nameWithType: ICell<IborIndex>
  fullName: Cephei.Cell.Generic.ICell<QLNet.IborIndex>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.IborIndex
    name: IborIndex
    nameWithType: IborIndex
    fullName: QLNet.IborIndex
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
  name: ICell<DayCounter>
  nameWithType: ICell<DayCounter>
  fullName: Cephei.Cell.Generic.ICell<QLNet.DayCounter>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.DayCounter
    name: DayCounter
    nameWithType: DayCounter
    fullName: QLNet.DayCounter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IPricingEngine>
  name: ICell<IPricingEngine>
  nameWithType: ICell<IPricingEngine>
  fullName: Cephei.Cell.Generic.ICell<QLNet.IPricingEngine>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.IPricingEngine
    name: IPricingEngine
    nameWithType: IPricingEngine
    fullName: QLNet.IPricingEngine
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
  name: ICell<Date>
  nameWithType: ICell<Date>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Date>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Date
    name: Date
    nameWithType: Date
    fullName: QLNet.Date
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.BasisSwapModel.#ctor*
  commentId: Overload:Cephei.QL.BasisSwapModel.#ctor*
  name: ( .ctor )
  nameWithType: BasisSwapModel.( .ctor )
  fullName: Cephei.QL.BasisSwapModel
- uid: TypeRef:Cephei.QL.BasisSwapModel
  name: BasisSwapModel
  nameWithType: BasisSwapModel
  fullName: Cephei.QL.BasisSwapModel
  spec.csharp:
  - {}
  - uid: Cephei.QL.BasisSwapModel
    name: BasisSwapModel
    nameWithType: BasisSwapModel
    fullName: Cephei.QL.BasisSwapModel
  - {}
- uid: Cephei.QL.BasisSwapModel.EndDiscounts*
  commentId: Overload:Cephei.QL.BasisSwapModel.EndDiscounts*
  name: EndDiscounts
  nameWithType: BasisSwapModel.EndDiscounts
  fullName: Cephei.QL.BasisSwapModel.EndDiscounts
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
  name: ICell<int>
  nameWithType: ICell<int>
  fullName: Cephei.Cell.Generic.ICell<int>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.int
    name: int
    nameWithType: int
    fullName: int
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Nullable`1<Microsoft.FSharp.Core.float>>
  name: ICell<Nullable<float>>
  nameWithType: ICell<Nullable<float>>
  fullName: Cephei.Cell.Generic.ICell<System.Nullable<float>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.BasisSwapModel.Leg*
  commentId: Overload:Cephei.QL.BasisSwapModel.Leg*
  name: Leg
  nameWithType: BasisSwapModel.Leg
  fullName: Cephei.QL.BasisSwapModel.Leg
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<QLNet.CashFlow>>
  name: ICell<List<CashFlow>>
  nameWithType: ICell<List<CashFlow>>
  fullName: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.CashFlow>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.CashFlow
    name: CashFlow
    nameWithType: CashFlow
    fullName: QLNet.CashFlow
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.BasisSwapModel.LegBPS*
  commentId: Overload:Cephei.QL.BasisSwapModel.LegBPS*
  name: LegBPS
  nameWithType: BasisSwapModel.LegBPS
  fullName: Cephei.QL.BasisSwapModel.LegBPS
- uid: Cephei.QL.BasisSwapModel.LegNPV*
  commentId: Overload:Cephei.QL.BasisSwapModel.LegNPV*
  name: LegNPV
  nameWithType: BasisSwapModel.LegNPV
  fullName: Cephei.QL.BasisSwapModel.LegNPV
- uid: Cephei.QL.BasisSwapModel.Payer*
  commentId: Overload:Cephei.QL.BasisSwapModel.Payer*
  name: Payer
  nameWithType: BasisSwapModel.Payer
  fullName: Cephei.QL.BasisSwapModel.Payer
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
  name: ICell<float>
  nameWithType: ICell<float>
  fullName: Cephei.Cell.Generic.ICell<float>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.BasisSwapModel.Result*
  commentId: Overload:Cephei.QL.BasisSwapModel.Result*
  name: Result
  nameWithType: BasisSwapModel.Result
  fullName: Cephei.QL.BasisSwapModel.Result
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.string>
  name: ICell<string>
  nameWithType: ICell<string>
  fullName: Cephei.Cell.Generic.ICell<string>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.obj>
  name: ICell<obj>
  nameWithType: ICell<obj>
  fullName: Cephei.Cell.Generic.ICell<obj>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.obj
    name: obj
    nameWithType: obj
    fullName: obj
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.BasisSwapModel.SetPricingEngine*
  commentId: Overload:Cephei.QL.BasisSwapModel.SetPricingEngine*
  name: SetPricingEngine
  nameWithType: BasisSwapModel.SetPricingEngine
  fullName: Cephei.QL.BasisSwapModel.SetPricingEngine
- uid: Cephei.QL.BasisSwapModel.StartDiscounts*
  commentId: Overload:Cephei.QL.BasisSwapModel.StartDiscounts*
  name: StartDiscounts
  nameWithType: BasisSwapModel.StartDiscounts
  fullName: Cephei.QL.BasisSwapModel.StartDiscounts
- uid: Cephei.QL.BasisSwapModel.spread2*
  commentId: Overload:Cephei.QL.BasisSwapModel.spread2*
  name: spread2
  nameWithType: BasisSwapModel.spread2
  fullName: Cephei.QL.BasisSwapModel.spread2
- uid: Cephei.QL.BasisSwapModel.spread1*
  commentId: Overload:Cephei.QL.BasisSwapModel.spread1*
  name: spread1
  nameWithType: BasisSwapModel.spread1
  fullName: Cephei.QL.BasisSwapModel.spread1
- uid: Cephei.QL.BasisSwapModel.nominal*
  commentId: Overload:Cephei.QL.BasisSwapModel.nominal*
  name: nominal
  nameWithType: BasisSwapModel.nominal
  fullName: Cephei.QL.BasisSwapModel.nominal
- uid: Cephei.QL.BasisSwapModel.iborIndex2*
  commentId: Overload:Cephei.QL.BasisSwapModel.iborIndex2*
  name: iborIndex2
  nameWithType: BasisSwapModel.iborIndex2
  fullName: Cephei.QL.BasisSwapModel.iborIndex2
- uid: Cephei.QL.BasisSwapModel.iborIndex1*
  commentId: Overload:Cephei.QL.BasisSwapModel.iborIndex1*
  name: iborIndex1
  nameWithType: BasisSwapModel.iborIndex1
  fullName: Cephei.QL.BasisSwapModel.iborIndex1
- uid: Cephei.QL.BasisSwapModel.float2Schedule*
  commentId: Overload:Cephei.QL.BasisSwapModel.float2Schedule*
  name: float2Schedule
  nameWithType: BasisSwapModel.float2Schedule
  fullName: Cephei.QL.BasisSwapModel.float2Schedule
- uid: Cephei.QL.BasisSwapModel.float2DayCount*
  commentId: Overload:Cephei.QL.BasisSwapModel.float2DayCount*
  name: float2DayCount
  nameWithType: BasisSwapModel.float2DayCount
  fullName: Cephei.QL.BasisSwapModel.float2DayCount
- uid: Cephei.QL.BasisSwapModel.float1Schedule*
  commentId: Overload:Cephei.QL.BasisSwapModel.float1Schedule*
  name: float1Schedule
  nameWithType: BasisSwapModel.float1Schedule
  fullName: Cephei.QL.BasisSwapModel.float1Schedule
- uid: Cephei.QL.BasisSwapModel.float1DayCount*
  commentId: Overload:Cephei.QL.BasisSwapModel.float1DayCount*
  name: float1DayCount
  nameWithType: BasisSwapModel.float1DayCount
  fullName: Cephei.QL.BasisSwapModel.float1DayCount
- uid: Cephei.QL.BasisSwapModel.ValuationDate*
  commentId: Overload:Cephei.QL.BasisSwapModel.ValuationDate*
  name: ValuationDate
  nameWithType: BasisSwapModel.ValuationDate
  fullName: Cephei.QL.BasisSwapModel.ValuationDate
- uid: Cephei.QL.BasisSwapModel.Type*
  commentId: Overload:Cephei.QL.BasisSwapModel.Type*
  name: Type
  nameWithType: BasisSwapModel.Type
  fullName: Cephei.QL.BasisSwapModel.Type
- uid: Cephei.QL.BasisSwapModel.SwapType*
  commentId: Overload:Cephei.QL.BasisSwapModel.SwapType*
  name: SwapType
  nameWithType: BasisSwapModel.SwapType
  fullName: Cephei.QL.BasisSwapModel.SwapType
- uid: Cephei.QL.BasisSwapModel.StartDate*
  commentId: Overload:Cephei.QL.BasisSwapModel.StartDate*
  name: StartDate
  nameWithType: BasisSwapModel.StartDate
  fullName: Cephei.QL.BasisSwapModel.StartDate
- uid: Cephei.QL.BasisSwapModel.Spread2*
  commentId: Overload:Cephei.QL.BasisSwapModel.Spread2*
  name: Spread2
  nameWithType: BasisSwapModel.Spread2
  fullName: Cephei.QL.BasisSwapModel.Spread2
- uid: Cephei.QL.BasisSwapModel.Spread1*
  commentId: Overload:Cephei.QL.BasisSwapModel.Spread1*
  name: Spread1
  nameWithType: BasisSwapModel.Spread1
  fullName: Cephei.QL.BasisSwapModel.Spread1
- uid: Cephei.QL.BasisSwapModel.PricingEngine*
  commentId: Overload:Cephei.QL.BasisSwapModel.PricingEngine*
  name: PricingEngine
  nameWithType: BasisSwapModel.PricingEngine
  fullName: Cephei.QL.BasisSwapModel.PricingEngine
- uid: Cephei.QL.BasisSwapModel.NpvDateDiscount*
  commentId: Overload:Cephei.QL.BasisSwapModel.NpvDateDiscount*
  name: NpvDateDiscount
  nameWithType: BasisSwapModel.NpvDateDiscount
  fullName: Cephei.QL.BasisSwapModel.NpvDateDiscount
- uid: Cephei.QL.BasisSwapModel.Nominal*
  commentId: Overload:Cephei.QL.BasisSwapModel.Nominal*
  name: Nominal
  nameWithType: BasisSwapModel.Nominal
  fullName: Cephei.QL.BasisSwapModel.Nominal
- uid: Cephei.QL.BasisSwapModel.NPV*
  commentId: Overload:Cephei.QL.BasisSwapModel.NPV*
  name: NPV
  nameWithType: BasisSwapModel.NPV
  fullName: Cephei.QL.BasisSwapModel.NPV
- uid: Cephei.QL.BasisSwapModel.MaturityDate*
  commentId: Overload:Cephei.QL.BasisSwapModel.MaturityDate*
  name: MaturityDate
  nameWithType: BasisSwapModel.MaturityDate
  fullName: Cephei.QL.BasisSwapModel.MaturityDate
- uid: Cephei.QL.BasisSwapModel.IsExpired*
  commentId: Overload:Cephei.QL.BasisSwapModel.IsExpired*
  name: IsExpired
  nameWithType: BasisSwapModel.IsExpired
  fullName: Cephei.QL.BasisSwapModel.IsExpired
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
  name: ICell<bool>
  nameWithType: ICell<bool>
  fullName: Cephei.Cell.Generic.ICell<bool>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.bool
    name: bool
    nameWithType: bool
    fullName: bool
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.BasisSwapModel.IborIndex2*
  commentId: Overload:Cephei.QL.BasisSwapModel.IborIndex2*
  name: IborIndex2
  nameWithType: BasisSwapModel.IborIndex2
  fullName: Cephei.QL.BasisSwapModel.IborIndex2
- uid: Cephei.QL.BasisSwapModel.IborIndex1*
  commentId: Overload:Cephei.QL.BasisSwapModel.IborIndex1*
  name: IborIndex1
  nameWithType: BasisSwapModel.IborIndex1
  fullName: Cephei.QL.BasisSwapModel.IborIndex1
- uid: Cephei.QL.BasisSwapModel.Floating2Schedule*
  commentId: Overload:Cephei.QL.BasisSwapModel.Floating2Schedule*
  name: Floating2Schedule
  nameWithType: BasisSwapModel.Floating2Schedule
  fullName: Cephei.QL.BasisSwapModel.Floating2Schedule
- uid: Cephei.QL.BasisSwapModel.Floating2LegNPV*
  commentId: Overload:Cephei.QL.BasisSwapModel.Floating2LegNPV*
  name: Floating2LegNPV
  nameWithType: BasisSwapModel.Floating2LegNPV
  fullName: Cephei.QL.BasisSwapModel.Floating2LegNPV
- uid: Cephei.QL.BasisSwapModel.Floating2LegBPS*
  commentId: Overload:Cephei.QL.BasisSwapModel.Floating2LegBPS*
  name: Floating2LegBPS
  nameWithType: BasisSwapModel.Floating2LegBPS
  fullName: Cephei.QL.BasisSwapModel.Floating2LegBPS
- uid: Cephei.QL.BasisSwapModel.Floating2Leg*
  commentId: Overload:Cephei.QL.BasisSwapModel.Floating2Leg*
  name: Floating2Leg
  nameWithType: BasisSwapModel.Floating2Leg
  fullName: Cephei.QL.BasisSwapModel.Floating2Leg
- uid: Cephei.QL.BasisSwapModel.Floating1Schedule*
  commentId: Overload:Cephei.QL.BasisSwapModel.Floating1Schedule*
  name: Floating1Schedule
  nameWithType: BasisSwapModel.Floating1Schedule
  fullName: Cephei.QL.BasisSwapModel.Floating1Schedule
- uid: Cephei.QL.BasisSwapModel.Floating1LegNPV*
  commentId: Overload:Cephei.QL.BasisSwapModel.Floating1LegNPV*
  name: Floating1LegNPV
  nameWithType: BasisSwapModel.Floating1LegNPV
  fullName: Cephei.QL.BasisSwapModel.Floating1LegNPV
- uid: Cephei.QL.BasisSwapModel.Floating1LegBPS*
  commentId: Overload:Cephei.QL.BasisSwapModel.Floating1LegBPS*
  name: Floating1LegBPS
  nameWithType: BasisSwapModel.Floating1LegBPS
  fullName: Cephei.QL.BasisSwapModel.Floating1LegBPS
- uid: Cephei.QL.BasisSwapModel.Floating1Leg*
  commentId: Overload:Cephei.QL.BasisSwapModel.Floating1Leg*
  name: Floating1Leg
  nameWithType: BasisSwapModel.Floating1Leg
  fullName: Cephei.QL.BasisSwapModel.Floating1Leg
- uid: Cephei.QL.BasisSwapModel.FairShortSpread*
  commentId: Overload:Cephei.QL.BasisSwapModel.FairShortSpread*
  name: FairShortSpread
  nameWithType: BasisSwapModel.FairShortSpread
  fullName: Cephei.QL.BasisSwapModel.FairShortSpread
- uid: Cephei.QL.BasisSwapModel.FairLongSpread*
  commentId: Overload:Cephei.QL.BasisSwapModel.FairLongSpread*
  name: FairLongSpread
  nameWithType: BasisSwapModel.FairLongSpread
  fullName: Cephei.QL.BasisSwapModel.FairLongSpread
- uid: Cephei.QL.BasisSwapModel.EvaluationDate*
  commentId: Overload:Cephei.QL.BasisSwapModel.EvaluationDate*
  name: EvaluationDate
  nameWithType: BasisSwapModel.EvaluationDate
  fullName: Cephei.QL.BasisSwapModel.EvaluationDate
- uid: Cephei.QL.BasisSwapModel.ErrorEstimate*
  commentId: Overload:Cephei.QL.BasisSwapModel.ErrorEstimate*
  name: ErrorEstimate
  nameWithType: BasisSwapModel.ErrorEstimate
  fullName: Cephei.QL.BasisSwapModel.ErrorEstimate
- uid: Cephei.QL.BasisSwapModel.Engine*
  commentId: Overload:Cephei.QL.BasisSwapModel.Engine*
  name: Engine
  nameWithType: BasisSwapModel.Engine
  fullName: Cephei.QL.BasisSwapModel.Engine
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Swap.SwapEngine>
  name: ICell<SwapEngine>
  nameWithType: ICell<SwapEngine>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Swap.SwapEngine>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Swap.SwapEngine
    name: SwapEngine
    nameWithType: SwapEngine
    fullName: QLNet.Swap.SwapEngine
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.BasisSwapModel.CASH*
  commentId: Overload:Cephei.QL.BasisSwapModel.CASH*
  name: CASH
  nameWithType: BasisSwapModel.CASH
  fullName: Cephei.QL.BasisSwapModel.CASH
