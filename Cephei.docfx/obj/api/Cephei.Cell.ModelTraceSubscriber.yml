### YamlMime:ManagedReference
items:
- uid: Cephei.Cell.ModelTraceSubscriber
  commentId: T:Cephei.Cell.ModelTraceSubscriber
  id: ModelTraceSubscriber
  parent: Cephei.Cell
  children:
  - Cephei.Cell.ModelTraceSubscriber.#ctor(Cephei.Cell.Model,Microsoft.FSharp.Core.FSharpFunc{Cephei.Cell.ICell,System.String},System.String)
  - Cephei.Cell.ModelTraceSubscriber.Dispose
  - Cephei.Cell.ModelTraceSubscriber.Finalize
  - Cephei.Cell.ModelTraceSubscriber.OnCompleted
  - Cephei.Cell.ModelTraceSubscriber.OnError(Exception)
  - Cephei.Cell.ModelTraceSubscriber.OnNext(Tuple{Cephei.Cell.ISession,Cephei.Cell.Model,Cephei.Cell.CellEvent,Cephei.Cell.ICell,DateTime})
  langs:
  - csharp
  - vb
  name: ModelTraceSubscriber
  nameWithType: ModelTraceSubscriber
  fullName: Cephei.Cell.ModelTraceSubscriber
  type: Class
  source:
    remote:
      path: Cephei.Cell/ModelObserver.cs
      branch: master
      repo: https://github.com/channell/Cephei
    id: ModelTraceSubscriber
    path: ../Cephei.Cell/ModelObserver.cs
    startLine: 213
  assemblies:
  - Cephei - Backup.Cell
  namespace: Cephei.Cell
  syntax:
    content: 'public class ModelTraceSubscriber : IObserver<Tuple<ISession, Model, CellEvent, ICell, DateTime>>, IDisposable'
    content.vb: >-
      Public Class ModelTraceSubscriber
          Inherits IObserver(Of Tuple(Of ISession, Model, CellEvent, ICell, DateTime))
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - IDisposable
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cephei.Cell.ModelTraceSubscriber.#ctor(Cephei.Cell.Model,Microsoft.FSharp.Core.FSharpFunc{Cephei.Cell.ICell,System.String},System.String)
  commentId: M:Cephei.Cell.ModelTraceSubscriber.#ctor(Cephei.Cell.Model,Microsoft.FSharp.Core.FSharpFunc{Cephei.Cell.ICell,System.String},System.String)
  id: '#ctor(Cephei.Cell.Model,Microsoft.FSharp.Core.FSharpFunc{Cephei.Cell.ICell,System.String},System.String)'
  parent: Cephei.Cell.ModelTraceSubscriber
  langs:
  - csharp
  - vb
  name: ModelTraceSubscriber(Model, FSharpFunc<ICell, String>, String)
  nameWithType: ModelTraceSubscriber.ModelTraceSubscriber(Model, FSharpFunc<ICell, String>, String)
  fullName: Cephei.Cell.ModelTraceSubscriber.ModelTraceSubscriber(Cephei.Cell.Model, Microsoft.FSharp.Core.FSharpFunc<Cephei.Cell.ICell, System.String>, System.String)
  type: Constructor
  source:
    remote:
      path: Cephei.Cell/ModelObserver.cs
      branch: master
      repo: https://github.com/channell/Cephei
    id: .ctor
    path: ../Cephei.Cell/ModelObserver.cs
    startLine: 218
  assemblies:
  - Cephei - Backup.Cell
  namespace: Cephei.Cell
  syntax:
    content: public ModelTraceSubscriber(Model source, FSharpFunc<ICell, string> formater, string prefix = "")
    parameters:
    - id: source
      type: Cephei.Cell.Model
    - id: formater
      type: Microsoft.FSharp.Core.FSharpFunc{Cephei.Cell.ICell,System.String}
    - id: prefix
      type: System.String
    content.vb: Public Sub New(source As Model, formater As FSharpFunc(Of ICell, String), prefix As String = "")
  overload: Cephei.Cell.ModelTraceSubscriber.#ctor*
  nameWithType.vb: ModelTraceSubscriber.ModelTraceSubscriber(Model, FSharpFunc(Of ICell, String), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cephei.Cell.ModelTraceSubscriber.ModelTraceSubscriber(Cephei.Cell.Model, Microsoft.FSharp.Core.FSharpFunc(Of Cephei.Cell.ICell, System.String), System.String)
  name.vb: ModelTraceSubscriber(Model, FSharpFunc(Of ICell, String), String)
- uid: Cephei.Cell.ModelTraceSubscriber.OnCompleted
  commentId: M:Cephei.Cell.ModelTraceSubscriber.OnCompleted
  id: OnCompleted
  parent: Cephei.Cell.ModelTraceSubscriber
  langs:
  - csharp
  - vb
  name: OnCompleted()
  nameWithType: ModelTraceSubscriber.OnCompleted()
  fullName: Cephei.Cell.ModelTraceSubscriber.OnCompleted()
  type: Method
  source:
    remote:
      path: Cephei.Cell/ModelObserver.cs
      branch: master
      repo: https://github.com/channell/Cephei
    id: OnCompleted
    path: ../Cephei.Cell/ModelObserver.cs
    startLine: 225
  assemblies:
  - Cephei - Backup.Cell
  namespace: Cephei.Cell
  syntax:
    content: public void OnCompleted()
    content.vb: Public Sub OnCompleted
  overload: Cephei.Cell.ModelTraceSubscriber.OnCompleted*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cephei.Cell.ModelTraceSubscriber.OnError(Exception)
  commentId: M:Cephei.Cell.ModelTraceSubscriber.OnError(Exception)
  id: OnError(Exception)
  parent: Cephei.Cell.ModelTraceSubscriber
  langs:
  - csharp
  - vb
  name: OnError(Exception)
  nameWithType: ModelTraceSubscriber.OnError(Exception)
  fullName: Cephei.Cell.ModelTraceSubscriber.OnError(Exception)
  type: Method
  source:
    remote:
      path: Cephei.Cell/ModelObserver.cs
      branch: master
      repo: https://github.com/channell/Cephei
    id: OnError
    path: ../Cephei.Cell/ModelObserver.cs
    startLine: 230
  assemblies:
  - Cephei - Backup.Cell
  namespace: Cephei.Cell
  syntax:
    content: public void OnError(Exception error)
    parameters:
    - id: error
      type: Exception
    content.vb: Public Sub OnError(error As Exception)
  overload: Cephei.Cell.ModelTraceSubscriber.OnError*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cephei.Cell.ModelTraceSubscriber.OnNext(Tuple{Cephei.Cell.ISession,Cephei.Cell.Model,Cephei.Cell.CellEvent,Cephei.Cell.ICell,DateTime})
  commentId: M:Cephei.Cell.ModelTraceSubscriber.OnNext(Tuple{Cephei.Cell.ISession,Cephei.Cell.Model,Cephei.Cell.CellEvent,Cephei.Cell.ICell,DateTime})
  id: OnNext(Tuple{Cephei.Cell.ISession,Cephei.Cell.Model,Cephei.Cell.CellEvent,Cephei.Cell.ICell,DateTime})
  parent: Cephei.Cell.ModelTraceSubscriber
  langs:
  - csharp
  - vb
  name: OnNext(Tuple<ISession, Model, CellEvent, ICell, DateTime>)
  nameWithType: ModelTraceSubscriber.OnNext(Tuple<ISession, Model, CellEvent, ICell, DateTime>)
  fullName: Cephei.Cell.ModelTraceSubscriber.OnNext(Tuple<Cephei.Cell.ISession, Cephei.Cell.Model, Cephei.Cell.CellEvent, Cephei.Cell.ICell, DateTime>)
  type: Method
  source:
    remote:
      path: Cephei.Cell/ModelObserver.cs
      branch: master
      repo: https://github.com/channell/Cephei
    id: OnNext
    path: ../Cephei.Cell/ModelObserver.cs
    startLine: 235
  assemblies:
  - Cephei - Backup.Cell
  namespace: Cephei.Cell
  syntax:
    content: public void OnNext(Tuple<ISession, Model, CellEvent, ICell, DateTime> value)
    parameters:
    - id: value
      type: Tuple{Cephei.Cell.ISession,Cephei.Cell.Model,Cephei.Cell.CellEvent,Cephei.Cell.ICell,DateTime}
    content.vb: Public Sub OnNext(value As Tuple(Of ISession, Model, CellEvent, ICell, DateTime))
  overload: Cephei.Cell.ModelTraceSubscriber.OnNext*
  nameWithType.vb: ModelTraceSubscriber.OnNext(Tuple(Of ISession, Model, CellEvent, ICell, DateTime))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cephei.Cell.ModelTraceSubscriber.OnNext(Tuple(Of Cephei.Cell.ISession, Cephei.Cell.Model, Cephei.Cell.CellEvent, Cephei.Cell.ICell, DateTime))
  name.vb: OnNext(Tuple(Of ISession, Model, CellEvent, ICell, DateTime))
- uid: Cephei.Cell.ModelTraceSubscriber.Dispose
  commentId: M:Cephei.Cell.ModelTraceSubscriber.Dispose
  id: Dispose
  parent: Cephei.Cell.ModelTraceSubscriber
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ModelTraceSubscriber.Dispose()
  fullName: Cephei.Cell.ModelTraceSubscriber.Dispose()
  type: Method
  source:
    remote:
      path: Cephei.Cell/ModelObserver.cs
      branch: master
      repo: https://github.com/channell/Cephei
    id: Dispose
    path: ../Cephei.Cell/ModelObserver.cs
    startLine: 240
  assemblies:
  - Cephei - Backup.Cell
  namespace: Cephei.Cell
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Cephei.Cell.ModelTraceSubscriber.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cephei.Cell.ModelTraceSubscriber.Finalize
  commentId: M:Cephei.Cell.ModelTraceSubscriber.Finalize
  id: Finalize
  parent: Cephei.Cell.ModelTraceSubscriber
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: ModelTraceSubscriber.Finalize()
  fullName: Cephei.Cell.ModelTraceSubscriber.Finalize()
  type: Method
  source:
    remote:
      path: Cephei.Cell/ModelObserver.cs
      branch: master
      repo: https://github.com/channell/Cephei
    id: Finalize
    path: ../Cephei.Cell/ModelObserver.cs
    startLine: 245
  assemblies:
  - Cephei - Backup.Cell
  namespace: Cephei.Cell
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: Cephei.Cell.ModelTraceSubscriber.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Cephei.Cell
  commentId: N:Cephei.Cell
  name: Cephei.Cell
  nameWithType: Cephei.Cell
  fullName: Cephei.Cell
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: IDisposable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Cephei.Cell.ModelTraceSubscriber.#ctor*
  commentId: Overload:Cephei.Cell.ModelTraceSubscriber.#ctor
  name: ModelTraceSubscriber
  nameWithType: ModelTraceSubscriber.ModelTraceSubscriber
  fullName: Cephei.Cell.ModelTraceSubscriber.ModelTraceSubscriber
- uid: Cephei.Cell.Model
  commentId: T:Cephei.Cell.Model
  parent: Cephei.Cell
  name: Model
  nameWithType: Model
  fullName: Cephei.Cell.Model
- uid: Microsoft.FSharp.Core.FSharpFunc{Cephei.Cell.ICell,System.String}
  commentId: T:Microsoft.FSharp.Core.FSharpFunc{Cephei.Cell.ICell,System.String}
  parent: Microsoft.FSharp.Core
  definition: Microsoft.FSharp.Core.FSharpFunc`2
  name: FSharpFunc<ICell, String>
  nameWithType: FSharpFunc<ICell, String>
  fullName: Microsoft.FSharp.Core.FSharpFunc<Cephei.Cell.ICell, System.String>
  nameWithType.vb: FSharpFunc(Of ICell, String)
  fullName.vb: Microsoft.FSharp.Core.FSharpFunc(Of Cephei.Cell.ICell, System.String)
  name.vb: FSharpFunc(Of ICell, String)
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.FSharp.Core.FSharpFunc`2
  commentId: T:Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: true
  name: FSharpFunc<T, TResult>
  nameWithType: FSharpFunc<T, TResult>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T, TResult>
  nameWithType.vb: FSharpFunc(Of T, TResult)
  fullName.vb: Microsoft.FSharp.Core.FSharpFunc(Of T, TResult)
  name.vb: FSharpFunc(Of T, TResult)
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.FSharp.Core
  commentId: N:Microsoft.FSharp.Core
  isExternal: true
  name: Microsoft.FSharp.Core
  nameWithType: Microsoft.FSharp.Core
  fullName: Microsoft.FSharp.Core
- uid: Cephei.Cell.ModelTraceSubscriber.OnCompleted*
  commentId: Overload:Cephei.Cell.ModelTraceSubscriber.OnCompleted
  name: OnCompleted
  nameWithType: ModelTraceSubscriber.OnCompleted
  fullName: Cephei.Cell.ModelTraceSubscriber.OnCompleted
- uid: Cephei.Cell.ModelTraceSubscriber.OnError*
  commentId: Overload:Cephei.Cell.ModelTraceSubscriber.OnError
  name: OnError
  nameWithType: ModelTraceSubscriber.OnError
  fullName: Cephei.Cell.ModelTraceSubscriber.OnError
- uid: Exception
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: Exception
- uid: Cephei.Cell.ModelTraceSubscriber.OnNext*
  commentId: Overload:Cephei.Cell.ModelTraceSubscriber.OnNext
  name: OnNext
  nameWithType: ModelTraceSubscriber.OnNext
  fullName: Cephei.Cell.ModelTraceSubscriber.OnNext
- uid: Tuple{Cephei.Cell.ISession,Cephei.Cell.Model,Cephei.Cell.CellEvent,Cephei.Cell.ICell,DateTime}
  commentId: '!:Tuple{Cephei.Cell.ISession,Cephei.Cell.Model,Cephei.Cell.CellEvent,Cephei.Cell.ICell,DateTime}'
  definition: Tuple`5
  name: Tuple<ISession, Model, CellEvent, ICell, DateTime>
  nameWithType: Tuple<ISession, Model, CellEvent, ICell, DateTime>
  fullName: Tuple<Cephei.Cell.ISession, Cephei.Cell.Model, Cephei.Cell.CellEvent, Cephei.Cell.ICell, DateTime>
  nameWithType.vb: Tuple(Of ISession, Model, CellEvent, ICell, DateTime)
  fullName.vb: Tuple(Of Cephei.Cell.ISession, Cephei.Cell.Model, Cephei.Cell.CellEvent, Cephei.Cell.ICell, DateTime)
  name.vb: Tuple(Of ISession, Model, CellEvent, ICell, DateTime)
  spec.csharp:
  - uid: Tuple`5
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Tuple`5
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tuple`5
  isExternal: true
  name: Tuple<, , , , >
  nameWithType: Tuple<, , , , >
  fullName: Tuple<, , , , >
  nameWithType.vb: Tuple(Of , , , , )
  fullName.vb: Tuple(Of , , , , )
  name.vb: Tuple(Of , , , , )
  spec.csharp:
  - uid: Tuple`5
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Tuple`5
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Cephei.Cell.ModelTraceSubscriber.Dispose*
  commentId: Overload:Cephei.Cell.ModelTraceSubscriber.Dispose
  name: Dispose
  nameWithType: ModelTraceSubscriber.Dispose
  fullName: Cephei.Cell.ModelTraceSubscriber.Dispose
- uid: Cephei.Cell.ModelTraceSubscriber.Finalize*
  commentId: Overload:Cephei.Cell.ModelTraceSubscriber.Finalize
  name: Finalize
  nameWithType: ModelTraceSubscriber.Finalize
  fullName: Cephei.Cell.ModelTraceSubscriber.Finalize
