### YamlMime:ManagedReference
items:
- uid: Cephei.QL.Util
  commentId: T:Cephei.QL.Util
  id: Util
  parent: Cephei.QL
  children:
  - Cephei.QL.Util.cell(unit -> 'f)
  - Cephei.QL.Util.future(unit -> 'f)
  - Cephei.QL.Util.nullableNull(unit)
  - Cephei.QL.Util.toCellList(seq<Cephei.Cell.Generic.ICell<'c>>)
  - Cephei.QL.Util.toGeneric('i list)
  - Cephei.QL.Util.toHandle('T)
  - Cephei.QL.Util.toNullable('T)
  - Cephei.QL.Util.triv(unit -> 'f)
  - Cephei.QL.Util.value('?13100)
  - Cephei.QL.Util.withEngine(Cephei.Cell.Generic.ICell<QLNet.IPricingEngine> -> 'priced)
  - Cephei.QL.Util.withEvaluationDate(Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<'i>)
  langs:
  - csharp
  - vb
  name: Util (mod)
  nameWithType: Cephei.QL.Util
  fullName: Cephei.QL.Util
  type: Class
  source:
    id: Cephei.QL.Util
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Util.fs
    startLine: 27
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: module Util
    typeParameters: []
  attributes: []
- uid: Cephei.QL.Util.value('?13100)
  commentId: M:Cephei.QL.Util.value``1(``0)
  id: value('?13100)
  parent: Cephei.QL.Util
  langs:
  - csharp
  - vb
  name: "val value: '?13100 -> Cell<'?13100>"
  nameWithType: "val Util.value: '?13100 -> Cell<'?13100>"
  fullName: "val Cephei.QL.Util.value: '?13100 -> Cephei.Cell.Generic.Cell<'?13100>"
  type: Method
  source:
    id: Cephei.QL.Util.value('?13100)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Util.fs
    startLine: 29
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: "val value: v:'?13100 -> Cell<'?13100>"
    parameters:
    - id: v
      type: TypeRef:'?13100
      attributes: []
    typeParameters:
    - id: "'?"
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.Cell`1<'?13100>
      attributes: []
  overload: Cephei.QL.Util.value*
  attributes: []
- uid: Cephei.QL.Util.cell(unit -> 'f)
  commentId: M:Cephei.QL.Util.cell``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0})
  id: cell(unit -> 'f)
  parent: Cephei.QL.Util
  langs:
  - csharp
  - vb
  name: "val cell: unit -> 'f -> ICell<'f>"
  nameWithType: "val Util.cell: unit -> 'f -> ICell<'f>"
  fullName: "val Cephei.QL.Util.cell: unit -> 'f -> Cephei.Cell.Generic.ICell<'f>"
  type: Method
  source:
    id: Cephei.QL.Util.cell(unit -> 'f)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Util.fs
    startLine: 32
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: "val cell: f:unit -> 'f -> ICell<'f>"
    parameters:
    - id: f
      type: TypeRef:Microsoft.FSharp.Core.unit -> 'f
      attributes: []
    typeParameters:
    - id: "'f"
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<'f>
      attributes: []
  overload: Cephei.QL.Util.cell*
  attributes: []
- uid: Cephei.QL.Util.triv(unit -> 'f)
  commentId: M:Cephei.QL.Util.triv``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0})
  id: triv(unit -> 'f)
  parent: Cephei.QL.Util
  langs:
  - csharp
  - vb
  name: "val triv: unit -> 'f -> ICell<'f>"
  nameWithType: "val Util.triv: unit -> 'f -> ICell<'f>"
  fullName: "val Cephei.QL.Util.triv: unit -> 'f -> Cephei.Cell.Generic.ICell<'f>"
  type: Method
  source:
    id: Cephei.QL.Util.triv(unit -> 'f)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Util.fs
    startLine: 35
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: "val triv: f:unit -> 'f -> ICell<'f>"
    parameters:
    - id: f
      type: TypeRef:Microsoft.FSharp.Core.unit -> 'f
      attributes: []
    typeParameters:
    - id: "'f"
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<'f>
      attributes: []
  overload: Cephei.QL.Util.triv*
  attributes: []
- uid: Cephei.QL.Util.future(unit -> 'f)
  commentId: M:Cephei.QL.Util.future``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0})
  id: future(unit -> 'f)
  parent: Cephei.QL.Util
  langs:
  - csharp
  - vb
  name: "val future: unit -> 'f -> Lazy<unit -> 'f>"
  nameWithType: "val Util.future: unit -> 'f -> Lazy<unit -> 'f>"
  fullName: "val Cephei.QL.Util.future: unit -> 'f -> FSharp.Control.Lazy<unit -> 'f>"
  type: Method
  source:
    id: Cephei.QL.Util.future(unit -> 'f)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Util.fs
    startLine: 38
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: "val future: f:unit -> 'f -> Lazy<unit -> 'f>"
    parameters:
    - id: f
      type: TypeRef:Microsoft.FSharp.Core.unit -> 'f
      attributes: []
    typeParameters:
    - id: "'f"
    return:
      id: ''
      type: TypeRef:Microsoft.FSharp.Control.Lazy<Microsoft.FSharp.Core.unit -> 'f>
      attributes: []
  overload: Cephei.QL.Util.future*
  attributes: []
- uid: Cephei.QL.Util.withEngine(Cephei.Cell.Generic.ICell<QLNet.IPricingEngine> -> 'priced)
  commentId: M:Cephei.QL.Util.withEngine``1(Cephei.Cell.Generic.ICell{QLNet.IPricingEngine},``0)
  id: withEngine(Cephei.Cell.Generic.ICell<QLNet.IPricingEngine> -> 'priced)
  parent: Cephei.QL.Util
  langs:
  - csharp
  - vb
  name: "val withEngine: ICell<IPricingEngine> -> 'priced -> 'priced"
  nameWithType: "val Util.withEngine: ICell<IPricingEngine> -> 'priced -> 'priced"
  fullName: "val Cephei.QL.Util.withEngine: Cephei.Cell.Generic.ICell<QLNet.IPricingEngine> -> 'priced -> 'priced"
  type: Method
  source:
    id: Cephei.QL.Util.withEngine(Cephei.Cell.Generic.ICell<QLNet.IPricingEngine> -> 'priced)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Util.fs
    startLine: 43
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: "val withEngine: e:ICell<IPricingEngine> -> priced:'priced -> 'priced"
    parameters:
    - id: e
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IPricingEngine>
      attributes: []
    - id: priced
      type: TypeRef:'priced
      attributes: []
    typeParameters:
    - id: "'priced"
    return:
      id: ''
      type: TypeRef:'priced
      attributes: []
  overload: Cephei.QL.Util.withEngine*
  attributes: []
- uid: Cephei.QL.Util.withEvaluationDate(Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<'i>)
  commentId: M:Cephei.QL.Util.withEvaluationDate``1(Cephei.Cell.Generic.ICell{QLNet.Date},Cephei.Cell.Generic.ICell{``0})
  id: withEvaluationDate(Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<'i>)
  parent: Cephei.QL.Util
  langs:
  - csharp
  - vb
  name: "val withEvaluationDate: ICell<Date> -> ICell<'i> -> 'i"
  nameWithType: "val Util.withEvaluationDate: ICell<Date> -> ICell<'i> -> 'i"
  fullName: "val Cephei.QL.Util.withEvaluationDate: Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<'i> -> 'i"
  type: Method
  source:
    id: Cephei.QL.Util.withEvaluationDate(Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<'i>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Util.fs
    startLine: 51
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: "val withEvaluationDate: d:ICell<Date> -> i:ICell<'i> -> 'i"
    parameters:
    - id: d
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    - id: i
      type: TypeRef:Cephei.Cell.Generic.ICell`1<'i>
      attributes: []
    typeParameters:
    - id: "'i"
    return:
      id: ''
      type: TypeRef:'i
      attributes: []
  overload: Cephei.QL.Util.withEvaluationDate*
  attributes: []
- uid: Cephei.QL.Util.toGeneric('i list)
  commentId: M:Cephei.QL.Util.toGeneric``1(Microsoft.FSharp.Collections.FSharpList{``0})
  id: toGeneric('i list)
  parent: Cephei.QL.Util
  langs:
  - csharp
  - vb
  name: "val toGeneric: 'i list -> List<'i>"
  nameWithType: "val Util.toGeneric: 'i list -> List<'i>"
  fullName: "val Cephei.QL.Util.toGeneric: 'i list -> System.Collections.Generic.List<'i>"
  type: Method
  source:
    id: Cephei.QL.Util.toGeneric('i list)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Util.fs
    startLine: 56
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: "val toGeneric: l:'i list -> List<'i>"
    parameters:
    - id: l
      type: TypeRef:'i Microsoft.FSharp.Collections.list
      attributes: []
    typeParameters:
    - id: "'i"
    return:
      id: ''
      type: TypeRef:System.Collections.Generic.List`1<'i>
      attributes: []
  overload: Cephei.QL.Util.toGeneric*
  attributes: []
- uid: Cephei.QL.Util.toCellList(seq<Cephei.Cell.Generic.ICell<'c>>)
  commentId: M:Cephei.QL.Util.toCellList``1(System.Collections.Generic.IEnumerable{Cephei.Cell.Generic.ICell{``0}})
  id: toCellList(seq<Cephei.Cell.Generic.ICell<'c>>)
  parent: Cephei.QL.Util
  langs:
  - csharp
  - vb
  name: "val toCellList: seq<ICell<'c>> -> List<'c>"
  nameWithType: "val Util.toCellList: seq<ICell<'c>> -> List<'c>"
  fullName: "val Cephei.QL.Util.toCellList: seq<Cephei.Cell.Generic.ICell<'c>> -> Cephei.Cell.List<'c>"
  type: Method
  source:
    id: Cephei.QL.Util.toCellList(seq<Cephei.Cell.Generic.ICell<'c>>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Util.fs
    startLine: 59
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: "val toCellList: l:seq<ICell<'c>> -> List<'c>"
    parameters:
    - id: l
      type: TypeRef:Microsoft.FSharp.Collections.seq<Cephei.Cell.Generic.ICell`1<'c>>
      attributes: []
    typeParameters:
    - id: "'c"
    return:
      id: ''
      type: TypeRef:Cephei.Cell.List`1<'c>
      attributes: []
  overload: Cephei.QL.Util.toCellList*
  attributes: []
- uid: Cephei.QL.Util.toHandle('T)
  commentId: M:Cephei.QL.Util.toHandle``1(``0)
  id: toHandle('T)
  parent: Cephei.QL.Util
  langs:
  - csharp
  - vb
  name: "val toHandle: 'T -> Handle<'T>"
  nameWithType: "val Util.toHandle: 'T -> Handle<'T>"
  fullName: "val Cephei.QL.Util.toHandle: 'T -> QLNet.Handle<'T>"
  type: Method
  source:
    id: Cephei.QL.Util.toHandle('T)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Util.fs
    startLine: 62
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: "val toHandle: v:'T -> Handle<'T>"
    parameters:
    - id: v
      type: TypeRef:'T
      attributes: []
    typeParameters:
    - id: "'T"
    return:
      id: ''
      type: TypeRef:QLNet.Handle`1<'T>
      attributes: []
  overload: Cephei.QL.Util.toHandle*
  attributes: []
- uid: Cephei.QL.Util.toNullable('T)
  commentId: M:Cephei.QL.Util.toNullable``1(``0)
  id: toNullable('T)
  parent: Cephei.QL.Util
  langs:
  - csharp
  - vb
  name: "val toNullable: 'T -> Nullable<'T>"
  nameWithType: "val Util.toNullable: 'T -> Nullable<'T>"
  fullName: "val Cephei.QL.Util.toNullable: 'T -> System.Nullable<'T>"
  type: Method
  source:
    id: Cephei.QL.Util.toNullable('T)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Util.fs
    startLine: 65
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: "val toNullable: v:'T -> Nullable<'T>"
    parameters:
    - id: v
      type: TypeRef:'T
      attributes: []
    typeParameters:
    - id: "'T"
    return:
      id: ''
      type: TypeRef:System.Nullable`1<'T>
      attributes: []
  overload: Cephei.QL.Util.toNullable*
  attributes: []
- uid: Cephei.QL.Util.nullableNull(unit)
  commentId: M:Cephei.QL.Util.nullableNull``1
  id: nullableNull(unit)
  parent: Cephei.QL.Util
  langs:
  - csharp
  - vb
  name: "val nullableNull: unit -> Nullable<'T>"
  nameWithType: "val Util.nullableNull: unit -> Nullable<'T>"
  fullName: "val Cephei.QL.Util.nullableNull: unit -> System.Nullable<'T>"
  type: Method
  source:
    id: Cephei.QL.Util.nullableNull(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Util.fs
    startLine: 68
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: "val nullableNull: unit -> Nullable<'T>"
    parameters:
    - id: ''
      type: TypeRef:Microsoft.FSharp.Core.unit
      attributes: []
    typeParameters:
    - id: "'T"
    return:
      id: ''
      type: TypeRef:System.Nullable`1<'T>
      attributes: []
  overload: Cephei.QL.Util.nullableNull*
  attributes: []
references:
- uid: Cephei.QL
  commentId: N:Cephei.QL
  name: Cephei.QL
  nameWithType: Cephei.QL
  fullName: Cephei.QL
- uid: Cephei.QL.Util.value*
  commentId: Overload:Cephei.QL.Util.value*
  name: value
  nameWithType: Util.value
  fullName: Cephei.QL.Util.value
- uid: TypeRef:'?13100
  name: "'?13100"
  nameWithType: "'?13100"
  fullName: "'?13100"
  spec.csharp:
  - {}
  - name: "'?13100"
    nameWithType: "'?13100"
    fullName: "'?13100"
  - {}
- uid: TypeRef:Cephei.Cell.Generic.Cell`1<'?13100>
  name: Cell<'?13100>
  nameWithType: Cell<'?13100>
  fullName: Cephei.Cell.Generic.Cell<'?13100>
  spec.csharp:
  - uid: Cephei.Cell.Generic.Cell`1
    name: Cell
    nameWithType: Cell
    fullName: Cephei.Cell.Generic.Cell
  - name: <
    nameWithType: <
    fullName: <
  - name: "'?13100"
    nameWithType: "'?13100"
    fullName: "'?13100"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.Util.cell*
  commentId: Overload:Cephei.QL.Util.cell*
  name: cell
  nameWithType: Util.cell
  fullName: Cephei.QL.Util.cell
- uid: TypeRef:Microsoft.FSharp.Core.unit -> 'f
  name: unit -> 'f
  nameWithType: unit -> 'f
  fullName: unit -> 'f
  spec.csharp:
  - uid: Microsoft.FSharp.Core.unit
    name: unit
    nameWithType: unit
    fullName: unit
  - name: " -> "
    nameWithType: " -> "
    fullName: " -> "
  - name: "'f"
    nameWithType: "'f"
    fullName: "'f"
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<'f>
  name: ICell<'f>
  nameWithType: ICell<'f>
  fullName: Cephei.Cell.Generic.ICell<'f>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - name: "'f"
    nameWithType: "'f"
    fullName: "'f"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.Util.triv*
  commentId: Overload:Cephei.QL.Util.triv*
  name: triv
  nameWithType: Util.triv
  fullName: Cephei.QL.Util.triv
- uid: Cephei.QL.Util.future*
  commentId: Overload:Cephei.QL.Util.future*
  name: future
  nameWithType: Util.future
  fullName: Cephei.QL.Util.future
- uid: TypeRef:Microsoft.FSharp.Control.Lazy<Microsoft.FSharp.Core.unit -> 'f>
  name: Lazy<unit -> 'f>
  nameWithType: Lazy<unit -> 'f>
  fullName: FSharp.Control.Lazy<unit -> 'f>
  spec.csharp:
  - uid: Microsoft.FSharp.Control.Lazy
    name: Lazy
    nameWithType: Lazy
    fullName: FSharp.Control.Lazy
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.unit
    name: unit
    nameWithType: unit
    fullName: unit
  - name: " -> "
    nameWithType: " -> "
    fullName: " -> "
  - name: "'f"
    nameWithType: "'f"
    fullName: "'f"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.Util.withEngine*
  commentId: Overload:Cephei.QL.Util.withEngine*
  name: withEngine
  nameWithType: Util.withEngine
  fullName: Cephei.QL.Util.withEngine
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IPricingEngine>
  name: ICell<IPricingEngine>
  nameWithType: ICell<IPricingEngine>
  fullName: Cephei.Cell.Generic.ICell<QLNet.IPricingEngine>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.IPricingEngine
    name: IPricingEngine
    nameWithType: IPricingEngine
    fullName: QLNet.IPricingEngine
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:'priced
  name: "'priced"
  nameWithType: "'priced"
  fullName: "'priced"
  spec.csharp:
  - {}
  - name: "'priced"
    nameWithType: "'priced"
    fullName: "'priced"
  - {}
- uid: Cephei.QL.Util.withEvaluationDate*
  commentId: Overload:Cephei.QL.Util.withEvaluationDate*
  name: withEvaluationDate
  nameWithType: Util.withEvaluationDate
  fullName: Cephei.QL.Util.withEvaluationDate
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
  name: ICell<Date>
  nameWithType: ICell<Date>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Date>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Date
    name: Date
    nameWithType: Date
    fullName: QLNet.Date
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<'i>
  name: ICell<'i>
  nameWithType: ICell<'i>
  fullName: Cephei.Cell.Generic.ICell<'i>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - name: "'i"
    nameWithType: "'i"
    fullName: "'i"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:'i
  name: "'i"
  nameWithType: "'i"
  fullName: "'i"
  spec.csharp:
  - {}
  - name: "'i"
    nameWithType: "'i"
    fullName: "'i"
  - {}
- uid: Cephei.QL.Util.toGeneric*
  commentId: Overload:Cephei.QL.Util.toGeneric*
  name: toGeneric
  nameWithType: Util.toGeneric
  fullName: Cephei.QL.Util.toGeneric
- uid: TypeRef:'i Microsoft.FSharp.Collections.list
  name: "'i list"
  nameWithType: "'i list"
  fullName: "'i list"
  spec.csharp:
  - name: "'i"
    nameWithType: "'i"
    fullName: "'i"
  - name: " "
    nameWithType: " "
    fullName: " "
  - uid: Microsoft.FSharp.Collections.list
    name: list
    nameWithType: list
    fullName: list
- uid: TypeRef:System.Collections.Generic.List`1<'i>
  name: List<'i>
  nameWithType: List<'i>
  fullName: System.Collections.Generic.List<'i>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
  - name: <
    nameWithType: <
    fullName: <
  - name: "'i"
    nameWithType: "'i"
    fullName: "'i"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.Util.toCellList*
  commentId: Overload:Cephei.QL.Util.toCellList*
  name: toCellList
  nameWithType: Util.toCellList
  fullName: Cephei.QL.Util.toCellList
- uid: TypeRef:Microsoft.FSharp.Collections.seq<Cephei.Cell.Generic.ICell`1<'c>>
  name: seq<ICell<'c>>
  nameWithType: seq<ICell<'c>>
  fullName: seq<Cephei.Cell.Generic.ICell<'c>>
  spec.csharp:
  - uid: Microsoft.FSharp.Collections.seq
    name: seq
    nameWithType: seq
    fullName: seq
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - name: "'c"
    nameWithType: "'c"
    fullName: "'c"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.List`1<'c>
  name: List<'c>
  nameWithType: List<'c>
  fullName: Cephei.Cell.List<'c>
  spec.csharp:
  - uid: Cephei.Cell.List`1
    name: List
    nameWithType: List
    fullName: Cephei.Cell.List
  - name: <
    nameWithType: <
    fullName: <
  - name: "'c"
    nameWithType: "'c"
    fullName: "'c"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.Util.toHandle*
  commentId: Overload:Cephei.QL.Util.toHandle*
  name: toHandle
  nameWithType: Util.toHandle
  fullName: Cephei.QL.Util.toHandle
- uid: TypeRef:'T
  name: "'T"
  nameWithType: "'T"
  fullName: "'T"
  spec.csharp:
  - {}
  - name: "'T"
    nameWithType: "'T"
    fullName: "'T"
  - {}
- uid: TypeRef:QLNet.Handle`1<'T>
  name: Handle<'T>
  nameWithType: Handle<'T>
  fullName: QLNet.Handle<'T>
  spec.csharp:
  - uid: QLNet.Handle`1
    name: Handle
    nameWithType: Handle
    fullName: QLNet.Handle
  - name: <
    nameWithType: <
    fullName: <
  - name: "'T"
    nameWithType: "'T"
    fullName: "'T"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.Util.toNullable*
  commentId: Overload:Cephei.QL.Util.toNullable*
  name: toNullable
  nameWithType: Util.toNullable
  fullName: Cephei.QL.Util.toNullable
- uid: TypeRef:System.Nullable`1<'T>
  name: Nullable<'T>
  nameWithType: Nullable<'T>
  fullName: System.Nullable<'T>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - name: "'T"
    nameWithType: "'T"
    fullName: "'T"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.Util.nullableNull*
  commentId: Overload:Cephei.QL.Util.nullableNull*
  name: nullableNull
  nameWithType: Util.nullableNull
  fullName: Cephei.QL.Util.nullableNull
- uid: TypeRef:Microsoft.FSharp.Core.unit
  name: unit
  nameWithType: unit
  fullName: unit
  spec.csharp:
  - {}
  - uid: Microsoft.FSharp.Core.unit
    name: unit
    nameWithType: unit
    fullName: unit
  - {}
