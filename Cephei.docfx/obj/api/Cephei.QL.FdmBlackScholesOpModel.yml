### YamlMime:ManagedReference
items:
- uid: Cephei.QL.FdmBlackScholesOpModel
  commentId: T:Cephei.QL.FdmBlackScholesOpModel
  id: FdmBlackScholesOpModel
  parent: Cephei.QL
  children:
  - Cephei.QL.FdmBlackScholesOpModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.FdmMesher> * Cephei.Cell.Generic.ICell<QLNet.GeneralizedBlackScholesProcess> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<bool> * Cephei.Cell.Generic.ICell<System.Nullable<double>> * Cephei.Cell.Generic.ICell<int> * Cephei.Cell.Generic.ICell<QLNet.FdmQuantoHelper>)
  - Cephei.QL.FdmBlackScholesOpModel.Add(Cephei.Cell.Generic.ICell<QLNet.IOperator> -> Cephei.Cell.Generic.ICell<QLNet.IOperator>)
  - Cephei.QL.FdmBlackScholesOpModel.Apply(Cephei.Cell.Generic.ICell<QLNet.Vector>)
  - Cephei.QL.FdmBlackScholesOpModel.Apply_direction(Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<QLNet.Vector>)
  - Cephei.QL.FdmBlackScholesOpModel.Apply_mixed(Cephei.Cell.Generic.ICell<QLNet.Vector>)
  - Cephei.QL.FdmBlackScholesOpModel.ApplyTo(Cephei.Cell.Generic.ICell<QLNet.Vector>)
  - Cephei.QL.FdmBlackScholesOpModel.bsProcess(unit)
  - Cephei.QL.FdmBlackScholesOpModel.Clone(unit)
  - Cephei.QL.FdmBlackScholesOpModel.direction(unit)
  - Cephei.QL.FdmBlackScholesOpModel.Identity(Cephei.Cell.Generic.ICell<int>)
  - Cephei.QL.FdmBlackScholesOpModel.illegalLocalVolOverwrite(unit)
  - Cephei.QL.FdmBlackScholesOpModel.IsTimeDependent(unit)
  - Cephei.QL.FdmBlackScholesOpModel.localVol(unit)
  - Cephei.QL.FdmBlackScholesOpModel.mesher(unit)
  - Cephei.QL.FdmBlackScholesOpModel.Multiply(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.IOperator>)
  - Cephei.QL.FdmBlackScholesOpModel.Preconditioner(Cephei.Cell.Generic.ICell<QLNet.Vector> -> Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.FdmBlackScholesOpModel.quantoHelper(unit)
  - Cephei.QL.FdmBlackScholesOpModel.SetTime(Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.FdmBlackScholesOpModel.SetTime1(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.FdmBlackScholesOpModel.Size(unit)
  - Cephei.QL.FdmBlackScholesOpModel.Solve_splitting(Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<QLNet.Vector> -> Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.FdmBlackScholesOpModel.SolveFor(Cephei.Cell.Generic.ICell<QLNet.Vector>)
  - Cephei.QL.FdmBlackScholesOpModel.strike(unit)
  - Cephei.QL.FdmBlackScholesOpModel.Subtract(Cephei.Cell.Generic.ICell<QLNet.IOperator> -> Cephei.Cell.Generic.ICell<QLNet.IOperator>)
  - Cephei.QL.FdmBlackScholesOpModel.ToMatrix(unit)
  - Cephei.QL.FdmBlackScholesOpModel.ToMatrixDecomp(unit)
  langs:
  - csharp
  - vb
  name: FdmBlackScholesOpModel
  nameWithType: Cephei.QL.FdmBlackScholesOpModel
  fullName: Cephei.QL.FdmBlackScholesOpModel
  type: Class
  source:
    id: Cephei.QL.FdmBlackScholesOpModel
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 35
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: >-
      [<AutoSerializable(true)>]

      type FdmBlackScholesOpModel (mesher:ICell<FdmMesher>, bsProcess:ICell<GeneralizedBlackScholesProcess>, strike:ICell<double>, localVol:ICell<bool>, illegalLocalVolOverwrite:ICell<Nullable<double>>, direction:ICell<int>, quantoHelper:ICell<FdmQuantoHelper>)
          inherit Model<FdmBlackScholesOp>
          interface IDictionary<string,ICell>
          interface ICollection<KeyValuePair<string,ICell>>
          interface IReadOnlyDictionary<string,ICell>
          interface IReadOnlyCollection<KeyValuePair<string,ICell>>
          interface IEnumerable<KeyValuePair<string,ICell>>
          interface IDictionary
          interface ICollection
          interface IEnumerable
          interface IObservable<ICell>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
          interface IObservable<ISession * Model * CellEvent * ICell * DateTime>
          interface IObservable<KeyValuePair<string,float>>
          interface IObservable<KeyValuePair<string,int>>
          interface IObservable<KeyValuePair<string,decimal>>
          interface ICell<FdmBlackScholesOp>
          interface ICell
          interface ICellEvent
          interface IObservable<FdmBlackScholesOp>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,FdmBlackScholesOp>>>
          interface IObservable<ISession * ICell<FdmBlackScholesOp> * CellEvent * ICell * DateTime>
          interface IObserver<FdmBlackScholesOp>
    parameters:
    - id: mesher
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FdmMesher>
      attributes: []
    - id: bsProcess
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.GeneralizedBlackScholesProcess>
      attributes: []
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: localVol
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
    - id: illegalLocalVolOverwrite
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Nullable`1<Microsoft.FSharp.Core.double>>
      attributes: []
    - id: direction
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
    - id: quantoHelper
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FdmQuantoHelper>
      attributes: []
    typeParameters: []
  inheritance:
  - TypeRef:System.Object
  - TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:Cephei.Cell.Model
  - TypeRef:Cephei.Cell.Generic.Model`1<QLNet.FdmBlackScholesOp>
  implements:
  - TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FdmBlackScholesOp>
  - TypeRef:Cephei.Cell.ICell
  - TypeRef:Cephei.Cell.ICellEvent
  - TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.ICollection
  - TypeRef:System.Collections.IDictionary
  - TypeRef:System.Collections.IEnumerable
  - TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.FdmBlackScholesOp> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<QLNet.FdmBlackScholesOp>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.FdmBlackScholesOp>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  - TypeRef:System.IObserver`1<QLNet.FdmBlackScholesOp>
  inheritedMembers:
  - Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  - Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  - Cephei.Cell.Generic.Model`1.OnError(exn)
  - Cephei.Cell.Generic.Model`1.OnNext('T)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  - Cephei.Cell.Generic.Model`1.Value(unit)
  - Cephei.Cell.Model.As(string)
  - Cephei.Cell.Model.Bind(unit)
  - Cephei.Cell.Model.Box(unit)
  - Cephei.Cell.Model.Change()
  - Cephei.Cell.Model.Create(Unit -> 'T * string)
  - Cephei.Cell.Model.CreateValue('T * string)
  - Cephei.Cell.Model.Dependants(unit)
  - Cephei.Cell.Model.Dispose(unit)
  - Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.HasFunction(unit)
  - Cephei.Cell.Model.HasValue(unit)
  - Cephei.Cell.Model.Item(string)
  - Cephei.Cell.Model.Mnemonic(unit)
  - Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  - Cephei.Cell.Model.Parent(unit)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  - Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  - Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  - Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  - Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  attributes:
  - type: Microsoft.FSharp.Core.AutoSerializableAttribute
    arguments:
    - type: System.Boolean
      value: true
    namedArguments: []
- uid: Cephei.QL.FdmBlackScholesOpModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.FdmMesher> * Cephei.Cell.Generic.ICell<QLNet.GeneralizedBlackScholesProcess> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<bool> * Cephei.Cell.Generic.ICell<System.Nullable<double>> * Cephei.Cell.Generic.ICell<int> * Cephei.Cell.Generic.ICell<QLNet.FdmQuantoHelper>)
  commentId: M:Cephei.QL.FdmBlackScholesOpModel.#ctor(Cephei.Cell.Generic.ICell{QLNet.FdmMesher},Cephei.Cell.Generic.ICell{QLNet.GeneralizedBlackScholesProcess},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Boolean},Cephei.Cell.Generic.ICell{System.Nullable{System.Double}},Cephei.Cell.Generic.ICell{System.Int32},Cephei.Cell.Generic.ICell{QLNet.FdmQuantoHelper})
  id: '#ctor(Cephei.Cell.Generic.ICell<QLNet.FdmMesher> * Cephei.Cell.Generic.ICell<QLNet.GeneralizedBlackScholesProcess> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<bool> * Cephei.Cell.Generic.ICell<System.Nullable<double>> * Cephei.Cell.Generic.ICell<int> * Cephei.Cell.Generic.ICell<QLNet.FdmQuantoHelper>)'
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'new: ICell<FdmMesher> * ICell<GeneralizedBlackScholesProcess> * ICell<double> * ICell<bool> * ICell<Nullable<double>> * ICell<int> * ICell<FdmQuantoHelper> -> FdmBlackScholesOpModel'
  nameWithType: 'new: ICell<FdmMesher> * ICell<GeneralizedBlackScholesProcess> * ICell<double> * ICell<bool> * ICell<Nullable<double>> * ICell<int> * ICell<FdmQuantoHelper> -> FdmBlackScholesOpModel'
  fullName: 'new: Cephei.Cell.Generic.ICell<QLNet.FdmMesher> * Cephei.Cell.Generic.ICell<QLNet.GeneralizedBlackScholesProcess> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<bool> * Cephei.Cell.Generic.ICell<System.Nullable<double>> * Cephei.Cell.Generic.ICell<int> * Cephei.Cell.Generic.ICell<QLNet.FdmQuantoHelper> -> Cephei.QL.FdmBlackScholesOpModel'
  type: Constructor
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.FdmMesher> * Cephei.Cell.Generic.ICell<QLNet.GeneralizedBlackScholesProcess> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<bool> * Cephei.Cell.Generic.ICell<System.Nullable<double>> * Cephei.Cell.Generic.ICell<int> * Cephei.Cell.Generic.ICell<QLNet.FdmQuantoHelper>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 35
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  summary: Implicit constructor.
  syntax:
    content: 'new: mesher:ICell<FdmMesher> * bsProcess:ICell<GeneralizedBlackScholesProcess> * strike:ICell<double> * localVol:ICell<bool> * illegalLocalVolOverwrite:ICell<Nullable<double>> * direction:ICell<int> * quantoHelper:ICell<FdmQuantoHelper> -> FdmBlackScholesOpModel'
    parameters:
    - id: mesher
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FdmMesher>
      attributes: []
    - id: bsProcess
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.GeneralizedBlackScholesProcess>
      attributes: []
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: localVol
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
    - id: illegalLocalVolOverwrite
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Nullable`1<Microsoft.FSharp.Core.double>>
      attributes: []
    - id: direction
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
    - id: quantoHelper
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FdmQuantoHelper>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.QL.FdmBlackScholesOpModel
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.#ctor*
  attributes: []
- uid: Cephei.QL.FdmBlackScholesOpModel.Add(Cephei.Cell.Generic.ICell<QLNet.IOperator> -> Cephei.Cell.Generic.ICell<QLNet.IOperator>)
  commentId: M:Cephei.QL.FdmBlackScholesOpModel.Add(Cephei.Cell.Generic.ICell{QLNet.IOperator},Cephei.Cell.Generic.ICell{QLNet.IOperator})
  id: Add(Cephei.Cell.Generic.ICell<QLNet.IOperator> -> Cephei.Cell.Generic.ICell<QLNet.IOperator>)
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'member Add: ICell<IOperator> -> ICell<IOperator> -> ICell<IOperator>'
  nameWithType: 'member FdmBlackScholesOpModel.Add: ICell<IOperator> -> ICell<IOperator> -> ICell<IOperator>'
  fullName: 'member Cephei.QL.FdmBlackScholesOpModel.Add: Cephei.Cell.Generic.ICell<QLNet.IOperator> -> Cephei.Cell.Generic.ICell<QLNet.IOperator> -> Cephei.Cell.Generic.ICell<QLNet.IOperator>'
  type: Method
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.Add(Cephei.Cell.Generic.ICell<QLNet.IOperator> -> Cephei.Cell.Generic.ICell<QLNet.IOperator>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 105
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Add: A:ICell<IOperator> -> B:ICell<IOperator> -> ICell<IOperator>'
    parameters:
    - id: A
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IOperator>
      attributes: []
    - id: B
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IOperator>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IOperator>
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.Add*
  attributes: []
- uid: Cephei.QL.FdmBlackScholesOpModel.Apply(Cephei.Cell.Generic.ICell<QLNet.Vector>)
  commentId: M:Cephei.QL.FdmBlackScholesOpModel.Apply(Cephei.Cell.Generic.ICell{QLNet.Vector})
  id: Apply(Cephei.Cell.Generic.ICell<QLNet.Vector>)
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'member Apply: ICell<Vector> -> ICell<Vector>'
  nameWithType: 'member FdmBlackScholesOpModel.Apply: ICell<Vector> -> ICell<Vector>'
  fullName: 'member Cephei.QL.FdmBlackScholesOpModel.Apply: Cephei.Cell.Generic.ICell<QLNet.Vector> -> Cephei.Cell.Generic.ICell<QLNet.Vector>'
  type: Method
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.Apply(Cephei.Cell.Generic.ICell<QLNet.Vector>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 107
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Apply: r:ICell<Vector> -> ICell<Vector>'
    parameters:
    - id: r
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.Apply*
  attributes: []
- uid: Cephei.QL.FdmBlackScholesOpModel.ApplyTo(Cephei.Cell.Generic.ICell<QLNet.Vector>)
  commentId: M:Cephei.QL.FdmBlackScholesOpModel.ApplyTo(Cephei.Cell.Generic.ICell{QLNet.Vector})
  id: ApplyTo(Cephei.Cell.Generic.ICell<QLNet.Vector>)
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'member ApplyTo: ICell<Vector> -> ICell<Vector>'
  nameWithType: 'member FdmBlackScholesOpModel.ApplyTo: ICell<Vector> -> ICell<Vector>'
  fullName: 'member Cephei.QL.FdmBlackScholesOpModel.ApplyTo: Cephei.Cell.Generic.ICell<QLNet.Vector> -> Cephei.Cell.Generic.ICell<QLNet.Vector>'
  type: Method
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.ApplyTo(Cephei.Cell.Generic.ICell<QLNet.Vector>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 113
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member ApplyTo: v:ICell<Vector> -> ICell<Vector>'
    parameters:
    - id: v
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.ApplyTo*
  attributes: []
- uid: Cephei.QL.FdmBlackScholesOpModel.Apply_direction(Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<QLNet.Vector>)
  commentId: M:Cephei.QL.FdmBlackScholesOpModel.Apply_direction(Cephei.Cell.Generic.ICell{System.Int32},Cephei.Cell.Generic.ICell{QLNet.Vector})
  id: Apply_direction(Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<QLNet.Vector>)
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'member Apply_direction: ICell<int> -> ICell<Vector> -> ICell<Vector>'
  nameWithType: 'member FdmBlackScholesOpModel.Apply_direction: ICell<int> -> ICell<Vector> -> ICell<Vector>'
  fullName: 'member Cephei.QL.FdmBlackScholesOpModel.Apply_direction: Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<QLNet.Vector> -> Cephei.Cell.Generic.ICell<QLNet.Vector>'
  type: Method
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.Apply_direction(Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<QLNet.Vector>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 109
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Apply_direction: direction:ICell<int> -> r:ICell<Vector> -> ICell<Vector>'
    parameters:
    - id: direction
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
    - id: r
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.Apply_direction*
  attributes: []
- uid: Cephei.QL.FdmBlackScholesOpModel.Apply_mixed(Cephei.Cell.Generic.ICell<QLNet.Vector>)
  commentId: M:Cephei.QL.FdmBlackScholesOpModel.Apply_mixed(Cephei.Cell.Generic.ICell{QLNet.Vector})
  id: Apply_mixed(Cephei.Cell.Generic.ICell<QLNet.Vector>)
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'member Apply_mixed: ICell<Vector> -> ICell<Vector>'
  nameWithType: 'member FdmBlackScholesOpModel.Apply_mixed: ICell<Vector> -> ICell<Vector>'
  fullName: 'member Cephei.QL.FdmBlackScholesOpModel.Apply_mixed: Cephei.Cell.Generic.ICell<QLNet.Vector> -> Cephei.Cell.Generic.ICell<QLNet.Vector>'
  type: Method
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.Apply_mixed(Cephei.Cell.Generic.ICell<QLNet.Vector>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 111
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Apply_mixed: r:ICell<Vector> -> ICell<Vector>'
    parameters:
    - id: r
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.Apply_mixed*
  attributes: []
- uid: Cephei.QL.FdmBlackScholesOpModel.Identity(Cephei.Cell.Generic.ICell<int>)
  commentId: M:Cephei.QL.FdmBlackScholesOpModel.Identity(Cephei.Cell.Generic.ICell{System.Int32})
  id: Identity(Cephei.Cell.Generic.ICell<int>)
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'member Identity: ICell<int> -> ICell<IOperator>'
  nameWithType: 'member FdmBlackScholesOpModel.Identity: ICell<int> -> ICell<IOperator>'
  fullName: 'member Cephei.QL.FdmBlackScholesOpModel.Identity: Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<QLNet.IOperator>'
  type: Method
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.Identity(Cephei.Cell.Generic.ICell<int>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 116
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Identity: size:ICell<int> -> ICell<IOperator>'
    parameters:
    - id: size
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IOperator>
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.Identity*
  attributes: []
- uid: Cephei.QL.FdmBlackScholesOpModel.Multiply(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.IOperator>)
  commentId: M:Cephei.QL.FdmBlackScholesOpModel.Multiply(Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{QLNet.IOperator})
  id: Multiply(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.IOperator>)
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'member Multiply: ICell<double> -> ICell<IOperator> -> ICell<IOperator>'
  nameWithType: 'member FdmBlackScholesOpModel.Multiply: ICell<double> -> ICell<IOperator> -> ICell<IOperator>'
  fullName: 'member Cephei.QL.FdmBlackScholesOpModel.Multiply: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.IOperator> -> Cephei.Cell.Generic.ICell<QLNet.IOperator>'
  type: Method
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.Multiply(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.IOperator>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 119
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Multiply: a:ICell<double> -> D:ICell<IOperator> -> ICell<IOperator>'
    parameters:
    - id: a
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: D
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IOperator>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IOperator>
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.Multiply*
  attributes: []
- uid: Cephei.QL.FdmBlackScholesOpModel.Preconditioner(Cephei.Cell.Generic.ICell<QLNet.Vector> -> Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.FdmBlackScholesOpModel.Preconditioner(Cephei.Cell.Generic.ICell{QLNet.Vector},Cephei.Cell.Generic.ICell{System.Double})
  id: Preconditioner(Cephei.Cell.Generic.ICell<QLNet.Vector> -> Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'member Preconditioner: ICell<Vector> -> ICell<double> -> ICell<Vector>'
  nameWithType: 'member FdmBlackScholesOpModel.Preconditioner: ICell<Vector> -> ICell<double> -> ICell<Vector>'
  fullName: 'member Cephei.QL.FdmBlackScholesOpModel.Preconditioner: Cephei.Cell.Generic.ICell<QLNet.Vector> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Vector>'
  type: Method
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.Preconditioner(Cephei.Cell.Generic.ICell<QLNet.Vector> -> Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 121
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Preconditioner: r:ICell<Vector> -> dt:ICell<double> -> ICell<Vector>'
    parameters:
    - id: r
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
      attributes: []
    - id: dt
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.Preconditioner*
  attributes: []
- uid: Cephei.QL.FdmBlackScholesOpModel.SetTime(Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.FdmBlackScholesOpModel.SetTime(Cephei.Cell.Generic.ICell{System.Double})
  id: SetTime(Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'member SetTime: ICell<double> -> ICell<FdmBlackScholesOp>'
  nameWithType: 'member FdmBlackScholesOpModel.SetTime: ICell<double> -> ICell<FdmBlackScholesOp>'
  fullName: 'member Cephei.QL.FdmBlackScholesOpModel.SetTime: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.FdmBlackScholesOp>'
  type: Method
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.SetTime(Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 123
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member SetTime: t:ICell<double> -> ICell<FdmBlackScholesOp>'
    parameters:
    - id: t
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FdmBlackScholesOp>
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.SetTime*
  attributes: []
- uid: Cephei.QL.FdmBlackScholesOpModel.SetTime1(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.FdmBlackScholesOpModel.SetTime1(Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Double})
  id: SetTime1(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'member SetTime1: ICell<double> -> ICell<double> -> ICell<FdmBlackScholesOp>'
  nameWithType: 'member FdmBlackScholesOpModel.SetTime1: ICell<double> -> ICell<double> -> ICell<FdmBlackScholesOp>'
  fullName: 'member Cephei.QL.FdmBlackScholesOpModel.SetTime1: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.FdmBlackScholesOp>'
  type: Method
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.SetTime1(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 125
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member SetTime1: t1:ICell<double> -> t2:ICell<double> -> ICell<FdmBlackScholesOp>'
    parameters:
    - id: t1
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: t2
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FdmBlackScholesOp>
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.SetTime1*
  attributes: []
- uid: Cephei.QL.FdmBlackScholesOpModel.SolveFor(Cephei.Cell.Generic.ICell<QLNet.Vector>)
  commentId: M:Cephei.QL.FdmBlackScholesOpModel.SolveFor(Cephei.Cell.Generic.ICell{QLNet.Vector})
  id: SolveFor(Cephei.Cell.Generic.ICell<QLNet.Vector>)
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'member SolveFor: ICell<Vector> -> ICell<Vector>'
  nameWithType: 'member FdmBlackScholesOpModel.SolveFor: ICell<Vector> -> ICell<Vector>'
  fullName: 'member Cephei.QL.FdmBlackScholesOpModel.SolveFor: Cephei.Cell.Generic.ICell<QLNet.Vector> -> Cephei.Cell.Generic.ICell<QLNet.Vector>'
  type: Method
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.SolveFor(Cephei.Cell.Generic.ICell<QLNet.Vector>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 130
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member SolveFor: rhs:ICell<Vector> -> ICell<Vector>'
    parameters:
    - id: rhs
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.SolveFor*
  attributes: []
- uid: Cephei.QL.FdmBlackScholesOpModel.Solve_splitting(Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<QLNet.Vector> -> Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.FdmBlackScholesOpModel.Solve_splitting(Cephei.Cell.Generic.ICell{System.Int32},Cephei.Cell.Generic.ICell{QLNet.Vector},Cephei.Cell.Generic.ICell{System.Double})
  id: Solve_splitting(Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<QLNet.Vector> -> Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'member Solve_splitting: ICell<int> -> ICell<Vector> -> ICell<double> -> ICell<Vector>'
  nameWithType: 'member FdmBlackScholesOpModel.Solve_splitting: ICell<int> -> ICell<Vector> -> ICell<double> -> ICell<Vector>'
  fullName: 'member Cephei.QL.FdmBlackScholesOpModel.Solve_splitting: Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<QLNet.Vector> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Vector>'
  type: Method
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.Solve_splitting(Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<QLNet.Vector> -> Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 128
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Solve_splitting: direction:ICell<int> -> r:ICell<Vector> -> dt:ICell<double> -> ICell<Vector>'
    parameters:
    - id: direction
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
    - id: r
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
      attributes: []
    - id: dt
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.Solve_splitting*
  attributes: []
- uid: Cephei.QL.FdmBlackScholesOpModel.Subtract(Cephei.Cell.Generic.ICell<QLNet.IOperator> -> Cephei.Cell.Generic.ICell<QLNet.IOperator>)
  commentId: M:Cephei.QL.FdmBlackScholesOpModel.Subtract(Cephei.Cell.Generic.ICell{QLNet.IOperator},Cephei.Cell.Generic.ICell{QLNet.IOperator})
  id: Subtract(Cephei.Cell.Generic.ICell<QLNet.IOperator> -> Cephei.Cell.Generic.ICell<QLNet.IOperator>)
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'member Subtract: ICell<IOperator> -> ICell<IOperator> -> ICell<IOperator>'
  nameWithType: 'member FdmBlackScholesOpModel.Subtract: ICell<IOperator> -> ICell<IOperator> -> ICell<IOperator>'
  fullName: 'member Cephei.QL.FdmBlackScholesOpModel.Subtract: Cephei.Cell.Generic.ICell<QLNet.IOperator> -> Cephei.Cell.Generic.ICell<QLNet.IOperator> -> Cephei.Cell.Generic.ICell<QLNet.IOperator>'
  type: Method
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.Subtract(Cephei.Cell.Generic.ICell<QLNet.IOperator> -> Cephei.Cell.Generic.ICell<QLNet.IOperator>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 132
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Subtract: A:ICell<IOperator> -> B:ICell<IOperator> -> ICell<IOperator>'
    parameters:
    - id: A
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IOperator>
      attributes: []
    - id: B
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IOperator>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IOperator>
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.Subtract*
  attributes: []
- uid: Cephei.QL.FdmBlackScholesOpModel.strike(unit)
  commentId: P:Cephei.QL.FdmBlackScholesOpModel.strike
  id: strike(unit)
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'property strike: ICell<double>'
  nameWithType: 'property FdmBlackScholesOpModel.strike: ICell<double>'
  fullName: 'property Cephei.QL.FdmBlackScholesOpModel.strike: Cephei.Cell.Generic.ICell<double>'
  type: Property
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.strike(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 100
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property strike: ICell<double> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.strike*
  attributes: []
- uid: Cephei.QL.FdmBlackScholesOpModel.quantoHelper(unit)
  commentId: P:Cephei.QL.FdmBlackScholesOpModel.quantoHelper
  id: quantoHelper(unit)
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'property quantoHelper: ICell<FdmQuantoHelper>'
  nameWithType: 'property FdmBlackScholesOpModel.quantoHelper: ICell<FdmQuantoHelper>'
  fullName: 'property Cephei.QL.FdmBlackScholesOpModel.quantoHelper: Cephei.Cell.Generic.ICell<QLNet.FdmQuantoHelper>'
  type: Property
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.quantoHelper(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 104
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property quantoHelper: ICell<FdmQuantoHelper> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FdmQuantoHelper>
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.quantoHelper*
  attributes: []
- uid: Cephei.QL.FdmBlackScholesOpModel.mesher(unit)
  commentId: P:Cephei.QL.FdmBlackScholesOpModel.mesher
  id: mesher(unit)
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'property mesher: ICell<FdmMesher>'
  nameWithType: 'property FdmBlackScholesOpModel.mesher: ICell<FdmMesher>'
  fullName: 'property Cephei.QL.FdmBlackScholesOpModel.mesher: Cephei.Cell.Generic.ICell<QLNet.FdmMesher>'
  type: Property
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.mesher(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 98
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property mesher: ICell<FdmMesher> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FdmMesher>
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.mesher*
  attributes: []
- uid: Cephei.QL.FdmBlackScholesOpModel.localVol(unit)
  commentId: P:Cephei.QL.FdmBlackScholesOpModel.localVol
  id: localVol(unit)
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'property localVol: ICell<bool>'
  nameWithType: 'property FdmBlackScholesOpModel.localVol: ICell<bool>'
  fullName: 'property Cephei.QL.FdmBlackScholesOpModel.localVol: Cephei.Cell.Generic.ICell<bool>'
  type: Property
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.localVol(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 101
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property localVol: ICell<bool> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.localVol*
  attributes: []
- uid: Cephei.QL.FdmBlackScholesOpModel.illegalLocalVolOverwrite(unit)
  commentId: P:Cephei.QL.FdmBlackScholesOpModel.illegalLocalVolOverwrite
  id: illegalLocalVolOverwrite(unit)
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'property illegalLocalVolOverwrite: ICell<Nullable<double>>'
  nameWithType: 'property FdmBlackScholesOpModel.illegalLocalVolOverwrite: ICell<Nullable<double>>'
  fullName: 'property Cephei.QL.FdmBlackScholesOpModel.illegalLocalVolOverwrite: Cephei.Cell.Generic.ICell<System.Nullable<double>>'
  type: Property
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.illegalLocalVolOverwrite(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 102
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property illegalLocalVolOverwrite: ICell<Nullable<double>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Nullable`1<Microsoft.FSharp.Core.double>>
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.illegalLocalVolOverwrite*
  attributes: []
- uid: Cephei.QL.FdmBlackScholesOpModel.direction(unit)
  commentId: P:Cephei.QL.FdmBlackScholesOpModel.direction
  id: direction(unit)
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'property direction: ICell<int>'
  nameWithType: 'property FdmBlackScholesOpModel.direction: ICell<int>'
  fullName: 'property Cephei.QL.FdmBlackScholesOpModel.direction: Cephei.Cell.Generic.ICell<int>'
  type: Property
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.direction(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 103
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property direction: ICell<int> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.direction*
  attributes: []
- uid: Cephei.QL.FdmBlackScholesOpModel.bsProcess(unit)
  commentId: P:Cephei.QL.FdmBlackScholesOpModel.bsProcess
  id: bsProcess(unit)
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'property bsProcess: ICell<GeneralizedBlackScholesProcess>'
  nameWithType: 'property FdmBlackScholesOpModel.bsProcess: ICell<GeneralizedBlackScholesProcess>'
  fullName: 'property Cephei.QL.FdmBlackScholesOpModel.bsProcess: Cephei.Cell.Generic.ICell<QLNet.GeneralizedBlackScholesProcess>'
  type: Property
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.bsProcess(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 99
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property bsProcess: ICell<GeneralizedBlackScholesProcess> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.GeneralizedBlackScholesProcess>
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.bsProcess*
  attributes: []
- uid: Cephei.QL.FdmBlackScholesOpModel.ToMatrixDecomp(unit)
  commentId: P:Cephei.QL.FdmBlackScholesOpModel.ToMatrixDecomp
  id: ToMatrixDecomp(unit)
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'property ToMatrixDecomp: ICell<List<SparseMatrix>>'
  nameWithType: 'property FdmBlackScholesOpModel.ToMatrixDecomp: ICell<List<SparseMatrix>>'
  fullName: 'property Cephei.QL.FdmBlackScholesOpModel.ToMatrixDecomp: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.SparseMatrix>>'
  type: Property
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.ToMatrixDecomp(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 134
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property ToMatrixDecomp: ICell<List<SparseMatrix>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<QLNet.SparseMatrix>>
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.ToMatrixDecomp*
  attributes: []
- uid: Cephei.QL.FdmBlackScholesOpModel.ToMatrix(unit)
  commentId: P:Cephei.QL.FdmBlackScholesOpModel.ToMatrix
  id: ToMatrix(unit)
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'property ToMatrix: ICell<SparseMatrix>'
  nameWithType: 'property FdmBlackScholesOpModel.ToMatrix: ICell<SparseMatrix>'
  fullName: 'property Cephei.QL.FdmBlackScholesOpModel.ToMatrix: Cephei.Cell.Generic.ICell<QLNet.SparseMatrix>'
  type: Property
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.ToMatrix(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 135
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property ToMatrix: ICell<SparseMatrix> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.SparseMatrix>
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.ToMatrix*
  attributes: []
- uid: Cephei.QL.FdmBlackScholesOpModel.Size(unit)
  commentId: P:Cephei.QL.FdmBlackScholesOpModel.Size
  id: Size(unit)
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'property Size: ICell<int>'
  nameWithType: 'property FdmBlackScholesOpModel.Size: ICell<int>'
  fullName: 'property Cephei.QL.FdmBlackScholesOpModel.Size: Cephei.Cell.Generic.ICell<int>'
  type: Property
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.Size(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 127
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Size: ICell<int> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.Size*
  attributes: []
- uid: Cephei.QL.FdmBlackScholesOpModel.IsTimeDependent(unit)
  commentId: P:Cephei.QL.FdmBlackScholesOpModel.IsTimeDependent
  id: IsTimeDependent(unit)
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'property IsTimeDependent: ICell<bool>'
  nameWithType: 'property FdmBlackScholesOpModel.IsTimeDependent: ICell<bool>'
  fullName: 'property Cephei.QL.FdmBlackScholesOpModel.IsTimeDependent: Cephei.Cell.Generic.ICell<bool>'
  type: Property
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.IsTimeDependent(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 118
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property IsTimeDependent: ICell<bool> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.IsTimeDependent*
  attributes: []
- uid: Cephei.QL.FdmBlackScholesOpModel.Clone(unit)
  commentId: P:Cephei.QL.FdmBlackScholesOpModel.Clone
  id: Clone(unit)
  parent: Cephei.QL.FdmBlackScholesOpModel
  langs:
  - csharp
  - vb
  name: 'property Clone: ICell<obj>'
  nameWithType: 'property FdmBlackScholesOpModel.Clone: ICell<obj>'
  fullName: 'property Cephei.QL.FdmBlackScholesOpModel.Clone: Cephei.Cell.Generic.ICell<obj>'
  type: Property
  source:
    id: Cephei.QL.FdmBlackScholesOpModel.Clone(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FdmBlackScholesOpModel.fs
    startLine: 115
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Clone: ICell<obj> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.obj>
      attributes: []
  overload: Cephei.QL.FdmBlackScholesOpModel.Clone*
  attributes: []
references:
- uid: Cephei.QL
  commentId: N:Cephei.QL
  name: Cephei.QL
  nameWithType: Cephei.QL
  fullName: Cephei.QL
- uid: TypeRef:System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
  spec.csharp:
  - {}
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - {}
- uid: TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: ConcurrentDictionary<string,ICell>
  nameWithType: ConcurrentDictionary<string,ICell>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Model
  name: Model
  nameWithType: Model
  fullName: Cephei.Cell.Model
  spec.csharp:
  - {}
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - {}
- uid: TypeRef:Cephei.Cell.Generic.Model`1<QLNet.FdmBlackScholesOp>
  name: Model<FdmBlackScholesOp>
  nameWithType: Model<FdmBlackScholesOp>
  fullName: Cephei.Cell.Generic.Model<QLNet.FdmBlackScholesOp>
  spec.csharp:
  - uid: Cephei.Cell.Generic.Model`1
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Generic.Model
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.FdmBlackScholesOp
    name: FdmBlackScholesOp
    nameWithType: FdmBlackScholesOp
    fullName: QLNet.FdmBlackScholesOp
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FdmBlackScholesOp>
  name: ICell<FdmBlackScholesOp>
  nameWithType: ICell<FdmBlackScholesOp>
  fullName: Cephei.Cell.Generic.ICell<QLNet.FdmBlackScholesOp>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.FdmBlackScholesOp
    name: FdmBlackScholesOp
    nameWithType: FdmBlackScholesOp
    fullName: QLNet.FdmBlackScholesOp
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.ICell
  name: ICell
  nameWithType: ICell
  fullName: Cephei.Cell.ICell
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - {}
- uid: TypeRef:Cephei.Cell.ICellEvent
  name: ICellEvent
  nameWithType: ICellEvent
  fullName: Cephei.Cell.ICellEvent
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICellEvent
    name: ICellEvent
    nameWithType: ICellEvent
    fullName: Cephei.Cell.ICellEvent
  - {}
- uid: TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: ICollection<KeyValuePair<string,ICell>>
  nameWithType: ICollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IDictionary<string,ICell>
  nameWithType: IDictionary<string,ICell>
  fullName: System.Collections.Generic.IDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IEnumerable<KeyValuePair<string,ICell>>
  nameWithType: IEnumerable<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IReadOnlyCollection<KeyValuePair<string,ICell>>
  nameWithType: IReadOnlyCollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IReadOnlyDictionary<string,ICell>
  nameWithType: IReadOnlyDictionary<string,ICell>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.ICollection
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
  spec.csharp:
  - {}
  - uid: System.Collections.ICollection
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.ICollection
  - {}
- uid: TypeRef:System.Collections.IDictionary
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
  spec.csharp:
  - {}
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
  - {}
- uid: TypeRef:System.Collections.IEnumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
  spec.csharp:
  - {}
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
  - {}
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  name: IObservable<ICell>
  nameWithType: IObservable<ICell>
  fullName: System.IObservable<Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.FdmBlackScholesOp> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * ICell<FdmBlackScholesOp> * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * ICell<FdmBlackScholesOp> * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<QLNet.FdmBlackScholesOp> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.FdmBlackScholesOp
    name: FdmBlackScholesOp
    nameWithType: FdmBlackScholesOp
    fullName: QLNet.FdmBlackScholesOp
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<QLNet.FdmBlackScholesOp>
  name: IObservable<FdmBlackScholesOp>
  nameWithType: IObservable<FdmBlackScholesOp>
  fullName: System.IObservable<QLNet.FdmBlackScholesOp>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.FdmBlackScholesOp
    name: FdmBlackScholesOp
    nameWithType: FdmBlackScholesOp
    fullName: QLNet.FdmBlackScholesOp
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.FdmBlackScholesOp>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,FdmBlackScholesOp>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,FdmBlackScholesOp>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,QLNet.FdmBlackScholesOp>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: QLNet.FdmBlackScholesOp
    name: FdmBlackScholesOp
    nameWithType: FdmBlackScholesOp
    fullName: QLNet.FdmBlackScholesOp
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  name: IObservable<KeyValuePair<string,decimal>>
  nameWithType: IObservable<KeyValuePair<string,decimal>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,decimal>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.decimal
    name: decimal
    nameWithType: decimal
    fullName: decimal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  name: IObservable<KeyValuePair<string,float>>
  nameWithType: IObservable<KeyValuePair<string,float>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,float>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  name: IObservable<KeyValuePair<string,int>>
  nameWithType: IObservable<KeyValuePair<string,int>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,int>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.int
    name: int
    nameWithType: int
    fullName: int
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObserver`1<QLNet.FdmBlackScholesOp>
  name: IObserver<FdmBlackScholesOp>
  nameWithType: IObserver<FdmBlackScholesOp>
  fullName: System.IObserver<QLNet.FdmBlackScholesOp>
  spec.csharp:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.FdmBlackScholesOp
    name: FdmBlackScholesOp
    nameWithType: FdmBlackScholesOp
    fullName: QLNet.FdmBlackScholesOp
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  name: "member Bind: ICell<'T> -> unit"
  nameWithType: "member Model.Bind: ICell<'T> -> unit"
  fullName: "member Cephei.Cell.Generic.Model.Bind: Cephei.Cell.Generic.ICell<'T> -> unit"
- uid: Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  name: 'abstract member OnCompleted: unit -> unit'
  nameWithType: 'abstract member Model.OnCompleted: unit -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnCompleted: unit -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnError(exn)
  name: 'abstract member OnError: exn -> unit'
  nameWithType: 'abstract member Model.OnError: exn -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnError: exn -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnNext('T)
  name: "abstract member OnNext: 'T -> unit"
  nameWithType: "abstract member Model.OnNext: 'T -> unit"
  fullName: "abstract member Cephei.Cell.Generic.Model.OnNext: 'T -> unit"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  name: "abstract member Subscribe: IObserver<'T> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<'T> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<'T> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: "abstract member Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  name: "abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Value(unit)
  name: "abstract property Value: 'T"
  nameWithType: "abstract property Model.Value: 'T"
  fullName: "abstract property Cephei.Cell.Generic.Model.Value: 'T"
- uid: Cephei.Cell.Model.As(string)
  name: "member As: string -> ICell<'T>"
  nameWithType: "member Model.As: string -> ICell<'T>"
  fullName: "member Cephei.Cell.Model.As: string -> Cephei.Cell.Generic.ICell<'T>"
- uid: Cephei.Cell.Model.Bind(unit)
  name: 'member Bind: unit -> unit'
  nameWithType: 'member Model.Bind: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Bind: unit -> unit'
- uid: Cephei.Cell.Model.Box(unit)
  name: 'abstract property Box: obj'
  nameWithType: 'abstract property Model.Box: obj'
  fullName: 'abstract property Cephei.Cell.Model.Box: obj'
- uid: Cephei.Cell.Model.Change()
  name: 'abstract member Change: CellChange'
  nameWithType: 'abstract member Model.Change: CellChange'
  fullName: 'abstract member Cephei.Cell.Model.Change: Cephei.Cell.CellChange'
- uid: Cephei.Cell.Model.Create(Unit -> 'T * string)
  name: "member Create: Unit -> 'T * string -> Cell<'T>"
  nameWithType: "member Model.Create: Unit -> 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.Create: Unit -> 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.CreateValue('T * string)
  name: "member CreateValue: 'T * string -> Cell<'T>"
  nameWithType: "member Model.CreateValue: 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.CreateValue: 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.Dependants(unit)
  name: 'abstract property Dependants: IEnumerable<ICellEvent>'
  nameWithType: 'abstract property Model.Dependants: IEnumerable<ICellEvent>'
  fullName: 'abstract property Cephei.Cell.Model.Dependants: System.Collections.Generic.IEnumerable<Cephei.Cell.ICellEvent>'
- uid: Cephei.Cell.Model.Dispose(unit)
  name: 'member Dispose: unit -> unit'
  nameWithType: 'member Model.Dispose: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Dispose: unit -> unit'
- uid: Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  name: 'member GetOrAdd: string * ICell -> ICell'
  nameWithType: 'member Model.GetOrAdd: string * ICell -> ICell'
  fullName: 'member Cephei.Cell.Model.GetOrAdd: string * Cephei.Cell.ICell -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.HasFunction(unit)
  name: 'abstract property HasFunction: bool'
  nameWithType: 'abstract property Model.HasFunction: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasFunction: bool'
- uid: Cephei.Cell.Model.HasValue(unit)
  name: 'abstract property HasValue: bool'
  nameWithType: 'abstract property Model.HasValue: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasValue: bool'
- uid: Cephei.Cell.Model.Item(string)
  name: 'property Item: string -> ICell'
  nameWithType: 'property Model.Item: string -> ICell'
  fullName: 'property Cephei.Cell.Model.Item: string -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Mnemonic(unit)
  name: 'abstract property Mnemonic: string'
  nameWithType: 'abstract property Model.Mnemonic: string'
  fullName: 'abstract property Cephei.Cell.Model.Mnemonic: string'
- uid: Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  name: 'abstract member OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  nameWithType: 'abstract member Model.OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  fullName: 'abstract member Cephei.Cell.Model.OnChange: Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession -> unit'
- uid: Cephei.Cell.Model.Parent(unit)
  name: 'abstract property Parent: ICell'
  nameWithType: 'abstract property Model.Parent: ICell'
  fullName: 'abstract property Cephei.Cell.Model.Parent: Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  name: 'abstract member Subscribe: IObserver<ICell> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ICell> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ICell> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: 'abstract member Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,float>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,int>> -> System.IDisposable'
- uid: Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  name: 'member TryAdd: string * ICell -> bool'
  nameWithType: 'member Model.TryAdd: string * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryAdd: string * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  name: 'member TryRemove: string * ICell byref -> bool'
  nameWithType: 'member Model.TryRemove: string * ICell byref -> bool'
  fullName: 'member Cephei.Cell.Model.TryRemove: string * Cephei.Cell.ICell byref -> bool'
- uid: Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  name: 'member TryUpdate: string * ICell * ICell -> bool'
  nameWithType: 'member Model.TryUpdate: string * ICell * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryUpdate: string * Cephei.Cell.ICell * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  name: 'abstract member add_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.add_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.add_Change: Cephei.Cell.CellChange -> unit'
- uid: Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  name: 'abstract member remove_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.remove_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.remove_Change: Cephei.Cell.CellChange -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  name: 'abstract member Clear: unit -> unit'
  nameWithType: 'abstract member ConcurrentDictionary.Clear: unit -> unit'
  fullName: 'abstract member System.Collections.Concurrent.ConcurrentDictionary.Clear: unit -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  name: "abstract member ContainsKey: 'TKey -> bool"
  nameWithType: "abstract member ConcurrentDictionary.ContainsKey: 'TKey -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.ContainsKey: 'TKey -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  name: 'abstract property Count: int'
  nameWithType: 'abstract property ConcurrentDictionary.Count: int'
  fullName: 'abstract property System.Collections.Concurrent.ConcurrentDictionary.Count: int'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  name: "abstract member GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  nameWithType: "abstract member ConcurrentDictionary.GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.GetEnumerator: unit -> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<'TKey,'TValue>>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  name: "member GetOrAdd: 'TKey * 'TValue -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  name: "member GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * System.Func<'TKey,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  name: 'property IsEmpty: bool'
  nameWithType: 'property ConcurrentDictionary.IsEmpty: bool'
  fullName: 'property System.Collections.Concurrent.ConcurrentDictionary.IsEmpty: bool'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  name: "abstract property Item: 'TKey -> 'TValue"
  nameWithType: "abstract property ConcurrentDictionary.Item: 'TKey -> 'TValue"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Item: 'TKey -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  name: "abstract property Keys: ICollection<'TKey>"
  nameWithType: "abstract property ConcurrentDictionary.Keys: ICollection<'TKey>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Keys: System.Collections.Generic.ICollection<'TKey>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  name: "member ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  nameWithType: "member ConcurrentDictionary.ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.ToArray: unit -> System.Collections.Generic.KeyValuePair<'TKey,'TValue> []"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  name: "member TryAdd: 'TKey * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  name: "abstract member TryGetValue: 'TKey * 'TValue byref -> bool"
  nameWithType: "abstract member ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  name: "member TryRemove: 'TKey * 'TValue byref -> bool"
  nameWithType: "member ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  name: "member TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  name: "abstract property Values: ICollection<'TValue>"
  nameWithType: "abstract property ConcurrentDictionary.Values: ICollection<'TValue>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Values: System.Collections.Generic.ICollection<'TValue>"
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FdmMesher>
  name: ICell<FdmMesher>
  nameWithType: ICell<FdmMesher>
  fullName: Cephei.Cell.Generic.ICell<QLNet.FdmMesher>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.FdmMesher
    name: FdmMesher
    nameWithType: FdmMesher
    fullName: QLNet.FdmMesher
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.GeneralizedBlackScholesProcess>
  name: ICell<GeneralizedBlackScholesProcess>
  nameWithType: ICell<GeneralizedBlackScholesProcess>
  fullName: Cephei.Cell.Generic.ICell<QLNet.GeneralizedBlackScholesProcess>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.GeneralizedBlackScholesProcess
    name: GeneralizedBlackScholesProcess
    nameWithType: GeneralizedBlackScholesProcess
    fullName: QLNet.GeneralizedBlackScholesProcess
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
  name: ICell<double>
  nameWithType: ICell<double>
  fullName: Cephei.Cell.Generic.ICell<double>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.double
    name: double
    nameWithType: double
    fullName: double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
  name: ICell<bool>
  nameWithType: ICell<bool>
  fullName: Cephei.Cell.Generic.ICell<bool>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.bool
    name: bool
    nameWithType: bool
    fullName: bool
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Nullable`1<Microsoft.FSharp.Core.double>>
  name: ICell<Nullable<double>>
  nameWithType: ICell<Nullable<double>>
  fullName: Cephei.Cell.Generic.ICell<System.Nullable<double>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.double
    name: double
    nameWithType: double
    fullName: double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
  name: ICell<int>
  nameWithType: ICell<int>
  fullName: Cephei.Cell.Generic.ICell<int>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.int
    name: int
    nameWithType: int
    fullName: int
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FdmQuantoHelper>
  name: ICell<FdmQuantoHelper>
  nameWithType: ICell<FdmQuantoHelper>
  fullName: Cephei.Cell.Generic.ICell<QLNet.FdmQuantoHelper>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.FdmQuantoHelper
    name: FdmQuantoHelper
    nameWithType: FdmQuantoHelper
    fullName: QLNet.FdmQuantoHelper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.FdmBlackScholesOpModel.#ctor*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.#ctor*
  name: ( .ctor )
  nameWithType: FdmBlackScholesOpModel.( .ctor )
  fullName: Cephei.QL.FdmBlackScholesOpModel
- uid: TypeRef:Cephei.QL.FdmBlackScholesOpModel
  name: FdmBlackScholesOpModel
  nameWithType: FdmBlackScholesOpModel
  fullName: Cephei.QL.FdmBlackScholesOpModel
  spec.csharp:
  - {}
  - uid: Cephei.QL.FdmBlackScholesOpModel
    name: FdmBlackScholesOpModel
    nameWithType: FdmBlackScholesOpModel
    fullName: Cephei.QL.FdmBlackScholesOpModel
  - {}
- uid: Cephei.QL.FdmBlackScholesOpModel.Add*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.Add*
  name: Add
  nameWithType: FdmBlackScholesOpModel.Add
  fullName: Cephei.QL.FdmBlackScholesOpModel.Add
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IOperator>
  name: ICell<IOperator>
  nameWithType: ICell<IOperator>
  fullName: Cephei.Cell.Generic.ICell<QLNet.IOperator>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.IOperator
    name: IOperator
    nameWithType: IOperator
    fullName: QLNet.IOperator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.FdmBlackScholesOpModel.Apply*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.Apply*
  name: Apply
  nameWithType: FdmBlackScholesOpModel.Apply
  fullName: Cephei.QL.FdmBlackScholesOpModel.Apply
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
  name: ICell<Vector>
  nameWithType: ICell<Vector>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Vector>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Vector
    name: Vector
    nameWithType: Vector
    fullName: QLNet.Vector
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.FdmBlackScholesOpModel.ApplyTo*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.ApplyTo*
  name: ApplyTo
  nameWithType: FdmBlackScholesOpModel.ApplyTo
  fullName: Cephei.QL.FdmBlackScholesOpModel.ApplyTo
- uid: Cephei.QL.FdmBlackScholesOpModel.Apply_direction*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.Apply_direction*
  name: Apply_direction
  nameWithType: FdmBlackScholesOpModel.Apply_direction
  fullName: Cephei.QL.FdmBlackScholesOpModel.Apply_direction
- uid: Cephei.QL.FdmBlackScholesOpModel.Apply_mixed*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.Apply_mixed*
  name: Apply_mixed
  nameWithType: FdmBlackScholesOpModel.Apply_mixed
  fullName: Cephei.QL.FdmBlackScholesOpModel.Apply_mixed
- uid: Cephei.QL.FdmBlackScholesOpModel.Identity*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.Identity*
  name: Identity
  nameWithType: FdmBlackScholesOpModel.Identity
  fullName: Cephei.QL.FdmBlackScholesOpModel.Identity
- uid: Cephei.QL.FdmBlackScholesOpModel.Multiply*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.Multiply*
  name: Multiply
  nameWithType: FdmBlackScholesOpModel.Multiply
  fullName: Cephei.QL.FdmBlackScholesOpModel.Multiply
- uid: Cephei.QL.FdmBlackScholesOpModel.Preconditioner*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.Preconditioner*
  name: Preconditioner
  nameWithType: FdmBlackScholesOpModel.Preconditioner
  fullName: Cephei.QL.FdmBlackScholesOpModel.Preconditioner
- uid: Cephei.QL.FdmBlackScholesOpModel.SetTime*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.SetTime*
  name: SetTime
  nameWithType: FdmBlackScholesOpModel.SetTime
  fullName: Cephei.QL.FdmBlackScholesOpModel.SetTime
- uid: Cephei.QL.FdmBlackScholesOpModel.SetTime1*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.SetTime1*
  name: SetTime1
  nameWithType: FdmBlackScholesOpModel.SetTime1
  fullName: Cephei.QL.FdmBlackScholesOpModel.SetTime1
- uid: Cephei.QL.FdmBlackScholesOpModel.SolveFor*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.SolveFor*
  name: SolveFor
  nameWithType: FdmBlackScholesOpModel.SolveFor
  fullName: Cephei.QL.FdmBlackScholesOpModel.SolveFor
- uid: Cephei.QL.FdmBlackScholesOpModel.Solve_splitting*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.Solve_splitting*
  name: Solve_splitting
  nameWithType: FdmBlackScholesOpModel.Solve_splitting
  fullName: Cephei.QL.FdmBlackScholesOpModel.Solve_splitting
- uid: Cephei.QL.FdmBlackScholesOpModel.Subtract*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.Subtract*
  name: Subtract
  nameWithType: FdmBlackScholesOpModel.Subtract
  fullName: Cephei.QL.FdmBlackScholesOpModel.Subtract
- uid: Cephei.QL.FdmBlackScholesOpModel.strike*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.strike*
  name: strike
  nameWithType: FdmBlackScholesOpModel.strike
  fullName: Cephei.QL.FdmBlackScholesOpModel.strike
- uid: Cephei.QL.FdmBlackScholesOpModel.quantoHelper*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.quantoHelper*
  name: quantoHelper
  nameWithType: FdmBlackScholesOpModel.quantoHelper
  fullName: Cephei.QL.FdmBlackScholesOpModel.quantoHelper
- uid: Cephei.QL.FdmBlackScholesOpModel.mesher*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.mesher*
  name: mesher
  nameWithType: FdmBlackScholesOpModel.mesher
  fullName: Cephei.QL.FdmBlackScholesOpModel.mesher
- uid: Cephei.QL.FdmBlackScholesOpModel.localVol*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.localVol*
  name: localVol
  nameWithType: FdmBlackScholesOpModel.localVol
  fullName: Cephei.QL.FdmBlackScholesOpModel.localVol
- uid: Cephei.QL.FdmBlackScholesOpModel.illegalLocalVolOverwrite*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.illegalLocalVolOverwrite*
  name: illegalLocalVolOverwrite
  nameWithType: FdmBlackScholesOpModel.illegalLocalVolOverwrite
  fullName: Cephei.QL.FdmBlackScholesOpModel.illegalLocalVolOverwrite
- uid: Cephei.QL.FdmBlackScholesOpModel.direction*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.direction*
  name: direction
  nameWithType: FdmBlackScholesOpModel.direction
  fullName: Cephei.QL.FdmBlackScholesOpModel.direction
- uid: Cephei.QL.FdmBlackScholesOpModel.bsProcess*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.bsProcess*
  name: bsProcess
  nameWithType: FdmBlackScholesOpModel.bsProcess
  fullName: Cephei.QL.FdmBlackScholesOpModel.bsProcess
- uid: Cephei.QL.FdmBlackScholesOpModel.ToMatrixDecomp*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.ToMatrixDecomp*
  name: ToMatrixDecomp
  nameWithType: FdmBlackScholesOpModel.ToMatrixDecomp
  fullName: Cephei.QL.FdmBlackScholesOpModel.ToMatrixDecomp
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<QLNet.SparseMatrix>>
  name: ICell<List<SparseMatrix>>
  nameWithType: ICell<List<SparseMatrix>>
  fullName: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.SparseMatrix>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.SparseMatrix
    name: SparseMatrix
    nameWithType: SparseMatrix
    fullName: QLNet.SparseMatrix
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.FdmBlackScholesOpModel.ToMatrix*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.ToMatrix*
  name: ToMatrix
  nameWithType: FdmBlackScholesOpModel.ToMatrix
  fullName: Cephei.QL.FdmBlackScholesOpModel.ToMatrix
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.SparseMatrix>
  name: ICell<SparseMatrix>
  nameWithType: ICell<SparseMatrix>
  fullName: Cephei.Cell.Generic.ICell<QLNet.SparseMatrix>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.SparseMatrix
    name: SparseMatrix
    nameWithType: SparseMatrix
    fullName: QLNet.SparseMatrix
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.FdmBlackScholesOpModel.Size*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.Size*
  name: Size
  nameWithType: FdmBlackScholesOpModel.Size
  fullName: Cephei.QL.FdmBlackScholesOpModel.Size
- uid: Cephei.QL.FdmBlackScholesOpModel.IsTimeDependent*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.IsTimeDependent*
  name: IsTimeDependent
  nameWithType: FdmBlackScholesOpModel.IsTimeDependent
  fullName: Cephei.QL.FdmBlackScholesOpModel.IsTimeDependent
- uid: Cephei.QL.FdmBlackScholesOpModel.Clone*
  commentId: Overload:Cephei.QL.FdmBlackScholesOpModel.Clone*
  name: Clone
  nameWithType: FdmBlackScholesOpModel.Clone
  fullName: Cephei.QL.FdmBlackScholesOpModel.Clone
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.obj>
  name: ICell<obj>
  nameWithType: ICell<obj>
  fullName: Cephei.Cell.Generic.ICell<obj>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.obj
    name: obj
    nameWithType: obj
    fullName: obj
  - name: '>'
    nameWithType: '>'
    fullName: '>'
