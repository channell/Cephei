### YamlMime:ManagedReference
items:
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1
  commentId: T:Cephei.QL.InterpolatedSmileSectionModel2`1
  id: InterpolatedSmileSectionModel2`1
  parent: Cephei.QL
  children:
  - Cephei.QL.InterpolatedSmileSectionModel2`1.#ctor(Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> * Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<'Interpolator> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.VolatilityType> * Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.atmLevel(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.AtmLevel(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.Clone(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.Data(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.Data_(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.Dates(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.Dates_(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.DayCounter(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.dc(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.Density(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.DigitalOptionPrice(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.Discounts(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.ExerciseDate(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.ExerciseTime(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.Interpolation_(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.interpolator(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.Interpolator_(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.MaxDate(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.MaxDate_(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.MaxStrike(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.MinStrike(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.Nodes(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.OptionPrice(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.ReferenceDate(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.SetupInterpolation(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.shift(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.Shift(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.stdDevs(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.strikes(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.Times(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.Times_(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.timeToExpiry(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.Type(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.Update(unit)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.Variance(Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.Vega(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.Volatility(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.VolatilityType> -> Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.Volatility1(Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.InterpolatedSmileSectionModel2`1.VolatilityType(unit)
  langs:
  - csharp
  - vb
  name: InterpolatedSmileSectionModel2<'Interpolator>
  nameWithType: Cephei.QL.InterpolatedSmileSectionModel2`1
  fullName: Cephei.QL.InterpolatedSmileSectionModel2`1
  type: Class
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 284
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: >-
      [<AutoSerializable(true)>]

      type InterpolatedSmileSectionModel2<'Interpolator> (timeToExpiry:ICell<double>, strikes:ICell<List<double>>, stdDevs:ICell<List<double>>, atmLevel:ICell<double>, interpolator:ICell<'Interpolator>, dc:ICell<DayCounter>, Type:ICell<VolatilityType>, shift:ICell<double>)
          inherit Model<InterpolatedSmileSection<'Interpolator>>
          interface IDictionary<string,ICell>
          interface ICollection<KeyValuePair<string,ICell>>
          interface IReadOnlyDictionary<string,ICell>
          interface IReadOnlyCollection<KeyValuePair<string,ICell>>
          interface IEnumerable<KeyValuePair<string,ICell>>
          interface IDictionary
          interface ICollection
          interface IEnumerable
          interface IObservable<ICell>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
          interface IObservable<ISession * Model * CellEvent * ICell * DateTime>
          interface IObservable<KeyValuePair<string,float>>
          interface IObservable<KeyValuePair<string,int>>
          interface IObservable<KeyValuePair<string,decimal>>
          interface ICell<InterpolatedSmileSection<'Interpolator>>
          interface ICell
          interface ICellEvent
          interface IObservable<InterpolatedSmileSection<'Interpolator>>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,InterpolatedSmileSection<'Interpolator>>>>
          interface IObservable<ISession * ICell<InterpolatedSmileSection<'Interpolator>> * CellEvent * ICell * DateTime>
          interface IObserver<InterpolatedSmileSection<'Interpolator>>
    parameters:
    - id: timeToExpiry
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: strikes
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.double>>
      attributes: []
    - id: stdDevs
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.double>>
      attributes: []
    - id: atmLevel
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: interpolator
      type: TypeRef:Cephei.Cell.Generic.ICell`1<'Interpolator>
      attributes: []
    - id: dc
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
    - id: Type
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.VolatilityType>
      attributes: []
    - id: shift
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters:
    - id: "'Interpolator"
  inheritance:
  - TypeRef:System.Object
  - TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:Cephei.Cell.Model
  - TypeRef:Cephei.Cell.Generic.Model`1<QLNet.InterpolatedSmileSection`1<'Interpolator>>
  implements:
  - TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.InterpolatedSmileSection`1<'Interpolator>>
  - TypeRef:Cephei.Cell.ICell
  - TypeRef:Cephei.Cell.ICellEvent
  - TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.ICollection
  - TypeRef:System.Collections.IDictionary
  - TypeRef:System.Collections.IEnumerable
  - TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.InterpolatedSmileSection`1<'Interpolator>> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<QLNet.InterpolatedSmileSection`1<'Interpolator>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.InterpolatedSmileSection`1<'Interpolator>>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  - TypeRef:System.IObserver`1<QLNet.InterpolatedSmileSection`1<'Interpolator>>
  inheritedMembers:
  - Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  - Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  - Cephei.Cell.Generic.Model`1.OnError(exn)
  - Cephei.Cell.Generic.Model`1.OnNext('T)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  - Cephei.Cell.Generic.Model`1.Value(unit)
  - Cephei.Cell.Model.As(string)
  - Cephei.Cell.Model.Bind(unit)
  - Cephei.Cell.Model.Box(unit)
  - Cephei.Cell.Model.Change()
  - Cephei.Cell.Model.Create(Unit -> 'T * string)
  - Cephei.Cell.Model.CreateValue('T * string)
  - Cephei.Cell.Model.Dependants(unit)
  - Cephei.Cell.Model.Dispose(unit)
  - Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.HasFunction(unit)
  - Cephei.Cell.Model.HasValue(unit)
  - Cephei.Cell.Model.Item(string)
  - Cephei.Cell.Model.Mnemonic(unit)
  - Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  - Cephei.Cell.Model.Parent(unit)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  - Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  - Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  - Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  - Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  attributes:
  - type: Microsoft.FSharp.Core.AutoSerializableAttribute
    arguments:
    - type: System.Boolean
      value: true
    namedArguments: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.#ctor(Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> * Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<'Interpolator> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.VolatilityType> * Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.InterpolatedSmileSectionModel2`1.#ctor(Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Collections.Generic.List{System.Double}},Cephei.Cell.Generic.ICell{System.Collections.Generic.List{System.Double}},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{`0},Cephei.Cell.Generic.ICell{QLNet.DayCounter},Cephei.Cell.Generic.ICell{QLNet.VolatilityType},Cephei.Cell.Generic.ICell{System.Double})
  id: "#ctor(Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> * Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<'Interpolator> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.VolatilityType> * Cephei.Cell.Generic.ICell<double>)"
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: "new: ICell<double> * ICell<List<double>> * ICell<List<double>> * ICell<double> * ICell<'Interpolator> * ICell<DayCounter> * ICell<VolatilityType> * ICell<double> -> InterpolatedSmileSectionModel2<'Interpolator>"
  nameWithType: "new: ICell<double> * ICell<List<double>> * ICell<List<double>> * ICell<double> * ICell<'Interpolator> * ICell<DayCounter> * ICell<VolatilityType> * ICell<double> -> InterpolatedSmileSectionModel2<'Interpolator>"
  fullName: "new: Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> * Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<'Interpolator> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.VolatilityType> * Cephei.Cell.Generic.ICell<double> -> Cephei.QL.InterpolatedSmileSectionModel2<'Interpolator>"
  type: Constructor
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.#ctor(Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> * Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<'Interpolator> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.VolatilityType> * Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 284
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  summary: Implicit constructor.
  syntax:
    content: "new: timeToExpiry:ICell<double> * strikes:ICell<List<double>> * stdDevs:ICell<List<double>> * atmLevel:ICell<double> * interpolator:ICell<'Interpolator> * dc:ICell<DayCounter> * Type:ICell<VolatilityType> * shift:ICell<double> -> InterpolatedSmileSectionModel2<'Interpolator>"
    parameters:
    - id: timeToExpiry
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: strikes
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.double>>
      attributes: []
    - id: stdDevs
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.double>>
      attributes: []
    - id: atmLevel
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: interpolator
      type: TypeRef:Cephei.Cell.Generic.ICell`1<'Interpolator>
      attributes: []
    - id: dc
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
    - id: Type
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.VolatilityType>
      attributes: []
    - id: shift
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.QL.InterpolatedSmileSectionModel2`1<'Interpolator>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.#ctor*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Density(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.InterpolatedSmileSectionModel2`1.Density(Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Double})
  id: Density(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'member Density: ICell<double> -> ICell<double> -> ICell<double> -> ICell<float>'
  nameWithType: 'member InterpolatedSmileSectionModel2.Density: ICell<double> -> ICell<double> -> ICell<double> -> ICell<float>'
  fullName: 'member Cephei.QL.InterpolatedSmileSectionModel2.Density: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.Density(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 383
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Density: strike:ICell<double> -> discount:ICell<double> -> gap:ICell<double> -> ICell<float>'
    parameters:
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: discount
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: gap
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.Density*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.DigitalOptionPrice(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.InterpolatedSmileSectionModel2`1.DigitalOptionPrice(Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{QLNet.Option.Type},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Double})
  id: DigitalOptionPrice(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'member DigitalOptionPrice: ICell<double> -> ICell<Type> -> ICell<double> -> ICell<double> -> ICell<float>'
  nameWithType: 'member InterpolatedSmileSectionModel2.DigitalOptionPrice: ICell<double> -> ICell<Type> -> ICell<double> -> ICell<double> -> ICell<float>'
  fullName: 'member Cephei.QL.InterpolatedSmileSectionModel2.DigitalOptionPrice: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.DigitalOptionPrice(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 385
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member DigitalOptionPrice: strike:ICell<double> -> Type:ICell<Type> -> discount:ICell<double> -> gap:ICell<double> -> ICell<float>'
    parameters:
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: Type
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Option.Type>
      attributes: []
    - id: discount
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: gap
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.DigitalOptionPrice*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.OptionPrice(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.InterpolatedSmileSectionModel2`1.OptionPrice(Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{QLNet.Option.Type},Cephei.Cell.Generic.ICell{System.Double})
  id: OptionPrice(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'member OptionPrice: ICell<double> -> ICell<Type> -> ICell<double> -> ICell<float>'
  nameWithType: 'member InterpolatedSmileSectionModel2.OptionPrice: ICell<double> -> ICell<Type> -> ICell<double> -> ICell<float>'
  fullName: 'member Cephei.QL.InterpolatedSmileSectionModel2.OptionPrice: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.OptionPrice(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 389
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member OptionPrice: strike:ICell<double> -> Type:ICell<Type> -> discount:ICell<double> -> ICell<float>'
    parameters:
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: Type
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Option.Type>
      attributes: []
    - id: discount
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.OptionPrice*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Variance(Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.InterpolatedSmileSectionModel2`1.Variance(Cephei.Cell.Generic.ICell{System.Double})
  id: Variance(Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'member Variance: ICell<double> -> ICell<float>'
  nameWithType: 'member InterpolatedSmileSectionModel2.Variance: ICell<double> -> ICell<float>'
  fullName: 'member Cephei.QL.InterpolatedSmileSectionModel2.Variance: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.Variance(Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 393
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Variance: strike:ICell<double> -> ICell<float>'
    parameters:
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.Variance*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Vega(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.InterpolatedSmileSectionModel2`1.Vega(Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Double})
  id: Vega(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'member Vega: ICell<double> -> ICell<double> -> ICell<float>'
  nameWithType: 'member InterpolatedSmileSectionModel2.Vega: ICell<double> -> ICell<double> -> ICell<float>'
  fullName: 'member Cephei.QL.InterpolatedSmileSectionModel2.Vega: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.Vega(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 395
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Vega: strike:ICell<double> -> discount:ICell<double> -> ICell<float>'
    parameters:
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: discount
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.Vega*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Volatility(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.VolatilityType> -> Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.InterpolatedSmileSectionModel2`1.Volatility(Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{QLNet.VolatilityType},Cephei.Cell.Generic.ICell{System.Double})
  id: Volatility(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.VolatilityType> -> Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'member Volatility: ICell<double> -> ICell<VolatilityType> -> ICell<double> -> ICell<float>'
  nameWithType: 'member InterpolatedSmileSectionModel2.Volatility: ICell<double> -> ICell<VolatilityType> -> ICell<double> -> ICell<float>'
  fullName: 'member Cephei.QL.InterpolatedSmileSectionModel2.Volatility: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.VolatilityType> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.Volatility(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.VolatilityType> -> Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 397
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Volatility: strike:ICell<double> -> volatilityType:ICell<VolatilityType> -> shift:ICell<double> -> ICell<float>'
    parameters:
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: volatilityType
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.VolatilityType>
      attributes: []
    - id: shift
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.Volatility*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Volatility1(Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.InterpolatedSmileSectionModel2`1.Volatility1(Cephei.Cell.Generic.ICell{System.Double})
  id: Volatility1(Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'member Volatility1: ICell<double> -> ICell<float>'
  nameWithType: 'member InterpolatedSmileSectionModel2.Volatility1: ICell<double> -> ICell<float>'
  fullName: 'member Cephei.QL.InterpolatedSmileSectionModel2.Volatility1: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.Volatility1(Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 399
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Volatility1: strike:ICell<double> -> ICell<float>'
    parameters:
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.Volatility1*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.timeToExpiry(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.timeToExpiry
  id: timeToExpiry(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property timeToExpiry: ICell<double>'
  nameWithType: 'property InterpolatedSmileSectionModel2.timeToExpiry: ICell<double>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.timeToExpiry: Cephei.Cell.Generic.ICell<double>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.timeToExpiry(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 356
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property timeToExpiry: ICell<double> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.timeToExpiry*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.strikes(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.strikes
  id: strikes(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property strikes: ICell<List<double>>'
  nameWithType: 'property InterpolatedSmileSectionModel2.strikes: ICell<List<double>>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.strikes: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.strikes(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 357
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property strikes: ICell<List<double>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.double>>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.strikes*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.stdDevs(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.stdDevs
  id: stdDevs(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property stdDevs: ICell<List<double>>'
  nameWithType: 'property InterpolatedSmileSectionModel2.stdDevs: ICell<List<double>>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.stdDevs: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.stdDevs(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 358
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property stdDevs: ICell<List<double>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.double>>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.stdDevs*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.shift(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.shift
  id: shift(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property shift: ICell<float>'
  nameWithType: 'property InterpolatedSmileSectionModel2.shift: ICell<float>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.shift: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.shift(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 363
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property shift: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.shift*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.interpolator(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.interpolator
  id: interpolator(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: "property interpolator: ICell<'Interpolator>"
  nameWithType: "property InterpolatedSmileSectionModel2.interpolator: ICell<'Interpolator>"
  fullName: "property Cephei.QL.InterpolatedSmileSectionModel2.interpolator: Cephei.Cell.Generic.ICell<'Interpolator>"
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.interpolator(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 360
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: "property interpolator: ICell<'Interpolator> with get"
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<'Interpolator>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.interpolator*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.dc(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.dc
  id: dc(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property dc: ICell<DayCounter>'
  nameWithType: 'property InterpolatedSmileSectionModel2.dc: ICell<DayCounter>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.dc: Cephei.Cell.Generic.ICell<QLNet.DayCounter>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.dc(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 361
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property dc: ICell<DayCounter> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.dc*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.atmLevel(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.atmLevel
  id: atmLevel(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property atmLevel: ICell<Nullable<float>>'
  nameWithType: 'property InterpolatedSmileSectionModel2.atmLevel: ICell<Nullable<float>>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.atmLevel: Cephei.Cell.Generic.ICell<System.Nullable<float>>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.atmLevel(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 359
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property atmLevel: ICell<Nullable<float>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Nullable`1<Microsoft.FSharp.Core.float>>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.atmLevel*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.VolatilityType(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.VolatilityType
  id: VolatilityType(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property VolatilityType: ICell<VolatilityType>'
  nameWithType: 'property InterpolatedSmileSectionModel2.VolatilityType: ICell<VolatilityType>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.VolatilityType: Cephei.Cell.Generic.ICell<QLNet.VolatilityType>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.VolatilityType(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 401
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property VolatilityType: ICell<VolatilityType> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.VolatilityType>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.VolatilityType*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Update(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.Update
  id: Update(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: "property Update: ICell<InterpolatedSmileSection<'Interpolator>>"
  nameWithType: "property InterpolatedSmileSectionModel2.Update: ICell<InterpolatedSmileSection<'Interpolator>>"
  fullName: "property Cephei.QL.InterpolatedSmileSectionModel2.Update: Cephei.Cell.Generic.ICell<QLNet.InterpolatedSmileSection<'Interpolator>>"
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.Update(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 381
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: "property Update: ICell<InterpolatedSmileSection<'Interpolator>> with get"
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.InterpolatedSmileSection`1<'Interpolator>>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.Update*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Type(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.Type
  id: Type(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property Type: ICell<VolatilityType>'
  nameWithType: 'property InterpolatedSmileSectionModel2.Type: ICell<VolatilityType>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.Type: Cephei.Cell.Generic.ICell<QLNet.VolatilityType>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.Type(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 362
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Type: ICell<VolatilityType> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.VolatilityType>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.Type*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Times_(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.Times_
  id: Times_(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property Times_: ICell<List<float>>'
  nameWithType: 'property InterpolatedSmileSectionModel2.Times_: ICell<List<float>>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.Times_: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<float>>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.Times_(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 380
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Times_: ICell<List<float>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.float>>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.Times_*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Times(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.Times
  id: Times(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property Times: ICell<List<float>>'
  nameWithType: 'property InterpolatedSmileSectionModel2.Times: ICell<List<float>>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.Times: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<float>>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.Times(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 379
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Times: ICell<List<float>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.float>>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.Times*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Shift(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.Shift
  id: Shift(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property Shift: ICell<float>'
  nameWithType: 'property InterpolatedSmileSectionModel2.Shift: ICell<float>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.Shift: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.Shift(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 392
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Shift: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.Shift*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.SetupInterpolation(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.SetupInterpolation
  id: SetupInterpolation(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: "property SetupInterpolation: ICell<InterpolatedSmileSection<'Interpolator>>"
  nameWithType: "property InterpolatedSmileSectionModel2.SetupInterpolation: ICell<InterpolatedSmileSection<'Interpolator>>"
  fullName: "property Cephei.QL.InterpolatedSmileSectionModel2.SetupInterpolation: Cephei.Cell.Generic.ICell<QLNet.InterpolatedSmileSection<'Interpolator>>"
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.SetupInterpolation(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 378
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: "property SetupInterpolation: ICell<InterpolatedSmileSection<'Interpolator>> with get"
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.InterpolatedSmileSection`1<'Interpolator>>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.SetupInterpolation*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.ReferenceDate(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.ReferenceDate
  id: ReferenceDate(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property ReferenceDate: ICell<Date>'
  nameWithType: 'property InterpolatedSmileSectionModel2.ReferenceDate: ICell<Date>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.ReferenceDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.ReferenceDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 391
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property ReferenceDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.ReferenceDate*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Nodes(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.Nodes
  id: Nodes(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property Nodes: ICell<Dictionary<Date,float>>'
  nameWithType: 'property InterpolatedSmileSectionModel2.Nodes: ICell<Dictionary<Date,float>>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.Nodes: Cephei.Cell.Generic.ICell<System.Collections.Generic.Dictionary<QLNet.Date,float>>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.Nodes(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 377
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Nodes: ICell<Dictionary<Date,float>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.Dictionary`2<QLNet.Date,Microsoft.FSharp.Core.float>>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.Nodes*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.MinStrike(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.MinStrike
  id: MinStrike(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property MinStrike: ICell<float>'
  nameWithType: 'property InterpolatedSmileSectionModel2.MinStrike: ICell<float>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.MinStrike: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.MinStrike(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 376
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property MinStrike: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.MinStrike*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.MaxStrike(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.MaxStrike
  id: MaxStrike(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property MaxStrike: ICell<float>'
  nameWithType: 'property InterpolatedSmileSectionModel2.MaxStrike: ICell<float>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.MaxStrike: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.MaxStrike(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 375
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property MaxStrike: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.MaxStrike*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.MaxDate_(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.MaxDate_
  id: MaxDate_(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property MaxDate_: ICell<Date>'
  nameWithType: 'property InterpolatedSmileSectionModel2.MaxDate_: ICell<Date>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.MaxDate_: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.MaxDate_(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 374
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property MaxDate_: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.MaxDate_*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.MaxDate(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.MaxDate
  id: MaxDate(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property MaxDate: ICell<Date>'
  nameWithType: 'property InterpolatedSmileSectionModel2.MaxDate: ICell<Date>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.MaxDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.MaxDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 373
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property MaxDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.MaxDate*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Interpolator_(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.Interpolator_
  id: Interpolator_(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property Interpolator_: ICell<IInterpolationFactory>'
  nameWithType: 'property InterpolatedSmileSectionModel2.Interpolator_: ICell<IInterpolationFactory>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.Interpolator_: Cephei.Cell.Generic.ICell<QLNet.IInterpolationFactory>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.Interpolator_(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 372
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Interpolator_: ICell<IInterpolationFactory> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IInterpolationFactory>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.Interpolator_*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Interpolation_(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.Interpolation_
  id: Interpolation_(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property Interpolation_: ICell<Interpolation>'
  nameWithType: 'property InterpolatedSmileSectionModel2.Interpolation_: ICell<Interpolation>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.Interpolation_: Cephei.Cell.Generic.ICell<QLNet.Interpolation>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.Interpolation_(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 371
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Interpolation_: ICell<Interpolation> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Interpolation>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.Interpolation_*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.ExerciseTime(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.ExerciseTime
  id: ExerciseTime(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property ExerciseTime: ICell<float>'
  nameWithType: 'property InterpolatedSmileSectionModel2.ExerciseTime: ICell<float>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.ExerciseTime: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.ExerciseTime(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 388
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property ExerciseTime: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.ExerciseTime*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.ExerciseDate(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.ExerciseDate
  id: ExerciseDate(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property ExerciseDate: ICell<Date>'
  nameWithType: 'property InterpolatedSmileSectionModel2.ExerciseDate: ICell<Date>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.ExerciseDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.ExerciseDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 387
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property ExerciseDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.ExerciseDate*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Discounts(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.Discounts
  id: Discounts(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property Discounts: ICell<List<float>>'
  nameWithType: 'property InterpolatedSmileSectionModel2.Discounts: ICell<List<float>>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.Discounts: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<float>>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.Discounts(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 370
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Discounts: ICell<List<float>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.float>>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.Discounts*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.DayCounter(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.DayCounter
  id: DayCounter(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property DayCounter: ICell<DayCounter>'
  nameWithType: 'property InterpolatedSmileSectionModel2.DayCounter: ICell<DayCounter>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.DayCounter: Cephei.Cell.Generic.ICell<QLNet.DayCounter>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.DayCounter(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 382
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property DayCounter: ICell<DayCounter> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.DayCounter*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Dates_(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.Dates_
  id: Dates_(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property Dates_: ICell<List<Date>>'
  nameWithType: 'property InterpolatedSmileSectionModel2.Dates_: ICell<List<Date>>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.Dates_: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.Date>>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.Dates_(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 369
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Dates_: ICell<List<Date>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<QLNet.Date>>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.Dates_*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Dates(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.Dates
  id: Dates(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property Dates: ICell<List<Date>>'
  nameWithType: 'property InterpolatedSmileSectionModel2.Dates: ICell<List<Date>>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.Dates: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.Date>>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.Dates(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 368
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Dates: ICell<List<Date>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<QLNet.Date>>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.Dates*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Data_(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.Data_
  id: Data_(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property Data_: ICell<List<float>>'
  nameWithType: 'property InterpolatedSmileSectionModel2.Data_: ICell<List<float>>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.Data_: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<float>>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.Data_(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 367
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Data_: ICell<List<float>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.float>>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.Data_*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Data(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.Data
  id: Data(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property Data: ICell<List<float>>'
  nameWithType: 'property InterpolatedSmileSectionModel2.Data: ICell<List<float>>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.Data: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<float>>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.Data(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 366
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Data: ICell<List<float>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.float>>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.Data*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Clone(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.Clone
  id: Clone(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property Clone: ICell<obj>'
  nameWithType: 'property InterpolatedSmileSectionModel2.Clone: ICell<obj>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.Clone: Cephei.Cell.Generic.ICell<obj>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.Clone(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 365
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Clone: ICell<obj> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.obj>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.Clone*
  attributes: []
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.AtmLevel(unit)
  commentId: P:Cephei.QL.InterpolatedSmileSectionModel2`1.AtmLevel
  id: AtmLevel(unit)
  parent: Cephei.QL.InterpolatedSmileSectionModel2`1
  langs:
  - csharp
  - vb
  name: 'property AtmLevel: ICell<Nullable<float>>'
  nameWithType: 'property InterpolatedSmileSectionModel2.AtmLevel: ICell<Nullable<float>>'
  fullName: 'property Cephei.QL.InterpolatedSmileSectionModel2.AtmLevel: Cephei.Cell.Generic.ICell<System.Nullable<float>>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedSmileSectionModel2`1.AtmLevel(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedSmileSectionModel.fs
    startLine: 364
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property AtmLevel: ICell<Nullable<float>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Nullable`1<Microsoft.FSharp.Core.float>>
      attributes: []
  overload: Cephei.QL.InterpolatedSmileSectionModel2`1.AtmLevel*
  attributes: []
references:
- uid: Cephei.QL
  commentId: N:Cephei.QL
  name: Cephei.QL
  nameWithType: Cephei.QL
  fullName: Cephei.QL
- uid: TypeRef:System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
  spec.csharp:
  - {}
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - {}
- uid: TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: ConcurrentDictionary<string,ICell>
  nameWithType: ConcurrentDictionary<string,ICell>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Model
  name: Model
  nameWithType: Model
  fullName: Cephei.Cell.Model
  spec.csharp:
  - {}
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - {}
- uid: TypeRef:Cephei.Cell.Generic.Model`1<QLNet.InterpolatedSmileSection`1<'Interpolator>>
  name: Model<InterpolatedSmileSection<'Interpolator>>
  nameWithType: Model<InterpolatedSmileSection<'Interpolator>>
  fullName: Cephei.Cell.Generic.Model<QLNet.InterpolatedSmileSection<'Interpolator>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.Model`1
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Generic.Model
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.InterpolatedSmileSection`1
    name: InterpolatedSmileSection
    nameWithType: InterpolatedSmileSection
    fullName: QLNet.InterpolatedSmileSection
  - name: <
    nameWithType: <
    fullName: <
  - name: "'Interpolator"
    nameWithType: "'Interpolator"
    fullName: "'Interpolator"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.InterpolatedSmileSection`1<'Interpolator>>
  name: ICell<InterpolatedSmileSection<'Interpolator>>
  nameWithType: ICell<InterpolatedSmileSection<'Interpolator>>
  fullName: Cephei.Cell.Generic.ICell<QLNet.InterpolatedSmileSection<'Interpolator>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.InterpolatedSmileSection`1
    name: InterpolatedSmileSection
    nameWithType: InterpolatedSmileSection
    fullName: QLNet.InterpolatedSmileSection
  - name: <
    nameWithType: <
    fullName: <
  - name: "'Interpolator"
    nameWithType: "'Interpolator"
    fullName: "'Interpolator"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.ICell
  name: ICell
  nameWithType: ICell
  fullName: Cephei.Cell.ICell
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - {}
- uid: TypeRef:Cephei.Cell.ICellEvent
  name: ICellEvent
  nameWithType: ICellEvent
  fullName: Cephei.Cell.ICellEvent
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICellEvent
    name: ICellEvent
    nameWithType: ICellEvent
    fullName: Cephei.Cell.ICellEvent
  - {}
- uid: TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: ICollection<KeyValuePair<string,ICell>>
  nameWithType: ICollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IDictionary<string,ICell>
  nameWithType: IDictionary<string,ICell>
  fullName: System.Collections.Generic.IDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IEnumerable<KeyValuePair<string,ICell>>
  nameWithType: IEnumerable<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IReadOnlyCollection<KeyValuePair<string,ICell>>
  nameWithType: IReadOnlyCollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IReadOnlyDictionary<string,ICell>
  nameWithType: IReadOnlyDictionary<string,ICell>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.ICollection
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
  spec.csharp:
  - {}
  - uid: System.Collections.ICollection
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.ICollection
  - {}
- uid: TypeRef:System.Collections.IDictionary
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
  spec.csharp:
  - {}
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
  - {}
- uid: TypeRef:System.Collections.IEnumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
  spec.csharp:
  - {}
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
  - {}
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  name: IObservable<ICell>
  nameWithType: IObservable<ICell>
  fullName: System.IObservable<Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.InterpolatedSmileSection`1<'Interpolator>> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * ICell<InterpolatedSmileSection<'Interpolator>> * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * ICell<InterpolatedSmileSection<'Interpolator>> * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<QLNet.InterpolatedSmileSection<'Interpolator>> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.InterpolatedSmileSection`1
    name: InterpolatedSmileSection
    nameWithType: InterpolatedSmileSection
    fullName: QLNet.InterpolatedSmileSection
  - name: <
    nameWithType: <
    fullName: <
  - name: "'Interpolator"
    nameWithType: "'Interpolator"
    fullName: "'Interpolator"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<QLNet.InterpolatedSmileSection`1<'Interpolator>>
  name: IObservable<InterpolatedSmileSection<'Interpolator>>
  nameWithType: IObservable<InterpolatedSmileSection<'Interpolator>>
  fullName: System.IObservable<QLNet.InterpolatedSmileSection<'Interpolator>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.InterpolatedSmileSection`1
    name: InterpolatedSmileSection
    nameWithType: InterpolatedSmileSection
    fullName: QLNet.InterpolatedSmileSection
  - name: <
    nameWithType: <
    fullName: <
  - name: "'Interpolator"
    nameWithType: "'Interpolator"
    fullName: "'Interpolator"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.InterpolatedSmileSection`1<'Interpolator>>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,InterpolatedSmileSection<'Interpolator>>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,InterpolatedSmileSection<'Interpolator>>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,QLNet.InterpolatedSmileSection<'Interpolator>>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: QLNet.InterpolatedSmileSection`1
    name: InterpolatedSmileSection
    nameWithType: InterpolatedSmileSection
    fullName: QLNet.InterpolatedSmileSection
  - name: <
    nameWithType: <
    fullName: <
  - name: "'Interpolator"
    nameWithType: "'Interpolator"
    fullName: "'Interpolator"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  name: IObservable<KeyValuePair<string,decimal>>
  nameWithType: IObservable<KeyValuePair<string,decimal>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,decimal>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.decimal
    name: decimal
    nameWithType: decimal
    fullName: decimal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  name: IObservable<KeyValuePair<string,float>>
  nameWithType: IObservable<KeyValuePair<string,float>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,float>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  name: IObservable<KeyValuePair<string,int>>
  nameWithType: IObservable<KeyValuePair<string,int>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,int>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.int
    name: int
    nameWithType: int
    fullName: int
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObserver`1<QLNet.InterpolatedSmileSection`1<'Interpolator>>
  name: IObserver<InterpolatedSmileSection<'Interpolator>>
  nameWithType: IObserver<InterpolatedSmileSection<'Interpolator>>
  fullName: System.IObserver<QLNet.InterpolatedSmileSection<'Interpolator>>
  spec.csharp:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.InterpolatedSmileSection`1
    name: InterpolatedSmileSection
    nameWithType: InterpolatedSmileSection
    fullName: QLNet.InterpolatedSmileSection
  - name: <
    nameWithType: <
    fullName: <
  - name: "'Interpolator"
    nameWithType: "'Interpolator"
    fullName: "'Interpolator"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  name: "member Bind: ICell<'T> -> unit"
  nameWithType: "member Model.Bind: ICell<'T> -> unit"
  fullName: "member Cephei.Cell.Generic.Model.Bind: Cephei.Cell.Generic.ICell<'T> -> unit"
- uid: Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  name: 'abstract member OnCompleted: unit -> unit'
  nameWithType: 'abstract member Model.OnCompleted: unit -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnCompleted: unit -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnError(exn)
  name: 'abstract member OnError: exn -> unit'
  nameWithType: 'abstract member Model.OnError: exn -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnError: exn -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnNext('T)
  name: "abstract member OnNext: 'T -> unit"
  nameWithType: "abstract member Model.OnNext: 'T -> unit"
  fullName: "abstract member Cephei.Cell.Generic.Model.OnNext: 'T -> unit"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  name: "abstract member Subscribe: IObserver<'T> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<'T> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<'T> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: "abstract member Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  name: "abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Value(unit)
  name: "abstract property Value: 'T"
  nameWithType: "abstract property Model.Value: 'T"
  fullName: "abstract property Cephei.Cell.Generic.Model.Value: 'T"
- uid: Cephei.Cell.Model.As(string)
  name: "member As: string -> ICell<'T>"
  nameWithType: "member Model.As: string -> ICell<'T>"
  fullName: "member Cephei.Cell.Model.As: string -> Cephei.Cell.Generic.ICell<'T>"
- uid: Cephei.Cell.Model.Bind(unit)
  name: 'member Bind: unit -> unit'
  nameWithType: 'member Model.Bind: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Bind: unit -> unit'
- uid: Cephei.Cell.Model.Box(unit)
  name: 'abstract property Box: obj'
  nameWithType: 'abstract property Model.Box: obj'
  fullName: 'abstract property Cephei.Cell.Model.Box: obj'
- uid: Cephei.Cell.Model.Change()
  name: 'abstract member Change: CellChange'
  nameWithType: 'abstract member Model.Change: CellChange'
  fullName: 'abstract member Cephei.Cell.Model.Change: Cephei.Cell.CellChange'
- uid: Cephei.Cell.Model.Create(Unit -> 'T * string)
  name: "member Create: Unit -> 'T * string -> Cell<'T>"
  nameWithType: "member Model.Create: Unit -> 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.Create: Unit -> 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.CreateValue('T * string)
  name: "member CreateValue: 'T * string -> Cell<'T>"
  nameWithType: "member Model.CreateValue: 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.CreateValue: 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.Dependants(unit)
  name: 'abstract property Dependants: IEnumerable<ICellEvent>'
  nameWithType: 'abstract property Model.Dependants: IEnumerable<ICellEvent>'
  fullName: 'abstract property Cephei.Cell.Model.Dependants: System.Collections.Generic.IEnumerable<Cephei.Cell.ICellEvent>'
- uid: Cephei.Cell.Model.Dispose(unit)
  name: 'member Dispose: unit -> unit'
  nameWithType: 'member Model.Dispose: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Dispose: unit -> unit'
- uid: Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  name: 'member GetOrAdd: string * ICell -> ICell'
  nameWithType: 'member Model.GetOrAdd: string * ICell -> ICell'
  fullName: 'member Cephei.Cell.Model.GetOrAdd: string * Cephei.Cell.ICell -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.HasFunction(unit)
  name: 'abstract property HasFunction: bool'
  nameWithType: 'abstract property Model.HasFunction: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasFunction: bool'
- uid: Cephei.Cell.Model.HasValue(unit)
  name: 'abstract property HasValue: bool'
  nameWithType: 'abstract property Model.HasValue: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasValue: bool'
- uid: Cephei.Cell.Model.Item(string)
  name: 'property Item: string -> ICell'
  nameWithType: 'property Model.Item: string -> ICell'
  fullName: 'property Cephei.Cell.Model.Item: string -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Mnemonic(unit)
  name: 'abstract property Mnemonic: string'
  nameWithType: 'abstract property Model.Mnemonic: string'
  fullName: 'abstract property Cephei.Cell.Model.Mnemonic: string'
- uid: Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  name: 'abstract member OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  nameWithType: 'abstract member Model.OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  fullName: 'abstract member Cephei.Cell.Model.OnChange: Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession -> unit'
- uid: Cephei.Cell.Model.Parent(unit)
  name: 'abstract property Parent: ICell'
  nameWithType: 'abstract property Model.Parent: ICell'
  fullName: 'abstract property Cephei.Cell.Model.Parent: Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  name: 'abstract member Subscribe: IObserver<ICell> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ICell> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ICell> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: 'abstract member Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,float>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,int>> -> System.IDisposable'
- uid: Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  name: 'member TryAdd: string * ICell -> bool'
  nameWithType: 'member Model.TryAdd: string * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryAdd: string * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  name: 'member TryRemove: string * ICell byref -> bool'
  nameWithType: 'member Model.TryRemove: string * ICell byref -> bool'
  fullName: 'member Cephei.Cell.Model.TryRemove: string * Cephei.Cell.ICell byref -> bool'
- uid: Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  name: 'member TryUpdate: string * ICell * ICell -> bool'
  nameWithType: 'member Model.TryUpdate: string * ICell * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryUpdate: string * Cephei.Cell.ICell * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  name: 'abstract member add_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.add_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.add_Change: Cephei.Cell.CellChange -> unit'
- uid: Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  name: 'abstract member remove_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.remove_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.remove_Change: Cephei.Cell.CellChange -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  name: 'abstract member Clear: unit -> unit'
  nameWithType: 'abstract member ConcurrentDictionary.Clear: unit -> unit'
  fullName: 'abstract member System.Collections.Concurrent.ConcurrentDictionary.Clear: unit -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  name: "abstract member ContainsKey: 'TKey -> bool"
  nameWithType: "abstract member ConcurrentDictionary.ContainsKey: 'TKey -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.ContainsKey: 'TKey -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  name: 'abstract property Count: int'
  nameWithType: 'abstract property ConcurrentDictionary.Count: int'
  fullName: 'abstract property System.Collections.Concurrent.ConcurrentDictionary.Count: int'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  name: "abstract member GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  nameWithType: "abstract member ConcurrentDictionary.GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.GetEnumerator: unit -> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<'TKey,'TValue>>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  name: "member GetOrAdd: 'TKey * 'TValue -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  name: "member GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * System.Func<'TKey,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  name: 'property IsEmpty: bool'
  nameWithType: 'property ConcurrentDictionary.IsEmpty: bool'
  fullName: 'property System.Collections.Concurrent.ConcurrentDictionary.IsEmpty: bool'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  name: "abstract property Item: 'TKey -> 'TValue"
  nameWithType: "abstract property ConcurrentDictionary.Item: 'TKey -> 'TValue"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Item: 'TKey -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  name: "abstract property Keys: ICollection<'TKey>"
  nameWithType: "abstract property ConcurrentDictionary.Keys: ICollection<'TKey>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Keys: System.Collections.Generic.ICollection<'TKey>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  name: "member ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  nameWithType: "member ConcurrentDictionary.ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.ToArray: unit -> System.Collections.Generic.KeyValuePair<'TKey,'TValue> []"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  name: "member TryAdd: 'TKey * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  name: "abstract member TryGetValue: 'TKey * 'TValue byref -> bool"
  nameWithType: "abstract member ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  name: "member TryRemove: 'TKey * 'TValue byref -> bool"
  nameWithType: "member ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  name: "member TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  name: "abstract property Values: ICollection<'TValue>"
  nameWithType: "abstract property ConcurrentDictionary.Values: ICollection<'TValue>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Values: System.Collections.Generic.ICollection<'TValue>"
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
  name: ICell<double>
  nameWithType: ICell<double>
  fullName: Cephei.Cell.Generic.ICell<double>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.double
    name: double
    nameWithType: double
    fullName: double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.double>>
  name: ICell<List<double>>
  nameWithType: ICell<List<double>>
  fullName: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.double
    name: double
    nameWithType: double
    fullName: double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<'Interpolator>
  name: ICell<'Interpolator>
  nameWithType: ICell<'Interpolator>
  fullName: Cephei.Cell.Generic.ICell<'Interpolator>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - name: "'Interpolator"
    nameWithType: "'Interpolator"
    fullName: "'Interpolator"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
  name: ICell<DayCounter>
  nameWithType: ICell<DayCounter>
  fullName: Cephei.Cell.Generic.ICell<QLNet.DayCounter>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.DayCounter
    name: DayCounter
    nameWithType: DayCounter
    fullName: QLNet.DayCounter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.VolatilityType>
  name: ICell<VolatilityType>
  nameWithType: ICell<VolatilityType>
  fullName: Cephei.Cell.Generic.ICell<QLNet.VolatilityType>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.VolatilityType
    name: VolatilityType
    nameWithType: VolatilityType
    fullName: QLNet.VolatilityType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.#ctor*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.#ctor*
  name: ( .ctor )
  nameWithType: InterpolatedSmileSectionModel2.( .ctor )
  fullName: Cephei.QL.InterpolatedSmileSectionModel2
- uid: TypeRef:Cephei.QL.InterpolatedSmileSectionModel2`1<'Interpolator>
  name: InterpolatedSmileSectionModel2<'Interpolator>
  nameWithType: InterpolatedSmileSectionModel2<'Interpolator>
  fullName: Cephei.QL.InterpolatedSmileSectionModel2<'Interpolator>
  spec.csharp:
  - uid: Cephei.QL.InterpolatedSmileSectionModel2`1
    name: InterpolatedSmileSectionModel2
    nameWithType: InterpolatedSmileSectionModel2
    fullName: Cephei.QL.InterpolatedSmileSectionModel2
  - name: <
    nameWithType: <
    fullName: <
  - name: "'Interpolator"
    nameWithType: "'Interpolator"
    fullName: "'Interpolator"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Density*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.Density*
  name: Density
  nameWithType: InterpolatedSmileSectionModel2.Density
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.Density
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
  name: ICell<float>
  nameWithType: ICell<float>
  fullName: Cephei.Cell.Generic.ICell<float>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.DigitalOptionPrice*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.DigitalOptionPrice*
  name: DigitalOptionPrice
  nameWithType: InterpolatedSmileSectionModel2.DigitalOptionPrice
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.DigitalOptionPrice
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Option.Type>
  name: ICell<Type>
  nameWithType: ICell<Type>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Option.Type>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Option.Type
    name: Type
    nameWithType: Type
    fullName: QLNet.Option.Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.OptionPrice*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.OptionPrice*
  name: OptionPrice
  nameWithType: InterpolatedSmileSectionModel2.OptionPrice
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.OptionPrice
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Variance*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.Variance*
  name: Variance
  nameWithType: InterpolatedSmileSectionModel2.Variance
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.Variance
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Vega*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.Vega*
  name: Vega
  nameWithType: InterpolatedSmileSectionModel2.Vega
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.Vega
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Volatility*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.Volatility*
  name: Volatility
  nameWithType: InterpolatedSmileSectionModel2.Volatility
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.Volatility
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Volatility1*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.Volatility1*
  name: Volatility1
  nameWithType: InterpolatedSmileSectionModel2.Volatility1
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.Volatility1
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.timeToExpiry*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.timeToExpiry*
  name: timeToExpiry
  nameWithType: InterpolatedSmileSectionModel2.timeToExpiry
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.timeToExpiry
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.strikes*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.strikes*
  name: strikes
  nameWithType: InterpolatedSmileSectionModel2.strikes
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.strikes
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.stdDevs*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.stdDevs*
  name: stdDevs
  nameWithType: InterpolatedSmileSectionModel2.stdDevs
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.stdDevs
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.shift*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.shift*
  name: shift
  nameWithType: InterpolatedSmileSectionModel2.shift
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.shift
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.interpolator*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.interpolator*
  name: interpolator
  nameWithType: InterpolatedSmileSectionModel2.interpolator
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.interpolator
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.dc*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.dc*
  name: dc
  nameWithType: InterpolatedSmileSectionModel2.dc
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.dc
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.atmLevel*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.atmLevel*
  name: atmLevel
  nameWithType: InterpolatedSmileSectionModel2.atmLevel
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.atmLevel
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Nullable`1<Microsoft.FSharp.Core.float>>
  name: ICell<Nullable<float>>
  nameWithType: ICell<Nullable<float>>
  fullName: Cephei.Cell.Generic.ICell<System.Nullable<float>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.VolatilityType*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.VolatilityType*
  name: VolatilityType
  nameWithType: InterpolatedSmileSectionModel2.VolatilityType
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.VolatilityType
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Update*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.Update*
  name: Update
  nameWithType: InterpolatedSmileSectionModel2.Update
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.Update
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Type*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.Type*
  name: Type
  nameWithType: InterpolatedSmileSectionModel2.Type
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.Type
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Times_*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.Times_*
  name: Times_
  nameWithType: InterpolatedSmileSectionModel2.Times_
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.Times_
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.float>>
  name: ICell<List<float>>
  nameWithType: ICell<List<float>>
  fullName: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<float>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Times*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.Times*
  name: Times
  nameWithType: InterpolatedSmileSectionModel2.Times
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.Times
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Shift*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.Shift*
  name: Shift
  nameWithType: InterpolatedSmileSectionModel2.Shift
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.Shift
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.SetupInterpolation*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.SetupInterpolation*
  name: SetupInterpolation
  nameWithType: InterpolatedSmileSectionModel2.SetupInterpolation
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.SetupInterpolation
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.ReferenceDate*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.ReferenceDate*
  name: ReferenceDate
  nameWithType: InterpolatedSmileSectionModel2.ReferenceDate
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.ReferenceDate
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
  name: ICell<Date>
  nameWithType: ICell<Date>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Date>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Date
    name: Date
    nameWithType: Date
    fullName: QLNet.Date
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Nodes*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.Nodes*
  name: Nodes
  nameWithType: InterpolatedSmileSectionModel2.Nodes
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.Nodes
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.Dictionary`2<QLNet.Date,Microsoft.FSharp.Core.float>>
  name: ICell<Dictionary<Date,float>>
  nameWithType: ICell<Dictionary<Date,float>>
  fullName: Cephei.Cell.Generic.ICell<System.Collections.Generic.Dictionary<QLNet.Date,float>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Date
    name: Date
    nameWithType: Date
    fullName: QLNet.Date
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.MinStrike*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.MinStrike*
  name: MinStrike
  nameWithType: InterpolatedSmileSectionModel2.MinStrike
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.MinStrike
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.MaxStrike*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.MaxStrike*
  name: MaxStrike
  nameWithType: InterpolatedSmileSectionModel2.MaxStrike
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.MaxStrike
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.MaxDate_*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.MaxDate_*
  name: MaxDate_
  nameWithType: InterpolatedSmileSectionModel2.MaxDate_
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.MaxDate_
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.MaxDate*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.MaxDate*
  name: MaxDate
  nameWithType: InterpolatedSmileSectionModel2.MaxDate
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.MaxDate
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Interpolator_*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.Interpolator_*
  name: Interpolator_
  nameWithType: InterpolatedSmileSectionModel2.Interpolator_
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.Interpolator_
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IInterpolationFactory>
  name: ICell<IInterpolationFactory>
  nameWithType: ICell<IInterpolationFactory>
  fullName: Cephei.Cell.Generic.ICell<QLNet.IInterpolationFactory>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.IInterpolationFactory
    name: IInterpolationFactory
    nameWithType: IInterpolationFactory
    fullName: QLNet.IInterpolationFactory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Interpolation_*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.Interpolation_*
  name: Interpolation_
  nameWithType: InterpolatedSmileSectionModel2.Interpolation_
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.Interpolation_
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Interpolation>
  name: ICell<Interpolation>
  nameWithType: ICell<Interpolation>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Interpolation>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Interpolation
    name: Interpolation
    nameWithType: Interpolation
    fullName: QLNet.Interpolation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.ExerciseTime*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.ExerciseTime*
  name: ExerciseTime
  nameWithType: InterpolatedSmileSectionModel2.ExerciseTime
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.ExerciseTime
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.ExerciseDate*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.ExerciseDate*
  name: ExerciseDate
  nameWithType: InterpolatedSmileSectionModel2.ExerciseDate
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.ExerciseDate
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Discounts*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.Discounts*
  name: Discounts
  nameWithType: InterpolatedSmileSectionModel2.Discounts
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.Discounts
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.DayCounter*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.DayCounter*
  name: DayCounter
  nameWithType: InterpolatedSmileSectionModel2.DayCounter
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.DayCounter
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Dates_*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.Dates_*
  name: Dates_
  nameWithType: InterpolatedSmileSectionModel2.Dates_
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.Dates_
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<QLNet.Date>>
  name: ICell<List<Date>>
  nameWithType: ICell<List<Date>>
  fullName: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.Date>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Date
    name: Date
    nameWithType: Date
    fullName: QLNet.Date
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Dates*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.Dates*
  name: Dates
  nameWithType: InterpolatedSmileSectionModel2.Dates
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.Dates
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Data_*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.Data_*
  name: Data_
  nameWithType: InterpolatedSmileSectionModel2.Data_
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.Data_
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Data*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.Data*
  name: Data
  nameWithType: InterpolatedSmileSectionModel2.Data
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.Data
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.Clone*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.Clone*
  name: Clone
  nameWithType: InterpolatedSmileSectionModel2.Clone
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.Clone
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.obj>
  name: ICell<obj>
  nameWithType: ICell<obj>
  fullName: Cephei.Cell.Generic.ICell<obj>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.obj
    name: obj
    nameWithType: obj
    fullName: obj
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.InterpolatedSmileSectionModel2`1.AtmLevel*
  commentId: Overload:Cephei.QL.InterpolatedSmileSectionModel2`1.AtmLevel*
  name: AtmLevel
  nameWithType: InterpolatedSmileSectionModel2.AtmLevel
  fullName: Cephei.QL.InterpolatedSmileSectionModel2.AtmLevel
