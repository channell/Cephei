### YamlMime:ManagedReference
items:
- uid: Cephei.QL.ScheduleModel
  commentId: T:Cephei.QL.ScheduleModel
  id: ScheduleModel
  parent: Cephei.QL
  children:
  - Cephei.QL.ScheduleModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Period> * Cephei.Cell.Generic.ICell<QLNet.Calendar> * Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> * Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> * Cephei.Cell.Generic.ICell<QLNet.DateGeneration.Rule> * Cephei.Cell.Generic.ICell<bool> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Date>)
  - Cephei.QL.ScheduleModel.At(Cephei.Cell.Generic.ICell<int>)
  - Cephei.QL.ScheduleModel.BusinessDayConvention(unit)
  - Cephei.QL.ScheduleModel.calendar(unit)
  - Cephei.QL.ScheduleModel.Calendar(unit)
  - Cephei.QL.ScheduleModel.convention(unit)
  - Cephei.QL.ScheduleModel.Count(unit)
  - Cephei.QL.ScheduleModel.Date(Cephei.Cell.Generic.ICell<int>)
  - Cephei.QL.ScheduleModel.Dates(unit)
  - Cephei.QL.ScheduleModel.effectiveDate(unit)
  - Cephei.QL.ScheduleModel.Empty(unit)
  - Cephei.QL.ScheduleModel.EndDate(unit)
  - Cephei.QL.ScheduleModel.endOfMonth(unit)
  - Cephei.QL.ScheduleModel.EndOfMonth(unit)
  - Cephei.QL.ScheduleModel.firstDate(unit)
  - Cephei.QL.ScheduleModel.IsRegular(unit)
  - Cephei.QL.ScheduleModel.IsRegular1(Cephei.Cell.Generic.ICell<int>)
  - Cephei.QL.ScheduleModel.NextDate(Cephei.Cell.Generic.ICell<QLNet.Date>)
  - Cephei.QL.ScheduleModel.nextToLastDate(unit)
  - Cephei.QL.ScheduleModel.PreviousDate(Cephei.Cell.Generic.ICell<QLNet.Date>)
  - Cephei.QL.ScheduleModel.rule(unit)
  - Cephei.QL.ScheduleModel.Rule(unit)
  - Cephei.QL.ScheduleModel.Size(unit)
  - Cephei.QL.ScheduleModel.StartDate(unit)
  - Cephei.QL.ScheduleModel.tenor(unit)
  - Cephei.QL.ScheduleModel.Tenor(unit)
  - Cephei.QL.ScheduleModel.terminationDate(unit)
  - Cephei.QL.ScheduleModel.TerminationDateBusinessDayConvention(unit)
  - Cephei.QL.ScheduleModel.terminationDateConvention(unit)
  - Cephei.QL.ScheduleModel.This(Cephei.Cell.Generic.ICell<int>)
  - Cephei.QL.ScheduleModel.Until(Cephei.Cell.Generic.ICell<QLNet.Date>)
  langs:
  - csharp
  - vb
  name: ScheduleModel
  nameWithType: Cephei.QL.ScheduleModel
  fullName: Cephei.QL.ScheduleModel
  type: Class
  source:
    id: Cephei.QL.ScheduleModel
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 35
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: >-
      [<AutoSerializable(true)>]

      type ScheduleModel (effectiveDate:ICell<Date>, terminationDate:ICell<Date>, tenor:ICell<Period>, calendar:ICell<Calendar>, convention:ICell<BusinessDayConvention>, terminationDateConvention:ICell<BusinessDayConvention>, rule:ICell<Rule>, endOfMonth:ICell<bool>, firstDate:ICell<Date>, nextToLastDate:ICell<Date>)
          inherit Model<Schedule>
          interface IDictionary<string,ICell>
          interface ICollection<KeyValuePair<string,ICell>>
          interface IReadOnlyDictionary<string,ICell>
          interface IReadOnlyCollection<KeyValuePair<string,ICell>>
          interface IEnumerable<KeyValuePair<string,ICell>>
          interface IDictionary
          interface ICollection
          interface IEnumerable
          interface IObservable<ICell>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
          interface IObservable<ISession * Model * CellEvent * ICell * DateTime>
          interface IObservable<KeyValuePair<string,float>>
          interface IObservable<KeyValuePair<string,int>>
          interface IObservable<KeyValuePair<string,decimal>>
          interface ICell<Schedule>
          interface ICell
          interface ICellEvent
          interface IObservable<Schedule>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,Schedule>>>
          interface IObservable<ISession * ICell<Schedule> * CellEvent * ICell * DateTime>
          interface IObserver<Schedule>
    parameters:
    - id: effectiveDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    - id: terminationDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    - id: tenor
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
      attributes: []
    - id: calendar
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Calendar>
      attributes: []
    - id: convention
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BusinessDayConvention>
      attributes: []
    - id: terminationDateConvention
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BusinessDayConvention>
      attributes: []
    - id: rule
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DateGeneration.Rule>
      attributes: []
    - id: endOfMonth
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
    - id: firstDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    - id: nextToLastDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    typeParameters: []
  inheritance:
  - TypeRef:System.Object
  - TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:Cephei.Cell.Model
  - TypeRef:Cephei.Cell.Generic.Model`1<QLNet.Schedule>
  implements:
  - TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Schedule>
  - TypeRef:Cephei.Cell.ICell
  - TypeRef:Cephei.Cell.ICellEvent
  - TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.ICollection
  - TypeRef:System.Collections.IDictionary
  - TypeRef:System.Collections.IEnumerable
  - TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.Schedule> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<QLNet.Schedule>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.Schedule>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  - TypeRef:System.IObserver`1<QLNet.Schedule>
  inheritedMembers:
  - Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  - Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  - Cephei.Cell.Generic.Model`1.OnError(exn)
  - Cephei.Cell.Generic.Model`1.OnNext('T)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  - Cephei.Cell.Generic.Model`1.Value(unit)
  - Cephei.Cell.Model.As(string)
  - Cephei.Cell.Model.Bind(unit)
  - Cephei.Cell.Model.Box(unit)
  - Cephei.Cell.Model.Change()
  - Cephei.Cell.Model.Create(Unit -> 'T * string)
  - Cephei.Cell.Model.CreateValue('T * string)
  - Cephei.Cell.Model.Dependants(unit)
  - Cephei.Cell.Model.Dispose(unit)
  - Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.HasFunction(unit)
  - Cephei.Cell.Model.HasValue(unit)
  - Cephei.Cell.Model.Item(string)
  - Cephei.Cell.Model.Mnemonic(unit)
  - Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  - Cephei.Cell.Model.Parent(unit)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  - Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  - Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  - Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  - Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  attributes:
  - type: Microsoft.FSharp.Core.AutoSerializableAttribute
    arguments:
    - type: System.Boolean
      value: true
    namedArguments: []
- uid: Cephei.QL.ScheduleModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Period> * Cephei.Cell.Generic.ICell<QLNet.Calendar> * Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> * Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> * Cephei.Cell.Generic.ICell<QLNet.DateGeneration.Rule> * Cephei.Cell.Generic.ICell<bool> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Date>)
  commentId: M:Cephei.QL.ScheduleModel.#ctor(Cephei.Cell.Generic.ICell{QLNet.Date},Cephei.Cell.Generic.ICell{QLNet.Date},Cephei.Cell.Generic.ICell{QLNet.Period},Cephei.Cell.Generic.ICell{QLNet.Calendar},Cephei.Cell.Generic.ICell{QLNet.BusinessDayConvention},Cephei.Cell.Generic.ICell{QLNet.BusinessDayConvention},Cephei.Cell.Generic.ICell{QLNet.DateGeneration.Rule},Cephei.Cell.Generic.ICell{System.Boolean},Cephei.Cell.Generic.ICell{QLNet.Date},Cephei.Cell.Generic.ICell{QLNet.Date})
  id: '#ctor(Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Period> * Cephei.Cell.Generic.ICell<QLNet.Calendar> * Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> * Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> * Cephei.Cell.Generic.ICell<QLNet.DateGeneration.Rule> * Cephei.Cell.Generic.ICell<bool> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Date>)'
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'new: ICell<Date> * ICell<Date> * ICell<Period> * ICell<Calendar> * ICell<BusinessDayConvention> * ICell<BusinessDayConvention> * ICell<Rule> * ICell<bool> * ICell<Date> * ICell<Date> -> ScheduleModel'
  nameWithType: 'new: ICell<Date> * ICell<Date> * ICell<Period> * ICell<Calendar> * ICell<BusinessDayConvention> * ICell<BusinessDayConvention> * ICell<Rule> * ICell<bool> * ICell<Date> * ICell<Date> -> ScheduleModel'
  fullName: 'new: Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Period> * Cephei.Cell.Generic.ICell<QLNet.Calendar> * Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> * Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> * Cephei.Cell.Generic.ICell<QLNet.DateGeneration.Rule> * Cephei.Cell.Generic.ICell<bool> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.QL.ScheduleModel'
  type: Constructor
  source:
    id: Cephei.QL.ScheduleModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Period> * Cephei.Cell.Generic.ICell<QLNet.Calendar> * Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> * Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> * Cephei.Cell.Generic.ICell<QLNet.DateGeneration.Rule> * Cephei.Cell.Generic.ICell<bool> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Date>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 35
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  summary: Implicit constructor.
  syntax:
    content: 'new: effectiveDate:ICell<Date> * terminationDate:ICell<Date> * tenor:ICell<Period> * calendar:ICell<Calendar> * convention:ICell<BusinessDayConvention> * terminationDateConvention:ICell<BusinessDayConvention> * rule:ICell<Rule> * endOfMonth:ICell<bool> * firstDate:ICell<Date> * nextToLastDate:ICell<Date> -> ScheduleModel'
    parameters:
    - id: effectiveDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    - id: terminationDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    - id: tenor
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
      attributes: []
    - id: calendar
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Calendar>
      attributes: []
    - id: convention
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BusinessDayConvention>
      attributes: []
    - id: terminationDateConvention
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BusinessDayConvention>
      attributes: []
    - id: rule
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DateGeneration.Rule>
      attributes: []
    - id: endOfMonth
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
    - id: firstDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    - id: nextToLastDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.QL.ScheduleModel
      attributes: []
  overload: Cephei.QL.ScheduleModel.#ctor*
  attributes: []
- uid: Cephei.QL.ScheduleModel.At(Cephei.Cell.Generic.ICell<int>)
  commentId: M:Cephei.QL.ScheduleModel.At(Cephei.Cell.Generic.ICell{System.Int32})
  id: At(Cephei.Cell.Generic.ICell<int>)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'member At: ICell<int> -> ICell<Date>'
  nameWithType: 'member ScheduleModel.At: ICell<int> -> ICell<Date>'
  fullName: 'member Cephei.QL.ScheduleModel.At: Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Method
  source:
    id: Cephei.QL.ScheduleModel.At(Cephei.Cell.Generic.ICell<int>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 108
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member At: i:ICell<int> -> ICell<Date>'
    parameters:
    - id: i
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.ScheduleModel.At*
  attributes: []
- uid: Cephei.QL.ScheduleModel.Date(Cephei.Cell.Generic.ICell<int>)
  commentId: M:Cephei.QL.ScheduleModel.Date(Cephei.Cell.Generic.ICell{System.Int32})
  id: Date(Cephei.Cell.Generic.ICell<int>)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'member Date: ICell<int> -> ICell<Date>'
  nameWithType: 'member ScheduleModel.Date: ICell<int> -> ICell<Date>'
  fullName: 'member Cephei.QL.ScheduleModel.Date: Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Method
  source:
    id: Cephei.QL.ScheduleModel.Date(Cephei.Cell.Generic.ICell<int>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 113
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Date: i:ICell<int> -> ICell<Date>'
    parameters:
    - id: i
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.ScheduleModel.Date*
  attributes: []
- uid: Cephei.QL.ScheduleModel.IsRegular1(Cephei.Cell.Generic.ICell<int>)
  commentId: M:Cephei.QL.ScheduleModel.IsRegular1(Cephei.Cell.Generic.ICell{System.Int32})
  id: IsRegular1(Cephei.Cell.Generic.ICell<int>)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'member IsRegular1: ICell<int> -> ICell<bool>'
  nameWithType: 'member ScheduleModel.IsRegular1: ICell<int> -> ICell<bool>'
  fullName: 'member Cephei.QL.ScheduleModel.IsRegular1: Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<bool>'
  type: Method
  source:
    id: Cephei.QL.ScheduleModel.IsRegular1(Cephei.Cell.Generic.ICell<int>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 120
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member IsRegular1: i:ICell<int> -> ICell<bool>'
    parameters:
    - id: i
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
  overload: Cephei.QL.ScheduleModel.IsRegular1*
  attributes: []
- uid: Cephei.QL.ScheduleModel.NextDate(Cephei.Cell.Generic.ICell<QLNet.Date>)
  commentId: M:Cephei.QL.ScheduleModel.NextDate(Cephei.Cell.Generic.ICell{QLNet.Date})
  id: NextDate(Cephei.Cell.Generic.ICell<QLNet.Date>)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'member NextDate: ICell<Date> -> ICell<Date>'
  nameWithType: 'member ScheduleModel.NextDate: ICell<Date> -> ICell<Date>'
  fullName: 'member Cephei.QL.ScheduleModel.NextDate: Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Method
  source:
    id: Cephei.QL.ScheduleModel.NextDate(Cephei.Cell.Generic.ICell<QLNet.Date>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 122
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member NextDate: d:ICell<Date> -> ICell<Date>'
    parameters:
    - id: d
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.ScheduleModel.NextDate*
  attributes: []
- uid: Cephei.QL.ScheduleModel.PreviousDate(Cephei.Cell.Generic.ICell<QLNet.Date>)
  commentId: M:Cephei.QL.ScheduleModel.PreviousDate(Cephei.Cell.Generic.ICell{QLNet.Date})
  id: PreviousDate(Cephei.Cell.Generic.ICell<QLNet.Date>)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'member PreviousDate: ICell<Date> -> ICell<Date>'
  nameWithType: 'member ScheduleModel.PreviousDate: ICell<Date> -> ICell<Date>'
  fullName: 'member Cephei.QL.ScheduleModel.PreviousDate: Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Method
  source:
    id: Cephei.QL.ScheduleModel.PreviousDate(Cephei.Cell.Generic.ICell<QLNet.Date>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 124
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member PreviousDate: d:ICell<Date> -> ICell<Date>'
    parameters:
    - id: d
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.ScheduleModel.PreviousDate*
  attributes: []
- uid: Cephei.QL.ScheduleModel.This(Cephei.Cell.Generic.ICell<int>)
  commentId: M:Cephei.QL.ScheduleModel.This(Cephei.Cell.Generic.ICell{System.Int32})
  id: This(Cephei.Cell.Generic.ICell<int>)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'member This: ICell<int> -> ICell<Date>'
  nameWithType: 'member ScheduleModel.This: ICell<int> -> ICell<Date>'
  fullName: 'member Cephei.QL.ScheduleModel.This: Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Method
  source:
    id: Cephei.QL.ScheduleModel.This(Cephei.Cell.Generic.ICell<int>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 131
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member This: i:ICell<int> -> ICell<Date>'
    parameters:
    - id: i
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.ScheduleModel.This*
  attributes: []
- uid: Cephei.QL.ScheduleModel.Until(Cephei.Cell.Generic.ICell<QLNet.Date>)
  commentId: M:Cephei.QL.ScheduleModel.Until(Cephei.Cell.Generic.ICell{QLNet.Date})
  id: Until(Cephei.Cell.Generic.ICell<QLNet.Date>)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'member Until: ICell<Date> -> ICell<Schedule>'
  nameWithType: 'member ScheduleModel.Until: ICell<Date> -> ICell<Schedule>'
  fullName: 'member Cephei.QL.ScheduleModel.Until: Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<QLNet.Schedule>'
  type: Method
  source:
    id: Cephei.QL.ScheduleModel.Until(Cephei.Cell.Generic.ICell<QLNet.Date>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 133
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Until: truncationDate:ICell<Date> -> ICell<Schedule>'
    parameters:
    - id: truncationDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Schedule>
      attributes: []
  overload: Cephei.QL.ScheduleModel.Until*
  attributes: []
- uid: Cephei.QL.ScheduleModel.terminationDateConvention(unit)
  commentId: P:Cephei.QL.ScheduleModel.terminationDateConvention
  id: terminationDateConvention(unit)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'property terminationDateConvention: ICell<BusinessDayConvention>'
  nameWithType: 'property ScheduleModel.terminationDateConvention: ICell<BusinessDayConvention>'
  fullName: 'property Cephei.QL.ScheduleModel.terminationDateConvention: Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention>'
  type: Property
  source:
    id: Cephei.QL.ScheduleModel.terminationDateConvention(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 103
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property terminationDateConvention: ICell<BusinessDayConvention> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BusinessDayConvention>
      attributes: []
  overload: Cephei.QL.ScheduleModel.terminationDateConvention*
  attributes: []
- uid: Cephei.QL.ScheduleModel.terminationDate(unit)
  commentId: P:Cephei.QL.ScheduleModel.terminationDate
  id: terminationDate(unit)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'property terminationDate: ICell<Date>'
  nameWithType: 'property ScheduleModel.terminationDate: ICell<Date>'
  fullName: 'property Cephei.QL.ScheduleModel.terminationDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.ScheduleModel.terminationDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 99
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property terminationDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.ScheduleModel.terminationDate*
  attributes: []
- uid: Cephei.QL.ScheduleModel.tenor(unit)
  commentId: P:Cephei.QL.ScheduleModel.tenor
  id: tenor(unit)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'property tenor: ICell<Period>'
  nameWithType: 'property ScheduleModel.tenor: ICell<Period>'
  fullName: 'property Cephei.QL.ScheduleModel.tenor: Cephei.Cell.Generic.ICell<QLNet.Period>'
  type: Property
  source:
    id: Cephei.QL.ScheduleModel.tenor(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 100
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property tenor: ICell<Period> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
      attributes: []
  overload: Cephei.QL.ScheduleModel.tenor*
  attributes: []
- uid: Cephei.QL.ScheduleModel.rule(unit)
  commentId: P:Cephei.QL.ScheduleModel.rule
  id: rule(unit)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'property rule: ICell<Rule>'
  nameWithType: 'property ScheduleModel.rule: ICell<Rule>'
  fullName: 'property Cephei.QL.ScheduleModel.rule: Cephei.Cell.Generic.ICell<QLNet.DateGeneration.Rule>'
  type: Property
  source:
    id: Cephei.QL.ScheduleModel.rule(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 104
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property rule: ICell<Rule> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DateGeneration.Rule>
      attributes: []
  overload: Cephei.QL.ScheduleModel.rule*
  attributes: []
- uid: Cephei.QL.ScheduleModel.nextToLastDate(unit)
  commentId: P:Cephei.QL.ScheduleModel.nextToLastDate
  id: nextToLastDate(unit)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'property nextToLastDate: ICell<Date>'
  nameWithType: 'property ScheduleModel.nextToLastDate: ICell<Date>'
  fullName: 'property Cephei.QL.ScheduleModel.nextToLastDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.ScheduleModel.nextToLastDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 107
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property nextToLastDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.ScheduleModel.nextToLastDate*
  attributes: []
- uid: Cephei.QL.ScheduleModel.firstDate(unit)
  commentId: P:Cephei.QL.ScheduleModel.firstDate
  id: firstDate(unit)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'property firstDate: ICell<Date>'
  nameWithType: 'property ScheduleModel.firstDate: ICell<Date>'
  fullName: 'property Cephei.QL.ScheduleModel.firstDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.ScheduleModel.firstDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 106
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property firstDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.ScheduleModel.firstDate*
  attributes: []
- uid: Cephei.QL.ScheduleModel.endOfMonth(unit)
  commentId: P:Cephei.QL.ScheduleModel.endOfMonth
  id: endOfMonth(unit)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'property endOfMonth: ICell<bool>'
  nameWithType: 'property ScheduleModel.endOfMonth: ICell<bool>'
  fullName: 'property Cephei.QL.ScheduleModel.endOfMonth: Cephei.Cell.Generic.ICell<bool>'
  type: Property
  source:
    id: Cephei.QL.ScheduleModel.endOfMonth(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 105
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property endOfMonth: ICell<bool> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
  overload: Cephei.QL.ScheduleModel.endOfMonth*
  attributes: []
- uid: Cephei.QL.ScheduleModel.effectiveDate(unit)
  commentId: P:Cephei.QL.ScheduleModel.effectiveDate
  id: effectiveDate(unit)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'property effectiveDate: ICell<Date>'
  nameWithType: 'property ScheduleModel.effectiveDate: ICell<Date>'
  fullName: 'property Cephei.QL.ScheduleModel.effectiveDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.ScheduleModel.effectiveDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 98
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property effectiveDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.ScheduleModel.effectiveDate*
  attributes: []
- uid: Cephei.QL.ScheduleModel.convention(unit)
  commentId: P:Cephei.QL.ScheduleModel.convention
  id: convention(unit)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'property convention: ICell<BusinessDayConvention>'
  nameWithType: 'property ScheduleModel.convention: ICell<BusinessDayConvention>'
  fullName: 'property Cephei.QL.ScheduleModel.convention: Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention>'
  type: Property
  source:
    id: Cephei.QL.ScheduleModel.convention(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 102
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property convention: ICell<BusinessDayConvention> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BusinessDayConvention>
      attributes: []
  overload: Cephei.QL.ScheduleModel.convention*
  attributes: []
- uid: Cephei.QL.ScheduleModel.calendar(unit)
  commentId: P:Cephei.QL.ScheduleModel.calendar
  id: calendar(unit)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'property calendar: ICell<Calendar>'
  nameWithType: 'property ScheduleModel.calendar: ICell<Calendar>'
  fullName: 'property Cephei.QL.ScheduleModel.calendar: Cephei.Cell.Generic.ICell<QLNet.Calendar>'
  type: Property
  source:
    id: Cephei.QL.ScheduleModel.calendar(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 101
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property calendar: ICell<Calendar> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Calendar>
      attributes: []
  overload: Cephei.QL.ScheduleModel.calendar*
  attributes: []
- uid: Cephei.QL.ScheduleModel.TerminationDateBusinessDayConvention(unit)
  commentId: P:Cephei.QL.ScheduleModel.TerminationDateBusinessDayConvention
  id: TerminationDateBusinessDayConvention(unit)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'property TerminationDateBusinessDayConvention: ICell<BusinessDayConvention>'
  nameWithType: 'property ScheduleModel.TerminationDateBusinessDayConvention: ICell<BusinessDayConvention>'
  fullName: 'property Cephei.QL.ScheduleModel.TerminationDateBusinessDayConvention: Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention>'
  type: Property
  source:
    id: Cephei.QL.ScheduleModel.TerminationDateBusinessDayConvention(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 130
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property TerminationDateBusinessDayConvention: ICell<BusinessDayConvention> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BusinessDayConvention>
      attributes: []
  overload: Cephei.QL.ScheduleModel.TerminationDateBusinessDayConvention*
  attributes: []
- uid: Cephei.QL.ScheduleModel.Tenor(unit)
  commentId: P:Cephei.QL.ScheduleModel.Tenor
  id: Tenor(unit)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'property Tenor: ICell<Period>'
  nameWithType: 'property ScheduleModel.Tenor: ICell<Period>'
  fullName: 'property Cephei.QL.ScheduleModel.Tenor: Cephei.Cell.Generic.ICell<QLNet.Period>'
  type: Property
  source:
    id: Cephei.QL.ScheduleModel.Tenor(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 129
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Tenor: ICell<Period> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
      attributes: []
  overload: Cephei.QL.ScheduleModel.Tenor*
  attributes: []
- uid: Cephei.QL.ScheduleModel.StartDate(unit)
  commentId: P:Cephei.QL.ScheduleModel.StartDate
  id: StartDate(unit)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'property StartDate: ICell<Date>'
  nameWithType: 'property ScheduleModel.StartDate: ICell<Date>'
  fullName: 'property Cephei.QL.ScheduleModel.StartDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.ScheduleModel.StartDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 128
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property StartDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.ScheduleModel.StartDate*
  attributes: []
- uid: Cephei.QL.ScheduleModel.Size(unit)
  commentId: P:Cephei.QL.ScheduleModel.Size
  id: Size(unit)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'property Size: ICell<int>'
  nameWithType: 'property ScheduleModel.Size: ICell<int>'
  fullName: 'property Cephei.QL.ScheduleModel.Size: Cephei.Cell.Generic.ICell<int>'
  type: Property
  source:
    id: Cephei.QL.ScheduleModel.Size(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 127
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Size: ICell<int> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
  overload: Cephei.QL.ScheduleModel.Size*
  attributes: []
- uid: Cephei.QL.ScheduleModel.Rule(unit)
  commentId: P:Cephei.QL.ScheduleModel.Rule
  id: Rule(unit)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'property Rule: ICell<Rule>'
  nameWithType: 'property ScheduleModel.Rule: ICell<Rule>'
  fullName: 'property Cephei.QL.ScheduleModel.Rule: Cephei.Cell.Generic.ICell<QLNet.DateGeneration.Rule>'
  type: Property
  source:
    id: Cephei.QL.ScheduleModel.Rule(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 126
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Rule: ICell<Rule> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DateGeneration.Rule>
      attributes: []
  overload: Cephei.QL.ScheduleModel.Rule*
  attributes: []
- uid: Cephei.QL.ScheduleModel.IsRegular(unit)
  commentId: P:Cephei.QL.ScheduleModel.IsRegular
  id: IsRegular(unit)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'property IsRegular: ICell<IList<bool>>'
  nameWithType: 'property ScheduleModel.IsRegular: ICell<IList<bool>>'
  fullName: 'property Cephei.QL.ScheduleModel.IsRegular: Cephei.Cell.Generic.ICell<System.Collections.Generic.IList<bool>>'
  type: Property
  source:
    id: Cephei.QL.ScheduleModel.IsRegular(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 119
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property IsRegular: ICell<IList<bool>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.IList`1<Microsoft.FSharp.Core.bool>>
      attributes: []
  overload: Cephei.QL.ScheduleModel.IsRegular*
  attributes: []
- uid: Cephei.QL.ScheduleModel.EndOfMonth(unit)
  commentId: P:Cephei.QL.ScheduleModel.EndOfMonth
  id: EndOfMonth(unit)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'property EndOfMonth: ICell<bool>'
  nameWithType: 'property ScheduleModel.EndOfMonth: ICell<bool>'
  fullName: 'property Cephei.QL.ScheduleModel.EndOfMonth: Cephei.Cell.Generic.ICell<bool>'
  type: Property
  source:
    id: Cephei.QL.ScheduleModel.EndOfMonth(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 118
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property EndOfMonth: ICell<bool> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
  overload: Cephei.QL.ScheduleModel.EndOfMonth*
  attributes: []
- uid: Cephei.QL.ScheduleModel.EndDate(unit)
  commentId: P:Cephei.QL.ScheduleModel.EndDate
  id: EndDate(unit)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'property EndDate: ICell<Date>'
  nameWithType: 'property ScheduleModel.EndDate: ICell<Date>'
  fullName: 'property Cephei.QL.ScheduleModel.EndDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.ScheduleModel.EndDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 117
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property EndDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.ScheduleModel.EndDate*
  attributes: []
- uid: Cephei.QL.ScheduleModel.Empty(unit)
  commentId: P:Cephei.QL.ScheduleModel.Empty
  id: Empty(unit)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'property Empty: ICell<bool>'
  nameWithType: 'property ScheduleModel.Empty: ICell<bool>'
  fullName: 'property Cephei.QL.ScheduleModel.Empty: Cephei.Cell.Generic.ICell<bool>'
  type: Property
  source:
    id: Cephei.QL.ScheduleModel.Empty(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 116
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Empty: ICell<bool> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
  overload: Cephei.QL.ScheduleModel.Empty*
  attributes: []
- uid: Cephei.QL.ScheduleModel.Dates(unit)
  commentId: P:Cephei.QL.ScheduleModel.Dates
  id: Dates(unit)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'property Dates: ICell<List<Date>>'
  nameWithType: 'property ScheduleModel.Dates: ICell<List<Date>>'
  fullName: 'property Cephei.QL.ScheduleModel.Dates: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.Date>>'
  type: Property
  source:
    id: Cephei.QL.ScheduleModel.Dates(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 115
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Dates: ICell<List<Date>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<QLNet.Date>>
      attributes: []
  overload: Cephei.QL.ScheduleModel.Dates*
  attributes: []
- uid: Cephei.QL.ScheduleModel.Count(unit)
  commentId: P:Cephei.QL.ScheduleModel.Count
  id: Count(unit)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'property Count: ICell<int>'
  nameWithType: 'property ScheduleModel.Count: ICell<int>'
  fullName: 'property Cephei.QL.ScheduleModel.Count: Cephei.Cell.Generic.ICell<int>'
  type: Property
  source:
    id: Cephei.QL.ScheduleModel.Count(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 112
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Count: ICell<int> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
  overload: Cephei.QL.ScheduleModel.Count*
  attributes: []
- uid: Cephei.QL.ScheduleModel.Calendar(unit)
  commentId: P:Cephei.QL.ScheduleModel.Calendar
  id: Calendar(unit)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'property Calendar: ICell<Calendar>'
  nameWithType: 'property ScheduleModel.Calendar: ICell<Calendar>'
  fullName: 'property Cephei.QL.ScheduleModel.Calendar: Cephei.Cell.Generic.ICell<QLNet.Calendar>'
  type: Property
  source:
    id: Cephei.QL.ScheduleModel.Calendar(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 111
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Calendar: ICell<Calendar> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Calendar>
      attributes: []
  overload: Cephei.QL.ScheduleModel.Calendar*
  attributes: []
- uid: Cephei.QL.ScheduleModel.BusinessDayConvention(unit)
  commentId: P:Cephei.QL.ScheduleModel.BusinessDayConvention
  id: BusinessDayConvention(unit)
  parent: Cephei.QL.ScheduleModel
  langs:
  - csharp
  - vb
  name: 'property BusinessDayConvention: ICell<BusinessDayConvention>'
  nameWithType: 'property ScheduleModel.BusinessDayConvention: ICell<BusinessDayConvention>'
  fullName: 'property Cephei.QL.ScheduleModel.BusinessDayConvention: Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention>'
  type: Property
  source:
    id: Cephei.QL.ScheduleModel.BusinessDayConvention(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\ScheduleModel.fs
    startLine: 110
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property BusinessDayConvention: ICell<BusinessDayConvention> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BusinessDayConvention>
      attributes: []
  overload: Cephei.QL.ScheduleModel.BusinessDayConvention*
  attributes: []
references:
- uid: Cephei.QL
  commentId: N:Cephei.QL
  name: Cephei.QL
  nameWithType: Cephei.QL
  fullName: Cephei.QL
- uid: TypeRef:System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
  spec.csharp:
  - {}
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - {}
- uid: TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: ConcurrentDictionary<string,ICell>
  nameWithType: ConcurrentDictionary<string,ICell>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Model
  name: Model
  nameWithType: Model
  fullName: Cephei.Cell.Model
  spec.csharp:
  - {}
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - {}
- uid: TypeRef:Cephei.Cell.Generic.Model`1<QLNet.Schedule>
  name: Model<Schedule>
  nameWithType: Model<Schedule>
  fullName: Cephei.Cell.Generic.Model<QLNet.Schedule>
  spec.csharp:
  - uid: Cephei.Cell.Generic.Model`1
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Generic.Model
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Schedule
    name: Schedule
    nameWithType: Schedule
    fullName: QLNet.Schedule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Schedule>
  name: ICell<Schedule>
  nameWithType: ICell<Schedule>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Schedule>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Schedule
    name: Schedule
    nameWithType: Schedule
    fullName: QLNet.Schedule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.ICell
  name: ICell
  nameWithType: ICell
  fullName: Cephei.Cell.ICell
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - {}
- uid: TypeRef:Cephei.Cell.ICellEvent
  name: ICellEvent
  nameWithType: ICellEvent
  fullName: Cephei.Cell.ICellEvent
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICellEvent
    name: ICellEvent
    nameWithType: ICellEvent
    fullName: Cephei.Cell.ICellEvent
  - {}
- uid: TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: ICollection<KeyValuePair<string,ICell>>
  nameWithType: ICollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IDictionary<string,ICell>
  nameWithType: IDictionary<string,ICell>
  fullName: System.Collections.Generic.IDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IEnumerable<KeyValuePair<string,ICell>>
  nameWithType: IEnumerable<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IReadOnlyCollection<KeyValuePair<string,ICell>>
  nameWithType: IReadOnlyCollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IReadOnlyDictionary<string,ICell>
  nameWithType: IReadOnlyDictionary<string,ICell>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.ICollection
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
  spec.csharp:
  - {}
  - uid: System.Collections.ICollection
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.ICollection
  - {}
- uid: TypeRef:System.Collections.IDictionary
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
  spec.csharp:
  - {}
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
  - {}
- uid: TypeRef:System.Collections.IEnumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
  spec.csharp:
  - {}
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
  - {}
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  name: IObservable<ICell>
  nameWithType: IObservable<ICell>
  fullName: System.IObservable<Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.Schedule> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * ICell<Schedule> * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * ICell<Schedule> * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<QLNet.Schedule> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Schedule
    name: Schedule
    nameWithType: Schedule
    fullName: QLNet.Schedule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<QLNet.Schedule>
  name: IObservable<Schedule>
  nameWithType: IObservable<Schedule>
  fullName: System.IObservable<QLNet.Schedule>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Schedule
    name: Schedule
    nameWithType: Schedule
    fullName: QLNet.Schedule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.Schedule>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,Schedule>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,Schedule>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,QLNet.Schedule>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: QLNet.Schedule
    name: Schedule
    nameWithType: Schedule
    fullName: QLNet.Schedule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  name: IObservable<KeyValuePair<string,decimal>>
  nameWithType: IObservable<KeyValuePair<string,decimal>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,decimal>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.decimal
    name: decimal
    nameWithType: decimal
    fullName: decimal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  name: IObservable<KeyValuePair<string,float>>
  nameWithType: IObservable<KeyValuePair<string,float>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,float>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  name: IObservable<KeyValuePair<string,int>>
  nameWithType: IObservable<KeyValuePair<string,int>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,int>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.int
    name: int
    nameWithType: int
    fullName: int
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObserver`1<QLNet.Schedule>
  name: IObserver<Schedule>
  nameWithType: IObserver<Schedule>
  fullName: System.IObserver<QLNet.Schedule>
  spec.csharp:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Schedule
    name: Schedule
    nameWithType: Schedule
    fullName: QLNet.Schedule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  name: "member Bind: ICell<'T> -> unit"
  nameWithType: "member Model.Bind: ICell<'T> -> unit"
  fullName: "member Cephei.Cell.Generic.Model.Bind: Cephei.Cell.Generic.ICell<'T> -> unit"
- uid: Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  name: 'abstract member OnCompleted: unit -> unit'
  nameWithType: 'abstract member Model.OnCompleted: unit -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnCompleted: unit -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnError(exn)
  name: 'abstract member OnError: exn -> unit'
  nameWithType: 'abstract member Model.OnError: exn -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnError: exn -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnNext('T)
  name: "abstract member OnNext: 'T -> unit"
  nameWithType: "abstract member Model.OnNext: 'T -> unit"
  fullName: "abstract member Cephei.Cell.Generic.Model.OnNext: 'T -> unit"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  name: "abstract member Subscribe: IObserver<'T> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<'T> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<'T> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: "abstract member Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  name: "abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Value(unit)
  name: "abstract property Value: 'T"
  nameWithType: "abstract property Model.Value: 'T"
  fullName: "abstract property Cephei.Cell.Generic.Model.Value: 'T"
- uid: Cephei.Cell.Model.As(string)
  name: "member As: string -> ICell<'T>"
  nameWithType: "member Model.As: string -> ICell<'T>"
  fullName: "member Cephei.Cell.Model.As: string -> Cephei.Cell.Generic.ICell<'T>"
- uid: Cephei.Cell.Model.Bind(unit)
  name: 'member Bind: unit -> unit'
  nameWithType: 'member Model.Bind: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Bind: unit -> unit'
- uid: Cephei.Cell.Model.Box(unit)
  name: 'abstract property Box: obj'
  nameWithType: 'abstract property Model.Box: obj'
  fullName: 'abstract property Cephei.Cell.Model.Box: obj'
- uid: Cephei.Cell.Model.Change()
  name: 'abstract member Change: CellChange'
  nameWithType: 'abstract member Model.Change: CellChange'
  fullName: 'abstract member Cephei.Cell.Model.Change: Cephei.Cell.CellChange'
- uid: Cephei.Cell.Model.Create(Unit -> 'T * string)
  name: "member Create: Unit -> 'T * string -> Cell<'T>"
  nameWithType: "member Model.Create: Unit -> 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.Create: Unit -> 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.CreateValue('T * string)
  name: "member CreateValue: 'T * string -> Cell<'T>"
  nameWithType: "member Model.CreateValue: 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.CreateValue: 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.Dependants(unit)
  name: 'abstract property Dependants: IEnumerable<ICellEvent>'
  nameWithType: 'abstract property Model.Dependants: IEnumerable<ICellEvent>'
  fullName: 'abstract property Cephei.Cell.Model.Dependants: System.Collections.Generic.IEnumerable<Cephei.Cell.ICellEvent>'
- uid: Cephei.Cell.Model.Dispose(unit)
  name: 'member Dispose: unit -> unit'
  nameWithType: 'member Model.Dispose: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Dispose: unit -> unit'
- uid: Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  name: 'member GetOrAdd: string * ICell -> ICell'
  nameWithType: 'member Model.GetOrAdd: string * ICell -> ICell'
  fullName: 'member Cephei.Cell.Model.GetOrAdd: string * Cephei.Cell.ICell -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.HasFunction(unit)
  name: 'abstract property HasFunction: bool'
  nameWithType: 'abstract property Model.HasFunction: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasFunction: bool'
- uid: Cephei.Cell.Model.HasValue(unit)
  name: 'abstract property HasValue: bool'
  nameWithType: 'abstract property Model.HasValue: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasValue: bool'
- uid: Cephei.Cell.Model.Item(string)
  name: 'property Item: string -> ICell'
  nameWithType: 'property Model.Item: string -> ICell'
  fullName: 'property Cephei.Cell.Model.Item: string -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Mnemonic(unit)
  name: 'abstract property Mnemonic: string'
  nameWithType: 'abstract property Model.Mnemonic: string'
  fullName: 'abstract property Cephei.Cell.Model.Mnemonic: string'
- uid: Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  name: 'abstract member OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  nameWithType: 'abstract member Model.OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  fullName: 'abstract member Cephei.Cell.Model.OnChange: Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession -> unit'
- uid: Cephei.Cell.Model.Parent(unit)
  name: 'abstract property Parent: ICell'
  nameWithType: 'abstract property Model.Parent: ICell'
  fullName: 'abstract property Cephei.Cell.Model.Parent: Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  name: 'abstract member Subscribe: IObserver<ICell> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ICell> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ICell> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: 'abstract member Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,float>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,int>> -> System.IDisposable'
- uid: Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  name: 'member TryAdd: string * ICell -> bool'
  nameWithType: 'member Model.TryAdd: string * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryAdd: string * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  name: 'member TryRemove: string * ICell byref -> bool'
  nameWithType: 'member Model.TryRemove: string * ICell byref -> bool'
  fullName: 'member Cephei.Cell.Model.TryRemove: string * Cephei.Cell.ICell byref -> bool'
- uid: Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  name: 'member TryUpdate: string * ICell * ICell -> bool'
  nameWithType: 'member Model.TryUpdate: string * ICell * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryUpdate: string * Cephei.Cell.ICell * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  name: 'abstract member add_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.add_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.add_Change: Cephei.Cell.CellChange -> unit'
- uid: Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  name: 'abstract member remove_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.remove_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.remove_Change: Cephei.Cell.CellChange -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  name: 'abstract member Clear: unit -> unit'
  nameWithType: 'abstract member ConcurrentDictionary.Clear: unit -> unit'
  fullName: 'abstract member System.Collections.Concurrent.ConcurrentDictionary.Clear: unit -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  name: "abstract member ContainsKey: 'TKey -> bool"
  nameWithType: "abstract member ConcurrentDictionary.ContainsKey: 'TKey -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.ContainsKey: 'TKey -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  name: 'abstract property Count: int'
  nameWithType: 'abstract property ConcurrentDictionary.Count: int'
  fullName: 'abstract property System.Collections.Concurrent.ConcurrentDictionary.Count: int'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  name: "abstract member GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  nameWithType: "abstract member ConcurrentDictionary.GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.GetEnumerator: unit -> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<'TKey,'TValue>>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  name: "member GetOrAdd: 'TKey * 'TValue -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  name: "member GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * System.Func<'TKey,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  name: 'property IsEmpty: bool'
  nameWithType: 'property ConcurrentDictionary.IsEmpty: bool'
  fullName: 'property System.Collections.Concurrent.ConcurrentDictionary.IsEmpty: bool'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  name: "abstract property Item: 'TKey -> 'TValue"
  nameWithType: "abstract property ConcurrentDictionary.Item: 'TKey -> 'TValue"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Item: 'TKey -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  name: "abstract property Keys: ICollection<'TKey>"
  nameWithType: "abstract property ConcurrentDictionary.Keys: ICollection<'TKey>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Keys: System.Collections.Generic.ICollection<'TKey>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  name: "member ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  nameWithType: "member ConcurrentDictionary.ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.ToArray: unit -> System.Collections.Generic.KeyValuePair<'TKey,'TValue> []"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  name: "member TryAdd: 'TKey * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  name: "abstract member TryGetValue: 'TKey * 'TValue byref -> bool"
  nameWithType: "abstract member ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  name: "member TryRemove: 'TKey * 'TValue byref -> bool"
  nameWithType: "member ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  name: "member TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  name: "abstract property Values: ICollection<'TValue>"
  nameWithType: "abstract property ConcurrentDictionary.Values: ICollection<'TValue>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Values: System.Collections.Generic.ICollection<'TValue>"
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
  name: ICell<Date>
  nameWithType: ICell<Date>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Date>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Date
    name: Date
    nameWithType: Date
    fullName: QLNet.Date
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
  name: ICell<Period>
  nameWithType: ICell<Period>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Period>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Period
    name: Period
    nameWithType: Period
    fullName: QLNet.Period
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Calendar>
  name: ICell<Calendar>
  nameWithType: ICell<Calendar>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Calendar>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Calendar
    name: Calendar
    nameWithType: Calendar
    fullName: QLNet.Calendar
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BusinessDayConvention>
  name: ICell<BusinessDayConvention>
  nameWithType: ICell<BusinessDayConvention>
  fullName: Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.BusinessDayConvention
    name: BusinessDayConvention
    nameWithType: BusinessDayConvention
    fullName: QLNet.BusinessDayConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DateGeneration.Rule>
  name: ICell<Rule>
  nameWithType: ICell<Rule>
  fullName: Cephei.Cell.Generic.ICell<QLNet.DateGeneration.Rule>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.DateGeneration.Rule
    name: Rule
    nameWithType: Rule
    fullName: QLNet.DateGeneration.Rule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
  name: ICell<bool>
  nameWithType: ICell<bool>
  fullName: Cephei.Cell.Generic.ICell<bool>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.bool
    name: bool
    nameWithType: bool
    fullName: bool
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.ScheduleModel.#ctor*
  commentId: Overload:Cephei.QL.ScheduleModel.#ctor*
  name: ( .ctor )
  nameWithType: ScheduleModel.( .ctor )
  fullName: Cephei.QL.ScheduleModel
- uid: TypeRef:Cephei.QL.ScheduleModel
  name: ScheduleModel
  nameWithType: ScheduleModel
  fullName: Cephei.QL.ScheduleModel
  spec.csharp:
  - {}
  - uid: Cephei.QL.ScheduleModel
    name: ScheduleModel
    nameWithType: ScheduleModel
    fullName: Cephei.QL.ScheduleModel
  - {}
- uid: Cephei.QL.ScheduleModel.At*
  commentId: Overload:Cephei.QL.ScheduleModel.At*
  name: At
  nameWithType: ScheduleModel.At
  fullName: Cephei.QL.ScheduleModel.At
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
  name: ICell<int>
  nameWithType: ICell<int>
  fullName: Cephei.Cell.Generic.ICell<int>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.int
    name: int
    nameWithType: int
    fullName: int
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.ScheduleModel.Date*
  commentId: Overload:Cephei.QL.ScheduleModel.Date*
  name: Date
  nameWithType: ScheduleModel.Date
  fullName: Cephei.QL.ScheduleModel.Date
- uid: Cephei.QL.ScheduleModel.IsRegular1*
  commentId: Overload:Cephei.QL.ScheduleModel.IsRegular1*
  name: IsRegular1
  nameWithType: ScheduleModel.IsRegular1
  fullName: Cephei.QL.ScheduleModel.IsRegular1
- uid: Cephei.QL.ScheduleModel.NextDate*
  commentId: Overload:Cephei.QL.ScheduleModel.NextDate*
  name: NextDate
  nameWithType: ScheduleModel.NextDate
  fullName: Cephei.QL.ScheduleModel.NextDate
- uid: Cephei.QL.ScheduleModel.PreviousDate*
  commentId: Overload:Cephei.QL.ScheduleModel.PreviousDate*
  name: PreviousDate
  nameWithType: ScheduleModel.PreviousDate
  fullName: Cephei.QL.ScheduleModel.PreviousDate
- uid: Cephei.QL.ScheduleModel.This*
  commentId: Overload:Cephei.QL.ScheduleModel.This*
  name: This
  nameWithType: ScheduleModel.This
  fullName: Cephei.QL.ScheduleModel.This
- uid: Cephei.QL.ScheduleModel.Until*
  commentId: Overload:Cephei.QL.ScheduleModel.Until*
  name: Until
  nameWithType: ScheduleModel.Until
  fullName: Cephei.QL.ScheduleModel.Until
- uid: Cephei.QL.ScheduleModel.terminationDateConvention*
  commentId: Overload:Cephei.QL.ScheduleModel.terminationDateConvention*
  name: terminationDateConvention
  nameWithType: ScheduleModel.terminationDateConvention
  fullName: Cephei.QL.ScheduleModel.terminationDateConvention
- uid: Cephei.QL.ScheduleModel.terminationDate*
  commentId: Overload:Cephei.QL.ScheduleModel.terminationDate*
  name: terminationDate
  nameWithType: ScheduleModel.terminationDate
  fullName: Cephei.QL.ScheduleModel.terminationDate
- uid: Cephei.QL.ScheduleModel.tenor*
  commentId: Overload:Cephei.QL.ScheduleModel.tenor*
  name: tenor
  nameWithType: ScheduleModel.tenor
  fullName: Cephei.QL.ScheduleModel.tenor
- uid: Cephei.QL.ScheduleModel.rule*
  commentId: Overload:Cephei.QL.ScheduleModel.rule*
  name: rule
  nameWithType: ScheduleModel.rule
  fullName: Cephei.QL.ScheduleModel.rule
- uid: Cephei.QL.ScheduleModel.nextToLastDate*
  commentId: Overload:Cephei.QL.ScheduleModel.nextToLastDate*
  name: nextToLastDate
  nameWithType: ScheduleModel.nextToLastDate
  fullName: Cephei.QL.ScheduleModel.nextToLastDate
- uid: Cephei.QL.ScheduleModel.firstDate*
  commentId: Overload:Cephei.QL.ScheduleModel.firstDate*
  name: firstDate
  nameWithType: ScheduleModel.firstDate
  fullName: Cephei.QL.ScheduleModel.firstDate
- uid: Cephei.QL.ScheduleModel.endOfMonth*
  commentId: Overload:Cephei.QL.ScheduleModel.endOfMonth*
  name: endOfMonth
  nameWithType: ScheduleModel.endOfMonth
  fullName: Cephei.QL.ScheduleModel.endOfMonth
- uid: Cephei.QL.ScheduleModel.effectiveDate*
  commentId: Overload:Cephei.QL.ScheduleModel.effectiveDate*
  name: effectiveDate
  nameWithType: ScheduleModel.effectiveDate
  fullName: Cephei.QL.ScheduleModel.effectiveDate
- uid: Cephei.QL.ScheduleModel.convention*
  commentId: Overload:Cephei.QL.ScheduleModel.convention*
  name: convention
  nameWithType: ScheduleModel.convention
  fullName: Cephei.QL.ScheduleModel.convention
- uid: Cephei.QL.ScheduleModel.calendar*
  commentId: Overload:Cephei.QL.ScheduleModel.calendar*
  name: calendar
  nameWithType: ScheduleModel.calendar
  fullName: Cephei.QL.ScheduleModel.calendar
- uid: Cephei.QL.ScheduleModel.TerminationDateBusinessDayConvention*
  commentId: Overload:Cephei.QL.ScheduleModel.TerminationDateBusinessDayConvention*
  name: TerminationDateBusinessDayConvention
  nameWithType: ScheduleModel.TerminationDateBusinessDayConvention
  fullName: Cephei.QL.ScheduleModel.TerminationDateBusinessDayConvention
- uid: Cephei.QL.ScheduleModel.Tenor*
  commentId: Overload:Cephei.QL.ScheduleModel.Tenor*
  name: Tenor
  nameWithType: ScheduleModel.Tenor
  fullName: Cephei.QL.ScheduleModel.Tenor
- uid: Cephei.QL.ScheduleModel.StartDate*
  commentId: Overload:Cephei.QL.ScheduleModel.StartDate*
  name: StartDate
  nameWithType: ScheduleModel.StartDate
  fullName: Cephei.QL.ScheduleModel.StartDate
- uid: Cephei.QL.ScheduleModel.Size*
  commentId: Overload:Cephei.QL.ScheduleModel.Size*
  name: Size
  nameWithType: ScheduleModel.Size
  fullName: Cephei.QL.ScheduleModel.Size
- uid: Cephei.QL.ScheduleModel.Rule*
  commentId: Overload:Cephei.QL.ScheduleModel.Rule*
  name: Rule
  nameWithType: ScheduleModel.Rule
  fullName: Cephei.QL.ScheduleModel.Rule
- uid: Cephei.QL.ScheduleModel.IsRegular*
  commentId: Overload:Cephei.QL.ScheduleModel.IsRegular*
  name: IsRegular
  nameWithType: ScheduleModel.IsRegular
  fullName: Cephei.QL.ScheduleModel.IsRegular
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.IList`1<Microsoft.FSharp.Core.bool>>
  name: ICell<IList<bool>>
  nameWithType: ICell<IList<bool>>
  fullName: Cephei.Cell.Generic.ICell<System.Collections.Generic.IList<bool>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.bool
    name: bool
    nameWithType: bool
    fullName: bool
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.ScheduleModel.EndOfMonth*
  commentId: Overload:Cephei.QL.ScheduleModel.EndOfMonth*
  name: EndOfMonth
  nameWithType: ScheduleModel.EndOfMonth
  fullName: Cephei.QL.ScheduleModel.EndOfMonth
- uid: Cephei.QL.ScheduleModel.EndDate*
  commentId: Overload:Cephei.QL.ScheduleModel.EndDate*
  name: EndDate
  nameWithType: ScheduleModel.EndDate
  fullName: Cephei.QL.ScheduleModel.EndDate
- uid: Cephei.QL.ScheduleModel.Empty*
  commentId: Overload:Cephei.QL.ScheduleModel.Empty*
  name: Empty
  nameWithType: ScheduleModel.Empty
  fullName: Cephei.QL.ScheduleModel.Empty
- uid: Cephei.QL.ScheduleModel.Dates*
  commentId: Overload:Cephei.QL.ScheduleModel.Dates*
  name: Dates
  nameWithType: ScheduleModel.Dates
  fullName: Cephei.QL.ScheduleModel.Dates
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<QLNet.Date>>
  name: ICell<List<Date>>
  nameWithType: ICell<List<Date>>
  fullName: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.Date>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Date
    name: Date
    nameWithType: Date
    fullName: QLNet.Date
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.ScheduleModel.Count*
  commentId: Overload:Cephei.QL.ScheduleModel.Count*
  name: Count
  nameWithType: ScheduleModel.Count
  fullName: Cephei.QL.ScheduleModel.Count
- uid: Cephei.QL.ScheduleModel.Calendar*
  commentId: Overload:Cephei.QL.ScheduleModel.Calendar*
  name: Calendar
  nameWithType: ScheduleModel.Calendar
  fullName: Cephei.QL.ScheduleModel.Calendar
- uid: Cephei.QL.ScheduleModel.BusinessDayConvention*
  commentId: Overload:Cephei.QL.ScheduleModel.BusinessDayConvention*
  name: BusinessDayConvention
  nameWithType: ScheduleModel.BusinessDayConvention
  fullName: Cephei.QL.ScheduleModel.BusinessDayConvention
