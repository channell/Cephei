### YamlMime:ManagedReference
items:
- uid: Cephei.Cell.Generic.CellEmpty`1
  commentId: T:Cephei.Cell.Generic.CellEmpty`1
  id: CellEmpty`1
  parent: Cephei.Cell.Generic
  children:
  - Cephei.Cell.Generic.CellEmpty`1.#ctor
  - Cephei.Cell.Generic.CellEmpty`1.#ctor(System.String)
  - Cephei.Cell.Generic.CellEmpty`1.Value
  langs:
  - csharp
  - vb
  name: CellEmpty<T>
  nameWithType: CellEmpty<T>
  fullName: Cephei.Cell.Generic.CellEmpty<T>
  type: Class
  source:
    remote:
      path: Cephei.Cell/Generic/CellEmpty.cs
      branch: master
      repo: https://github.com/channell/Cephei
    id: CellEmpty
    path: ../Cephei.Cell/Generic/CellEmpty.cs
    startLine: 13
  assemblies:
  - Cephei - Backup.Cell
  namespace: Cephei.Cell.Generic
  summary: "\nHolder class for forward reference of cells before definition\n"
  example: []
  syntax:
    content: 'public class CellEmpty<T> : Cell<T>, ICell<T>, ICell, ICellEvent, IObservable<T>, IObservable<KeyValuePair<ISession, KeyValuePair<string, T>>>, IObservable<Tuple<ISession, ICell<T>, CellEvent, ICell, DateTime>>, IObserver<T>, ICellEmpty'
    typeParameters:
    - id: T
      description: type
    content.vb: >-
      Public Class CellEmpty(Of T)
          Inherits Cell(Of T)
          Implements ICell(Of T), ICell, ICellEvent, IObservable(Of T), IObservable(Of KeyValuePair(Of ISession, KeyValuePair(Of String, T))), IObservable(Of Tuple(Of ISession, ICell(Of T), CellEvent, ICell, DateTime)), IObserver(Of T), ICellEmpty
  inheritance:
  - System.Object
  - Cephei.Cell.Generic.Cell{{T}}
  implements:
  - Cephei.Cell.Generic.ICell{{T}}
  - Cephei.Cell.ICell
  - Cephei.Cell.ICellEvent
  - IObservable{{T}}
  - IObservable{KeyValuePair{Cephei.Cell.ISession,KeyValuePair{System.String,{T}}}}
  - IObservable{Tuple{Cephei.Cell.ISession,Cephei.Cell.Generic.ICell{{T}},Cephei.Cell.CellEvent,Cephei.Cell.ICell,DateTime}}
  - IObserver{{T}}
  inheritedMembers:
  - Cephei.Cell.Generic.Cell{{T}}.Mnemonic
  - Cephei.Cell.Generic.Cell{{T}}.Parent
  - Cephei.Cell.Generic.Cell{{T}}.GetValue(System.Int32)
  - Cephei.Cell.Generic.Cell{{T}}.Dependants
  - Cephei.Cell.Generic.Cell{{T}}.Change
  - Cephei.Cell.Generic.Cell{{T}}.Dispose
  - Cephei.Cell.Generic.Cell{{T}}.OnChange(Cephei.Cell.CellEvent,Cephei.Cell.ICellEvent,DateTime,Cephei.Cell.ISession)
  - Cephei.Cell.Generic.Cell{{T}}.HasFunction
  - Cephei.Cell.Generic.Cell{{T}}.HasValue
  - Cephei.Cell.Generic.Cell{{T}}.Box
  - Cephei.Cell.Generic.Cell{{T}}.Subscribe(IObserver{{T}})
  - Cephei.Cell.Generic.Cell{{T}}.Subscribe(IObserver{KeyValuePair{Cephei.Cell.ISession,KeyValuePair{System.String,{T}}}})
  - Cephei.Cell.Generic.Cell{{T}}.Subscribe(IObserver{Tuple{Cephei.Cell.ISession,Cephei.Cell.Generic.ICell{{T}},Cephei.Cell.CellEvent,Cephei.Cell.ICell,DateTime}})
  - Cephei.Cell.Generic.Cell{{T}}.OnCompleted
  - Cephei.Cell.Generic.Cell{{T}}.OnError(Exception)
  - Cephei.Cell.Generic.Cell{{T}}.OnNext({T})
  nameWithType.vb: CellEmpty(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Cephei.Cell.Generic.CellEmpty(Of T)
  name.vb: CellEmpty(Of T)
- uid: Cephei.Cell.Generic.CellEmpty`1.#ctor
  commentId: M:Cephei.Cell.Generic.CellEmpty`1.#ctor
  id: '#ctor'
  parent: Cephei.Cell.Generic.CellEmpty`1
  langs:
  - csharp
  - vb
  name: CellEmpty()
  nameWithType: CellEmpty<T>.CellEmpty()
  fullName: Cephei.Cell.Generic.CellEmpty<T>.CellEmpty()
  type: Constructor
  source:
    remote:
      path: Cephei.Cell/Generic/CellEmpty.cs
      branch: master
      repo: https://github.com/channell/Cephei
    id: .ctor
    path: ../Cephei.Cell/Generic/CellEmpty.cs
    startLine: 15
  assemblies:
  - Cephei - Backup.Cell
  namespace: Cephei.Cell.Generic
  syntax:
    content: public CellEmpty()
    content.vb: Public Sub New
  overload: Cephei.Cell.Generic.CellEmpty`1.#ctor*
  nameWithType.vb: CellEmpty(Of T).CellEmpty()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cephei.Cell.Generic.CellEmpty(Of T).CellEmpty()
- uid: Cephei.Cell.Generic.CellEmpty`1.#ctor(System.String)
  commentId: M:Cephei.Cell.Generic.CellEmpty`1.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Cephei.Cell.Generic.CellEmpty`1
  langs:
  - csharp
  - vb
  name: CellEmpty(String)
  nameWithType: CellEmpty<T>.CellEmpty(String)
  fullName: Cephei.Cell.Generic.CellEmpty<T>.CellEmpty(System.String)
  type: Constructor
  source:
    remote:
      path: Cephei.Cell/Generic/CellEmpty.cs
      branch: master
      repo: https://github.com/channell/Cephei
    id: .ctor
    path: ../Cephei.Cell/Generic/CellEmpty.cs
    startLine: 20
  assemblies:
  - Cephei - Backup.Cell
  namespace: Cephei.Cell.Generic
  syntax:
    content: public CellEmpty(string mnemonic)
    parameters:
    - id: mnemonic
      type: System.String
    content.vb: Public Sub New(mnemonic As String)
  overload: Cephei.Cell.Generic.CellEmpty`1.#ctor*
  nameWithType.vb: CellEmpty(Of T).CellEmpty(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cephei.Cell.Generic.CellEmpty(Of T).CellEmpty(System.String)
- uid: Cephei.Cell.Generic.CellEmpty`1.Value
  commentId: P:Cephei.Cell.Generic.CellEmpty`1.Value
  id: Value
  parent: Cephei.Cell.Generic.CellEmpty`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: CellEmpty<T>.Value
  fullName: Cephei.Cell.Generic.CellEmpty<T>.Value
  type: Property
  source:
    remote:
      path: Cephei.Cell/Generic/CellEmpty.cs
      branch: master
      repo: https://github.com/channell/Cephei
    id: Value
    path: ../Cephei.Cell/Generic/CellEmpty.cs
    startLine: 25
  assemblies:
  - Cephei - Backup.Cell
  namespace: Cephei.Cell.Generic
  syntax:
    content: public T Value { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Property Value As T
  overload: Cephei.Cell.Generic.CellEmpty`1.Value*
  nameWithType.vb: CellEmpty(Of T).Value
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Cephei.Cell.Generic.CellEmpty(Of T).Value
references:
- uid: Cephei.Cell.Generic
  commentId: N:Cephei.Cell.Generic
  name: Cephei.Cell.Generic
  nameWithType: Cephei.Cell.Generic
  fullName: Cephei.Cell.Generic
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cephei.Cell.Generic.Cell{{T}}
  commentId: T:Cephei.Cell.Generic.Cell{``0}
  parent: Cephei.Cell.Generic
  definition: Cephei.Cell.Generic.Cell`1
  name: Cell<T>
  nameWithType: Cell<T>
  fullName: Cephei.Cell.Generic.Cell<T>
  nameWithType.vb: Cell(Of T)
  fullName.vb: Cephei.Cell.Generic.Cell(Of T)
  name.vb: Cell(Of T)
  spec.csharp:
  - uid: Cephei.Cell.Generic.Cell`1
    name: Cell
    nameWithType: Cell
    fullName: Cephei.Cell.Generic.Cell
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cephei.Cell.Generic.Cell`1
    name: Cell
    nameWithType: Cell
    fullName: Cephei.Cell.Generic.Cell
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Cephei.Cell.Generic.ICell{{T}}
  commentId: T:Cephei.Cell.Generic.ICell{`0}
  parent: Cephei.Cell.Generic
  definition: Cephei.Cell.Generic.ICell`1
  name: ICell<T>
  nameWithType: ICell<T>
  fullName: Cephei.Cell.Generic.ICell<T>
  nameWithType.vb: ICell(Of T)
  fullName.vb: Cephei.Cell.Generic.ICell(Of T)
  name.vb: ICell(Of T)
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Cephei.Cell.ICell
  commentId: T:Cephei.Cell.ICell
  parent: Cephei.Cell
  name: ICell
  nameWithType: ICell
  fullName: Cephei.Cell.ICell
- uid: Cephei.Cell.ICellEvent
  commentId: T:Cephei.Cell.ICellEvent
  parent: Cephei.Cell
  name: ICellEvent
  nameWithType: ICellEvent
  fullName: Cephei.Cell.ICellEvent
- uid: IObservable{{T}}
  commentId: '!:IObservable{`0}'
  definition: IObservable`1
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: IObservable<T>
  nameWithType.vb: IObservable(Of T)
  fullName.vb: IObservable(Of T)
  name.vb: IObservable(Of T)
  spec.csharp:
  - uid: IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: IObservable{KeyValuePair{Cephei.Cell.ISession,KeyValuePair{System.String,{T}}}}
  commentId: '!:IObservable{KeyValuePair{Cephei.Cell.ISession,KeyValuePair{System.String,`0}}}'
  definition: IObservable`1
  name: IObservable<KeyValuePair<ISession, KeyValuePair<String, T>>>
  nameWithType: IObservable<KeyValuePair<ISession, KeyValuePair<String, T>>>
  fullName: IObservable<KeyValuePair<Cephei.Cell.ISession, KeyValuePair<System.String, T>>>
  nameWithType.vb: IObservable(Of KeyValuePair(Of ISession, KeyValuePair(Of String, T)))
  fullName.vb: IObservable(Of KeyValuePair(Of Cephei.Cell.ISession, KeyValuePair(Of System.String, T)))
  name.vb: IObservable(Of KeyValuePair(Of ISession, KeyValuePair(Of String, T)))
  spec.csharp:
  - uid: IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IObservable{Tuple{Cephei.Cell.ISession,Cephei.Cell.Generic.ICell{{T}},Cephei.Cell.CellEvent,Cephei.Cell.ICell,DateTime}}
  commentId: '!:IObservable{Tuple{Cephei.Cell.ISession,Cephei.Cell.Generic.ICell{`0},Cephei.Cell.CellEvent,Cephei.Cell.ICell,DateTime}}'
  definition: IObservable`1
  name: IObservable<Tuple<ISession, ICell<T>, CellEvent, ICell, DateTime>>
  nameWithType: IObservable<Tuple<ISession, ICell<T>, CellEvent, ICell, DateTime>>
  fullName: IObservable<Tuple<Cephei.Cell.ISession, Cephei.Cell.Generic.ICell<T>, Cephei.Cell.CellEvent, Cephei.Cell.ICell, DateTime>>
  nameWithType.vb: IObservable(Of Tuple(Of ISession, ICell(Of T), CellEvent, ICell, DateTime))
  fullName.vb: IObservable(Of Tuple(Of Cephei.Cell.ISession, Cephei.Cell.Generic.ICell(Of T), Cephei.Cell.CellEvent, Cephei.Cell.ICell, DateTime))
  name.vb: IObservable(Of Tuple(Of ISession, ICell(Of T), CellEvent, ICell, DateTime))
  spec.csharp:
  - uid: IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tuple`5
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tuple`5
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IObserver{{T}}
  commentId: '!:IObserver{`0}'
  definition: IObserver`1
  name: IObserver<T>
  nameWithType: IObserver<T>
  fullName: IObserver<T>
  nameWithType.vb: IObserver(Of T)
  fullName.vb: IObserver(Of T)
  name.vb: IObserver(Of T)
  spec.csharp:
  - uid: IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: IObserver
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: IObserver
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Cephei.Cell.Generic.Cell{{T}}.Mnemonic
  commentId: P:Cephei.Cell.Generic.Cell{`0}.Mnemonic
  parent: Cephei.Cell.Generic.Cell{{T}}
  definition: Cephei.Cell.Generic.Cell`1.Mnemonic
  name: Mnemonic
  nameWithType: Cell<T>.Mnemonic
  fullName: Cephei.Cell.Generic.Cell<T>.Mnemonic
  nameWithType.vb: Cell(Of T).Mnemonic
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).Mnemonic
- uid: Cephei.Cell.Generic.Cell{{T}}.Parent
  commentId: P:Cephei.Cell.Generic.Cell{`0}.Parent
  parent: Cephei.Cell.Generic.Cell{{T}}
  definition: Cephei.Cell.Generic.Cell`1.Parent
  name: Parent
  nameWithType: Cell<T>.Parent
  fullName: Cephei.Cell.Generic.Cell<T>.Parent
  nameWithType.vb: Cell(Of T).Parent
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).Parent
- uid: Cephei.Cell.Generic.Cell{{T}}.GetValue(System.Int32)
  commentId: M:Cephei.Cell.Generic.Cell{`0}.GetValue(System.Int32)
  parent: Cephei.Cell.Generic.Cell{{T}}
  definition: Cephei.Cell.Generic.Cell`1.GetValue(System.Int32)
  name: GetValue(Int32)
  nameWithType: Cell<T>.GetValue(Int32)
  fullName: Cephei.Cell.Generic.Cell<T>.GetValue(System.Int32)
  nameWithType.vb: Cell(Of T).GetValue(Int32)
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).GetValue(System.Int32)
  spec.csharp:
  - uid: Cephei.Cell.Generic.Cell`1.GetValue(System.Int32)
    name: GetValue
    nameWithType: Cell<T>.GetValue
    fullName: Cephei.Cell.Generic.Cell<T>.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cephei.Cell.Generic.Cell`1.GetValue(System.Int32)
    name: GetValue
    nameWithType: Cell(Of T).GetValue
    fullName: Cephei.Cell.Generic.Cell(Of T).GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cephei.Cell.Generic.Cell{{T}}.Dependants
  commentId: P:Cephei.Cell.Generic.Cell{`0}.Dependants
  parent: Cephei.Cell.Generic.Cell{{T}}
  definition: Cephei.Cell.Generic.Cell`1.Dependants
  name: Dependants
  nameWithType: Cell<T>.Dependants
  fullName: Cephei.Cell.Generic.Cell<T>.Dependants
  nameWithType.vb: Cell(Of T).Dependants
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).Dependants
- uid: Cephei.Cell.Generic.Cell{{T}}.Change
  commentId: E:Cephei.Cell.Generic.Cell{`0}.Change
  parent: Cephei.Cell.Generic.Cell{{T}}
  definition: Cephei.Cell.Generic.Cell`1.Change
  name: Change
  nameWithType: Cell<T>.Change
  fullName: Cephei.Cell.Generic.Cell<T>.Change
  nameWithType.vb: Cell(Of T).Change
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).Change
- uid: Cephei.Cell.Generic.Cell{{T}}.Dispose
  commentId: M:Cephei.Cell.Generic.Cell{`0}.Dispose
  parent: Cephei.Cell.Generic.Cell{{T}}
  definition: Cephei.Cell.Generic.Cell`1.Dispose
  name: Dispose()
  nameWithType: Cell<T>.Dispose()
  fullName: Cephei.Cell.Generic.Cell<T>.Dispose()
  nameWithType.vb: Cell(Of T).Dispose()
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).Dispose()
  spec.csharp:
  - uid: Cephei.Cell.Generic.Cell`1.Dispose
    name: Dispose
    nameWithType: Cell<T>.Dispose
    fullName: Cephei.Cell.Generic.Cell<T>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cephei.Cell.Generic.Cell`1.Dispose
    name: Dispose
    nameWithType: Cell(Of T).Dispose
    fullName: Cephei.Cell.Generic.Cell(Of T).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cephei.Cell.Generic.Cell{{T}}.OnChange(Cephei.Cell.CellEvent,Cephei.Cell.ICellEvent,DateTime,Cephei.Cell.ISession)
  commentId: M:Cephei.Cell.Generic.Cell{`0}.OnChange(Cephei.Cell.CellEvent,Cephei.Cell.ICellEvent,DateTime,Cephei.Cell.ISession)
  parent: Cephei.Cell.Generic.Cell{{T}}
  definition: Cephei.Cell.Generic.Cell`1.OnChange(Cephei.Cell.CellEvent,Cephei.Cell.ICellEvent,DateTime,Cephei.Cell.ISession)
  name: OnChange(CellEvent, ICellEvent, DateTime, ISession)
  nameWithType: Cell<T>.OnChange(CellEvent, ICellEvent, DateTime, ISession)
  fullName: Cephei.Cell.Generic.Cell<T>.OnChange(Cephei.Cell.CellEvent, Cephei.Cell.ICellEvent, DateTime, Cephei.Cell.ISession)
  nameWithType.vb: Cell(Of T).OnChange(CellEvent, ICellEvent, DateTime, ISession)
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).OnChange(Cephei.Cell.CellEvent, Cephei.Cell.ICellEvent, DateTime, Cephei.Cell.ISession)
  spec.csharp:
  - uid: Cephei.Cell.Generic.Cell`1.OnChange(Cephei.Cell.CellEvent,Cephei.Cell.ICellEvent,DateTime,Cephei.Cell.ISession)
    name: OnChange
    nameWithType: Cell<T>.OnChange
    fullName: Cephei.Cell.Generic.Cell<T>.OnChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.ICellEvent
    name: ICellEvent
    nameWithType: ICellEvent
    fullName: Cephei.Cell.ICellEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cephei.Cell.Generic.Cell`1.OnChange(Cephei.Cell.CellEvent,Cephei.Cell.ICellEvent,DateTime,Cephei.Cell.ISession)
    name: OnChange
    nameWithType: Cell(Of T).OnChange
    fullName: Cephei.Cell.Generic.Cell(Of T).OnChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.ICellEvent
    name: ICellEvent
    nameWithType: ICellEvent
    fullName: Cephei.Cell.ICellEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: )
    nameWithType: )
    fullName: )
- uid: Cephei.Cell.Generic.Cell{{T}}.HasFunction
  commentId: P:Cephei.Cell.Generic.Cell{`0}.HasFunction
  parent: Cephei.Cell.Generic.Cell{{T}}
  definition: Cephei.Cell.Generic.Cell`1.HasFunction
  name: HasFunction
  nameWithType: Cell<T>.HasFunction
  fullName: Cephei.Cell.Generic.Cell<T>.HasFunction
  nameWithType.vb: Cell(Of T).HasFunction
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).HasFunction
- uid: Cephei.Cell.Generic.Cell{{T}}.HasValue
  commentId: P:Cephei.Cell.Generic.Cell{`0}.HasValue
  parent: Cephei.Cell.Generic.Cell{{T}}
  definition: Cephei.Cell.Generic.Cell`1.HasValue
  name: HasValue
  nameWithType: Cell<T>.HasValue
  fullName: Cephei.Cell.Generic.Cell<T>.HasValue
  nameWithType.vb: Cell(Of T).HasValue
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).HasValue
- uid: Cephei.Cell.Generic.Cell{{T}}.Box
  commentId: P:Cephei.Cell.Generic.Cell{`0}.Box
  parent: Cephei.Cell.Generic.Cell{{T}}
  definition: Cephei.Cell.Generic.Cell`1.Box
  name: Box
  nameWithType: Cell<T>.Box
  fullName: Cephei.Cell.Generic.Cell<T>.Box
  nameWithType.vb: Cell(Of T).Box
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).Box
- uid: Cephei.Cell.Generic.Cell{{T}}.Subscribe(IObserver{{T}})
  commentId: M:Cephei.Cell.Generic.Cell{`0}.Subscribe(IObserver{`0})
  parent: Cephei.Cell.Generic.Cell{{T}}
  definition: Cephei.Cell.Generic.Cell`1.Subscribe(IObserver{`0})
  name: Subscribe(IObserver<T>)
  nameWithType: Cell<T>.Subscribe(IObserver<T>)
  fullName: Cephei.Cell.Generic.Cell<T>.Subscribe(IObserver<T>)
  nameWithType.vb: Cell(Of T).Subscribe(IObserver(Of T))
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).Subscribe(IObserver(Of T))
  name.vb: Subscribe(IObserver(Of T))
  spec.csharp:
  - uid: Cephei.Cell.Generic.Cell`1.Subscribe(IObserver{`0})
    name: Subscribe
    nameWithType: Cell<T>.Subscribe
    fullName: Cephei.Cell.Generic.Cell<T>.Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: IObserver
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cephei.Cell.Generic.Cell`1.Subscribe(IObserver{`0})
    name: Subscribe
    nameWithType: Cell(Of T).Subscribe
    fullName: Cephei.Cell.Generic.Cell(Of T).Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: IObserver
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cephei.Cell.Generic.Cell{{T}}.Subscribe(IObserver{KeyValuePair{Cephei.Cell.ISession,KeyValuePair{System.String,{T}}}})
  commentId: M:Cephei.Cell.Generic.Cell{`0}.Subscribe(IObserver{KeyValuePair{Cephei.Cell.ISession,KeyValuePair{System.String,`0}}})
  parent: Cephei.Cell.Generic.Cell{{T}}
  definition: Cephei.Cell.Generic.Cell`1.Subscribe(IObserver{KeyValuePair{Cephei.Cell.ISession,KeyValuePair{System.String,`0}}})
  name: Subscribe(IObserver<KeyValuePair<ISession, KeyValuePair<String, T>>>)
  nameWithType: Cell<T>.Subscribe(IObserver<KeyValuePair<ISession, KeyValuePair<String, T>>>)
  fullName: Cephei.Cell.Generic.Cell<T>.Subscribe(IObserver<KeyValuePair<Cephei.Cell.ISession, KeyValuePair<System.String, T>>>)
  nameWithType.vb: Cell(Of T).Subscribe(IObserver(Of KeyValuePair(Of ISession, KeyValuePair(Of String, T))))
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).Subscribe(IObserver(Of KeyValuePair(Of Cephei.Cell.ISession, KeyValuePair(Of System.String, T))))
  name.vb: Subscribe(IObserver(Of KeyValuePair(Of ISession, KeyValuePair(Of String, T))))
  spec.csharp:
  - uid: Cephei.Cell.Generic.Cell`1.Subscribe(IObserver{KeyValuePair{Cephei.Cell.ISession,KeyValuePair{System.String,`0}}})
    name: Subscribe
    nameWithType: Cell<T>.Subscribe
    fullName: Cephei.Cell.Generic.Cell<T>.Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: IObserver
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cephei.Cell.Generic.Cell`1.Subscribe(IObserver{KeyValuePair{Cephei.Cell.ISession,KeyValuePair{System.String,`0}}})
    name: Subscribe
    nameWithType: Cell(Of T).Subscribe
    fullName: Cephei.Cell.Generic.Cell(Of T).Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: IObserver
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cephei.Cell.Generic.Cell{{T}}.Subscribe(IObserver{Tuple{Cephei.Cell.ISession,Cephei.Cell.Generic.ICell{{T}},Cephei.Cell.CellEvent,Cephei.Cell.ICell,DateTime}})
  commentId: M:Cephei.Cell.Generic.Cell{`0}.Subscribe(IObserver{Tuple{Cephei.Cell.ISession,Cephei.Cell.Generic.ICell{`0},Cephei.Cell.CellEvent,Cephei.Cell.ICell,DateTime}})
  parent: Cephei.Cell.Generic.Cell{{T}}
  definition: Cephei.Cell.Generic.Cell`1.Subscribe(IObserver{Tuple{Cephei.Cell.ISession,Cephei.Cell.Generic.ICell{`0},Cephei.Cell.CellEvent,Cephei.Cell.ICell,DateTime}})
  name: Subscribe(IObserver<Tuple<ISession, ICell<T>, CellEvent, ICell, DateTime>>)
  nameWithType: Cell<T>.Subscribe(IObserver<Tuple<ISession, ICell<T>, CellEvent, ICell, DateTime>>)
  fullName: Cephei.Cell.Generic.Cell<T>.Subscribe(IObserver<Tuple<Cephei.Cell.ISession, Cephei.Cell.Generic.ICell<T>, Cephei.Cell.CellEvent, Cephei.Cell.ICell, DateTime>>)
  nameWithType.vb: Cell(Of T).Subscribe(IObserver(Of Tuple(Of ISession, ICell(Of T), CellEvent, ICell, DateTime)))
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).Subscribe(IObserver(Of Tuple(Of Cephei.Cell.ISession, Cephei.Cell.Generic.ICell(Of T), Cephei.Cell.CellEvent, Cephei.Cell.ICell, DateTime)))
  name.vb: Subscribe(IObserver(Of Tuple(Of ISession, ICell(Of T), CellEvent, ICell, DateTime)))
  spec.csharp:
  - uid: Cephei.Cell.Generic.Cell`1.Subscribe(IObserver{Tuple{Cephei.Cell.ISession,Cephei.Cell.Generic.ICell{`0},Cephei.Cell.CellEvent,Cephei.Cell.ICell,DateTime}})
    name: Subscribe
    nameWithType: Cell<T>.Subscribe
    fullName: Cephei.Cell.Generic.Cell<T>.Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: IObserver
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tuple`5
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cephei.Cell.Generic.Cell`1.Subscribe(IObserver{Tuple{Cephei.Cell.ISession,Cephei.Cell.Generic.ICell{`0},Cephei.Cell.CellEvent,Cephei.Cell.ICell,DateTime}})
    name: Subscribe
    nameWithType: Cell(Of T).Subscribe
    fullName: Cephei.Cell.Generic.Cell(Of T).Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: IObserver
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tuple`5
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cephei.Cell.Generic.Cell{{T}}.OnCompleted
  commentId: M:Cephei.Cell.Generic.Cell{`0}.OnCompleted
  parent: Cephei.Cell.Generic.Cell{{T}}
  definition: Cephei.Cell.Generic.Cell`1.OnCompleted
  name: OnCompleted()
  nameWithType: Cell<T>.OnCompleted()
  fullName: Cephei.Cell.Generic.Cell<T>.OnCompleted()
  nameWithType.vb: Cell(Of T).OnCompleted()
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).OnCompleted()
  spec.csharp:
  - uid: Cephei.Cell.Generic.Cell`1.OnCompleted
    name: OnCompleted
    nameWithType: Cell<T>.OnCompleted
    fullName: Cephei.Cell.Generic.Cell<T>.OnCompleted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cephei.Cell.Generic.Cell`1.OnCompleted
    name: OnCompleted
    nameWithType: Cell(Of T).OnCompleted
    fullName: Cephei.Cell.Generic.Cell(Of T).OnCompleted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cephei.Cell.Generic.Cell{{T}}.OnError(Exception)
  commentId: M:Cephei.Cell.Generic.Cell{`0}.OnError(Exception)
  parent: Cephei.Cell.Generic.Cell{{T}}
  definition: Cephei.Cell.Generic.Cell`1.OnError(Exception)
  name: OnError(Exception)
  nameWithType: Cell<T>.OnError(Exception)
  fullName: Cephei.Cell.Generic.Cell<T>.OnError(Exception)
  nameWithType.vb: Cell(Of T).OnError(Exception)
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).OnError(Exception)
  spec.csharp:
  - uid: Cephei.Cell.Generic.Cell`1.OnError(Exception)
    name: OnError
    nameWithType: Cell<T>.OnError
    fullName: Cephei.Cell.Generic.Cell<T>.OnError
  - name: (
    nameWithType: (
    fullName: (
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cephei.Cell.Generic.Cell`1.OnError(Exception)
    name: OnError
    nameWithType: Cell(Of T).OnError
    fullName: Cephei.Cell.Generic.Cell(Of T).OnError
  - name: (
    nameWithType: (
    fullName: (
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cephei.Cell.Generic.Cell{{T}}.OnNext({T})
  commentId: M:Cephei.Cell.Generic.Cell{`0}.OnNext(`0)
  parent: Cephei.Cell.Generic.Cell{{T}}
  definition: Cephei.Cell.Generic.Cell`1.OnNext(`0)
  name: OnNext(T)
  nameWithType: Cell<T>.OnNext(T)
  fullName: Cephei.Cell.Generic.Cell<T>.OnNext(T)
  nameWithType.vb: Cell(Of T).OnNext(T)
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).OnNext(T)
  spec.csharp:
  - uid: Cephei.Cell.Generic.Cell`1.OnNext(`0)
    name: OnNext
    nameWithType: Cell<T>.OnNext
    fullName: Cephei.Cell.Generic.Cell<T>.OnNext
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cephei.Cell.Generic.Cell`1.OnNext(`0)
    name: OnNext
    nameWithType: Cell(Of T).OnNext
    fullName: Cephei.Cell.Generic.Cell(Of T).OnNext
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Cephei.Cell.Generic.Cell`1
  commentId: T:Cephei.Cell.Generic.Cell`1
  name: Cell<T>
  nameWithType: Cell<T>
  fullName: Cephei.Cell.Generic.Cell<T>
  nameWithType.vb: Cell(Of T)
  fullName.vb: Cephei.Cell.Generic.Cell(Of T)
  name.vb: Cell(Of T)
  spec.csharp:
  - uid: Cephei.Cell.Generic.Cell`1
    name: Cell
    nameWithType: Cell
    fullName: Cephei.Cell.Generic.Cell
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cephei.Cell.Generic.Cell`1
    name: Cell
    nameWithType: Cell
    fullName: Cephei.Cell.Generic.Cell
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Cephei.Cell.Generic.ICell`1
  commentId: T:Cephei.Cell.Generic.ICell`1
  name: ICell<T>
  nameWithType: ICell<T>
  fullName: Cephei.Cell.Generic.ICell<T>
  nameWithType.vb: ICell(Of T)
  fullName.vb: Cephei.Cell.Generic.ICell(Of T)
  name.vb: ICell(Of T)
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Cephei.Cell
  commentId: N:Cephei.Cell
  name: Cephei.Cell
  nameWithType: Cephei.Cell
  fullName: Cephei.Cell
- uid: IObservable`1
  isExternal: true
  name: IObservable<>
  nameWithType: IObservable<>
  fullName: IObservable<>
  nameWithType.vb: IObservable(Of )
  fullName.vb: IObservable(Of )
  name.vb: IObservable(Of )
  spec.csharp:
  - uid: IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: IObserver`1
  isExternal: true
  name: IObserver<>
  nameWithType: IObserver<>
  fullName: IObserver<>
  nameWithType.vb: IObserver(Of )
  fullName.vb: IObserver(Of )
  name.vb: IObserver(Of )
  spec.csharp:
  - uid: IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: IObserver
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: IObserver
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Cephei.Cell.Generic.Cell`1.Mnemonic
  commentId: P:Cephei.Cell.Generic.Cell`1.Mnemonic
  name: Mnemonic
  nameWithType: Cell<T>.Mnemonic
  fullName: Cephei.Cell.Generic.Cell<T>.Mnemonic
  nameWithType.vb: Cell(Of T).Mnemonic
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).Mnemonic
- uid: Cephei.Cell.Generic.Cell`1.Parent
  commentId: P:Cephei.Cell.Generic.Cell`1.Parent
  name: Parent
  nameWithType: Cell<T>.Parent
  fullName: Cephei.Cell.Generic.Cell<T>.Parent
  nameWithType.vb: Cell(Of T).Parent
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).Parent
- uid: Cephei.Cell.Generic.Cell`1.GetValue(System.Int32)
  commentId: M:Cephei.Cell.Generic.Cell`1.GetValue(System.Int32)
  isExternal: true
  name: GetValue(Int32)
  nameWithType: Cell<T>.GetValue(Int32)
  fullName: Cephei.Cell.Generic.Cell<T>.GetValue(System.Int32)
  nameWithType.vb: Cell(Of T).GetValue(Int32)
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).GetValue(System.Int32)
  spec.csharp:
  - uid: Cephei.Cell.Generic.Cell`1.GetValue(System.Int32)
    name: GetValue
    nameWithType: Cell<T>.GetValue
    fullName: Cephei.Cell.Generic.Cell<T>.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cephei.Cell.Generic.Cell`1.GetValue(System.Int32)
    name: GetValue
    nameWithType: Cell(Of T).GetValue
    fullName: Cephei.Cell.Generic.Cell(Of T).GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cephei.Cell.Generic.Cell`1.Dependants
  commentId: P:Cephei.Cell.Generic.Cell`1.Dependants
  name: Dependants
  nameWithType: Cell<T>.Dependants
  fullName: Cephei.Cell.Generic.Cell<T>.Dependants
  nameWithType.vb: Cell(Of T).Dependants
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).Dependants
- uid: Cephei.Cell.Generic.Cell`1.Change
  commentId: E:Cephei.Cell.Generic.Cell`1.Change
  name: Change
  nameWithType: Cell<T>.Change
  fullName: Cephei.Cell.Generic.Cell<T>.Change
  nameWithType.vb: Cell(Of T).Change
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).Change
- uid: Cephei.Cell.Generic.Cell`1.Dispose
  commentId: M:Cephei.Cell.Generic.Cell`1.Dispose
  name: Dispose()
  nameWithType: Cell<T>.Dispose()
  fullName: Cephei.Cell.Generic.Cell<T>.Dispose()
  nameWithType.vb: Cell(Of T).Dispose()
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).Dispose()
  spec.csharp:
  - uid: Cephei.Cell.Generic.Cell`1.Dispose
    name: Dispose
    nameWithType: Cell<T>.Dispose
    fullName: Cephei.Cell.Generic.Cell<T>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cephei.Cell.Generic.Cell`1.Dispose
    name: Dispose
    nameWithType: Cell(Of T).Dispose
    fullName: Cephei.Cell.Generic.Cell(Of T).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cephei.Cell.Generic.Cell`1.OnChange(Cephei.Cell.CellEvent,Cephei.Cell.ICellEvent,DateTime,Cephei.Cell.ISession)
  commentId: M:Cephei.Cell.Generic.Cell`1.OnChange(Cephei.Cell.CellEvent,Cephei.Cell.ICellEvent,DateTime,Cephei.Cell.ISession)
  isExternal: true
  name: OnChange(CellEvent, ICellEvent, DateTime, ISession)
  nameWithType: Cell<T>.OnChange(CellEvent, ICellEvent, DateTime, ISession)
  fullName: Cephei.Cell.Generic.Cell<T>.OnChange(Cephei.Cell.CellEvent, Cephei.Cell.ICellEvent, DateTime, Cephei.Cell.ISession)
  nameWithType.vb: Cell(Of T).OnChange(CellEvent, ICellEvent, DateTime, ISession)
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).OnChange(Cephei.Cell.CellEvent, Cephei.Cell.ICellEvent, DateTime, Cephei.Cell.ISession)
  spec.csharp:
  - uid: Cephei.Cell.Generic.Cell`1.OnChange(Cephei.Cell.CellEvent,Cephei.Cell.ICellEvent,DateTime,Cephei.Cell.ISession)
    name: OnChange
    nameWithType: Cell<T>.OnChange
    fullName: Cephei.Cell.Generic.Cell<T>.OnChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.ICellEvent
    name: ICellEvent
    nameWithType: ICellEvent
    fullName: Cephei.Cell.ICellEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cephei.Cell.Generic.Cell`1.OnChange(Cephei.Cell.CellEvent,Cephei.Cell.ICellEvent,DateTime,Cephei.Cell.ISession)
    name: OnChange
    nameWithType: Cell(Of T).OnChange
    fullName: Cephei.Cell.Generic.Cell(Of T).OnChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.ICellEvent
    name: ICellEvent
    nameWithType: ICellEvent
    fullName: Cephei.Cell.ICellEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: )
    nameWithType: )
    fullName: )
- uid: Cephei.Cell.Generic.Cell`1.HasFunction
  commentId: P:Cephei.Cell.Generic.Cell`1.HasFunction
  name: HasFunction
  nameWithType: Cell<T>.HasFunction
  fullName: Cephei.Cell.Generic.Cell<T>.HasFunction
  nameWithType.vb: Cell(Of T).HasFunction
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).HasFunction
- uid: Cephei.Cell.Generic.Cell`1.HasValue
  commentId: P:Cephei.Cell.Generic.Cell`1.HasValue
  name: HasValue
  nameWithType: Cell<T>.HasValue
  fullName: Cephei.Cell.Generic.Cell<T>.HasValue
  nameWithType.vb: Cell(Of T).HasValue
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).HasValue
- uid: Cephei.Cell.Generic.Cell`1.Box
  commentId: P:Cephei.Cell.Generic.Cell`1.Box
  name: Box
  nameWithType: Cell<T>.Box
  fullName: Cephei.Cell.Generic.Cell<T>.Box
  nameWithType.vb: Cell(Of T).Box
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).Box
- uid: Cephei.Cell.Generic.Cell`1.Subscribe(IObserver{`0})
  commentId: M:Cephei.Cell.Generic.Cell`1.Subscribe(IObserver{`0})
  isExternal: true
  name: Subscribe(IObserver<T>)
  nameWithType: Cell<T>.Subscribe(IObserver<T>)
  fullName: Cephei.Cell.Generic.Cell<T>.Subscribe(IObserver<T>)
  nameWithType.vb: Cell(Of T).Subscribe(IObserver(Of T))
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).Subscribe(IObserver(Of T))
  name.vb: Subscribe(IObserver(Of T))
  spec.csharp:
  - uid: Cephei.Cell.Generic.Cell`1.Subscribe(IObserver{`0})
    name: Subscribe
    nameWithType: Cell<T>.Subscribe
    fullName: Cephei.Cell.Generic.Cell<T>.Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: IObserver
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cephei.Cell.Generic.Cell`1.Subscribe(IObserver{`0})
    name: Subscribe
    nameWithType: Cell(Of T).Subscribe
    fullName: Cephei.Cell.Generic.Cell(Of T).Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: IObserver
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cephei.Cell.Generic.Cell`1.Subscribe(IObserver{KeyValuePair{Cephei.Cell.ISession,KeyValuePair{System.String,`0}}})
  commentId: M:Cephei.Cell.Generic.Cell`1.Subscribe(IObserver{KeyValuePair{Cephei.Cell.ISession,KeyValuePair{System.String,`0}}})
  isExternal: true
  name: Subscribe(IObserver<KeyValuePair<ISession, KeyValuePair<String, T>>>)
  nameWithType: Cell<T>.Subscribe(IObserver<KeyValuePair<ISession, KeyValuePair<String, T>>>)
  fullName: Cephei.Cell.Generic.Cell<T>.Subscribe(IObserver<KeyValuePair<Cephei.Cell.ISession, KeyValuePair<System.String, T>>>)
  nameWithType.vb: Cell(Of T).Subscribe(IObserver(Of KeyValuePair(Of ISession, KeyValuePair(Of String, T))))
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).Subscribe(IObserver(Of KeyValuePair(Of Cephei.Cell.ISession, KeyValuePair(Of System.String, T))))
  name.vb: Subscribe(IObserver(Of KeyValuePair(Of ISession, KeyValuePair(Of String, T))))
  spec.csharp:
  - uid: Cephei.Cell.Generic.Cell`1.Subscribe(IObserver{KeyValuePair{Cephei.Cell.ISession,KeyValuePair{System.String,`0}}})
    name: Subscribe
    nameWithType: Cell<T>.Subscribe
    fullName: Cephei.Cell.Generic.Cell<T>.Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: IObserver
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cephei.Cell.Generic.Cell`1.Subscribe(IObserver{KeyValuePair{Cephei.Cell.ISession,KeyValuePair{System.String,`0}}})
    name: Subscribe
    nameWithType: Cell(Of T).Subscribe
    fullName: Cephei.Cell.Generic.Cell(Of T).Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: IObserver
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cephei.Cell.Generic.Cell`1.Subscribe(IObserver{Tuple{Cephei.Cell.ISession,Cephei.Cell.Generic.ICell{`0},Cephei.Cell.CellEvent,Cephei.Cell.ICell,DateTime}})
  commentId: M:Cephei.Cell.Generic.Cell`1.Subscribe(IObserver{Tuple{Cephei.Cell.ISession,Cephei.Cell.Generic.ICell{`0},Cephei.Cell.CellEvent,Cephei.Cell.ICell,DateTime}})
  isExternal: true
  name: Subscribe(IObserver<Tuple<ISession, ICell<T>, CellEvent, ICell, DateTime>>)
  nameWithType: Cell<T>.Subscribe(IObserver<Tuple<ISession, ICell<T>, CellEvent, ICell, DateTime>>)
  fullName: Cephei.Cell.Generic.Cell<T>.Subscribe(IObserver<Tuple<Cephei.Cell.ISession, Cephei.Cell.Generic.ICell<T>, Cephei.Cell.CellEvent, Cephei.Cell.ICell, DateTime>>)
  nameWithType.vb: Cell(Of T).Subscribe(IObserver(Of Tuple(Of ISession, ICell(Of T), CellEvent, ICell, DateTime)))
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).Subscribe(IObserver(Of Tuple(Of Cephei.Cell.ISession, Cephei.Cell.Generic.ICell(Of T), Cephei.Cell.CellEvent, Cephei.Cell.ICell, DateTime)))
  name.vb: Subscribe(IObserver(Of Tuple(Of ISession, ICell(Of T), CellEvent, ICell, DateTime)))
  spec.csharp:
  - uid: Cephei.Cell.Generic.Cell`1.Subscribe(IObserver{Tuple{Cephei.Cell.ISession,Cephei.Cell.Generic.ICell{`0},Cephei.Cell.CellEvent,Cephei.Cell.ICell,DateTime}})
    name: Subscribe
    nameWithType: Cell<T>.Subscribe
    fullName: Cephei.Cell.Generic.Cell<T>.Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: IObserver
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tuple`5
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cephei.Cell.Generic.Cell`1.Subscribe(IObserver{Tuple{Cephei.Cell.ISession,Cephei.Cell.Generic.ICell{`0},Cephei.Cell.CellEvent,Cephei.Cell.ICell,DateTime}})
    name: Subscribe
    nameWithType: Cell(Of T).Subscribe
    fullName: Cephei.Cell.Generic.Cell(Of T).Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: IObserver
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tuple`5
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cephei.Cell.Generic.Cell`1.OnCompleted
  commentId: M:Cephei.Cell.Generic.Cell`1.OnCompleted
  name: OnCompleted()
  nameWithType: Cell<T>.OnCompleted()
  fullName: Cephei.Cell.Generic.Cell<T>.OnCompleted()
  nameWithType.vb: Cell(Of T).OnCompleted()
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).OnCompleted()
  spec.csharp:
  - uid: Cephei.Cell.Generic.Cell`1.OnCompleted
    name: OnCompleted
    nameWithType: Cell<T>.OnCompleted
    fullName: Cephei.Cell.Generic.Cell<T>.OnCompleted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cephei.Cell.Generic.Cell`1.OnCompleted
    name: OnCompleted
    nameWithType: Cell(Of T).OnCompleted
    fullName: Cephei.Cell.Generic.Cell(Of T).OnCompleted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cephei.Cell.Generic.Cell`1.OnError(Exception)
  commentId: M:Cephei.Cell.Generic.Cell`1.OnError(Exception)
  isExternal: true
  name: OnError(Exception)
  nameWithType: Cell<T>.OnError(Exception)
  fullName: Cephei.Cell.Generic.Cell<T>.OnError(Exception)
  nameWithType.vb: Cell(Of T).OnError(Exception)
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).OnError(Exception)
  spec.csharp:
  - uid: Cephei.Cell.Generic.Cell`1.OnError(Exception)
    name: OnError
    nameWithType: Cell<T>.OnError
    fullName: Cephei.Cell.Generic.Cell<T>.OnError
  - name: (
    nameWithType: (
    fullName: (
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cephei.Cell.Generic.Cell`1.OnError(Exception)
    name: OnError
    nameWithType: Cell(Of T).OnError
    fullName: Cephei.Cell.Generic.Cell(Of T).OnError
  - name: (
    nameWithType: (
    fullName: (
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cephei.Cell.Generic.Cell`1.OnNext(`0)
  commentId: M:Cephei.Cell.Generic.Cell`1.OnNext(`0)
  name: OnNext(T)
  nameWithType: Cell<T>.OnNext(T)
  fullName: Cephei.Cell.Generic.Cell<T>.OnNext(T)
  nameWithType.vb: Cell(Of T).OnNext(T)
  fullName.vb: Cephei.Cell.Generic.Cell(Of T).OnNext(T)
  spec.csharp:
  - uid: Cephei.Cell.Generic.Cell`1.OnNext(`0)
    name: OnNext
    nameWithType: Cell<T>.OnNext
    fullName: Cephei.Cell.Generic.Cell<T>.OnNext
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cephei.Cell.Generic.Cell`1.OnNext(`0)
    name: OnNext
    nameWithType: Cell(Of T).OnNext
    fullName: Cephei.Cell.Generic.Cell(Of T).OnNext
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Cephei.Cell.Generic.CellEmpty`1.#ctor*
  commentId: Overload:Cephei.Cell.Generic.CellEmpty`1.#ctor
  name: CellEmpty
  nameWithType: CellEmpty<T>.CellEmpty
  fullName: Cephei.Cell.Generic.CellEmpty<T>.CellEmpty
  nameWithType.vb: CellEmpty(Of T).CellEmpty
  fullName.vb: Cephei.Cell.Generic.CellEmpty(Of T).CellEmpty
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Cephei.Cell.Generic.CellEmpty`1.Value*
  commentId: Overload:Cephei.Cell.Generic.CellEmpty`1.Value
  name: Value
  nameWithType: CellEmpty<T>.Value
  fullName: Cephei.Cell.Generic.CellEmpty<T>.Value
  nameWithType.vb: CellEmpty(Of T).Value
  fullName.vb: Cephei.Cell.Generic.CellEmpty(Of T).Value
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
