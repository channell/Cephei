### YamlMime:ManagedReference
items:
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1
  commentId: T:Cephei.QL.InterpolatedHazardRateCurveModel2`1
  id: InterpolatedHazardRateCurveModel2`1
  parent: Cephei.QL
  children:
  - Cephei.QL.InterpolatedHazardRateCurveModel2`1.#ctor(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.Date>> * Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<'Interpolator>)
  - Cephei.QL.InterpolatedHazardRateCurveModel2`1.Clone(unit)
  - Cephei.QL.InterpolatedHazardRateCurveModel2`1.Data(unit)
  - Cephei.QL.InterpolatedHazardRateCurveModel2`1.Data_(unit)
  - Cephei.QL.InterpolatedHazardRateCurveModel2`1.dates(unit)
  - Cephei.QL.InterpolatedHazardRateCurveModel2`1.Dates(unit)
  - Cephei.QL.InterpolatedHazardRateCurveModel2`1.Dates_(unit)
  - Cephei.QL.InterpolatedHazardRateCurveModel2`1.dayCounter(unit)
  - Cephei.QL.InterpolatedHazardRateCurveModel2`1.Discounts(unit)
  - Cephei.QL.InterpolatedHazardRateCurveModel2`1.hazardRates(unit)
  - Cephei.QL.InterpolatedHazardRateCurveModel2`1.HazardRates(unit)
  - Cephei.QL.InterpolatedHazardRateCurveModel2`1.Interpolation_(unit)
  - Cephei.QL.InterpolatedHazardRateCurveModel2`1.interpolator(unit)
  - Cephei.QL.InterpolatedHazardRateCurveModel2`1.Interpolator_(unit)
  - Cephei.QL.InterpolatedHazardRateCurveModel2`1.MaxDate(unit)
  - Cephei.QL.InterpolatedHazardRateCurveModel2`1.MaxDate_(unit)
  - Cephei.QL.InterpolatedHazardRateCurveModel2`1.Nodes(unit)
  - Cephei.QL.InterpolatedHazardRateCurveModel2`1.SetupInterpolation(unit)
  - Cephei.QL.InterpolatedHazardRateCurveModel2`1.Times(unit)
  - Cephei.QL.InterpolatedHazardRateCurveModel2`1.Times_(unit)
  langs:
  - csharp
  - vb
  name: InterpolatedHazardRateCurveModel2<'Interpolator>
  nameWithType: Cephei.QL.InterpolatedHazardRateCurveModel2`1
  fullName: Cephei.QL.InterpolatedHazardRateCurveModel2`1
  type: Class
  source:
    id: Cephei.QL.InterpolatedHazardRateCurveModel2`1
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedHazardRateCurveModel.fs
    startLine: 175
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: >-
      [<AutoSerializable(true)>]

      type InterpolatedHazardRateCurveModel2<'Interpolator> (dates:ICell<List<Date>>, hazardRates:ICell<List<double>>, dayCounter:ICell<DayCounter>, interpolator:ICell<'Interpolator>)
          inherit Model<InterpolatedHazardRateCurve<'Interpolator>>
          interface IDictionary<string,ICell>
          interface ICollection<KeyValuePair<string,ICell>>
          interface IReadOnlyDictionary<string,ICell>
          interface IReadOnlyCollection<KeyValuePair<string,ICell>>
          interface IEnumerable<KeyValuePair<string,ICell>>
          interface IDictionary
          interface ICollection
          interface IEnumerable
          interface IObservable<ICell>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
          interface IObservable<ISession * Model * CellEvent * ICell * DateTime>
          interface IObservable<KeyValuePair<string,float>>
          interface IObservable<KeyValuePair<string,int>>
          interface IObservable<KeyValuePair<string,decimal>>
          interface ICell<InterpolatedHazardRateCurve<'Interpolator>>
          interface ICell
          interface ICellEvent
          interface IObservable<InterpolatedHazardRateCurve<'Interpolator>>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,InterpolatedHazardRateCurve<'Interpolator>>>>
          interface IObservable<ISession * ICell<InterpolatedHazardRateCurve<'Interpolator>> * CellEvent * ICell * DateTime>
          interface IObserver<InterpolatedHazardRateCurve<'Interpolator>>
    parameters:
    - id: dates
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<QLNet.Date>>
      attributes: []
    - id: hazardRates
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.double>>
      attributes: []
    - id: dayCounter
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
    - id: interpolator
      type: TypeRef:Cephei.Cell.Generic.ICell`1<'Interpolator>
      attributes: []
    typeParameters:
    - id: "'Interpolator"
  inheritance:
  - TypeRef:System.Object
  - TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:Cephei.Cell.Model
  - TypeRef:Cephei.Cell.Generic.Model`1<QLNet.InterpolatedHazardRateCurve`1<'Interpolator>>
  implements:
  - TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.InterpolatedHazardRateCurve`1<'Interpolator>>
  - TypeRef:Cephei.Cell.ICell
  - TypeRef:Cephei.Cell.ICellEvent
  - TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.ICollection
  - TypeRef:System.Collections.IDictionary
  - TypeRef:System.Collections.IEnumerable
  - TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.InterpolatedHazardRateCurve`1<'Interpolator>> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<QLNet.InterpolatedHazardRateCurve`1<'Interpolator>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.InterpolatedHazardRateCurve`1<'Interpolator>>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  - TypeRef:System.IObserver`1<QLNet.InterpolatedHazardRateCurve`1<'Interpolator>>
  inheritedMembers:
  - Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  - Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  - Cephei.Cell.Generic.Model`1.OnError(exn)
  - Cephei.Cell.Generic.Model`1.OnNext('T)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  - Cephei.Cell.Generic.Model`1.Value(unit)
  - Cephei.Cell.Model.As(string)
  - Cephei.Cell.Model.Bind(unit)
  - Cephei.Cell.Model.Box(unit)
  - Cephei.Cell.Model.Change()
  - Cephei.Cell.Model.Create(Unit -> 'T * string)
  - Cephei.Cell.Model.CreateValue('T * string)
  - Cephei.Cell.Model.Dependants(unit)
  - Cephei.Cell.Model.Dispose(unit)
  - Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.HasFunction(unit)
  - Cephei.Cell.Model.HasValue(unit)
  - Cephei.Cell.Model.Item(string)
  - Cephei.Cell.Model.Mnemonic(unit)
  - Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  - Cephei.Cell.Model.Parent(unit)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  - Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  - Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  - Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  - Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  attributes:
  - type: Microsoft.FSharp.Core.AutoSerializableAttribute
    arguments:
    - type: System.Boolean
      value: true
    namedArguments: []
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.#ctor(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.Date>> * Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<'Interpolator>)
  commentId: M:Cephei.QL.InterpolatedHazardRateCurveModel2`1.#ctor(Cephei.Cell.Generic.ICell{System.Collections.Generic.List{QLNet.Date}},Cephei.Cell.Generic.ICell{System.Collections.Generic.List{System.Double}},Cephei.Cell.Generic.ICell{QLNet.DayCounter},Cephei.Cell.Generic.ICell{`0})
  id: "#ctor(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.Date>> * Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<'Interpolator>)"
  parent: Cephei.QL.InterpolatedHazardRateCurveModel2`1
  langs:
  - csharp
  - vb
  name: "new: ICell<List<Date>> * ICell<List<double>> * ICell<DayCounter> * ICell<'Interpolator> -> InterpolatedHazardRateCurveModel2<'Interpolator>"
  nameWithType: "new: ICell<List<Date>> * ICell<List<double>> * ICell<DayCounter> * ICell<'Interpolator> -> InterpolatedHazardRateCurveModel2<'Interpolator>"
  fullName: "new: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.Date>> * Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<'Interpolator> -> Cephei.QL.InterpolatedHazardRateCurveModel2<'Interpolator>"
  type: Constructor
  source:
    id: Cephei.QL.InterpolatedHazardRateCurveModel2`1.#ctor(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.Date>> * Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<'Interpolator>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedHazardRateCurveModel.fs
    startLine: 175
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  summary: Implicit constructor.
  syntax:
    content: "new: dates:ICell<List<Date>> * hazardRates:ICell<List<double>> * dayCounter:ICell<DayCounter> * interpolator:ICell<'Interpolator> -> InterpolatedHazardRateCurveModel2<'Interpolator>"
    parameters:
    - id: dates
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<QLNet.Date>>
      attributes: []
    - id: hazardRates
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.double>>
      attributes: []
    - id: dayCounter
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
    - id: interpolator
      type: TypeRef:Cephei.Cell.Generic.ICell`1<'Interpolator>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.QL.InterpolatedHazardRateCurveModel2`1<'Interpolator>
      attributes: []
  overload: Cephei.QL.InterpolatedHazardRateCurveModel2`1.#ctor*
  attributes: []
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.interpolator(unit)
  commentId: P:Cephei.QL.InterpolatedHazardRateCurveModel2`1.interpolator
  id: interpolator(unit)
  parent: Cephei.QL.InterpolatedHazardRateCurveModel2`1
  langs:
  - csharp
  - vb
  name: "property interpolator: ICell<'Interpolator>"
  nameWithType: "property InterpolatedHazardRateCurveModel2.interpolator: ICell<'Interpolator>"
  fullName: "property Cephei.QL.InterpolatedHazardRateCurveModel2.interpolator: Cephei.Cell.Generic.ICell<'Interpolator>"
  type: Property
  source:
    id: Cephei.QL.InterpolatedHazardRateCurveModel2`1.interpolator(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedHazardRateCurveModel.fs
    startLine: 218
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: "property interpolator: ICell<'Interpolator> with get"
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<'Interpolator>
      attributes: []
  overload: Cephei.QL.InterpolatedHazardRateCurveModel2`1.interpolator*
  attributes: []
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.hazardRates(unit)
  commentId: P:Cephei.QL.InterpolatedHazardRateCurveModel2`1.hazardRates
  id: hazardRates(unit)
  parent: Cephei.QL.InterpolatedHazardRateCurveModel2`1
  langs:
  - csharp
  - vb
  name: 'property hazardRates: ICell<List<float>>'
  nameWithType: 'property InterpolatedHazardRateCurveModel2.hazardRates: ICell<List<float>>'
  fullName: 'property Cephei.QL.InterpolatedHazardRateCurveModel2.hazardRates: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<float>>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedHazardRateCurveModel2`1.hazardRates(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedHazardRateCurveModel.fs
    startLine: 216
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property hazardRates: ICell<List<float>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.float>>
      attributes: []
  overload: Cephei.QL.InterpolatedHazardRateCurveModel2`1.hazardRates*
  attributes: []
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.dayCounter(unit)
  commentId: P:Cephei.QL.InterpolatedHazardRateCurveModel2`1.dayCounter
  id: dayCounter(unit)
  parent: Cephei.QL.InterpolatedHazardRateCurveModel2`1
  langs:
  - csharp
  - vb
  name: 'property dayCounter: ICell<DayCounter>'
  nameWithType: 'property InterpolatedHazardRateCurveModel2.dayCounter: ICell<DayCounter>'
  fullName: 'property Cephei.QL.InterpolatedHazardRateCurveModel2.dayCounter: Cephei.Cell.Generic.ICell<QLNet.DayCounter>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedHazardRateCurveModel2`1.dayCounter(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedHazardRateCurveModel.fs
    startLine: 217
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property dayCounter: ICell<DayCounter> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
  overload: Cephei.QL.InterpolatedHazardRateCurveModel2`1.dayCounter*
  attributes: []
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.dates(unit)
  commentId: P:Cephei.QL.InterpolatedHazardRateCurveModel2`1.dates
  id: dates(unit)
  parent: Cephei.QL.InterpolatedHazardRateCurveModel2`1
  langs:
  - csharp
  - vb
  name: 'property dates: ICell<List<Date>>'
  nameWithType: 'property InterpolatedHazardRateCurveModel2.dates: ICell<List<Date>>'
  fullName: 'property Cephei.QL.InterpolatedHazardRateCurveModel2.dates: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.Date>>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedHazardRateCurveModel2`1.dates(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedHazardRateCurveModel.fs
    startLine: 215
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property dates: ICell<List<Date>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<QLNet.Date>>
      attributes: []
  overload: Cephei.QL.InterpolatedHazardRateCurveModel2`1.dates*
  attributes: []
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Times_(unit)
  commentId: P:Cephei.QL.InterpolatedHazardRateCurveModel2`1.Times_
  id: Times_(unit)
  parent: Cephei.QL.InterpolatedHazardRateCurveModel2`1
  langs:
  - csharp
  - vb
  name: 'property Times_: ICell<List<float>>'
  nameWithType: 'property InterpolatedHazardRateCurveModel2.Times_: ICell<List<float>>'
  fullName: 'property Cephei.QL.InterpolatedHazardRateCurveModel2.Times_: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<float>>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Times_(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedHazardRateCurveModel.fs
    startLine: 233
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Times_: ICell<List<float>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.float>>
      attributes: []
  overload: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Times_*
  attributes: []
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Times(unit)
  commentId: P:Cephei.QL.InterpolatedHazardRateCurveModel2`1.Times
  id: Times(unit)
  parent: Cephei.QL.InterpolatedHazardRateCurveModel2`1
  langs:
  - csharp
  - vb
  name: 'property Times: ICell<List<float>>'
  nameWithType: 'property InterpolatedHazardRateCurveModel2.Times: ICell<List<float>>'
  fullName: 'property Cephei.QL.InterpolatedHazardRateCurveModel2.Times: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<float>>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Times(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedHazardRateCurveModel.fs
    startLine: 232
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Times: ICell<List<float>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.float>>
      attributes: []
  overload: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Times*
  attributes: []
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.SetupInterpolation(unit)
  commentId: P:Cephei.QL.InterpolatedHazardRateCurveModel2`1.SetupInterpolation
  id: SetupInterpolation(unit)
  parent: Cephei.QL.InterpolatedHazardRateCurveModel2`1
  langs:
  - csharp
  - vb
  name: "property SetupInterpolation: ICell<InterpolatedHazardRateCurve<'Interpolator>>"
  nameWithType: "property InterpolatedHazardRateCurveModel2.SetupInterpolation: ICell<InterpolatedHazardRateCurve<'Interpolator>>"
  fullName: "property Cephei.QL.InterpolatedHazardRateCurveModel2.SetupInterpolation: Cephei.Cell.Generic.ICell<QLNet.InterpolatedHazardRateCurve<'Interpolator>>"
  type: Property
  source:
    id: Cephei.QL.InterpolatedHazardRateCurveModel2`1.SetupInterpolation(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedHazardRateCurveModel.fs
    startLine: 231
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: "property SetupInterpolation: ICell<InterpolatedHazardRateCurve<'Interpolator>> with get"
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.InterpolatedHazardRateCurve`1<'Interpolator>>
      attributes: []
  overload: Cephei.QL.InterpolatedHazardRateCurveModel2`1.SetupInterpolation*
  attributes: []
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Nodes(unit)
  commentId: P:Cephei.QL.InterpolatedHazardRateCurveModel2`1.Nodes
  id: Nodes(unit)
  parent: Cephei.QL.InterpolatedHazardRateCurveModel2`1
  langs:
  - csharp
  - vb
  name: 'property Nodes: ICell<Dictionary<Date,float>>'
  nameWithType: 'property InterpolatedHazardRateCurveModel2.Nodes: ICell<Dictionary<Date,float>>'
  fullName: 'property Cephei.QL.InterpolatedHazardRateCurveModel2.Nodes: Cephei.Cell.Generic.ICell<System.Collections.Generic.Dictionary<QLNet.Date,float>>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Nodes(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedHazardRateCurveModel.fs
    startLine: 230
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Nodes: ICell<Dictionary<Date,float>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.Dictionary`2<QLNet.Date,Microsoft.FSharp.Core.float>>
      attributes: []
  overload: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Nodes*
  attributes: []
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.MaxDate_(unit)
  commentId: P:Cephei.QL.InterpolatedHazardRateCurveModel2`1.MaxDate_
  id: MaxDate_(unit)
  parent: Cephei.QL.InterpolatedHazardRateCurveModel2`1
  langs:
  - csharp
  - vb
  name: 'property MaxDate_: ICell<Date>'
  nameWithType: 'property InterpolatedHazardRateCurveModel2.MaxDate_: ICell<Date>'
  fullName: 'property Cephei.QL.InterpolatedHazardRateCurveModel2.MaxDate_: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedHazardRateCurveModel2`1.MaxDate_(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedHazardRateCurveModel.fs
    startLine: 229
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property MaxDate_: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.InterpolatedHazardRateCurveModel2`1.MaxDate_*
  attributes: []
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.MaxDate(unit)
  commentId: P:Cephei.QL.InterpolatedHazardRateCurveModel2`1.MaxDate
  id: MaxDate(unit)
  parent: Cephei.QL.InterpolatedHazardRateCurveModel2`1
  langs:
  - csharp
  - vb
  name: 'property MaxDate: ICell<Date>'
  nameWithType: 'property InterpolatedHazardRateCurveModel2.MaxDate: ICell<Date>'
  fullName: 'property Cephei.QL.InterpolatedHazardRateCurveModel2.MaxDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedHazardRateCurveModel2`1.MaxDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedHazardRateCurveModel.fs
    startLine: 228
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property MaxDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.InterpolatedHazardRateCurveModel2`1.MaxDate*
  attributes: []
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Interpolator_(unit)
  commentId: P:Cephei.QL.InterpolatedHazardRateCurveModel2`1.Interpolator_
  id: Interpolator_(unit)
  parent: Cephei.QL.InterpolatedHazardRateCurveModel2`1
  langs:
  - csharp
  - vb
  name: 'property Interpolator_: ICell<IInterpolationFactory>'
  nameWithType: 'property InterpolatedHazardRateCurveModel2.Interpolator_: ICell<IInterpolationFactory>'
  fullName: 'property Cephei.QL.InterpolatedHazardRateCurveModel2.Interpolator_: Cephei.Cell.Generic.ICell<QLNet.IInterpolationFactory>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Interpolator_(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedHazardRateCurveModel.fs
    startLine: 227
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Interpolator_: ICell<IInterpolationFactory> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IInterpolationFactory>
      attributes: []
  overload: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Interpolator_*
  attributes: []
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Interpolation_(unit)
  commentId: P:Cephei.QL.InterpolatedHazardRateCurveModel2`1.Interpolation_
  id: Interpolation_(unit)
  parent: Cephei.QL.InterpolatedHazardRateCurveModel2`1
  langs:
  - csharp
  - vb
  name: 'property Interpolation_: ICell<Interpolation>'
  nameWithType: 'property InterpolatedHazardRateCurveModel2.Interpolation_: ICell<Interpolation>'
  fullName: 'property Cephei.QL.InterpolatedHazardRateCurveModel2.Interpolation_: Cephei.Cell.Generic.ICell<QLNet.Interpolation>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Interpolation_(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedHazardRateCurveModel.fs
    startLine: 226
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Interpolation_: ICell<Interpolation> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Interpolation>
      attributes: []
  overload: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Interpolation_*
  attributes: []
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.HazardRates(unit)
  commentId: P:Cephei.QL.InterpolatedHazardRateCurveModel2`1.HazardRates
  id: HazardRates(unit)
  parent: Cephei.QL.InterpolatedHazardRateCurveModel2`1
  langs:
  - csharp
  - vb
  name: 'property HazardRates: ICell<List<float>>'
  nameWithType: 'property InterpolatedHazardRateCurveModel2.HazardRates: ICell<List<float>>'
  fullName: 'property Cephei.QL.InterpolatedHazardRateCurveModel2.HazardRates: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<float>>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedHazardRateCurveModel2`1.HazardRates(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedHazardRateCurveModel.fs
    startLine: 225
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property HazardRates: ICell<List<float>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.float>>
      attributes: []
  overload: Cephei.QL.InterpolatedHazardRateCurveModel2`1.HazardRates*
  attributes: []
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Discounts(unit)
  commentId: P:Cephei.QL.InterpolatedHazardRateCurveModel2`1.Discounts
  id: Discounts(unit)
  parent: Cephei.QL.InterpolatedHazardRateCurveModel2`1
  langs:
  - csharp
  - vb
  name: 'property Discounts: ICell<List<float>>'
  nameWithType: 'property InterpolatedHazardRateCurveModel2.Discounts: ICell<List<float>>'
  fullName: 'property Cephei.QL.InterpolatedHazardRateCurveModel2.Discounts: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<float>>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Discounts(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedHazardRateCurveModel.fs
    startLine: 224
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Discounts: ICell<List<float>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.float>>
      attributes: []
  overload: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Discounts*
  attributes: []
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Dates_(unit)
  commentId: P:Cephei.QL.InterpolatedHazardRateCurveModel2`1.Dates_
  id: Dates_(unit)
  parent: Cephei.QL.InterpolatedHazardRateCurveModel2`1
  langs:
  - csharp
  - vb
  name: 'property Dates_: ICell<List<Date>>'
  nameWithType: 'property InterpolatedHazardRateCurveModel2.Dates_: ICell<List<Date>>'
  fullName: 'property Cephei.QL.InterpolatedHazardRateCurveModel2.Dates_: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.Date>>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Dates_(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedHazardRateCurveModel.fs
    startLine: 223
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Dates_: ICell<List<Date>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<QLNet.Date>>
      attributes: []
  overload: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Dates_*
  attributes: []
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Dates(unit)
  commentId: P:Cephei.QL.InterpolatedHazardRateCurveModel2`1.Dates
  id: Dates(unit)
  parent: Cephei.QL.InterpolatedHazardRateCurveModel2`1
  langs:
  - csharp
  - vb
  name: 'property Dates: ICell<List<Date>>'
  nameWithType: 'property InterpolatedHazardRateCurveModel2.Dates: ICell<List<Date>>'
  fullName: 'property Cephei.QL.InterpolatedHazardRateCurveModel2.Dates: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.Date>>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Dates(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedHazardRateCurveModel.fs
    startLine: 222
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Dates: ICell<List<Date>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<QLNet.Date>>
      attributes: []
  overload: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Dates*
  attributes: []
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Data_(unit)
  commentId: P:Cephei.QL.InterpolatedHazardRateCurveModel2`1.Data_
  id: Data_(unit)
  parent: Cephei.QL.InterpolatedHazardRateCurveModel2`1
  langs:
  - csharp
  - vb
  name: 'property Data_: ICell<List<float>>'
  nameWithType: 'property InterpolatedHazardRateCurveModel2.Data_: ICell<List<float>>'
  fullName: 'property Cephei.QL.InterpolatedHazardRateCurveModel2.Data_: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<float>>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Data_(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedHazardRateCurveModel.fs
    startLine: 221
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Data_: ICell<List<float>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.float>>
      attributes: []
  overload: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Data_*
  attributes: []
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Data(unit)
  commentId: P:Cephei.QL.InterpolatedHazardRateCurveModel2`1.Data
  id: Data(unit)
  parent: Cephei.QL.InterpolatedHazardRateCurveModel2`1
  langs:
  - csharp
  - vb
  name: 'property Data: ICell<List<float>>'
  nameWithType: 'property InterpolatedHazardRateCurveModel2.Data: ICell<List<float>>'
  fullName: 'property Cephei.QL.InterpolatedHazardRateCurveModel2.Data: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<float>>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Data(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedHazardRateCurveModel.fs
    startLine: 220
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Data: ICell<List<float>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.float>>
      attributes: []
  overload: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Data*
  attributes: []
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Clone(unit)
  commentId: P:Cephei.QL.InterpolatedHazardRateCurveModel2`1.Clone
  id: Clone(unit)
  parent: Cephei.QL.InterpolatedHazardRateCurveModel2`1
  langs:
  - csharp
  - vb
  name: 'property Clone: ICell<obj>'
  nameWithType: 'property InterpolatedHazardRateCurveModel2.Clone: ICell<obj>'
  fullName: 'property Cephei.QL.InterpolatedHazardRateCurveModel2.Clone: Cephei.Cell.Generic.ICell<obj>'
  type: Property
  source:
    id: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Clone(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\InterpolatedHazardRateCurveModel.fs
    startLine: 219
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Clone: ICell<obj> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.obj>
      attributes: []
  overload: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Clone*
  attributes: []
references:
- uid: Cephei.QL
  commentId: N:Cephei.QL
  name: Cephei.QL
  nameWithType: Cephei.QL
  fullName: Cephei.QL
- uid: TypeRef:System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
  spec.csharp:
  - {}
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - {}
- uid: TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: ConcurrentDictionary<string,ICell>
  nameWithType: ConcurrentDictionary<string,ICell>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Model
  name: Model
  nameWithType: Model
  fullName: Cephei.Cell.Model
  spec.csharp:
  - {}
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - {}
- uid: TypeRef:Cephei.Cell.Generic.Model`1<QLNet.InterpolatedHazardRateCurve`1<'Interpolator>>
  name: Model<InterpolatedHazardRateCurve<'Interpolator>>
  nameWithType: Model<InterpolatedHazardRateCurve<'Interpolator>>
  fullName: Cephei.Cell.Generic.Model<QLNet.InterpolatedHazardRateCurve<'Interpolator>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.Model`1
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Generic.Model
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.InterpolatedHazardRateCurve`1
    name: InterpolatedHazardRateCurve
    nameWithType: InterpolatedHazardRateCurve
    fullName: QLNet.InterpolatedHazardRateCurve
  - name: <
    nameWithType: <
    fullName: <
  - name: "'Interpolator"
    nameWithType: "'Interpolator"
    fullName: "'Interpolator"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.InterpolatedHazardRateCurve`1<'Interpolator>>
  name: ICell<InterpolatedHazardRateCurve<'Interpolator>>
  nameWithType: ICell<InterpolatedHazardRateCurve<'Interpolator>>
  fullName: Cephei.Cell.Generic.ICell<QLNet.InterpolatedHazardRateCurve<'Interpolator>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.InterpolatedHazardRateCurve`1
    name: InterpolatedHazardRateCurve
    nameWithType: InterpolatedHazardRateCurve
    fullName: QLNet.InterpolatedHazardRateCurve
  - name: <
    nameWithType: <
    fullName: <
  - name: "'Interpolator"
    nameWithType: "'Interpolator"
    fullName: "'Interpolator"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.ICell
  name: ICell
  nameWithType: ICell
  fullName: Cephei.Cell.ICell
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - {}
- uid: TypeRef:Cephei.Cell.ICellEvent
  name: ICellEvent
  nameWithType: ICellEvent
  fullName: Cephei.Cell.ICellEvent
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICellEvent
    name: ICellEvent
    nameWithType: ICellEvent
    fullName: Cephei.Cell.ICellEvent
  - {}
- uid: TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: ICollection<KeyValuePair<string,ICell>>
  nameWithType: ICollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IDictionary<string,ICell>
  nameWithType: IDictionary<string,ICell>
  fullName: System.Collections.Generic.IDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IEnumerable<KeyValuePair<string,ICell>>
  nameWithType: IEnumerable<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IReadOnlyCollection<KeyValuePair<string,ICell>>
  nameWithType: IReadOnlyCollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IReadOnlyDictionary<string,ICell>
  nameWithType: IReadOnlyDictionary<string,ICell>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.ICollection
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
  spec.csharp:
  - {}
  - uid: System.Collections.ICollection
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.ICollection
  - {}
- uid: TypeRef:System.Collections.IDictionary
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
  spec.csharp:
  - {}
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
  - {}
- uid: TypeRef:System.Collections.IEnumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
  spec.csharp:
  - {}
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
  - {}
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  name: IObservable<ICell>
  nameWithType: IObservable<ICell>
  fullName: System.IObservable<Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.InterpolatedHazardRateCurve`1<'Interpolator>> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * ICell<InterpolatedHazardRateCurve<'Interpolator>> * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * ICell<InterpolatedHazardRateCurve<'Interpolator>> * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<QLNet.InterpolatedHazardRateCurve<'Interpolator>> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.InterpolatedHazardRateCurve`1
    name: InterpolatedHazardRateCurve
    nameWithType: InterpolatedHazardRateCurve
    fullName: QLNet.InterpolatedHazardRateCurve
  - name: <
    nameWithType: <
    fullName: <
  - name: "'Interpolator"
    nameWithType: "'Interpolator"
    fullName: "'Interpolator"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<QLNet.InterpolatedHazardRateCurve`1<'Interpolator>>
  name: IObservable<InterpolatedHazardRateCurve<'Interpolator>>
  nameWithType: IObservable<InterpolatedHazardRateCurve<'Interpolator>>
  fullName: System.IObservable<QLNet.InterpolatedHazardRateCurve<'Interpolator>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.InterpolatedHazardRateCurve`1
    name: InterpolatedHazardRateCurve
    nameWithType: InterpolatedHazardRateCurve
    fullName: QLNet.InterpolatedHazardRateCurve
  - name: <
    nameWithType: <
    fullName: <
  - name: "'Interpolator"
    nameWithType: "'Interpolator"
    fullName: "'Interpolator"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.InterpolatedHazardRateCurve`1<'Interpolator>>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,InterpolatedHazardRateCurve<'Interpolator>>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,InterpolatedHazardRateCurve<'Interpolator>>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,QLNet.InterpolatedHazardRateCurve<'Interpolator>>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: QLNet.InterpolatedHazardRateCurve`1
    name: InterpolatedHazardRateCurve
    nameWithType: InterpolatedHazardRateCurve
    fullName: QLNet.InterpolatedHazardRateCurve
  - name: <
    nameWithType: <
    fullName: <
  - name: "'Interpolator"
    nameWithType: "'Interpolator"
    fullName: "'Interpolator"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  name: IObservable<KeyValuePair<string,decimal>>
  nameWithType: IObservable<KeyValuePair<string,decimal>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,decimal>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.decimal
    name: decimal
    nameWithType: decimal
    fullName: decimal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  name: IObservable<KeyValuePair<string,float>>
  nameWithType: IObservable<KeyValuePair<string,float>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,float>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  name: IObservable<KeyValuePair<string,int>>
  nameWithType: IObservable<KeyValuePair<string,int>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,int>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.int
    name: int
    nameWithType: int
    fullName: int
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObserver`1<QLNet.InterpolatedHazardRateCurve`1<'Interpolator>>
  name: IObserver<InterpolatedHazardRateCurve<'Interpolator>>
  nameWithType: IObserver<InterpolatedHazardRateCurve<'Interpolator>>
  fullName: System.IObserver<QLNet.InterpolatedHazardRateCurve<'Interpolator>>
  spec.csharp:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.InterpolatedHazardRateCurve`1
    name: InterpolatedHazardRateCurve
    nameWithType: InterpolatedHazardRateCurve
    fullName: QLNet.InterpolatedHazardRateCurve
  - name: <
    nameWithType: <
    fullName: <
  - name: "'Interpolator"
    nameWithType: "'Interpolator"
    fullName: "'Interpolator"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  name: "member Bind: ICell<'T> -> unit"
  nameWithType: "member Model.Bind: ICell<'T> -> unit"
  fullName: "member Cephei.Cell.Generic.Model.Bind: Cephei.Cell.Generic.ICell<'T> -> unit"
- uid: Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  name: 'abstract member OnCompleted: unit -> unit'
  nameWithType: 'abstract member Model.OnCompleted: unit -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnCompleted: unit -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnError(exn)
  name: 'abstract member OnError: exn -> unit'
  nameWithType: 'abstract member Model.OnError: exn -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnError: exn -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnNext('T)
  name: "abstract member OnNext: 'T -> unit"
  nameWithType: "abstract member Model.OnNext: 'T -> unit"
  fullName: "abstract member Cephei.Cell.Generic.Model.OnNext: 'T -> unit"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  name: "abstract member Subscribe: IObserver<'T> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<'T> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<'T> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: "abstract member Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  name: "abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Value(unit)
  name: "abstract property Value: 'T"
  nameWithType: "abstract property Model.Value: 'T"
  fullName: "abstract property Cephei.Cell.Generic.Model.Value: 'T"
- uid: Cephei.Cell.Model.As(string)
  name: "member As: string -> ICell<'T>"
  nameWithType: "member Model.As: string -> ICell<'T>"
  fullName: "member Cephei.Cell.Model.As: string -> Cephei.Cell.Generic.ICell<'T>"
- uid: Cephei.Cell.Model.Bind(unit)
  name: 'member Bind: unit -> unit'
  nameWithType: 'member Model.Bind: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Bind: unit -> unit'
- uid: Cephei.Cell.Model.Box(unit)
  name: 'abstract property Box: obj'
  nameWithType: 'abstract property Model.Box: obj'
  fullName: 'abstract property Cephei.Cell.Model.Box: obj'
- uid: Cephei.Cell.Model.Change()
  name: 'abstract member Change: CellChange'
  nameWithType: 'abstract member Model.Change: CellChange'
  fullName: 'abstract member Cephei.Cell.Model.Change: Cephei.Cell.CellChange'
- uid: Cephei.Cell.Model.Create(Unit -> 'T * string)
  name: "member Create: Unit -> 'T * string -> Cell<'T>"
  nameWithType: "member Model.Create: Unit -> 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.Create: Unit -> 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.CreateValue('T * string)
  name: "member CreateValue: 'T * string -> Cell<'T>"
  nameWithType: "member Model.CreateValue: 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.CreateValue: 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.Dependants(unit)
  name: 'abstract property Dependants: IEnumerable<ICellEvent>'
  nameWithType: 'abstract property Model.Dependants: IEnumerable<ICellEvent>'
  fullName: 'abstract property Cephei.Cell.Model.Dependants: System.Collections.Generic.IEnumerable<Cephei.Cell.ICellEvent>'
- uid: Cephei.Cell.Model.Dispose(unit)
  name: 'member Dispose: unit -> unit'
  nameWithType: 'member Model.Dispose: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Dispose: unit -> unit'
- uid: Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  name: 'member GetOrAdd: string * ICell -> ICell'
  nameWithType: 'member Model.GetOrAdd: string * ICell -> ICell'
  fullName: 'member Cephei.Cell.Model.GetOrAdd: string * Cephei.Cell.ICell -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.HasFunction(unit)
  name: 'abstract property HasFunction: bool'
  nameWithType: 'abstract property Model.HasFunction: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasFunction: bool'
- uid: Cephei.Cell.Model.HasValue(unit)
  name: 'abstract property HasValue: bool'
  nameWithType: 'abstract property Model.HasValue: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasValue: bool'
- uid: Cephei.Cell.Model.Item(string)
  name: 'property Item: string -> ICell'
  nameWithType: 'property Model.Item: string -> ICell'
  fullName: 'property Cephei.Cell.Model.Item: string -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Mnemonic(unit)
  name: 'abstract property Mnemonic: string'
  nameWithType: 'abstract property Model.Mnemonic: string'
  fullName: 'abstract property Cephei.Cell.Model.Mnemonic: string'
- uid: Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  name: 'abstract member OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  nameWithType: 'abstract member Model.OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  fullName: 'abstract member Cephei.Cell.Model.OnChange: Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession -> unit'
- uid: Cephei.Cell.Model.Parent(unit)
  name: 'abstract property Parent: ICell'
  nameWithType: 'abstract property Model.Parent: ICell'
  fullName: 'abstract property Cephei.Cell.Model.Parent: Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  name: 'abstract member Subscribe: IObserver<ICell> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ICell> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ICell> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: 'abstract member Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,float>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,int>> -> System.IDisposable'
- uid: Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  name: 'member TryAdd: string * ICell -> bool'
  nameWithType: 'member Model.TryAdd: string * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryAdd: string * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  name: 'member TryRemove: string * ICell byref -> bool'
  nameWithType: 'member Model.TryRemove: string * ICell byref -> bool'
  fullName: 'member Cephei.Cell.Model.TryRemove: string * Cephei.Cell.ICell byref -> bool'
- uid: Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  name: 'member TryUpdate: string * ICell * ICell -> bool'
  nameWithType: 'member Model.TryUpdate: string * ICell * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryUpdate: string * Cephei.Cell.ICell * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  name: 'abstract member add_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.add_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.add_Change: Cephei.Cell.CellChange -> unit'
- uid: Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  name: 'abstract member remove_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.remove_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.remove_Change: Cephei.Cell.CellChange -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  name: 'abstract member Clear: unit -> unit'
  nameWithType: 'abstract member ConcurrentDictionary.Clear: unit -> unit'
  fullName: 'abstract member System.Collections.Concurrent.ConcurrentDictionary.Clear: unit -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  name: "abstract member ContainsKey: 'TKey -> bool"
  nameWithType: "abstract member ConcurrentDictionary.ContainsKey: 'TKey -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.ContainsKey: 'TKey -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  name: 'abstract property Count: int'
  nameWithType: 'abstract property ConcurrentDictionary.Count: int'
  fullName: 'abstract property System.Collections.Concurrent.ConcurrentDictionary.Count: int'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  name: "abstract member GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  nameWithType: "abstract member ConcurrentDictionary.GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.GetEnumerator: unit -> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<'TKey,'TValue>>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  name: "member GetOrAdd: 'TKey * 'TValue -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  name: "member GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * System.Func<'TKey,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  name: 'property IsEmpty: bool'
  nameWithType: 'property ConcurrentDictionary.IsEmpty: bool'
  fullName: 'property System.Collections.Concurrent.ConcurrentDictionary.IsEmpty: bool'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  name: "abstract property Item: 'TKey -> 'TValue"
  nameWithType: "abstract property ConcurrentDictionary.Item: 'TKey -> 'TValue"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Item: 'TKey -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  name: "abstract property Keys: ICollection<'TKey>"
  nameWithType: "abstract property ConcurrentDictionary.Keys: ICollection<'TKey>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Keys: System.Collections.Generic.ICollection<'TKey>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  name: "member ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  nameWithType: "member ConcurrentDictionary.ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.ToArray: unit -> System.Collections.Generic.KeyValuePair<'TKey,'TValue> []"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  name: "member TryAdd: 'TKey * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  name: "abstract member TryGetValue: 'TKey * 'TValue byref -> bool"
  nameWithType: "abstract member ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  name: "member TryRemove: 'TKey * 'TValue byref -> bool"
  nameWithType: "member ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  name: "member TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  name: "abstract property Values: ICollection<'TValue>"
  nameWithType: "abstract property ConcurrentDictionary.Values: ICollection<'TValue>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Values: System.Collections.Generic.ICollection<'TValue>"
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<QLNet.Date>>
  name: ICell<List<Date>>
  nameWithType: ICell<List<Date>>
  fullName: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.Date>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Date
    name: Date
    nameWithType: Date
    fullName: QLNet.Date
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.double>>
  name: ICell<List<double>>
  nameWithType: ICell<List<double>>
  fullName: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.double
    name: double
    nameWithType: double
    fullName: double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
  name: ICell<DayCounter>
  nameWithType: ICell<DayCounter>
  fullName: Cephei.Cell.Generic.ICell<QLNet.DayCounter>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.DayCounter
    name: DayCounter
    nameWithType: DayCounter
    fullName: QLNet.DayCounter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<'Interpolator>
  name: ICell<'Interpolator>
  nameWithType: ICell<'Interpolator>
  fullName: Cephei.Cell.Generic.ICell<'Interpolator>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - name: "'Interpolator"
    nameWithType: "'Interpolator"
    fullName: "'Interpolator"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.#ctor*
  commentId: Overload:Cephei.QL.InterpolatedHazardRateCurveModel2`1.#ctor*
  name: ( .ctor )
  nameWithType: InterpolatedHazardRateCurveModel2.( .ctor )
  fullName: Cephei.QL.InterpolatedHazardRateCurveModel2
- uid: TypeRef:Cephei.QL.InterpolatedHazardRateCurveModel2`1<'Interpolator>
  name: InterpolatedHazardRateCurveModel2<'Interpolator>
  nameWithType: InterpolatedHazardRateCurveModel2<'Interpolator>
  fullName: Cephei.QL.InterpolatedHazardRateCurveModel2<'Interpolator>
  spec.csharp:
  - uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1
    name: InterpolatedHazardRateCurveModel2
    nameWithType: InterpolatedHazardRateCurveModel2
    fullName: Cephei.QL.InterpolatedHazardRateCurveModel2
  - name: <
    nameWithType: <
    fullName: <
  - name: "'Interpolator"
    nameWithType: "'Interpolator"
    fullName: "'Interpolator"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.interpolator*
  commentId: Overload:Cephei.QL.InterpolatedHazardRateCurveModel2`1.interpolator*
  name: interpolator
  nameWithType: InterpolatedHazardRateCurveModel2.interpolator
  fullName: Cephei.QL.InterpolatedHazardRateCurveModel2.interpolator
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.hazardRates*
  commentId: Overload:Cephei.QL.InterpolatedHazardRateCurveModel2`1.hazardRates*
  name: hazardRates
  nameWithType: InterpolatedHazardRateCurveModel2.hazardRates
  fullName: Cephei.QL.InterpolatedHazardRateCurveModel2.hazardRates
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.float>>
  name: ICell<List<float>>
  nameWithType: ICell<List<float>>
  fullName: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<float>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.dayCounter*
  commentId: Overload:Cephei.QL.InterpolatedHazardRateCurveModel2`1.dayCounter*
  name: dayCounter
  nameWithType: InterpolatedHazardRateCurveModel2.dayCounter
  fullName: Cephei.QL.InterpolatedHazardRateCurveModel2.dayCounter
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.dates*
  commentId: Overload:Cephei.QL.InterpolatedHazardRateCurveModel2`1.dates*
  name: dates
  nameWithType: InterpolatedHazardRateCurveModel2.dates
  fullName: Cephei.QL.InterpolatedHazardRateCurveModel2.dates
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Times_*
  commentId: Overload:Cephei.QL.InterpolatedHazardRateCurveModel2`1.Times_*
  name: Times_
  nameWithType: InterpolatedHazardRateCurveModel2.Times_
  fullName: Cephei.QL.InterpolatedHazardRateCurveModel2.Times_
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Times*
  commentId: Overload:Cephei.QL.InterpolatedHazardRateCurveModel2`1.Times*
  name: Times
  nameWithType: InterpolatedHazardRateCurveModel2.Times
  fullName: Cephei.QL.InterpolatedHazardRateCurveModel2.Times
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.SetupInterpolation*
  commentId: Overload:Cephei.QL.InterpolatedHazardRateCurveModel2`1.SetupInterpolation*
  name: SetupInterpolation
  nameWithType: InterpolatedHazardRateCurveModel2.SetupInterpolation
  fullName: Cephei.QL.InterpolatedHazardRateCurveModel2.SetupInterpolation
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Nodes*
  commentId: Overload:Cephei.QL.InterpolatedHazardRateCurveModel2`1.Nodes*
  name: Nodes
  nameWithType: InterpolatedHazardRateCurveModel2.Nodes
  fullName: Cephei.QL.InterpolatedHazardRateCurveModel2.Nodes
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.Dictionary`2<QLNet.Date,Microsoft.FSharp.Core.float>>
  name: ICell<Dictionary<Date,float>>
  nameWithType: ICell<Dictionary<Date,float>>
  fullName: Cephei.Cell.Generic.ICell<System.Collections.Generic.Dictionary<QLNet.Date,float>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Date
    name: Date
    nameWithType: Date
    fullName: QLNet.Date
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.MaxDate_*
  commentId: Overload:Cephei.QL.InterpolatedHazardRateCurveModel2`1.MaxDate_*
  name: MaxDate_
  nameWithType: InterpolatedHazardRateCurveModel2.MaxDate_
  fullName: Cephei.QL.InterpolatedHazardRateCurveModel2.MaxDate_
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
  name: ICell<Date>
  nameWithType: ICell<Date>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Date>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Date
    name: Date
    nameWithType: Date
    fullName: QLNet.Date
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.MaxDate*
  commentId: Overload:Cephei.QL.InterpolatedHazardRateCurveModel2`1.MaxDate*
  name: MaxDate
  nameWithType: InterpolatedHazardRateCurveModel2.MaxDate
  fullName: Cephei.QL.InterpolatedHazardRateCurveModel2.MaxDate
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Interpolator_*
  commentId: Overload:Cephei.QL.InterpolatedHazardRateCurveModel2`1.Interpolator_*
  name: Interpolator_
  nameWithType: InterpolatedHazardRateCurveModel2.Interpolator_
  fullName: Cephei.QL.InterpolatedHazardRateCurveModel2.Interpolator_
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IInterpolationFactory>
  name: ICell<IInterpolationFactory>
  nameWithType: ICell<IInterpolationFactory>
  fullName: Cephei.Cell.Generic.ICell<QLNet.IInterpolationFactory>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.IInterpolationFactory
    name: IInterpolationFactory
    nameWithType: IInterpolationFactory
    fullName: QLNet.IInterpolationFactory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Interpolation_*
  commentId: Overload:Cephei.QL.InterpolatedHazardRateCurveModel2`1.Interpolation_*
  name: Interpolation_
  nameWithType: InterpolatedHazardRateCurveModel2.Interpolation_
  fullName: Cephei.QL.InterpolatedHazardRateCurveModel2.Interpolation_
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Interpolation>
  name: ICell<Interpolation>
  nameWithType: ICell<Interpolation>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Interpolation>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Interpolation
    name: Interpolation
    nameWithType: Interpolation
    fullName: QLNet.Interpolation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.HazardRates*
  commentId: Overload:Cephei.QL.InterpolatedHazardRateCurveModel2`1.HazardRates*
  name: HazardRates
  nameWithType: InterpolatedHazardRateCurveModel2.HazardRates
  fullName: Cephei.QL.InterpolatedHazardRateCurveModel2.HazardRates
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Discounts*
  commentId: Overload:Cephei.QL.InterpolatedHazardRateCurveModel2`1.Discounts*
  name: Discounts
  nameWithType: InterpolatedHazardRateCurveModel2.Discounts
  fullName: Cephei.QL.InterpolatedHazardRateCurveModel2.Discounts
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Dates_*
  commentId: Overload:Cephei.QL.InterpolatedHazardRateCurveModel2`1.Dates_*
  name: Dates_
  nameWithType: InterpolatedHazardRateCurveModel2.Dates_
  fullName: Cephei.QL.InterpolatedHazardRateCurveModel2.Dates_
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Dates*
  commentId: Overload:Cephei.QL.InterpolatedHazardRateCurveModel2`1.Dates*
  name: Dates
  nameWithType: InterpolatedHazardRateCurveModel2.Dates
  fullName: Cephei.QL.InterpolatedHazardRateCurveModel2.Dates
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Data_*
  commentId: Overload:Cephei.QL.InterpolatedHazardRateCurveModel2`1.Data_*
  name: Data_
  nameWithType: InterpolatedHazardRateCurveModel2.Data_
  fullName: Cephei.QL.InterpolatedHazardRateCurveModel2.Data_
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Data*
  commentId: Overload:Cephei.QL.InterpolatedHazardRateCurveModel2`1.Data*
  name: Data
  nameWithType: InterpolatedHazardRateCurveModel2.Data
  fullName: Cephei.QL.InterpolatedHazardRateCurveModel2.Data
- uid: Cephei.QL.InterpolatedHazardRateCurveModel2`1.Clone*
  commentId: Overload:Cephei.QL.InterpolatedHazardRateCurveModel2`1.Clone*
  name: Clone
  nameWithType: InterpolatedHazardRateCurveModel2.Clone
  fullName: Cephei.QL.InterpolatedHazardRateCurveModel2.Clone
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.obj>
  name: ICell<obj>
  nameWithType: ICell<obj>
  fullName: Cephei.Cell.Generic.ICell<obj>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.obj
    name: obj
    nameWithType: obj
    fullName: obj
  - name: '>'
    nameWithType: '>'
    fullName: '>'
