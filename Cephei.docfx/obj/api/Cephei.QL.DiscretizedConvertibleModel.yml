### YamlMime:ManagedReference
items:
- uid: Cephei.QL.DiscretizedConvertibleModel
  commentId: T:Cephei.QL.DiscretizedConvertibleModel
  id: DiscretizedConvertibleModel
  parent: Cephei.QL
  children:
  - Cephei.QL.DiscretizedConvertibleModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.ConvertibleBond.option.Arguments> * Cephei.Cell.Generic.ICell<QLNet.GeneralizedBlackScholesProcess> * Cephei.Cell.Generic.ICell<QLNet.TimeGrid>)
  - Cephei.QL.DiscretizedConvertibleModel.AddCoupon(Cephei.Cell.Generic.ICell<int>)
  - Cephei.QL.DiscretizedConvertibleModel.AdjustedGrid(unit)
  - Cephei.QL.DiscretizedConvertibleModel.AdjustValues(unit)
  - Cephei.QL.DiscretizedConvertibleModel.ApplyCallability(Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<bool>)
  - Cephei.QL.DiscretizedConvertibleModel.ApplyConvertibility(unit)
  - Cephei.QL.DiscretizedConvertibleModel.args(unit)
  - Cephei.QL.DiscretizedConvertibleModel.ConversionProbability(unit)
  - Cephei.QL.DiscretizedConvertibleModel.DividendValues(unit)
  - Cephei.QL.DiscretizedConvertibleModel.grid(unit)
  - Cephei.QL.DiscretizedConvertibleModel.Initialize(Cephei.Cell.Generic.ICell<QLNet.Lattice> -> Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.DiscretizedConvertibleModel.MandatoryTimes(unit)
  - Cephei.QL.DiscretizedConvertibleModel.Method(unit)
  - Cephei.QL.DiscretizedConvertibleModel.PartialRollback(Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.DiscretizedConvertibleModel.PostAdjustValues(unit)
  - Cephei.QL.DiscretizedConvertibleModel.PreAdjustValues(unit)
  - Cephei.QL.DiscretizedConvertibleModel.PresentValue(unit)
  - Cephei.QL.DiscretizedConvertibleModel.Process(unit)
  - Cephei.QL.DiscretizedConvertibleModel.Process1(unit)
  - Cephei.QL.DiscretizedConvertibleModel.Reset(Cephei.Cell.Generic.ICell<int>)
  - Cephei.QL.DiscretizedConvertibleModel.Rollback(Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.DiscretizedConvertibleModel.SetTime(Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.DiscretizedConvertibleModel.SetValues(Cephei.Cell.Generic.ICell<QLNet.Vector>)
  - Cephei.QL.DiscretizedConvertibleModel.SpreadAdjustedRate(unit)
  - Cephei.QL.DiscretizedConvertibleModel.Time(unit)
  - Cephei.QL.DiscretizedConvertibleModel.Values(unit)
  langs:
  - csharp
  - vb
  name: DiscretizedConvertibleModel
  nameWithType: Cephei.QL.DiscretizedConvertibleModel
  fullName: Cephei.QL.DiscretizedConvertibleModel
  type: Class
  source:
    id: Cephei.QL.DiscretizedConvertibleModel
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 35
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: >-
      [<AutoSerializable(true)>]

      type DiscretizedConvertibleModel (args:ICell<Arguments>, Process:ICell<GeneralizedBlackScholesProcess>, grid:ICell<TimeGrid>)
          inherit Model<DiscretizedConvertible>
          interface IDictionary<string,ICell>
          interface ICollection<KeyValuePair<string,ICell>>
          interface IReadOnlyDictionary<string,ICell>
          interface IReadOnlyCollection<KeyValuePair<string,ICell>>
          interface IEnumerable<KeyValuePair<string,ICell>>
          interface IDictionary
          interface ICollection
          interface IEnumerable
          interface IObservable<ICell>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
          interface IObservable<ISession * Model * CellEvent * ICell * DateTime>
          interface IObservable<KeyValuePair<string,float>>
          interface IObservable<KeyValuePair<string,int>>
          interface IObservable<KeyValuePair<string,decimal>>
          interface ICell<DiscretizedConvertible>
          interface ICell
          interface ICellEvent
          interface IObservable<DiscretizedConvertible>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,DiscretizedConvertible>>>
          interface IObservable<ISession * ICell<DiscretizedConvertible> * CellEvent * ICell * DateTime>
          interface IObserver<DiscretizedConvertible>
    parameters:
    - id: args
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.ConvertibleBond.option.Arguments>
      attributes: []
    - id: Process
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.GeneralizedBlackScholesProcess>
      attributes: []
    - id: grid
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.TimeGrid>
      attributes: []
    typeParameters: []
  inheritance:
  - TypeRef:System.Object
  - TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:Cephei.Cell.Model
  - TypeRef:Cephei.Cell.Generic.Model`1<QLNet.DiscretizedConvertible>
  implements:
  - TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DiscretizedConvertible>
  - TypeRef:Cephei.Cell.ICell
  - TypeRef:Cephei.Cell.ICellEvent
  - TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.ICollection
  - TypeRef:System.Collections.IDictionary
  - TypeRef:System.Collections.IEnumerable
  - TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.DiscretizedConvertible> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<QLNet.DiscretizedConvertible>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.DiscretizedConvertible>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  - TypeRef:System.IObserver`1<QLNet.DiscretizedConvertible>
  inheritedMembers:
  - Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  - Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  - Cephei.Cell.Generic.Model`1.OnError(exn)
  - Cephei.Cell.Generic.Model`1.OnNext('T)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  - Cephei.Cell.Generic.Model`1.Value(unit)
  - Cephei.Cell.Model.As(string)
  - Cephei.Cell.Model.Bind(unit)
  - Cephei.Cell.Model.Box(unit)
  - Cephei.Cell.Model.Change()
  - Cephei.Cell.Model.Create(Unit -> 'T * string)
  - Cephei.Cell.Model.CreateValue('T * string)
  - Cephei.Cell.Model.Dependants(unit)
  - Cephei.Cell.Model.Dispose(unit)
  - Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.HasFunction(unit)
  - Cephei.Cell.Model.HasValue(unit)
  - Cephei.Cell.Model.Item(string)
  - Cephei.Cell.Model.Mnemonic(unit)
  - Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  - Cephei.Cell.Model.Parent(unit)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  - Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  - Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  - Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  - Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  attributes:
  - type: Microsoft.FSharp.Core.AutoSerializableAttribute
    arguments:
    - type: System.Boolean
      value: true
    namedArguments: []
- uid: Cephei.QL.DiscretizedConvertibleModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.ConvertibleBond.option.Arguments> * Cephei.Cell.Generic.ICell<QLNet.GeneralizedBlackScholesProcess> * Cephei.Cell.Generic.ICell<QLNet.TimeGrid>)
  commentId: M:Cephei.QL.DiscretizedConvertibleModel.#ctor(Cephei.Cell.Generic.ICell{QLNet.ConvertibleBond.option.Arguments},Cephei.Cell.Generic.ICell{QLNet.GeneralizedBlackScholesProcess},Cephei.Cell.Generic.ICell{QLNet.TimeGrid})
  id: '#ctor(Cephei.Cell.Generic.ICell<QLNet.ConvertibleBond.option.Arguments> * Cephei.Cell.Generic.ICell<QLNet.GeneralizedBlackScholesProcess> * Cephei.Cell.Generic.ICell<QLNet.TimeGrid>)'
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'new: ICell<Arguments> * ICell<GeneralizedBlackScholesProcess> * ICell<TimeGrid> -> DiscretizedConvertibleModel'
  nameWithType: 'new: ICell<Arguments> * ICell<GeneralizedBlackScholesProcess> * ICell<TimeGrid> -> DiscretizedConvertibleModel'
  fullName: 'new: Cephei.Cell.Generic.ICell<QLNet.ConvertibleBond.option.Arguments> * Cephei.Cell.Generic.ICell<QLNet.GeneralizedBlackScholesProcess> * Cephei.Cell.Generic.ICell<QLNet.TimeGrid> -> Cephei.QL.DiscretizedConvertibleModel'
  type: Constructor
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.ConvertibleBond.option.Arguments> * Cephei.Cell.Generic.ICell<QLNet.GeneralizedBlackScholesProcess> * Cephei.Cell.Generic.ICell<QLNet.TimeGrid>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 35
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  summary: Implicit constructor.
  syntax:
    content: 'new: args:ICell<Arguments> * Process:ICell<GeneralizedBlackScholesProcess> * grid:ICell<TimeGrid> -> DiscretizedConvertibleModel'
    parameters:
    - id: args
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.ConvertibleBond.option.Arguments>
      attributes: []
    - id: Process
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.GeneralizedBlackScholesProcess>
      attributes: []
    - id: grid
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.TimeGrid>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.QL.DiscretizedConvertibleModel
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.#ctor*
  attributes: []
- uid: Cephei.QL.DiscretizedConvertibleModel.AddCoupon(Cephei.Cell.Generic.ICell<int>)
  commentId: M:Cephei.QL.DiscretizedConvertibleModel.AddCoupon(Cephei.Cell.Generic.ICell{System.Int32})
  id: AddCoupon(Cephei.Cell.Generic.ICell<int>)
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'member AddCoupon: ICell<int> -> ICell<DiscretizedConvertible>'
  nameWithType: 'member DiscretizedConvertibleModel.AddCoupon: ICell<int> -> ICell<DiscretizedConvertible>'
  fullName: 'member Cephei.QL.DiscretizedConvertibleModel.AddCoupon: Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<QLNet.DiscretizedConvertible>'
  type: Method
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.AddCoupon(Cephei.Cell.Generic.ICell<int>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 102
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member AddCoupon: i:ICell<int> -> ICell<DiscretizedConvertible>'
    parameters:
    - id: i
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DiscretizedConvertible>
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.AddCoupon*
  attributes: []
- uid: Cephei.QL.DiscretizedConvertibleModel.ApplyCallability(Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<bool>)
  commentId: M:Cephei.QL.DiscretizedConvertibleModel.ApplyCallability(Cephei.Cell.Generic.ICell{System.Int32},Cephei.Cell.Generic.ICell{System.Boolean})
  id: ApplyCallability(Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<bool>)
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'member ApplyCallability: ICell<int> -> ICell<bool> -> ICell<DiscretizedConvertible>'
  nameWithType: 'member DiscretizedConvertibleModel.ApplyCallability: ICell<int> -> ICell<bool> -> ICell<DiscretizedConvertible>'
  fullName: 'member Cephei.QL.DiscretizedConvertibleModel.ApplyCallability: Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<bool> -> Cephei.Cell.Generic.ICell<QLNet.DiscretizedConvertible>'
  type: Method
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.ApplyCallability(Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<bool>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 105
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member ApplyCallability: i:ICell<int> -> convertible:ICell<bool> -> ICell<DiscretizedConvertible>'
    parameters:
    - id: i
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
    - id: convertible
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DiscretizedConvertible>
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.ApplyCallability*
  attributes: []
- uid: Cephei.QL.DiscretizedConvertibleModel.Initialize(Cephei.Cell.Generic.ICell<QLNet.Lattice> -> Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.DiscretizedConvertibleModel.Initialize(Cephei.Cell.Generic.ICell{QLNet.Lattice},Cephei.Cell.Generic.ICell{System.Double})
  id: Initialize(Cephei.Cell.Generic.ICell<QLNet.Lattice> -> Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'member Initialize: ICell<Lattice> -> ICell<double> -> ICell<DiscretizedConvertible>'
  nameWithType: 'member DiscretizedConvertibleModel.Initialize: ICell<Lattice> -> ICell<double> -> ICell<DiscretizedConvertible>'
  fullName: 'member Cephei.QL.DiscretizedConvertibleModel.Initialize: Cephei.Cell.Generic.ICell<QLNet.Lattice> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.DiscretizedConvertible>'
  type: Method
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.Initialize(Cephei.Cell.Generic.ICell<QLNet.Lattice> -> Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 116
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Initialize: Method:ICell<Lattice> -> t:ICell<double> -> ICell<DiscretizedConvertible>'
    parameters:
    - id: Method
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Lattice>
      attributes: []
    - id: t
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DiscretizedConvertible>
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.Initialize*
  attributes: []
- uid: Cephei.QL.DiscretizedConvertibleModel.PartialRollback(Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.DiscretizedConvertibleModel.PartialRollback(Cephei.Cell.Generic.ICell{System.Double})
  id: PartialRollback(Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'member PartialRollback: ICell<double> -> ICell<DiscretizedConvertible>'
  nameWithType: 'member DiscretizedConvertibleModel.PartialRollback: ICell<double> -> ICell<DiscretizedConvertible>'
  fullName: 'member Cephei.QL.DiscretizedConvertibleModel.PartialRollback: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.DiscretizedConvertible>'
  type: Method
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.PartialRollback(Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 119
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member PartialRollback: To:ICell<double> -> ICell<DiscretizedConvertible>'
    parameters:
    - id: To
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DiscretizedConvertible>
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.PartialRollback*
  attributes: []
- uid: Cephei.QL.DiscretizedConvertibleModel.Reset(Cephei.Cell.Generic.ICell<int>)
  commentId: M:Cephei.QL.DiscretizedConvertibleModel.Reset(Cephei.Cell.Generic.ICell{System.Int32})
  id: Reset(Cephei.Cell.Generic.ICell<int>)
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'member Reset: ICell<int> -> ICell<DiscretizedConvertible>'
  nameWithType: 'member DiscretizedConvertibleModel.Reset: ICell<int> -> ICell<DiscretizedConvertible>'
  fullName: 'member Cephei.QL.DiscretizedConvertibleModel.Reset: Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<QLNet.DiscretizedConvertible>'
  type: Method
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.Reset(Cephei.Cell.Generic.ICell<int>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 112
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Reset: size:ICell<int> -> ICell<DiscretizedConvertible>'
    parameters:
    - id: size
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DiscretizedConvertible>
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.Reset*
  attributes: []
- uid: Cephei.QL.DiscretizedConvertibleModel.Rollback(Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.DiscretizedConvertibleModel.Rollback(Cephei.Cell.Generic.ICell{System.Double})
  id: Rollback(Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'member Rollback: ICell<double> -> ICell<DiscretizedConvertible>'
  nameWithType: 'member DiscretizedConvertibleModel.Rollback: ICell<double> -> ICell<DiscretizedConvertible>'
  fullName: 'member Cephei.QL.DiscretizedConvertibleModel.Rollback: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.DiscretizedConvertible>'
  type: Method
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.Rollback(Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 124
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Rollback: To:ICell<double> -> ICell<DiscretizedConvertible>'
    parameters:
    - id: To
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DiscretizedConvertible>
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.Rollback*
  attributes: []
- uid: Cephei.QL.DiscretizedConvertibleModel.SetTime(Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.DiscretizedConvertibleModel.SetTime(Cephei.Cell.Generic.ICell{System.Double})
  id: SetTime(Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'member SetTime: ICell<double> -> ICell<DiscretizedConvertible>'
  nameWithType: 'member DiscretizedConvertibleModel.SetTime: ICell<double> -> ICell<DiscretizedConvertible>'
  fullName: 'member Cephei.QL.DiscretizedConvertibleModel.SetTime: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.DiscretizedConvertible>'
  type: Method
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.SetTime(Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 126
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member SetTime: t:ICell<double> -> ICell<DiscretizedConvertible>'
    parameters:
    - id: t
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DiscretizedConvertible>
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.SetTime*
  attributes: []
- uid: Cephei.QL.DiscretizedConvertibleModel.SetValues(Cephei.Cell.Generic.ICell<QLNet.Vector>)
  commentId: M:Cephei.QL.DiscretizedConvertibleModel.SetValues(Cephei.Cell.Generic.ICell{QLNet.Vector})
  id: SetValues(Cephei.Cell.Generic.ICell<QLNet.Vector>)
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'member SetValues: ICell<Vector> -> ICell<DiscretizedConvertible>'
  nameWithType: 'member DiscretizedConvertibleModel.SetValues: ICell<Vector> -> ICell<DiscretizedConvertible>'
  fullName: 'member Cephei.QL.DiscretizedConvertibleModel.SetValues: Cephei.Cell.Generic.ICell<QLNet.Vector> -> Cephei.Cell.Generic.ICell<QLNet.DiscretizedConvertible>'
  type: Method
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.SetValues(Cephei.Cell.Generic.ICell<QLNet.Vector>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 128
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member SetValues: v:ICell<Vector> -> ICell<DiscretizedConvertible>'
    parameters:
    - id: v
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DiscretizedConvertible>
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.SetValues*
  attributes: []
- uid: Cephei.QL.DiscretizedConvertibleModel.grid(unit)
  commentId: P:Cephei.QL.DiscretizedConvertibleModel.grid
  id: grid(unit)
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'property grid: ICell<TimeGrid>'
  nameWithType: 'property DiscretizedConvertibleModel.grid: ICell<TimeGrid>'
  fullName: 'property Cephei.QL.DiscretizedConvertibleModel.grid: Cephei.Cell.Generic.ICell<QLNet.TimeGrid>'
  type: Property
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.grid(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 101
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property grid: ICell<TimeGrid> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.TimeGrid>
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.grid*
  attributes: []
- uid: Cephei.QL.DiscretizedConvertibleModel.args(unit)
  commentId: P:Cephei.QL.DiscretizedConvertibleModel.args
  id: args(unit)
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'property args: ICell<Arguments>'
  nameWithType: 'property DiscretizedConvertibleModel.args: ICell<Arguments>'
  fullName: 'property Cephei.QL.DiscretizedConvertibleModel.args: Cephei.Cell.Generic.ICell<QLNet.ConvertibleBond.option.Arguments>'
  type: Property
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.args(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 99
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property args: ICell<Arguments> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.ConvertibleBond.option.Arguments>
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.args*
  attributes: []
- uid: Cephei.QL.DiscretizedConvertibleModel.Values(unit)
  commentId: P:Cephei.QL.DiscretizedConvertibleModel.Values
  id: Values(unit)
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'property Values: ICell<Vector>'
  nameWithType: 'property DiscretizedConvertibleModel.Values: ICell<Vector>'
  fullName: 'property Cephei.QL.DiscretizedConvertibleModel.Values: Cephei.Cell.Generic.ICell<QLNet.Vector>'
  type: Property
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.Values(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 131
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Values: ICell<Vector> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.Values*
  attributes: []
- uid: Cephei.QL.DiscretizedConvertibleModel.Time(unit)
  commentId: P:Cephei.QL.DiscretizedConvertibleModel.Time
  id: Time(unit)
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'property Time: ICell<float>'
  nameWithType: 'property DiscretizedConvertibleModel.Time: ICell<float>'
  fullName: 'property Cephei.QL.DiscretizedConvertibleModel.Time: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.Time(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 130
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Time: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.Time*
  attributes: []
- uid: Cephei.QL.DiscretizedConvertibleModel.SpreadAdjustedRate(unit)
  commentId: P:Cephei.QL.DiscretizedConvertibleModel.SpreadAdjustedRate
  id: SpreadAdjustedRate(unit)
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'property SpreadAdjustedRate: ICell<Vector>'
  nameWithType: 'property DiscretizedConvertibleModel.SpreadAdjustedRate: ICell<Vector>'
  fullName: 'property Cephei.QL.DiscretizedConvertibleModel.SpreadAdjustedRate: Cephei.Cell.Generic.ICell<QLNet.Vector>'
  type: Property
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.SpreadAdjustedRate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 114
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property SpreadAdjustedRate: ICell<Vector> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.SpreadAdjustedRate*
  attributes: []
- uid: Cephei.QL.DiscretizedConvertibleModel.Process1(unit)
  commentId: P:Cephei.QL.DiscretizedConvertibleModel.Process1
  id: Process1(unit)
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'property Process1: ICell<GeneralizedBlackScholesProcess>'
  nameWithType: 'property DiscretizedConvertibleModel.Process1: ICell<GeneralizedBlackScholesProcess>'
  fullName: 'property Cephei.QL.DiscretizedConvertibleModel.Process1: Cephei.Cell.Generic.ICell<QLNet.GeneralizedBlackScholesProcess>'
  type: Property
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.Process1(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 111
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Process1: ICell<GeneralizedBlackScholesProcess> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.GeneralizedBlackScholesProcess>
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.Process1*
  attributes: []
- uid: Cephei.QL.DiscretizedConvertibleModel.Process(unit)
  commentId: P:Cephei.QL.DiscretizedConvertibleModel.Process
  id: Process(unit)
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'property Process: ICell<GeneralizedBlackScholesProcess>'
  nameWithType: 'property DiscretizedConvertibleModel.Process: ICell<GeneralizedBlackScholesProcess>'
  fullName: 'property Cephei.QL.DiscretizedConvertibleModel.Process: Cephei.Cell.Generic.ICell<QLNet.GeneralizedBlackScholesProcess>'
  type: Property
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.Process(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 100
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Process: ICell<GeneralizedBlackScholesProcess> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.GeneralizedBlackScholesProcess>
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.Process*
  attributes: []
- uid: Cephei.QL.DiscretizedConvertibleModel.PresentValue(unit)
  commentId: P:Cephei.QL.DiscretizedConvertibleModel.PresentValue
  id: PresentValue(unit)
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'property PresentValue: ICell<float>'
  nameWithType: 'property DiscretizedConvertibleModel.PresentValue: ICell<float>'
  fullName: 'property Cephei.QL.DiscretizedConvertibleModel.PresentValue: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.PresentValue(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 123
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property PresentValue: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.PresentValue*
  attributes: []
- uid: Cephei.QL.DiscretizedConvertibleModel.PreAdjustValues(unit)
  commentId: P:Cephei.QL.DiscretizedConvertibleModel.PreAdjustValues
  id: PreAdjustValues(unit)
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'property PreAdjustValues: ICell<DiscretizedConvertible>'
  nameWithType: 'property DiscretizedConvertibleModel.PreAdjustValues: ICell<DiscretizedConvertible>'
  fullName: 'property Cephei.QL.DiscretizedConvertibleModel.PreAdjustValues: Cephei.Cell.Generic.ICell<QLNet.DiscretizedConvertible>'
  type: Property
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.PreAdjustValues(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 122
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property PreAdjustValues: ICell<DiscretizedConvertible> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DiscretizedConvertible>
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.PreAdjustValues*
  attributes: []
- uid: Cephei.QL.DiscretizedConvertibleModel.PostAdjustValues(unit)
  commentId: P:Cephei.QL.DiscretizedConvertibleModel.PostAdjustValues
  id: PostAdjustValues(unit)
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'property PostAdjustValues: ICell<DiscretizedConvertible>'
  nameWithType: 'property DiscretizedConvertibleModel.PostAdjustValues: ICell<DiscretizedConvertible>'
  fullName: 'property Cephei.QL.DiscretizedConvertibleModel.PostAdjustValues: Cephei.Cell.Generic.ICell<QLNet.DiscretizedConvertible>'
  type: Property
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.PostAdjustValues(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 121
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property PostAdjustValues: ICell<DiscretizedConvertible> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DiscretizedConvertible>
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.PostAdjustValues*
  attributes: []
- uid: Cephei.QL.DiscretizedConvertibleModel.Method(unit)
  commentId: P:Cephei.QL.DiscretizedConvertibleModel.Method
  id: Method(unit)
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'property Method: ICell<Lattice>'
  nameWithType: 'property DiscretizedConvertibleModel.Method: ICell<Lattice>'
  fullName: 'property Cephei.QL.DiscretizedConvertibleModel.Method: Cephei.Cell.Generic.ICell<QLNet.Lattice>'
  type: Property
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.Method(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 118
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Method: ICell<Lattice> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Lattice>
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.Method*
  attributes: []
- uid: Cephei.QL.DiscretizedConvertibleModel.MandatoryTimes(unit)
  commentId: P:Cephei.QL.DiscretizedConvertibleModel.MandatoryTimes
  id: MandatoryTimes(unit)
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'property MandatoryTimes: ICell<List<float>>'
  nameWithType: 'property DiscretizedConvertibleModel.MandatoryTimes: ICell<List<float>>'
  fullName: 'property Cephei.QL.DiscretizedConvertibleModel.MandatoryTimes: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<float>>'
  type: Property
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.MandatoryTimes(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 110
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property MandatoryTimes: ICell<List<float>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.float>>
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.MandatoryTimes*
  attributes: []
- uid: Cephei.QL.DiscretizedConvertibleModel.DividendValues(unit)
  commentId: P:Cephei.QL.DiscretizedConvertibleModel.DividendValues
  id: DividendValues(unit)
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'property DividendValues: ICell<Vector>'
  nameWithType: 'property DiscretizedConvertibleModel.DividendValues: ICell<Vector>'
  fullName: 'property Cephei.QL.DiscretizedConvertibleModel.DividendValues: Cephei.Cell.Generic.ICell<QLNet.Vector>'
  type: Property
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.DividendValues(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 109
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property DividendValues: ICell<Vector> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.DividendValues*
  attributes: []
- uid: Cephei.QL.DiscretizedConvertibleModel.ConversionProbability(unit)
  commentId: P:Cephei.QL.DiscretizedConvertibleModel.ConversionProbability
  id: ConversionProbability(unit)
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'property ConversionProbability: ICell<Vector>'
  nameWithType: 'property DiscretizedConvertibleModel.ConversionProbability: ICell<Vector>'
  fullName: 'property Cephei.QL.DiscretizedConvertibleModel.ConversionProbability: Cephei.Cell.Generic.ICell<QLNet.Vector>'
  type: Property
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.ConversionProbability(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 108
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property ConversionProbability: ICell<Vector> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.ConversionProbability*
  attributes: []
- uid: Cephei.QL.DiscretizedConvertibleModel.ApplyConvertibility(unit)
  commentId: P:Cephei.QL.DiscretizedConvertibleModel.ApplyConvertibility
  id: ApplyConvertibility(unit)
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'property ApplyConvertibility: ICell<DiscretizedConvertible>'
  nameWithType: 'property DiscretizedConvertibleModel.ApplyConvertibility: ICell<DiscretizedConvertible>'
  fullName: 'property Cephei.QL.DiscretizedConvertibleModel.ApplyConvertibility: Cephei.Cell.Generic.ICell<QLNet.DiscretizedConvertible>'
  type: Property
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.ApplyConvertibility(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 107
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property ApplyConvertibility: ICell<DiscretizedConvertible> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DiscretizedConvertible>
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.ApplyConvertibility*
  attributes: []
- uid: Cephei.QL.DiscretizedConvertibleModel.AdjustedGrid(unit)
  commentId: P:Cephei.QL.DiscretizedConvertibleModel.AdjustedGrid
  id: AdjustedGrid(unit)
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'property AdjustedGrid: ICell<Vector>'
  nameWithType: 'property DiscretizedConvertibleModel.AdjustedGrid: ICell<Vector>'
  fullName: 'property Cephei.QL.DiscretizedConvertibleModel.AdjustedGrid: Cephei.Cell.Generic.ICell<QLNet.Vector>'
  type: Property
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.AdjustedGrid(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 104
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property AdjustedGrid: ICell<Vector> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.AdjustedGrid*
  attributes: []
- uid: Cephei.QL.DiscretizedConvertibleModel.AdjustValues(unit)
  commentId: P:Cephei.QL.DiscretizedConvertibleModel.AdjustValues
  id: AdjustValues(unit)
  parent: Cephei.QL.DiscretizedConvertibleModel
  langs:
  - csharp
  - vb
  name: 'property AdjustValues: ICell<DiscretizedConvertible>'
  nameWithType: 'property DiscretizedConvertibleModel.AdjustValues: ICell<DiscretizedConvertible>'
  fullName: 'property Cephei.QL.DiscretizedConvertibleModel.AdjustValues: Cephei.Cell.Generic.ICell<QLNet.DiscretizedConvertible>'
  type: Property
  source:
    id: Cephei.QL.DiscretizedConvertibleModel.AdjustValues(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\DiscretizedConvertibleModel.fs
    startLine: 115
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property AdjustValues: ICell<DiscretizedConvertible> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DiscretizedConvertible>
      attributes: []
  overload: Cephei.QL.DiscretizedConvertibleModel.AdjustValues*
  attributes: []
references:
- uid: Cephei.QL
  commentId: N:Cephei.QL
  name: Cephei.QL
  nameWithType: Cephei.QL
  fullName: Cephei.QL
- uid: TypeRef:System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
  spec.csharp:
  - {}
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - {}
- uid: TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: ConcurrentDictionary<string,ICell>
  nameWithType: ConcurrentDictionary<string,ICell>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Model
  name: Model
  nameWithType: Model
  fullName: Cephei.Cell.Model
  spec.csharp:
  - {}
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - {}
- uid: TypeRef:Cephei.Cell.Generic.Model`1<QLNet.DiscretizedConvertible>
  name: Model<DiscretizedConvertible>
  nameWithType: Model<DiscretizedConvertible>
  fullName: Cephei.Cell.Generic.Model<QLNet.DiscretizedConvertible>
  spec.csharp:
  - uid: Cephei.Cell.Generic.Model`1
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Generic.Model
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.DiscretizedConvertible
    name: DiscretizedConvertible
    nameWithType: DiscretizedConvertible
    fullName: QLNet.DiscretizedConvertible
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DiscretizedConvertible>
  name: ICell<DiscretizedConvertible>
  nameWithType: ICell<DiscretizedConvertible>
  fullName: Cephei.Cell.Generic.ICell<QLNet.DiscretizedConvertible>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.DiscretizedConvertible
    name: DiscretizedConvertible
    nameWithType: DiscretizedConvertible
    fullName: QLNet.DiscretizedConvertible
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.ICell
  name: ICell
  nameWithType: ICell
  fullName: Cephei.Cell.ICell
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - {}
- uid: TypeRef:Cephei.Cell.ICellEvent
  name: ICellEvent
  nameWithType: ICellEvent
  fullName: Cephei.Cell.ICellEvent
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICellEvent
    name: ICellEvent
    nameWithType: ICellEvent
    fullName: Cephei.Cell.ICellEvent
  - {}
- uid: TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: ICollection<KeyValuePair<string,ICell>>
  nameWithType: ICollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IDictionary<string,ICell>
  nameWithType: IDictionary<string,ICell>
  fullName: System.Collections.Generic.IDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IEnumerable<KeyValuePair<string,ICell>>
  nameWithType: IEnumerable<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IReadOnlyCollection<KeyValuePair<string,ICell>>
  nameWithType: IReadOnlyCollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IReadOnlyDictionary<string,ICell>
  nameWithType: IReadOnlyDictionary<string,ICell>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.ICollection
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
  spec.csharp:
  - {}
  - uid: System.Collections.ICollection
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.ICollection
  - {}
- uid: TypeRef:System.Collections.IDictionary
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
  spec.csharp:
  - {}
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
  - {}
- uid: TypeRef:System.Collections.IEnumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
  spec.csharp:
  - {}
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
  - {}
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  name: IObservable<ICell>
  nameWithType: IObservable<ICell>
  fullName: System.IObservable<Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.DiscretizedConvertible> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * ICell<DiscretizedConvertible> * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * ICell<DiscretizedConvertible> * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<QLNet.DiscretizedConvertible> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.DiscretizedConvertible
    name: DiscretizedConvertible
    nameWithType: DiscretizedConvertible
    fullName: QLNet.DiscretizedConvertible
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<QLNet.DiscretizedConvertible>
  name: IObservable<DiscretizedConvertible>
  nameWithType: IObservable<DiscretizedConvertible>
  fullName: System.IObservable<QLNet.DiscretizedConvertible>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.DiscretizedConvertible
    name: DiscretizedConvertible
    nameWithType: DiscretizedConvertible
    fullName: QLNet.DiscretizedConvertible
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.DiscretizedConvertible>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,DiscretizedConvertible>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,DiscretizedConvertible>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,QLNet.DiscretizedConvertible>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: QLNet.DiscretizedConvertible
    name: DiscretizedConvertible
    nameWithType: DiscretizedConvertible
    fullName: QLNet.DiscretizedConvertible
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  name: IObservable<KeyValuePair<string,decimal>>
  nameWithType: IObservable<KeyValuePair<string,decimal>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,decimal>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.decimal
    name: decimal
    nameWithType: decimal
    fullName: decimal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  name: IObservable<KeyValuePair<string,float>>
  nameWithType: IObservable<KeyValuePair<string,float>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,float>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  name: IObservable<KeyValuePair<string,int>>
  nameWithType: IObservable<KeyValuePair<string,int>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,int>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.int
    name: int
    nameWithType: int
    fullName: int
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObserver`1<QLNet.DiscretizedConvertible>
  name: IObserver<DiscretizedConvertible>
  nameWithType: IObserver<DiscretizedConvertible>
  fullName: System.IObserver<QLNet.DiscretizedConvertible>
  spec.csharp:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.DiscretizedConvertible
    name: DiscretizedConvertible
    nameWithType: DiscretizedConvertible
    fullName: QLNet.DiscretizedConvertible
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  name: "member Bind: ICell<'T> -> unit"
  nameWithType: "member Model.Bind: ICell<'T> -> unit"
  fullName: "member Cephei.Cell.Generic.Model.Bind: Cephei.Cell.Generic.ICell<'T> -> unit"
- uid: Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  name: 'abstract member OnCompleted: unit -> unit'
  nameWithType: 'abstract member Model.OnCompleted: unit -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnCompleted: unit -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnError(exn)
  name: 'abstract member OnError: exn -> unit'
  nameWithType: 'abstract member Model.OnError: exn -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnError: exn -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnNext('T)
  name: "abstract member OnNext: 'T -> unit"
  nameWithType: "abstract member Model.OnNext: 'T -> unit"
  fullName: "abstract member Cephei.Cell.Generic.Model.OnNext: 'T -> unit"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  name: "abstract member Subscribe: IObserver<'T> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<'T> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<'T> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: "abstract member Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  name: "abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Value(unit)
  name: "abstract property Value: 'T"
  nameWithType: "abstract property Model.Value: 'T"
  fullName: "abstract property Cephei.Cell.Generic.Model.Value: 'T"
- uid: Cephei.Cell.Model.As(string)
  name: "member As: string -> ICell<'T>"
  nameWithType: "member Model.As: string -> ICell<'T>"
  fullName: "member Cephei.Cell.Model.As: string -> Cephei.Cell.Generic.ICell<'T>"
- uid: Cephei.Cell.Model.Bind(unit)
  name: 'member Bind: unit -> unit'
  nameWithType: 'member Model.Bind: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Bind: unit -> unit'
- uid: Cephei.Cell.Model.Box(unit)
  name: 'abstract property Box: obj'
  nameWithType: 'abstract property Model.Box: obj'
  fullName: 'abstract property Cephei.Cell.Model.Box: obj'
- uid: Cephei.Cell.Model.Change()
  name: 'abstract member Change: CellChange'
  nameWithType: 'abstract member Model.Change: CellChange'
  fullName: 'abstract member Cephei.Cell.Model.Change: Cephei.Cell.CellChange'
- uid: Cephei.Cell.Model.Create(Unit -> 'T * string)
  name: "member Create: Unit -> 'T * string -> Cell<'T>"
  nameWithType: "member Model.Create: Unit -> 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.Create: Unit -> 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.CreateValue('T * string)
  name: "member CreateValue: 'T * string -> Cell<'T>"
  nameWithType: "member Model.CreateValue: 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.CreateValue: 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.Dependants(unit)
  name: 'abstract property Dependants: IEnumerable<ICellEvent>'
  nameWithType: 'abstract property Model.Dependants: IEnumerable<ICellEvent>'
  fullName: 'abstract property Cephei.Cell.Model.Dependants: System.Collections.Generic.IEnumerable<Cephei.Cell.ICellEvent>'
- uid: Cephei.Cell.Model.Dispose(unit)
  name: 'member Dispose: unit -> unit'
  nameWithType: 'member Model.Dispose: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Dispose: unit -> unit'
- uid: Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  name: 'member GetOrAdd: string * ICell -> ICell'
  nameWithType: 'member Model.GetOrAdd: string * ICell -> ICell'
  fullName: 'member Cephei.Cell.Model.GetOrAdd: string * Cephei.Cell.ICell -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.HasFunction(unit)
  name: 'abstract property HasFunction: bool'
  nameWithType: 'abstract property Model.HasFunction: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasFunction: bool'
- uid: Cephei.Cell.Model.HasValue(unit)
  name: 'abstract property HasValue: bool'
  nameWithType: 'abstract property Model.HasValue: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasValue: bool'
- uid: Cephei.Cell.Model.Item(string)
  name: 'property Item: string -> ICell'
  nameWithType: 'property Model.Item: string -> ICell'
  fullName: 'property Cephei.Cell.Model.Item: string -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Mnemonic(unit)
  name: 'abstract property Mnemonic: string'
  nameWithType: 'abstract property Model.Mnemonic: string'
  fullName: 'abstract property Cephei.Cell.Model.Mnemonic: string'
- uid: Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  name: 'abstract member OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  nameWithType: 'abstract member Model.OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  fullName: 'abstract member Cephei.Cell.Model.OnChange: Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession -> unit'
- uid: Cephei.Cell.Model.Parent(unit)
  name: 'abstract property Parent: ICell'
  nameWithType: 'abstract property Model.Parent: ICell'
  fullName: 'abstract property Cephei.Cell.Model.Parent: Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  name: 'abstract member Subscribe: IObserver<ICell> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ICell> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ICell> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: 'abstract member Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,float>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,int>> -> System.IDisposable'
- uid: Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  name: 'member TryAdd: string * ICell -> bool'
  nameWithType: 'member Model.TryAdd: string * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryAdd: string * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  name: 'member TryRemove: string * ICell byref -> bool'
  nameWithType: 'member Model.TryRemove: string * ICell byref -> bool'
  fullName: 'member Cephei.Cell.Model.TryRemove: string * Cephei.Cell.ICell byref -> bool'
- uid: Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  name: 'member TryUpdate: string * ICell * ICell -> bool'
  nameWithType: 'member Model.TryUpdate: string * ICell * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryUpdate: string * Cephei.Cell.ICell * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  name: 'abstract member add_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.add_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.add_Change: Cephei.Cell.CellChange -> unit'
- uid: Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  name: 'abstract member remove_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.remove_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.remove_Change: Cephei.Cell.CellChange -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  name: 'abstract member Clear: unit -> unit'
  nameWithType: 'abstract member ConcurrentDictionary.Clear: unit -> unit'
  fullName: 'abstract member System.Collections.Concurrent.ConcurrentDictionary.Clear: unit -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  name: "abstract member ContainsKey: 'TKey -> bool"
  nameWithType: "abstract member ConcurrentDictionary.ContainsKey: 'TKey -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.ContainsKey: 'TKey -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  name: 'abstract property Count: int'
  nameWithType: 'abstract property ConcurrentDictionary.Count: int'
  fullName: 'abstract property System.Collections.Concurrent.ConcurrentDictionary.Count: int'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  name: "abstract member GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  nameWithType: "abstract member ConcurrentDictionary.GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.GetEnumerator: unit -> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<'TKey,'TValue>>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  name: "member GetOrAdd: 'TKey * 'TValue -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  name: "member GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * System.Func<'TKey,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  name: 'property IsEmpty: bool'
  nameWithType: 'property ConcurrentDictionary.IsEmpty: bool'
  fullName: 'property System.Collections.Concurrent.ConcurrentDictionary.IsEmpty: bool'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  name: "abstract property Item: 'TKey -> 'TValue"
  nameWithType: "abstract property ConcurrentDictionary.Item: 'TKey -> 'TValue"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Item: 'TKey -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  name: "abstract property Keys: ICollection<'TKey>"
  nameWithType: "abstract property ConcurrentDictionary.Keys: ICollection<'TKey>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Keys: System.Collections.Generic.ICollection<'TKey>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  name: "member ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  nameWithType: "member ConcurrentDictionary.ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.ToArray: unit -> System.Collections.Generic.KeyValuePair<'TKey,'TValue> []"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  name: "member TryAdd: 'TKey * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  name: "abstract member TryGetValue: 'TKey * 'TValue byref -> bool"
  nameWithType: "abstract member ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  name: "member TryRemove: 'TKey * 'TValue byref -> bool"
  nameWithType: "member ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  name: "member TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  name: "abstract property Values: ICollection<'TValue>"
  nameWithType: "abstract property ConcurrentDictionary.Values: ICollection<'TValue>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Values: System.Collections.Generic.ICollection<'TValue>"
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.ConvertibleBond.option.Arguments>
  name: ICell<Arguments>
  nameWithType: ICell<Arguments>
  fullName: Cephei.Cell.Generic.ICell<QLNet.ConvertibleBond.option.Arguments>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.ConvertibleBond.option.Arguments
    name: Arguments
    nameWithType: Arguments
    fullName: QLNet.ConvertibleBond.option.Arguments
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.GeneralizedBlackScholesProcess>
  name: ICell<GeneralizedBlackScholesProcess>
  nameWithType: ICell<GeneralizedBlackScholesProcess>
  fullName: Cephei.Cell.Generic.ICell<QLNet.GeneralizedBlackScholesProcess>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.GeneralizedBlackScholesProcess
    name: GeneralizedBlackScholesProcess
    nameWithType: GeneralizedBlackScholesProcess
    fullName: QLNet.GeneralizedBlackScholesProcess
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.TimeGrid>
  name: ICell<TimeGrid>
  nameWithType: ICell<TimeGrid>
  fullName: Cephei.Cell.Generic.ICell<QLNet.TimeGrid>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.TimeGrid
    name: TimeGrid
    nameWithType: TimeGrid
    fullName: QLNet.TimeGrid
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.DiscretizedConvertibleModel.#ctor*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.#ctor*
  name: ( .ctor )
  nameWithType: DiscretizedConvertibleModel.( .ctor )
  fullName: Cephei.QL.DiscretizedConvertibleModel
- uid: TypeRef:Cephei.QL.DiscretizedConvertibleModel
  name: DiscretizedConvertibleModel
  nameWithType: DiscretizedConvertibleModel
  fullName: Cephei.QL.DiscretizedConvertibleModel
  spec.csharp:
  - {}
  - uid: Cephei.QL.DiscretizedConvertibleModel
    name: DiscretizedConvertibleModel
    nameWithType: DiscretizedConvertibleModel
    fullName: Cephei.QL.DiscretizedConvertibleModel
  - {}
- uid: Cephei.QL.DiscretizedConvertibleModel.AddCoupon*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.AddCoupon*
  name: AddCoupon
  nameWithType: DiscretizedConvertibleModel.AddCoupon
  fullName: Cephei.QL.DiscretizedConvertibleModel.AddCoupon
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
  name: ICell<int>
  nameWithType: ICell<int>
  fullName: Cephei.Cell.Generic.ICell<int>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.int
    name: int
    nameWithType: int
    fullName: int
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.DiscretizedConvertibleModel.ApplyCallability*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.ApplyCallability*
  name: ApplyCallability
  nameWithType: DiscretizedConvertibleModel.ApplyCallability
  fullName: Cephei.QL.DiscretizedConvertibleModel.ApplyCallability
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
  name: ICell<bool>
  nameWithType: ICell<bool>
  fullName: Cephei.Cell.Generic.ICell<bool>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.bool
    name: bool
    nameWithType: bool
    fullName: bool
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.DiscretizedConvertibleModel.Initialize*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.Initialize*
  name: Initialize
  nameWithType: DiscretizedConvertibleModel.Initialize
  fullName: Cephei.QL.DiscretizedConvertibleModel.Initialize
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Lattice>
  name: ICell<Lattice>
  nameWithType: ICell<Lattice>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Lattice>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Lattice
    name: Lattice
    nameWithType: Lattice
    fullName: QLNet.Lattice
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
  name: ICell<double>
  nameWithType: ICell<double>
  fullName: Cephei.Cell.Generic.ICell<double>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.double
    name: double
    nameWithType: double
    fullName: double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.DiscretizedConvertibleModel.PartialRollback*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.PartialRollback*
  name: PartialRollback
  nameWithType: DiscretizedConvertibleModel.PartialRollback
  fullName: Cephei.QL.DiscretizedConvertibleModel.PartialRollback
- uid: Cephei.QL.DiscretizedConvertibleModel.Reset*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.Reset*
  name: Reset
  nameWithType: DiscretizedConvertibleModel.Reset
  fullName: Cephei.QL.DiscretizedConvertibleModel.Reset
- uid: Cephei.QL.DiscretizedConvertibleModel.Rollback*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.Rollback*
  name: Rollback
  nameWithType: DiscretizedConvertibleModel.Rollback
  fullName: Cephei.QL.DiscretizedConvertibleModel.Rollback
- uid: Cephei.QL.DiscretizedConvertibleModel.SetTime*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.SetTime*
  name: SetTime
  nameWithType: DiscretizedConvertibleModel.SetTime
  fullName: Cephei.QL.DiscretizedConvertibleModel.SetTime
- uid: Cephei.QL.DiscretizedConvertibleModel.SetValues*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.SetValues*
  name: SetValues
  nameWithType: DiscretizedConvertibleModel.SetValues
  fullName: Cephei.QL.DiscretizedConvertibleModel.SetValues
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
  name: ICell<Vector>
  nameWithType: ICell<Vector>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Vector>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Vector
    name: Vector
    nameWithType: Vector
    fullName: QLNet.Vector
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.DiscretizedConvertibleModel.grid*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.grid*
  name: grid
  nameWithType: DiscretizedConvertibleModel.grid
  fullName: Cephei.QL.DiscretizedConvertibleModel.grid
- uid: Cephei.QL.DiscretizedConvertibleModel.args*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.args*
  name: args
  nameWithType: DiscretizedConvertibleModel.args
  fullName: Cephei.QL.DiscretizedConvertibleModel.args
- uid: Cephei.QL.DiscretizedConvertibleModel.Values*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.Values*
  name: Values
  nameWithType: DiscretizedConvertibleModel.Values
  fullName: Cephei.QL.DiscretizedConvertibleModel.Values
- uid: Cephei.QL.DiscretizedConvertibleModel.Time*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.Time*
  name: Time
  nameWithType: DiscretizedConvertibleModel.Time
  fullName: Cephei.QL.DiscretizedConvertibleModel.Time
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
  name: ICell<float>
  nameWithType: ICell<float>
  fullName: Cephei.Cell.Generic.ICell<float>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.DiscretizedConvertibleModel.SpreadAdjustedRate*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.SpreadAdjustedRate*
  name: SpreadAdjustedRate
  nameWithType: DiscretizedConvertibleModel.SpreadAdjustedRate
  fullName: Cephei.QL.DiscretizedConvertibleModel.SpreadAdjustedRate
- uid: Cephei.QL.DiscretizedConvertibleModel.Process1*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.Process1*
  name: Process1
  nameWithType: DiscretizedConvertibleModel.Process1
  fullName: Cephei.QL.DiscretizedConvertibleModel.Process1
- uid: Cephei.QL.DiscretizedConvertibleModel.Process*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.Process*
  name: Process
  nameWithType: DiscretizedConvertibleModel.Process
  fullName: Cephei.QL.DiscretizedConvertibleModel.Process
- uid: Cephei.QL.DiscretizedConvertibleModel.PresentValue*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.PresentValue*
  name: PresentValue
  nameWithType: DiscretizedConvertibleModel.PresentValue
  fullName: Cephei.QL.DiscretizedConvertibleModel.PresentValue
- uid: Cephei.QL.DiscretizedConvertibleModel.PreAdjustValues*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.PreAdjustValues*
  name: PreAdjustValues
  nameWithType: DiscretizedConvertibleModel.PreAdjustValues
  fullName: Cephei.QL.DiscretizedConvertibleModel.PreAdjustValues
- uid: Cephei.QL.DiscretizedConvertibleModel.PostAdjustValues*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.PostAdjustValues*
  name: PostAdjustValues
  nameWithType: DiscretizedConvertibleModel.PostAdjustValues
  fullName: Cephei.QL.DiscretizedConvertibleModel.PostAdjustValues
- uid: Cephei.QL.DiscretizedConvertibleModel.Method*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.Method*
  name: Method
  nameWithType: DiscretizedConvertibleModel.Method
  fullName: Cephei.QL.DiscretizedConvertibleModel.Method
- uid: Cephei.QL.DiscretizedConvertibleModel.MandatoryTimes*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.MandatoryTimes*
  name: MandatoryTimes
  nameWithType: DiscretizedConvertibleModel.MandatoryTimes
  fullName: Cephei.QL.DiscretizedConvertibleModel.MandatoryTimes
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.float>>
  name: ICell<List<float>>
  nameWithType: ICell<List<float>>
  fullName: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<float>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.DiscretizedConvertibleModel.DividendValues*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.DividendValues*
  name: DividendValues
  nameWithType: DiscretizedConvertibleModel.DividendValues
  fullName: Cephei.QL.DiscretizedConvertibleModel.DividendValues
- uid: Cephei.QL.DiscretizedConvertibleModel.ConversionProbability*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.ConversionProbability*
  name: ConversionProbability
  nameWithType: DiscretizedConvertibleModel.ConversionProbability
  fullName: Cephei.QL.DiscretizedConvertibleModel.ConversionProbability
- uid: Cephei.QL.DiscretizedConvertibleModel.ApplyConvertibility*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.ApplyConvertibility*
  name: ApplyConvertibility
  nameWithType: DiscretizedConvertibleModel.ApplyConvertibility
  fullName: Cephei.QL.DiscretizedConvertibleModel.ApplyConvertibility
- uid: Cephei.QL.DiscretizedConvertibleModel.AdjustedGrid*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.AdjustedGrid*
  name: AdjustedGrid
  nameWithType: DiscretizedConvertibleModel.AdjustedGrid
  fullName: Cephei.QL.DiscretizedConvertibleModel.AdjustedGrid
- uid: Cephei.QL.DiscretizedConvertibleModel.AdjustValues*
  commentId: Overload:Cephei.QL.DiscretizedConvertibleModel.AdjustValues*
  name: AdjustValues
  nameWithType: DiscretizedConvertibleModel.AdjustValues
  fullName: Cephei.QL.DiscretizedConvertibleModel.AdjustValues
