### YamlMime:ManagedReference
items:
- uid: Cephei.Cell.Generic.ICell`1
  commentId: T:Cephei.Cell.Generic.ICell`1
  id: ICell`1
  parent: Cephei.Cell.Generic
  children:
  - Cephei.Cell.Generic.ICell`1.Value
  langs:
  - csharp
  - vb
  name: ICell<T>
  nameWithType: ICell<T>
  fullName: Cephei.Cell.Generic.ICell<T>
  type: Interface
  source:
    remote:
      path: Cephei.Cell/Generic/ICell.cs
      branch: master
      repo: https://github.com/channell/Cephei
    id: ICell
    path: ../Cephei.Cell/Generic/ICell.cs
    startLine: 11
  assemblies:
  - Cephei - Backup.Cell
  namespace: Cephei.Cell.Generic
  summary: "\nCells have a single interface, but multiple implementations depending on the\nsession semantics and/or optimized construction\n"
  example: []
  syntax:
    content: 'public interface ICell<T> : ICell, ICellEvent, IObservable<T>, IObservable<KeyValuePair<ISession, KeyValuePair<string, T>>>, IObservable<Tuple<ISession, ICell<T>, CellEvent, ICell, DateTime>>, IObserver<T>'
    typeParameters:
    - id: T
    content.vb: >-
      Public Interface ICell(Of T)
          Inherits ICell, IObservable(Of T), IObservable(Of KeyValuePair(Of ISession, KeyValuePair(Of String, T))), IObservable(Of Tuple(Of ISession, ICell(Of T), CellEvent, ICell, DateTime)), IObserver(Of T)
  inheritedMembers:
  - Cephei.Cell.ICell.Parent
  - Cephei.Cell.ICell.Dependants
  - Cephei.Cell.ICell.Mnemonic
  - Cephei.Cell.ICell.Change
  - Cephei.Cell.ICell.HasFunction
  - Cephei.Cell.ICell.HasValue
  - Cephei.Cell.ICell.Box
  - Cephei.Cell.ICellEvent.OnChange(Cephei.Cell.CellEvent,Cephei.Cell.ICellEvent,DateTime,Cephei.Cell.ISession)
  nameWithType.vb: ICell(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Cephei.Cell.Generic.ICell(Of T)
  name.vb: ICell(Of T)
- uid: Cephei.Cell.Generic.ICell`1.Value
  commentId: P:Cephei.Cell.Generic.ICell`1.Value
  id: Value
  parent: Cephei.Cell.Generic.ICell`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ICell<T>.Value
  fullName: Cephei.Cell.Generic.ICell<T>.Value
  type: Property
  source:
    remote:
      path: Cephei.Cell/Generic/ICell.cs
      branch: master
      repo: https://github.com/channell/Cephei
    id: Value
    path: ../Cephei.Cell/Generic/ICell.cs
    startLine: 21
  assemblies:
  - Cephei - Backup.Cell
  namespace: Cephei.Cell.Generic
  summary: "\nEither the Value of the Cell, or the appropriate value for the current session\n"
  example: []
  syntax:
    content: T Value { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Property Value As T
  overload: Cephei.Cell.Generic.ICell`1.Value*
  nameWithType.vb: ICell(Of T).Value
  modifiers.csharp:
  - get
  - set
  fullName.vb: Cephei.Cell.Generic.ICell(Of T).Value
references:
- uid: Cephei.Cell.Generic
  commentId: N:Cephei.Cell.Generic
  name: Cephei.Cell.Generic
  nameWithType: Cephei.Cell.Generic
  fullName: Cephei.Cell.Generic
- uid: Cephei.Cell.ICell.Parent
  commentId: P:Cephei.Cell.ICell.Parent
  parent: Cephei.Cell.ICell
  name: Parent
  nameWithType: ICell.Parent
  fullName: Cephei.Cell.ICell.Parent
- uid: Cephei.Cell.ICell.Dependants
  commentId: P:Cephei.Cell.ICell.Dependants
  parent: Cephei.Cell.ICell
  name: Dependants
  nameWithType: ICell.Dependants
  fullName: Cephei.Cell.ICell.Dependants
- uid: Cephei.Cell.ICell.Mnemonic
  commentId: P:Cephei.Cell.ICell.Mnemonic
  parent: Cephei.Cell.ICell
  name: Mnemonic
  nameWithType: ICell.Mnemonic
  fullName: Cephei.Cell.ICell.Mnemonic
- uid: Cephei.Cell.ICell.Change
  commentId: E:Cephei.Cell.ICell.Change
  parent: Cephei.Cell.ICell
  name: Change
  nameWithType: ICell.Change
  fullName: Cephei.Cell.ICell.Change
- uid: Cephei.Cell.ICell.HasFunction
  commentId: P:Cephei.Cell.ICell.HasFunction
  parent: Cephei.Cell.ICell
  name: HasFunction
  nameWithType: ICell.HasFunction
  fullName: Cephei.Cell.ICell.HasFunction
- uid: Cephei.Cell.ICell.HasValue
  commentId: P:Cephei.Cell.ICell.HasValue
  parent: Cephei.Cell.ICell
  name: HasValue
  nameWithType: ICell.HasValue
  fullName: Cephei.Cell.ICell.HasValue
- uid: Cephei.Cell.ICell.Box
  commentId: P:Cephei.Cell.ICell.Box
  parent: Cephei.Cell.ICell
  name: Box
  nameWithType: ICell.Box
  fullName: Cephei.Cell.ICell.Box
- uid: Cephei.Cell.ICellEvent.OnChange(Cephei.Cell.CellEvent,Cephei.Cell.ICellEvent,DateTime,Cephei.Cell.ISession)
  commentId: M:Cephei.Cell.ICellEvent.OnChange(Cephei.Cell.CellEvent,Cephei.Cell.ICellEvent,DateTime,Cephei.Cell.ISession)
  parent: Cephei.Cell.ICellEvent
  isExternal: true
  name: OnChange(CellEvent, ICellEvent, DateTime, ISession)
  nameWithType: ICellEvent.OnChange(CellEvent, ICellEvent, DateTime, ISession)
  fullName: Cephei.Cell.ICellEvent.OnChange(Cephei.Cell.CellEvent, Cephei.Cell.ICellEvent, DateTime, Cephei.Cell.ISession)
  spec.csharp:
  - uid: Cephei.Cell.ICellEvent.OnChange(Cephei.Cell.CellEvent,Cephei.Cell.ICellEvent,DateTime,Cephei.Cell.ISession)
    name: OnChange
    nameWithType: ICellEvent.OnChange
    fullName: Cephei.Cell.ICellEvent.OnChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.ICellEvent
    name: ICellEvent
    nameWithType: ICellEvent
    fullName: Cephei.Cell.ICellEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cephei.Cell.ICellEvent.OnChange(Cephei.Cell.CellEvent,Cephei.Cell.ICellEvent,DateTime,Cephei.Cell.ISession)
    name: OnChange
    nameWithType: ICellEvent.OnChange
    fullName: Cephei.Cell.ICellEvent.OnChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.ICellEvent
    name: ICellEvent
    nameWithType: ICellEvent
    fullName: Cephei.Cell.ICellEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: )
    nameWithType: )
    fullName: )
- uid: Cephei.Cell.ICell
  commentId: T:Cephei.Cell.ICell
  parent: Cephei.Cell
  name: ICell
  nameWithType: ICell
  fullName: Cephei.Cell.ICell
- uid: Cephei.Cell.ICellEvent
  commentId: T:Cephei.Cell.ICellEvent
  parent: Cephei.Cell
  name: ICellEvent
  nameWithType: ICellEvent
  fullName: Cephei.Cell.ICellEvent
- uid: Cephei.Cell
  commentId: N:Cephei.Cell
  name: Cephei.Cell
  nameWithType: Cephei.Cell
  fullName: Cephei.Cell
- uid: Cephei.Cell.Generic.ICell`1.Value*
  commentId: Overload:Cephei.Cell.Generic.ICell`1.Value
  name: Value
  nameWithType: ICell<T>.Value
  fullName: Cephei.Cell.Generic.ICell<T>.Value
  nameWithType.vb: ICell(Of T).Value
  fullName.vb: Cephei.Cell.Generic.ICell(Of T).Value
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
