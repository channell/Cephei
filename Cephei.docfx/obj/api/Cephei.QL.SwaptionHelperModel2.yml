### YamlMime:ManagedReference
items:
- uid: Cephei.QL.SwaptionHelperModel2
  commentId: T:Cephei.QL.SwaptionHelperModel2
  id: SwaptionHelperModel2
  parent: Cephei.QL
  children:
  - Cephei.QL.SwaptionHelperModel2.#ctor(Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Period> * Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>> * Cephei.Cell.Generic.ICell<QLNet.IborIndex> * Cephei.Cell.Generic.ICell<QLNet.Period> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.YieldTermStructure>> * Cephei.Cell.Generic.ICell<QLNet.CalibrationHelper.CalibrationErrorType> * Cephei.Cell.Generic.ICell<System.Nullable<double>> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.VolatilityType> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.IPricingEngine> * Cephei.Cell.Generic.ICell<QLNet.Date>)
  - Cephei.QL.SwaptionHelperModel2.AddTimesTo(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>>)
  - Cephei.QL.SwaptionHelperModel2.BlackPrice(Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.SwaptionHelperModel2.CalibrationError(unit)
  - Cephei.QL.SwaptionHelperModel2.errorType(unit)
  - Cephei.QL.SwaptionHelperModel2.EvaluationDate(unit)
  - Cephei.QL.SwaptionHelperModel2.exerciseDate(unit)
  - Cephei.QL.SwaptionHelperModel2.fixedLegDayCounter(unit)
  - Cephei.QL.SwaptionHelperModel2.fixedLegTenor(unit)
  - Cephei.QL.SwaptionHelperModel2.floatingLegDayCounter(unit)
  - Cephei.QL.SwaptionHelperModel2.ImpliedVolatility(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.SwaptionHelperModel2.index(unit)
  - Cephei.QL.SwaptionHelperModel2.length(unit)
  - Cephei.QL.SwaptionHelperModel2.MarketValue(unit)
  - Cephei.QL.SwaptionHelperModel2.ModelValue(unit)
  - Cephei.QL.SwaptionHelperModel2.nominal(unit)
  - Cephei.QL.SwaptionHelperModel2.PricingEngine(unit)
  - Cephei.QL.SwaptionHelperModel2.SetPricingEngine(Cephei.Cell.Generic.ICell<QLNet.IPricingEngine>)
  - Cephei.QL.SwaptionHelperModel2.shift(unit)
  - Cephei.QL.SwaptionHelperModel2.strike(unit)
  - Cephei.QL.SwaptionHelperModel2.Swaption(unit)
  - Cephei.QL.SwaptionHelperModel2.termStructure(unit)
  - Cephei.QL.SwaptionHelperModel2.Type(unit)
  - Cephei.QL.SwaptionHelperModel2.UnderlyingSwap(unit)
  - Cephei.QL.SwaptionHelperModel2.volatility(unit)
  - Cephei.QL.SwaptionHelperModel2.Volatility(unit)
  - Cephei.QL.SwaptionHelperModel2.VolatilityType(unit)
  langs:
  - csharp
  - vb
  name: SwaptionHelperModel2
  nameWithType: Cephei.QL.SwaptionHelperModel2
  fullName: Cephei.QL.SwaptionHelperModel2
  type: Class
  source:
    id: Cephei.QL.SwaptionHelperModel2
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 231
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: >-
      [<AutoSerializable(true)>]

      type SwaptionHelperModel2 (exerciseDate:ICell<Date>, length:ICell<Period>, volatility:ICell<Handle<Quote>>, index:ICell<IborIndex>, fixedLegTenor:ICell<Period>, fixedLegDayCounter:ICell<DayCounter>, floatingLegDayCounter:ICell<DayCounter>, termStructure:ICell<Handle<YieldTermStructure>>, errorType:ICell<CalibrationErrorType>, strike:ICell<Nullable<double>>, nominal:ICell<double>, Type:ICell<VolatilityType>, shift:ICell<double>, pricingEngine:ICell<IPricingEngine>, evaluationDate:ICell<Date>)
          inherit Model<SwaptionHelper>
          interface IDictionary<string,ICell>
          interface ICollection<KeyValuePair<string,ICell>>
          interface IReadOnlyDictionary<string,ICell>
          interface IReadOnlyCollection<KeyValuePair<string,ICell>>
          interface IEnumerable<KeyValuePair<string,ICell>>
          interface IDictionary
          interface ICollection
          interface IEnumerable
          interface IObservable<ICell>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
          interface IObservable<ISession * Model * CellEvent * ICell * DateTime>
          interface IObservable<KeyValuePair<string,float>>
          interface IObservable<KeyValuePair<string,int>>
          interface IObservable<KeyValuePair<string,decimal>>
          interface ICell<SwaptionHelper>
          interface ICell
          interface ICellEvent
          interface IObservable<SwaptionHelper>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,SwaptionHelper>>>
          interface IObservable<ISession * ICell<SwaptionHelper> * CellEvent * ICell * DateTime>
          interface IObserver<SwaptionHelper>
    parameters:
    - id: exerciseDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    - id: length
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
      attributes: []
    - id: volatility
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Handle`1<QLNet.Quote>>
      attributes: []
    - id: index
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IborIndex>
      attributes: []
    - id: fixedLegTenor
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
      attributes: []
    - id: fixedLegDayCounter
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
    - id: floatingLegDayCounter
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
    - id: termStructure
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Handle`1<QLNet.YieldTermStructure>>
      attributes: []
    - id: errorType
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.CalibrationHelper.CalibrationErrorType>
      attributes: []
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Nullable`1<Microsoft.FSharp.Core.double>>
      attributes: []
    - id: nominal
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: Type
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.VolatilityType>
      attributes: []
    - id: shift
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: pricingEngine
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IPricingEngine>
      attributes: []
    - id: evaluationDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    typeParameters: []
  inheritance:
  - TypeRef:System.Object
  - TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:Cephei.Cell.Model
  - TypeRef:Cephei.Cell.Generic.Model`1<QLNet.SwaptionHelper>
  implements:
  - TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.SwaptionHelper>
  - TypeRef:Cephei.Cell.ICell
  - TypeRef:Cephei.Cell.ICellEvent
  - TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.ICollection
  - TypeRef:System.Collections.IDictionary
  - TypeRef:System.Collections.IEnumerable
  - TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.SwaptionHelper> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<QLNet.SwaptionHelper>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.SwaptionHelper>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  - TypeRef:System.IObserver`1<QLNet.SwaptionHelper>
  inheritedMembers:
  - Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  - Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  - Cephei.Cell.Generic.Model`1.OnError(exn)
  - Cephei.Cell.Generic.Model`1.OnNext('T)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  - Cephei.Cell.Generic.Model`1.Value(unit)
  - Cephei.Cell.Model.As(string)
  - Cephei.Cell.Model.Bind(unit)
  - Cephei.Cell.Model.Box(unit)
  - Cephei.Cell.Model.Change()
  - Cephei.Cell.Model.Create(Unit -> 'T * string)
  - Cephei.Cell.Model.CreateValue('T * string)
  - Cephei.Cell.Model.Dependants(unit)
  - Cephei.Cell.Model.Dispose(unit)
  - Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.HasFunction(unit)
  - Cephei.Cell.Model.HasValue(unit)
  - Cephei.Cell.Model.Item(string)
  - Cephei.Cell.Model.Mnemonic(unit)
  - Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  - Cephei.Cell.Model.Parent(unit)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  - Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  - Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  - Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  - Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  attributes:
  - type: Microsoft.FSharp.Core.AutoSerializableAttribute
    arguments:
    - type: System.Boolean
      value: true
    namedArguments: []
- uid: Cephei.QL.SwaptionHelperModel2.#ctor(Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Period> * Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>> * Cephei.Cell.Generic.ICell<QLNet.IborIndex> * Cephei.Cell.Generic.ICell<QLNet.Period> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.YieldTermStructure>> * Cephei.Cell.Generic.ICell<QLNet.CalibrationHelper.CalibrationErrorType> * Cephei.Cell.Generic.ICell<System.Nullable<double>> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.VolatilityType> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.IPricingEngine> * Cephei.Cell.Generic.ICell<QLNet.Date>)
  commentId: M:Cephei.QL.SwaptionHelperModel2.#ctor(Cephei.Cell.Generic.ICell{QLNet.Date},Cephei.Cell.Generic.ICell{QLNet.Period},Cephei.Cell.Generic.ICell{QLNet.Handle{QLNet.Quote}},Cephei.Cell.Generic.ICell{QLNet.IborIndex},Cephei.Cell.Generic.ICell{QLNet.Period},Cephei.Cell.Generic.ICell{QLNet.DayCounter},Cephei.Cell.Generic.ICell{QLNet.DayCounter},Cephei.Cell.Generic.ICell{QLNet.Handle{QLNet.YieldTermStructure}},Cephei.Cell.Generic.ICell{QLNet.CalibrationHelper.CalibrationErrorType},Cephei.Cell.Generic.ICell{System.Nullable{System.Double}},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{QLNet.VolatilityType},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{QLNet.IPricingEngine},Cephei.Cell.Generic.ICell{QLNet.Date})
  id: '#ctor(Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Period> * Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>> * Cephei.Cell.Generic.ICell<QLNet.IborIndex> * Cephei.Cell.Generic.ICell<QLNet.Period> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.YieldTermStructure>> * Cephei.Cell.Generic.ICell<QLNet.CalibrationHelper.CalibrationErrorType> * Cephei.Cell.Generic.ICell<System.Nullable<double>> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.VolatilityType> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.IPricingEngine> * Cephei.Cell.Generic.ICell<QLNet.Date>)'
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'new: ICell<Date> * ICell<Period> * ICell<Handle<Quote>> * ICell<IborIndex> * ICell<Period> * ICell<DayCounter> * ICell<DayCounter> * ICell<Handle<YieldTermStructure>> * ICell<CalibrationErrorType> * ICell<Nullable<double>> * ICell<double> * ICell<VolatilityType> * ICell<double> * ICell<IPricingEngine> * ICell<Date> -> SwaptionHelperModel2'
  nameWithType: 'new: ICell<Date> * ICell<Period> * ICell<Handle<Quote>> * ICell<IborIndex> * ICell<Period> * ICell<DayCounter> * ICell<DayCounter> * ICell<Handle<YieldTermStructure>> * ICell<CalibrationErrorType> * ICell<Nullable<double>> * ICell<double> * ICell<VolatilityType> * ICell<double> * ICell<IPricingEngine> * ICell<Date> -> SwaptionHelperModel2'
  fullName: 'new: Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Period> * Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>> * Cephei.Cell.Generic.ICell<QLNet.IborIndex> * Cephei.Cell.Generic.ICell<QLNet.Period> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.YieldTermStructure>> * Cephei.Cell.Generic.ICell<QLNet.CalibrationHelper.CalibrationErrorType> * Cephei.Cell.Generic.ICell<System.Nullable<double>> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.VolatilityType> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.IPricingEngine> * Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.QL.SwaptionHelperModel2'
  type: Constructor
  source:
    id: Cephei.QL.SwaptionHelperModel2.#ctor(Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Period> * Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>> * Cephei.Cell.Generic.ICell<QLNet.IborIndex> * Cephei.Cell.Generic.ICell<QLNet.Period> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.YieldTermStructure>> * Cephei.Cell.Generic.ICell<QLNet.CalibrationHelper.CalibrationErrorType> * Cephei.Cell.Generic.ICell<System.Nullable<double>> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.VolatilityType> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.IPricingEngine> * Cephei.Cell.Generic.ICell<QLNet.Date>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 231
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  summary: Implicit constructor.
  syntax:
    content: 'new: exerciseDate:ICell<Date> * length:ICell<Period> * volatility:ICell<Handle<Quote>> * index:ICell<IborIndex> * fixedLegTenor:ICell<Period> * fixedLegDayCounter:ICell<DayCounter> * floatingLegDayCounter:ICell<DayCounter> * termStructure:ICell<Handle<YieldTermStructure>> * errorType:ICell<CalibrationErrorType> * strike:ICell<Nullable<double>> * nominal:ICell<double> * Type:ICell<VolatilityType> * shift:ICell<double> * pricingEngine:ICell<IPricingEngine> * evaluationDate:ICell<Date> -> SwaptionHelperModel2'
    parameters:
    - id: exerciseDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    - id: length
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
      attributes: []
    - id: volatility
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Handle`1<QLNet.Quote>>
      attributes: []
    - id: index
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IborIndex>
      attributes: []
    - id: fixedLegTenor
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
      attributes: []
    - id: fixedLegDayCounter
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
    - id: floatingLegDayCounter
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
    - id: termStructure
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Handle`1<QLNet.YieldTermStructure>>
      attributes: []
    - id: errorType
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.CalibrationHelper.CalibrationErrorType>
      attributes: []
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Nullable`1<Microsoft.FSharp.Core.double>>
      attributes: []
    - id: nominal
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: Type
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.VolatilityType>
      attributes: []
    - id: shift
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: pricingEngine
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IPricingEngine>
      attributes: []
    - id: evaluationDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.QL.SwaptionHelperModel2
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.#ctor*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.AddTimesTo(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>>)
  commentId: M:Cephei.QL.SwaptionHelperModel2.AddTimesTo(Cephei.Cell.Generic.ICell{System.Collections.Generic.List{System.Double}})
  id: AddTimesTo(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>>)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'member AddTimesTo: ICell<List<double>> -> ICell<SwaptionHelper>'
  nameWithType: 'member SwaptionHelperModel2.AddTimesTo: ICell<List<double>> -> ICell<SwaptionHelper>'
  fullName: 'member Cephei.QL.SwaptionHelperModel2.AddTimesTo: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> -> Cephei.Cell.Generic.ICell<QLNet.SwaptionHelper>'
  type: Method
  source:
    id: Cephei.QL.SwaptionHelperModel2.AddTimesTo(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 309
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member AddTimesTo: times:ICell<List<double>> -> ICell<SwaptionHelper>'
    parameters:
    - id: times
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.double>>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.SwaptionHelper>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.AddTimesTo*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.BlackPrice(Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.SwaptionHelperModel2.BlackPrice(Cephei.Cell.Generic.ICell{System.Double})
  id: BlackPrice(Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'member BlackPrice: ICell<double> -> ICell<float>'
  nameWithType: 'member SwaptionHelperModel2.BlackPrice: ICell<double> -> ICell<float>'
  fullName: 'member Cephei.QL.SwaptionHelperModel2.BlackPrice: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.SwaptionHelperModel2.BlackPrice(Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 311
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member BlackPrice: sigma:ICell<double> -> ICell<float>'
    parameters:
    - id: sigma
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.BlackPrice*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.ImpliedVolatility(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.SwaptionHelperModel2.ImpliedVolatility(Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Int32},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Double})
  id: ImpliedVolatility(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'member ImpliedVolatility: ICell<double> -> ICell<double> -> ICell<int> -> ICell<double> -> ICell<double> -> ICell<float>'
  nameWithType: 'member SwaptionHelperModel2.ImpliedVolatility: ICell<double> -> ICell<double> -> ICell<int> -> ICell<double> -> ICell<double> -> ICell<float>'
  fullName: 'member Cephei.QL.SwaptionHelperModel2.ImpliedVolatility: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.SwaptionHelperModel2.ImpliedVolatility(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<int> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 317
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member ImpliedVolatility: targetValue:ICell<double> -> accuracy:ICell<double> -> maxEvaluations:ICell<int> -> minVol:ICell<double> -> maxVol:ICell<double> -> ICell<float>'
    parameters:
    - id: targetValue
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: accuracy
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: maxEvaluations
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
    - id: minVol
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: maxVol
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.ImpliedVolatility*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.SetPricingEngine(Cephei.Cell.Generic.ICell<QLNet.IPricingEngine>)
  commentId: M:Cephei.QL.SwaptionHelperModel2.SetPricingEngine(Cephei.Cell.Generic.ICell{QLNet.IPricingEngine})
  id: SetPricingEngine(Cephei.Cell.Generic.ICell<QLNet.IPricingEngine>)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'member SetPricingEngine: ICell<IPricingEngine> -> ICell<SwaptionHelper>'
  nameWithType: 'member SwaptionHelperModel2.SetPricingEngine: ICell<IPricingEngine> -> ICell<SwaptionHelper>'
  fullName: 'member Cephei.QL.SwaptionHelperModel2.SetPricingEngine: Cephei.Cell.Generic.ICell<QLNet.IPricingEngine> -> Cephei.Cell.Generic.ICell<QLNet.SwaptionHelper>'
  type: Method
  source:
    id: Cephei.QL.SwaptionHelperModel2.SetPricingEngine(Cephei.Cell.Generic.ICell<QLNet.IPricingEngine>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 320
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member SetPricingEngine: engine:ICell<IPricingEngine> -> ICell<SwaptionHelper>'
    parameters:
    - id: engine
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IPricingEngine>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.SwaptionHelper>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.SetPricingEngine*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.volatility(unit)
  commentId: P:Cephei.QL.SwaptionHelperModel2.volatility
  id: volatility(unit)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'property volatility: ICell<Handle<Quote>>'
  nameWithType: 'property SwaptionHelperModel2.volatility: ICell<Handle<Quote>>'
  fullName: 'property Cephei.QL.SwaptionHelperModel2.volatility: Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>>'
  type: Property
  source:
    id: Cephei.QL.SwaptionHelperModel2.volatility(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 296
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property volatility: ICell<Handle<Quote>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Handle`1<QLNet.Quote>>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.volatility*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.termStructure(unit)
  commentId: P:Cephei.QL.SwaptionHelperModel2.termStructure
  id: termStructure(unit)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'property termStructure: ICell<Handle<YieldTermStructure>>'
  nameWithType: 'property SwaptionHelperModel2.termStructure: ICell<Handle<YieldTermStructure>>'
  fullName: 'property Cephei.QL.SwaptionHelperModel2.termStructure: Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.YieldTermStructure>>'
  type: Property
  source:
    id: Cephei.QL.SwaptionHelperModel2.termStructure(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 301
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property termStructure: ICell<Handle<YieldTermStructure>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Handle`1<QLNet.YieldTermStructure>>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.termStructure*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.strike(unit)
  commentId: P:Cephei.QL.SwaptionHelperModel2.strike
  id: strike(unit)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'property strike: ICell<Nullable<double>>'
  nameWithType: 'property SwaptionHelperModel2.strike: ICell<Nullable<double>>'
  fullName: 'property Cephei.QL.SwaptionHelperModel2.strike: Cephei.Cell.Generic.ICell<System.Nullable<double>>'
  type: Property
  source:
    id: Cephei.QL.SwaptionHelperModel2.strike(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 303
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property strike: ICell<Nullable<double>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Nullable`1<Microsoft.FSharp.Core.double>>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.strike*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.shift(unit)
  commentId: P:Cephei.QL.SwaptionHelperModel2.shift
  id: shift(unit)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'property shift: ICell<double>'
  nameWithType: 'property SwaptionHelperModel2.shift: ICell<double>'
  fullName: 'property Cephei.QL.SwaptionHelperModel2.shift: Cephei.Cell.Generic.ICell<double>'
  type: Property
  source:
    id: Cephei.QL.SwaptionHelperModel2.shift(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 306
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property shift: ICell<double> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.shift*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.nominal(unit)
  commentId: P:Cephei.QL.SwaptionHelperModel2.nominal
  id: nominal(unit)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'property nominal: ICell<double>'
  nameWithType: 'property SwaptionHelperModel2.nominal: ICell<double>'
  fullName: 'property Cephei.QL.SwaptionHelperModel2.nominal: Cephei.Cell.Generic.ICell<double>'
  type: Property
  source:
    id: Cephei.QL.SwaptionHelperModel2.nominal(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 304
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property nominal: ICell<double> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.nominal*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.length(unit)
  commentId: P:Cephei.QL.SwaptionHelperModel2.length
  id: length(unit)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'property length: ICell<Period>'
  nameWithType: 'property SwaptionHelperModel2.length: ICell<Period>'
  fullName: 'property Cephei.QL.SwaptionHelperModel2.length: Cephei.Cell.Generic.ICell<QLNet.Period>'
  type: Property
  source:
    id: Cephei.QL.SwaptionHelperModel2.length(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 295
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property length: ICell<Period> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.length*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.index(unit)
  commentId: P:Cephei.QL.SwaptionHelperModel2.index
  id: index(unit)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'property index: ICell<IborIndex>'
  nameWithType: 'property SwaptionHelperModel2.index: ICell<IborIndex>'
  fullName: 'property Cephei.QL.SwaptionHelperModel2.index: Cephei.Cell.Generic.ICell<QLNet.IborIndex>'
  type: Property
  source:
    id: Cephei.QL.SwaptionHelperModel2.index(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 297
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property index: ICell<IborIndex> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IborIndex>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.index*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.floatingLegDayCounter(unit)
  commentId: P:Cephei.QL.SwaptionHelperModel2.floatingLegDayCounter
  id: floatingLegDayCounter(unit)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'property floatingLegDayCounter: ICell<DayCounter>'
  nameWithType: 'property SwaptionHelperModel2.floatingLegDayCounter: ICell<DayCounter>'
  fullName: 'property Cephei.QL.SwaptionHelperModel2.floatingLegDayCounter: Cephei.Cell.Generic.ICell<QLNet.DayCounter>'
  type: Property
  source:
    id: Cephei.QL.SwaptionHelperModel2.floatingLegDayCounter(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 300
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property floatingLegDayCounter: ICell<DayCounter> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.floatingLegDayCounter*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.fixedLegTenor(unit)
  commentId: P:Cephei.QL.SwaptionHelperModel2.fixedLegTenor
  id: fixedLegTenor(unit)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'property fixedLegTenor: ICell<Period>'
  nameWithType: 'property SwaptionHelperModel2.fixedLegTenor: ICell<Period>'
  fullName: 'property Cephei.QL.SwaptionHelperModel2.fixedLegTenor: Cephei.Cell.Generic.ICell<QLNet.Period>'
  type: Property
  source:
    id: Cephei.QL.SwaptionHelperModel2.fixedLegTenor(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 298
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property fixedLegTenor: ICell<Period> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.fixedLegTenor*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.fixedLegDayCounter(unit)
  commentId: P:Cephei.QL.SwaptionHelperModel2.fixedLegDayCounter
  id: fixedLegDayCounter(unit)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'property fixedLegDayCounter: ICell<DayCounter>'
  nameWithType: 'property SwaptionHelperModel2.fixedLegDayCounter: ICell<DayCounter>'
  fullName: 'property Cephei.QL.SwaptionHelperModel2.fixedLegDayCounter: Cephei.Cell.Generic.ICell<QLNet.DayCounter>'
  type: Property
  source:
    id: Cephei.QL.SwaptionHelperModel2.fixedLegDayCounter(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 299
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property fixedLegDayCounter: ICell<DayCounter> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.fixedLegDayCounter*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.exerciseDate(unit)
  commentId: P:Cephei.QL.SwaptionHelperModel2.exerciseDate
  id: exerciseDate(unit)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'property exerciseDate: ICell<Date>'
  nameWithType: 'property SwaptionHelperModel2.exerciseDate: ICell<Date>'
  fullName: 'property Cephei.QL.SwaptionHelperModel2.exerciseDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.SwaptionHelperModel2.exerciseDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 294
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property exerciseDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.exerciseDate*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.errorType(unit)
  commentId: P:Cephei.QL.SwaptionHelperModel2.errorType
  id: errorType(unit)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'property errorType: ICell<CalibrationErrorType>'
  nameWithType: 'property SwaptionHelperModel2.errorType: ICell<CalibrationErrorType>'
  fullName: 'property Cephei.QL.SwaptionHelperModel2.errorType: Cephei.Cell.Generic.ICell<QLNet.CalibrationHelper.CalibrationErrorType>'
  type: Property
  source:
    id: Cephei.QL.SwaptionHelperModel2.errorType(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 302
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property errorType: ICell<CalibrationErrorType> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.CalibrationHelper.CalibrationErrorType>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.errorType*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.VolatilityType(unit)
  commentId: P:Cephei.QL.SwaptionHelperModel2.VolatilityType
  id: VolatilityType(unit)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'property VolatilityType: ICell<VolatilityType>'
  nameWithType: 'property SwaptionHelperModel2.VolatilityType: ICell<VolatilityType>'
  fullName: 'property Cephei.QL.SwaptionHelperModel2.VolatilityType: Cephei.Cell.Generic.ICell<QLNet.VolatilityType>'
  type: Property
  source:
    id: Cephei.QL.SwaptionHelperModel2.VolatilityType(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 323
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property VolatilityType: ICell<VolatilityType> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.VolatilityType>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.VolatilityType*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.Volatility(unit)
  commentId: P:Cephei.QL.SwaptionHelperModel2.Volatility
  id: Volatility(unit)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'property Volatility: ICell<Handle<Quote>>'
  nameWithType: 'property SwaptionHelperModel2.Volatility: ICell<Handle<Quote>>'
  fullName: 'property Cephei.QL.SwaptionHelperModel2.Volatility: Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>>'
  type: Property
  source:
    id: Cephei.QL.SwaptionHelperModel2.Volatility(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 322
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Volatility: ICell<Handle<Quote>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Handle`1<QLNet.Quote>>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.Volatility*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.UnderlyingSwap(unit)
  commentId: P:Cephei.QL.SwaptionHelperModel2.UnderlyingSwap
  id: UnderlyingSwap(unit)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'property UnderlyingSwap: ICell<VanillaSwap>'
  nameWithType: 'property SwaptionHelperModel2.UnderlyingSwap: ICell<VanillaSwap>'
  fullName: 'property Cephei.QL.SwaptionHelperModel2.UnderlyingSwap: Cephei.Cell.Generic.ICell<QLNet.VanillaSwap>'
  type: Property
  source:
    id: Cephei.QL.SwaptionHelperModel2.UnderlyingSwap(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 315
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property UnderlyingSwap: ICell<VanillaSwap> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.VanillaSwap>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.UnderlyingSwap*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.Type(unit)
  commentId: P:Cephei.QL.SwaptionHelperModel2.Type
  id: Type(unit)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'property Type: ICell<VolatilityType>'
  nameWithType: 'property SwaptionHelperModel2.Type: ICell<VolatilityType>'
  fullName: 'property Cephei.QL.SwaptionHelperModel2.Type: Cephei.Cell.Generic.ICell<QLNet.VolatilityType>'
  type: Property
  source:
    id: Cephei.QL.SwaptionHelperModel2.Type(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 305
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Type: ICell<VolatilityType> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.VolatilityType>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.Type*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.Swaption(unit)
  commentId: P:Cephei.QL.SwaptionHelperModel2.Swaption
  id: Swaption(unit)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'property Swaption: ICell<Swaption>'
  nameWithType: 'property SwaptionHelperModel2.Swaption: ICell<Swaption>'
  fullName: 'property Cephei.QL.SwaptionHelperModel2.Swaption: Cephei.Cell.Generic.ICell<QLNet.Swaption>'
  type: Property
  source:
    id: Cephei.QL.SwaptionHelperModel2.Swaption(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 314
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Swaption: ICell<Swaption> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Swaption>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.Swaption*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.PricingEngine(unit)
  commentId: P:Cephei.QL.SwaptionHelperModel2.PricingEngine
  id: PricingEngine(unit)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'property PricingEngine: ICell<IPricingEngine>'
  nameWithType: 'property SwaptionHelperModel2.PricingEngine: ICell<IPricingEngine>'
  fullName: 'property Cephei.QL.SwaptionHelperModel2.PricingEngine: Cephei.Cell.Generic.ICell<QLNet.IPricingEngine>'
  type: Property
  source:
    id: Cephei.QL.SwaptionHelperModel2.PricingEngine(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 308
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property PricingEngine: ICell<IPricingEngine> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IPricingEngine>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.PricingEngine*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.ModelValue(unit)
  commentId: P:Cephei.QL.SwaptionHelperModel2.ModelValue
  id: ModelValue(unit)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'property ModelValue: ICell<float>'
  nameWithType: 'property SwaptionHelperModel2.ModelValue: ICell<float>'
  fullName: 'property Cephei.QL.SwaptionHelperModel2.ModelValue: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.SwaptionHelperModel2.ModelValue(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 313
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property ModelValue: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.ModelValue*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.MarketValue(unit)
  commentId: P:Cephei.QL.SwaptionHelperModel2.MarketValue
  id: MarketValue(unit)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'property MarketValue: ICell<float>'
  nameWithType: 'property SwaptionHelperModel2.MarketValue: ICell<float>'
  fullName: 'property Cephei.QL.SwaptionHelperModel2.MarketValue: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.SwaptionHelperModel2.MarketValue(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 319
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property MarketValue: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.MarketValue*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.EvaluationDate(unit)
  commentId: P:Cephei.QL.SwaptionHelperModel2.EvaluationDate
  id: EvaluationDate(unit)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'property EvaluationDate: ICell<Date>'
  nameWithType: 'property SwaptionHelperModel2.EvaluationDate: ICell<Date>'
  fullName: 'property Cephei.QL.SwaptionHelperModel2.EvaluationDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.SwaptionHelperModel2.EvaluationDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 307
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property EvaluationDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.EvaluationDate*
  attributes: []
- uid: Cephei.QL.SwaptionHelperModel2.CalibrationError(unit)
  commentId: P:Cephei.QL.SwaptionHelperModel2.CalibrationError
  id: CalibrationError(unit)
  parent: Cephei.QL.SwaptionHelperModel2
  langs:
  - csharp
  - vb
  name: 'property CalibrationError: ICell<float>'
  nameWithType: 'property SwaptionHelperModel2.CalibrationError: ICell<float>'
  fullName: 'property Cephei.QL.SwaptionHelperModel2.CalibrationError: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.SwaptionHelperModel2.CalibrationError(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\SwaptionHelperModel.fs
    startLine: 316
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property CalibrationError: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.SwaptionHelperModel2.CalibrationError*
  attributes: []
references:
- uid: Cephei.QL
  commentId: N:Cephei.QL
  name: Cephei.QL
  nameWithType: Cephei.QL
  fullName: Cephei.QL
- uid: TypeRef:System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
  spec.csharp:
  - {}
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - {}
- uid: TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: ConcurrentDictionary<string,ICell>
  nameWithType: ConcurrentDictionary<string,ICell>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Model
  name: Model
  nameWithType: Model
  fullName: Cephei.Cell.Model
  spec.csharp:
  - {}
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - {}
- uid: TypeRef:Cephei.Cell.Generic.Model`1<QLNet.SwaptionHelper>
  name: Model<SwaptionHelper>
  nameWithType: Model<SwaptionHelper>
  fullName: Cephei.Cell.Generic.Model<QLNet.SwaptionHelper>
  spec.csharp:
  - uid: Cephei.Cell.Generic.Model`1
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Generic.Model
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.SwaptionHelper
    name: SwaptionHelper
    nameWithType: SwaptionHelper
    fullName: QLNet.SwaptionHelper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.SwaptionHelper>
  name: ICell<SwaptionHelper>
  nameWithType: ICell<SwaptionHelper>
  fullName: Cephei.Cell.Generic.ICell<QLNet.SwaptionHelper>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.SwaptionHelper
    name: SwaptionHelper
    nameWithType: SwaptionHelper
    fullName: QLNet.SwaptionHelper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.ICell
  name: ICell
  nameWithType: ICell
  fullName: Cephei.Cell.ICell
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - {}
- uid: TypeRef:Cephei.Cell.ICellEvent
  name: ICellEvent
  nameWithType: ICellEvent
  fullName: Cephei.Cell.ICellEvent
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICellEvent
    name: ICellEvent
    nameWithType: ICellEvent
    fullName: Cephei.Cell.ICellEvent
  - {}
- uid: TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: ICollection<KeyValuePair<string,ICell>>
  nameWithType: ICollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IDictionary<string,ICell>
  nameWithType: IDictionary<string,ICell>
  fullName: System.Collections.Generic.IDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IEnumerable<KeyValuePair<string,ICell>>
  nameWithType: IEnumerable<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IReadOnlyCollection<KeyValuePair<string,ICell>>
  nameWithType: IReadOnlyCollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IReadOnlyDictionary<string,ICell>
  nameWithType: IReadOnlyDictionary<string,ICell>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.ICollection
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
  spec.csharp:
  - {}
  - uid: System.Collections.ICollection
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.ICollection
  - {}
- uid: TypeRef:System.Collections.IDictionary
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
  spec.csharp:
  - {}
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
  - {}
- uid: TypeRef:System.Collections.IEnumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
  spec.csharp:
  - {}
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
  - {}
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  name: IObservable<ICell>
  nameWithType: IObservable<ICell>
  fullName: System.IObservable<Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.SwaptionHelper> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * ICell<SwaptionHelper> * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * ICell<SwaptionHelper> * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<QLNet.SwaptionHelper> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.SwaptionHelper
    name: SwaptionHelper
    nameWithType: SwaptionHelper
    fullName: QLNet.SwaptionHelper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<QLNet.SwaptionHelper>
  name: IObservable<SwaptionHelper>
  nameWithType: IObservable<SwaptionHelper>
  fullName: System.IObservable<QLNet.SwaptionHelper>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.SwaptionHelper
    name: SwaptionHelper
    nameWithType: SwaptionHelper
    fullName: QLNet.SwaptionHelper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.SwaptionHelper>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,SwaptionHelper>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,SwaptionHelper>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,QLNet.SwaptionHelper>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: QLNet.SwaptionHelper
    name: SwaptionHelper
    nameWithType: SwaptionHelper
    fullName: QLNet.SwaptionHelper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  name: IObservable<KeyValuePair<string,decimal>>
  nameWithType: IObservable<KeyValuePair<string,decimal>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,decimal>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.decimal
    name: decimal
    nameWithType: decimal
    fullName: decimal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  name: IObservable<KeyValuePair<string,float>>
  nameWithType: IObservable<KeyValuePair<string,float>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,float>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  name: IObservable<KeyValuePair<string,int>>
  nameWithType: IObservable<KeyValuePair<string,int>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,int>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.int
    name: int
    nameWithType: int
    fullName: int
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObserver`1<QLNet.SwaptionHelper>
  name: IObserver<SwaptionHelper>
  nameWithType: IObserver<SwaptionHelper>
  fullName: System.IObserver<QLNet.SwaptionHelper>
  spec.csharp:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.SwaptionHelper
    name: SwaptionHelper
    nameWithType: SwaptionHelper
    fullName: QLNet.SwaptionHelper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  name: "member Bind: ICell<'T> -> unit"
  nameWithType: "member Model.Bind: ICell<'T> -> unit"
  fullName: "member Cephei.Cell.Generic.Model.Bind: Cephei.Cell.Generic.ICell<'T> -> unit"
- uid: Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  name: 'abstract member OnCompleted: unit -> unit'
  nameWithType: 'abstract member Model.OnCompleted: unit -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnCompleted: unit -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnError(exn)
  name: 'abstract member OnError: exn -> unit'
  nameWithType: 'abstract member Model.OnError: exn -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnError: exn -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnNext('T)
  name: "abstract member OnNext: 'T -> unit"
  nameWithType: "abstract member Model.OnNext: 'T -> unit"
  fullName: "abstract member Cephei.Cell.Generic.Model.OnNext: 'T -> unit"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  name: "abstract member Subscribe: IObserver<'T> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<'T> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<'T> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: "abstract member Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  name: "abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Value(unit)
  name: "abstract property Value: 'T"
  nameWithType: "abstract property Model.Value: 'T"
  fullName: "abstract property Cephei.Cell.Generic.Model.Value: 'T"
- uid: Cephei.Cell.Model.As(string)
  name: "member As: string -> ICell<'T>"
  nameWithType: "member Model.As: string -> ICell<'T>"
  fullName: "member Cephei.Cell.Model.As: string -> Cephei.Cell.Generic.ICell<'T>"
- uid: Cephei.Cell.Model.Bind(unit)
  name: 'member Bind: unit -> unit'
  nameWithType: 'member Model.Bind: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Bind: unit -> unit'
- uid: Cephei.Cell.Model.Box(unit)
  name: 'abstract property Box: obj'
  nameWithType: 'abstract property Model.Box: obj'
  fullName: 'abstract property Cephei.Cell.Model.Box: obj'
- uid: Cephei.Cell.Model.Change()
  name: 'abstract member Change: CellChange'
  nameWithType: 'abstract member Model.Change: CellChange'
  fullName: 'abstract member Cephei.Cell.Model.Change: Cephei.Cell.CellChange'
- uid: Cephei.Cell.Model.Create(Unit -> 'T * string)
  name: "member Create: Unit -> 'T * string -> Cell<'T>"
  nameWithType: "member Model.Create: Unit -> 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.Create: Unit -> 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.CreateValue('T * string)
  name: "member CreateValue: 'T * string -> Cell<'T>"
  nameWithType: "member Model.CreateValue: 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.CreateValue: 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.Dependants(unit)
  name: 'abstract property Dependants: IEnumerable<ICellEvent>'
  nameWithType: 'abstract property Model.Dependants: IEnumerable<ICellEvent>'
  fullName: 'abstract property Cephei.Cell.Model.Dependants: System.Collections.Generic.IEnumerable<Cephei.Cell.ICellEvent>'
- uid: Cephei.Cell.Model.Dispose(unit)
  name: 'member Dispose: unit -> unit'
  nameWithType: 'member Model.Dispose: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Dispose: unit -> unit'
- uid: Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  name: 'member GetOrAdd: string * ICell -> ICell'
  nameWithType: 'member Model.GetOrAdd: string * ICell -> ICell'
  fullName: 'member Cephei.Cell.Model.GetOrAdd: string * Cephei.Cell.ICell -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.HasFunction(unit)
  name: 'abstract property HasFunction: bool'
  nameWithType: 'abstract property Model.HasFunction: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasFunction: bool'
- uid: Cephei.Cell.Model.HasValue(unit)
  name: 'abstract property HasValue: bool'
  nameWithType: 'abstract property Model.HasValue: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasValue: bool'
- uid: Cephei.Cell.Model.Item(string)
  name: 'property Item: string -> ICell'
  nameWithType: 'property Model.Item: string -> ICell'
  fullName: 'property Cephei.Cell.Model.Item: string -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Mnemonic(unit)
  name: 'abstract property Mnemonic: string'
  nameWithType: 'abstract property Model.Mnemonic: string'
  fullName: 'abstract property Cephei.Cell.Model.Mnemonic: string'
- uid: Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  name: 'abstract member OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  nameWithType: 'abstract member Model.OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  fullName: 'abstract member Cephei.Cell.Model.OnChange: Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession -> unit'
- uid: Cephei.Cell.Model.Parent(unit)
  name: 'abstract property Parent: ICell'
  nameWithType: 'abstract property Model.Parent: ICell'
  fullName: 'abstract property Cephei.Cell.Model.Parent: Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  name: 'abstract member Subscribe: IObserver<ICell> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ICell> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ICell> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: 'abstract member Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,float>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,int>> -> System.IDisposable'
- uid: Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  name: 'member TryAdd: string * ICell -> bool'
  nameWithType: 'member Model.TryAdd: string * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryAdd: string * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  name: 'member TryRemove: string * ICell byref -> bool'
  nameWithType: 'member Model.TryRemove: string * ICell byref -> bool'
  fullName: 'member Cephei.Cell.Model.TryRemove: string * Cephei.Cell.ICell byref -> bool'
- uid: Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  name: 'member TryUpdate: string * ICell * ICell -> bool'
  nameWithType: 'member Model.TryUpdate: string * ICell * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryUpdate: string * Cephei.Cell.ICell * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  name: 'abstract member add_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.add_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.add_Change: Cephei.Cell.CellChange -> unit'
- uid: Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  name: 'abstract member remove_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.remove_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.remove_Change: Cephei.Cell.CellChange -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  name: 'abstract member Clear: unit -> unit'
  nameWithType: 'abstract member ConcurrentDictionary.Clear: unit -> unit'
  fullName: 'abstract member System.Collections.Concurrent.ConcurrentDictionary.Clear: unit -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  name: "abstract member ContainsKey: 'TKey -> bool"
  nameWithType: "abstract member ConcurrentDictionary.ContainsKey: 'TKey -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.ContainsKey: 'TKey -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  name: 'abstract property Count: int'
  nameWithType: 'abstract property ConcurrentDictionary.Count: int'
  fullName: 'abstract property System.Collections.Concurrent.ConcurrentDictionary.Count: int'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  name: "abstract member GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  nameWithType: "abstract member ConcurrentDictionary.GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.GetEnumerator: unit -> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<'TKey,'TValue>>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  name: "member GetOrAdd: 'TKey * 'TValue -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  name: "member GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * System.Func<'TKey,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  name: 'property IsEmpty: bool'
  nameWithType: 'property ConcurrentDictionary.IsEmpty: bool'
  fullName: 'property System.Collections.Concurrent.ConcurrentDictionary.IsEmpty: bool'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  name: "abstract property Item: 'TKey -> 'TValue"
  nameWithType: "abstract property ConcurrentDictionary.Item: 'TKey -> 'TValue"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Item: 'TKey -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  name: "abstract property Keys: ICollection<'TKey>"
  nameWithType: "abstract property ConcurrentDictionary.Keys: ICollection<'TKey>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Keys: System.Collections.Generic.ICollection<'TKey>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  name: "member ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  nameWithType: "member ConcurrentDictionary.ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.ToArray: unit -> System.Collections.Generic.KeyValuePair<'TKey,'TValue> []"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  name: "member TryAdd: 'TKey * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  name: "abstract member TryGetValue: 'TKey * 'TValue byref -> bool"
  nameWithType: "abstract member ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  name: "member TryRemove: 'TKey * 'TValue byref -> bool"
  nameWithType: "member ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  name: "member TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  name: "abstract property Values: ICollection<'TValue>"
  nameWithType: "abstract property ConcurrentDictionary.Values: ICollection<'TValue>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Values: System.Collections.Generic.ICollection<'TValue>"
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
  name: ICell<Date>
  nameWithType: ICell<Date>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Date>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Date
    name: Date
    nameWithType: Date
    fullName: QLNet.Date
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
  name: ICell<Period>
  nameWithType: ICell<Period>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Period>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Period
    name: Period
    nameWithType: Period
    fullName: QLNet.Period
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Handle`1<QLNet.Quote>>
  name: ICell<Handle<Quote>>
  nameWithType: ICell<Handle<Quote>>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Handle`1
    name: Handle
    nameWithType: Handle
    fullName: QLNet.Handle
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Quote
    name: Quote
    nameWithType: Quote
    fullName: QLNet.Quote
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IborIndex>
  name: ICell<IborIndex>
  nameWithType: ICell<IborIndex>
  fullName: Cephei.Cell.Generic.ICell<QLNet.IborIndex>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.IborIndex
    name: IborIndex
    nameWithType: IborIndex
    fullName: QLNet.IborIndex
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
  name: ICell<DayCounter>
  nameWithType: ICell<DayCounter>
  fullName: Cephei.Cell.Generic.ICell<QLNet.DayCounter>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.DayCounter
    name: DayCounter
    nameWithType: DayCounter
    fullName: QLNet.DayCounter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Handle`1<QLNet.YieldTermStructure>>
  name: ICell<Handle<YieldTermStructure>>
  nameWithType: ICell<Handle<YieldTermStructure>>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.YieldTermStructure>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Handle`1
    name: Handle
    nameWithType: Handle
    fullName: QLNet.Handle
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.YieldTermStructure
    name: YieldTermStructure
    nameWithType: YieldTermStructure
    fullName: QLNet.YieldTermStructure
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.CalibrationHelper.CalibrationErrorType>
  name: ICell<CalibrationErrorType>
  nameWithType: ICell<CalibrationErrorType>
  fullName: Cephei.Cell.Generic.ICell<QLNet.CalibrationHelper.CalibrationErrorType>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.CalibrationHelper.CalibrationErrorType
    name: CalibrationErrorType
    nameWithType: CalibrationErrorType
    fullName: QLNet.CalibrationHelper.CalibrationErrorType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Nullable`1<Microsoft.FSharp.Core.double>>
  name: ICell<Nullable<double>>
  nameWithType: ICell<Nullable<double>>
  fullName: Cephei.Cell.Generic.ICell<System.Nullable<double>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.double
    name: double
    nameWithType: double
    fullName: double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
  name: ICell<double>
  nameWithType: ICell<double>
  fullName: Cephei.Cell.Generic.ICell<double>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.double
    name: double
    nameWithType: double
    fullName: double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.VolatilityType>
  name: ICell<VolatilityType>
  nameWithType: ICell<VolatilityType>
  fullName: Cephei.Cell.Generic.ICell<QLNet.VolatilityType>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.VolatilityType
    name: VolatilityType
    nameWithType: VolatilityType
    fullName: QLNet.VolatilityType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IPricingEngine>
  name: ICell<IPricingEngine>
  nameWithType: ICell<IPricingEngine>
  fullName: Cephei.Cell.Generic.ICell<QLNet.IPricingEngine>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.IPricingEngine
    name: IPricingEngine
    nameWithType: IPricingEngine
    fullName: QLNet.IPricingEngine
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.SwaptionHelperModel2.#ctor*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.#ctor*
  name: ( .ctor )
  nameWithType: SwaptionHelperModel2.( .ctor )
  fullName: Cephei.QL.SwaptionHelperModel2
- uid: TypeRef:Cephei.QL.SwaptionHelperModel2
  name: SwaptionHelperModel2
  nameWithType: SwaptionHelperModel2
  fullName: Cephei.QL.SwaptionHelperModel2
  spec.csharp:
  - {}
  - uid: Cephei.QL.SwaptionHelperModel2
    name: SwaptionHelperModel2
    nameWithType: SwaptionHelperModel2
    fullName: Cephei.QL.SwaptionHelperModel2
  - {}
- uid: Cephei.QL.SwaptionHelperModel2.AddTimesTo*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.AddTimesTo*
  name: AddTimesTo
  nameWithType: SwaptionHelperModel2.AddTimesTo
  fullName: Cephei.QL.SwaptionHelperModel2.AddTimesTo
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.double>>
  name: ICell<List<double>>
  nameWithType: ICell<List<double>>
  fullName: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.double
    name: double
    nameWithType: double
    fullName: double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.SwaptionHelperModel2.BlackPrice*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.BlackPrice*
  name: BlackPrice
  nameWithType: SwaptionHelperModel2.BlackPrice
  fullName: Cephei.QL.SwaptionHelperModel2.BlackPrice
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
  name: ICell<float>
  nameWithType: ICell<float>
  fullName: Cephei.Cell.Generic.ICell<float>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.SwaptionHelperModel2.ImpliedVolatility*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.ImpliedVolatility*
  name: ImpliedVolatility
  nameWithType: SwaptionHelperModel2.ImpliedVolatility
  fullName: Cephei.QL.SwaptionHelperModel2.ImpliedVolatility
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
  name: ICell<int>
  nameWithType: ICell<int>
  fullName: Cephei.Cell.Generic.ICell<int>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.int
    name: int
    nameWithType: int
    fullName: int
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.SwaptionHelperModel2.SetPricingEngine*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.SetPricingEngine*
  name: SetPricingEngine
  nameWithType: SwaptionHelperModel2.SetPricingEngine
  fullName: Cephei.QL.SwaptionHelperModel2.SetPricingEngine
- uid: Cephei.QL.SwaptionHelperModel2.volatility*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.volatility*
  name: volatility
  nameWithType: SwaptionHelperModel2.volatility
  fullName: Cephei.QL.SwaptionHelperModel2.volatility
- uid: Cephei.QL.SwaptionHelperModel2.termStructure*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.termStructure*
  name: termStructure
  nameWithType: SwaptionHelperModel2.termStructure
  fullName: Cephei.QL.SwaptionHelperModel2.termStructure
- uid: Cephei.QL.SwaptionHelperModel2.strike*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.strike*
  name: strike
  nameWithType: SwaptionHelperModel2.strike
  fullName: Cephei.QL.SwaptionHelperModel2.strike
- uid: Cephei.QL.SwaptionHelperModel2.shift*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.shift*
  name: shift
  nameWithType: SwaptionHelperModel2.shift
  fullName: Cephei.QL.SwaptionHelperModel2.shift
- uid: Cephei.QL.SwaptionHelperModel2.nominal*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.nominal*
  name: nominal
  nameWithType: SwaptionHelperModel2.nominal
  fullName: Cephei.QL.SwaptionHelperModel2.nominal
- uid: Cephei.QL.SwaptionHelperModel2.length*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.length*
  name: length
  nameWithType: SwaptionHelperModel2.length
  fullName: Cephei.QL.SwaptionHelperModel2.length
- uid: Cephei.QL.SwaptionHelperModel2.index*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.index*
  name: index
  nameWithType: SwaptionHelperModel2.index
  fullName: Cephei.QL.SwaptionHelperModel2.index
- uid: Cephei.QL.SwaptionHelperModel2.floatingLegDayCounter*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.floatingLegDayCounter*
  name: floatingLegDayCounter
  nameWithType: SwaptionHelperModel2.floatingLegDayCounter
  fullName: Cephei.QL.SwaptionHelperModel2.floatingLegDayCounter
- uid: Cephei.QL.SwaptionHelperModel2.fixedLegTenor*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.fixedLegTenor*
  name: fixedLegTenor
  nameWithType: SwaptionHelperModel2.fixedLegTenor
  fullName: Cephei.QL.SwaptionHelperModel2.fixedLegTenor
- uid: Cephei.QL.SwaptionHelperModel2.fixedLegDayCounter*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.fixedLegDayCounter*
  name: fixedLegDayCounter
  nameWithType: SwaptionHelperModel2.fixedLegDayCounter
  fullName: Cephei.QL.SwaptionHelperModel2.fixedLegDayCounter
- uid: Cephei.QL.SwaptionHelperModel2.exerciseDate*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.exerciseDate*
  name: exerciseDate
  nameWithType: SwaptionHelperModel2.exerciseDate
  fullName: Cephei.QL.SwaptionHelperModel2.exerciseDate
- uid: Cephei.QL.SwaptionHelperModel2.errorType*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.errorType*
  name: errorType
  nameWithType: SwaptionHelperModel2.errorType
  fullName: Cephei.QL.SwaptionHelperModel2.errorType
- uid: Cephei.QL.SwaptionHelperModel2.VolatilityType*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.VolatilityType*
  name: VolatilityType
  nameWithType: SwaptionHelperModel2.VolatilityType
  fullName: Cephei.QL.SwaptionHelperModel2.VolatilityType
- uid: Cephei.QL.SwaptionHelperModel2.Volatility*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.Volatility*
  name: Volatility
  nameWithType: SwaptionHelperModel2.Volatility
  fullName: Cephei.QL.SwaptionHelperModel2.Volatility
- uid: Cephei.QL.SwaptionHelperModel2.UnderlyingSwap*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.UnderlyingSwap*
  name: UnderlyingSwap
  nameWithType: SwaptionHelperModel2.UnderlyingSwap
  fullName: Cephei.QL.SwaptionHelperModel2.UnderlyingSwap
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.VanillaSwap>
  name: ICell<VanillaSwap>
  nameWithType: ICell<VanillaSwap>
  fullName: Cephei.Cell.Generic.ICell<QLNet.VanillaSwap>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.VanillaSwap
    name: VanillaSwap
    nameWithType: VanillaSwap
    fullName: QLNet.VanillaSwap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.SwaptionHelperModel2.Type*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.Type*
  name: Type
  nameWithType: SwaptionHelperModel2.Type
  fullName: Cephei.QL.SwaptionHelperModel2.Type
- uid: Cephei.QL.SwaptionHelperModel2.Swaption*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.Swaption*
  name: Swaption
  nameWithType: SwaptionHelperModel2.Swaption
  fullName: Cephei.QL.SwaptionHelperModel2.Swaption
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Swaption>
  name: ICell<Swaption>
  nameWithType: ICell<Swaption>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Swaption>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Swaption
    name: Swaption
    nameWithType: Swaption
    fullName: QLNet.Swaption
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.SwaptionHelperModel2.PricingEngine*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.PricingEngine*
  name: PricingEngine
  nameWithType: SwaptionHelperModel2.PricingEngine
  fullName: Cephei.QL.SwaptionHelperModel2.PricingEngine
- uid: Cephei.QL.SwaptionHelperModel2.ModelValue*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.ModelValue*
  name: ModelValue
  nameWithType: SwaptionHelperModel2.ModelValue
  fullName: Cephei.QL.SwaptionHelperModel2.ModelValue
- uid: Cephei.QL.SwaptionHelperModel2.MarketValue*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.MarketValue*
  name: MarketValue
  nameWithType: SwaptionHelperModel2.MarketValue
  fullName: Cephei.QL.SwaptionHelperModel2.MarketValue
- uid: Cephei.QL.SwaptionHelperModel2.EvaluationDate*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.EvaluationDate*
  name: EvaluationDate
  nameWithType: SwaptionHelperModel2.EvaluationDate
  fullName: Cephei.QL.SwaptionHelperModel2.EvaluationDate
- uid: Cephei.QL.SwaptionHelperModel2.CalibrationError*
  commentId: Overload:Cephei.QL.SwaptionHelperModel2.CalibrationError*
  name: CalibrationError
  nameWithType: SwaptionHelperModel2.CalibrationError
  fullName: Cephei.QL.SwaptionHelperModel2.CalibrationError
