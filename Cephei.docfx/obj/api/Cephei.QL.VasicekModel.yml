### YamlMime:ManagedReference
items:
- uid: Cephei.QL.VasicekModel
  commentId: T:Cephei.QL.VasicekModel
  id: VasicekModel
  parent: Cephei.QL
  children:
  - Cephei.QL.VasicekModel.#ctor(Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.VasicekModel.a(unit)
  - Cephei.QL.VasicekModel.A(unit)
  - Cephei.QL.VasicekModel.b(unit)
  - Cephei.QL.VasicekModel.B(unit)
  - Cephei.QL.VasicekModel.Calibrate(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.CalibrationHelper>> -> Cephei.Cell.Generic.ICell<QLNet.OptimizationMethod> -> Cephei.Cell.Generic.ICell<QLNet.EndCriteria> -> Cephei.Cell.Generic.ICell<QLNet.Constraint> -> Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> -> Cephei.Cell.Generic.ICell<System.Collections.Generic.List<bool>>)
  - Cephei.QL.VasicekModel.Constraint(unit)
  - Cephei.QL.VasicekModel.Discount(Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.VasicekModel.DiscountBond(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Vector>)
  - Cephei.QL.VasicekModel.DiscountBond1(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.VasicekModel.DiscountBondOption(Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.VasicekModel.Dynamics(unit)
  - Cephei.QL.VasicekModel.EndCriteria(unit)
  - Cephei.QL.VasicekModel.lambda(unit)
  - Cephei.QL.VasicekModel.Lambda(unit)
  - Cephei.QL.VasicekModel.NotifyObservers(unit)
  - Cephei.QL.VasicekModel.Parameters(unit)
  - Cephei.QL.VasicekModel.r0(unit)
  - Cephei.QL.VasicekModel.RegisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
  - Cephei.QL.VasicekModel.SetParams(Cephei.Cell.Generic.ICell<QLNet.Vector>)
  - Cephei.QL.VasicekModel.sigma(unit)
  - Cephei.QL.VasicekModel.Sigma(unit)
  - Cephei.QL.VasicekModel.Tree(Cephei.Cell.Generic.ICell<QLNet.TimeGrid>)
  - Cephei.QL.VasicekModel.UnregisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
  - Cephei.QL.VasicekModel.Update(unit)
  - Cephei.QL.VasicekModel.Value(Cephei.Cell.Generic.ICell<QLNet.Vector> -> Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.CalibrationHelper>>)
  langs:
  - csharp
  - vb
  name: VasicekModel
  nameWithType: Cephei.QL.VasicekModel
  fullName: Cephei.QL.VasicekModel
  type: Class
  source:
    id: Cephei.QL.VasicekModel
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 35
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: >-
      [<AutoSerializable(true)>]

      type VasicekModel (r0:ICell<double>, a:ICell<double>, b:ICell<double>, sigma:ICell<double>, lambda:ICell<double>)
          inherit Model<Vasicek>
          interface IDictionary<string,ICell>
          interface ICollection<KeyValuePair<string,ICell>>
          interface IReadOnlyDictionary<string,ICell>
          interface IReadOnlyCollection<KeyValuePair<string,ICell>>
          interface IEnumerable<KeyValuePair<string,ICell>>
          interface IDictionary
          interface ICollection
          interface IEnumerable
          interface IObservable<ICell>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
          interface IObservable<ISession * Model * CellEvent * ICell * DateTime>
          interface IObservable<KeyValuePair<string,float>>
          interface IObservable<KeyValuePair<string,int>>
          interface IObservable<KeyValuePair<string,decimal>>
          interface ICell<Vasicek>
          interface ICell
          interface ICellEvent
          interface IObservable<Vasicek>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,Vasicek>>>
          interface IObservable<ISession * ICell<Vasicek> * CellEvent * ICell * DateTime>
          interface IObserver<Vasicek>
    parameters:
    - id: r0
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: a
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: b
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: sigma
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: lambda
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
  inheritance:
  - TypeRef:System.Object
  - TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:Cephei.Cell.Model
  - TypeRef:Cephei.Cell.Generic.Model`1<QLNet.Vasicek>
  implements:
  - TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vasicek>
  - TypeRef:Cephei.Cell.ICell
  - TypeRef:Cephei.Cell.ICellEvent
  - TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.ICollection
  - TypeRef:System.Collections.IDictionary
  - TypeRef:System.Collections.IEnumerable
  - TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.Vasicek> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<QLNet.Vasicek>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.Vasicek>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  - TypeRef:System.IObserver`1<QLNet.Vasicek>
  inheritedMembers:
  - Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  - Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  - Cephei.Cell.Generic.Model`1.OnError(exn)
  - Cephei.Cell.Generic.Model`1.OnNext('T)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  - Cephei.Cell.Generic.Model`1.Value(unit)
  - Cephei.Cell.Model.As(string)
  - Cephei.Cell.Model.Bind(unit)
  - Cephei.Cell.Model.Box(unit)
  - Cephei.Cell.Model.Change()
  - Cephei.Cell.Model.Create(Unit -> 'T * string)
  - Cephei.Cell.Model.CreateValue('T * string)
  - Cephei.Cell.Model.Dependants(unit)
  - Cephei.Cell.Model.Dispose(unit)
  - Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.HasFunction(unit)
  - Cephei.Cell.Model.HasValue(unit)
  - Cephei.Cell.Model.Item(string)
  - Cephei.Cell.Model.Mnemonic(unit)
  - Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  - Cephei.Cell.Model.Parent(unit)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  - Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  - Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  - Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  - Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  attributes:
  - type: Microsoft.FSharp.Core.AutoSerializableAttribute
    arguments:
    - type: System.Boolean
      value: true
    namedArguments: []
- uid: Cephei.QL.VasicekModel.#ctor(Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.VasicekModel.#ctor(Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Double})
  id: '#ctor(Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double>)'
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'new: ICell<double> * ICell<double> * ICell<double> * ICell<double> * ICell<double> -> VasicekModel'
  nameWithType: 'new: ICell<double> * ICell<double> * ICell<double> * ICell<double> * ICell<double> -> VasicekModel'
  fullName: 'new: Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> -> Cephei.QL.VasicekModel'
  type: Constructor
  source:
    id: Cephei.QL.VasicekModel.#ctor(Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 35
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  summary: Implicit constructor.
  syntax:
    content: 'new: r0:ICell<double> * a:ICell<double> * b:ICell<double> * sigma:ICell<double> * lambda:ICell<double> -> VasicekModel'
    parameters:
    - id: r0
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: a
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: b
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: sigma
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: lambda
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.QL.VasicekModel
      attributes: []
  overload: Cephei.QL.VasicekModel.#ctor*
  attributes: []
- uid: Cephei.QL.VasicekModel.Calibrate(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.CalibrationHelper>> -> Cephei.Cell.Generic.ICell<QLNet.OptimizationMethod> -> Cephei.Cell.Generic.ICell<QLNet.EndCriteria> -> Cephei.Cell.Generic.ICell<QLNet.Constraint> -> Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> -> Cephei.Cell.Generic.ICell<System.Collections.Generic.List<bool>>)
  commentId: M:Cephei.QL.VasicekModel.Calibrate(Cephei.Cell.Generic.ICell{System.Collections.Generic.List{QLNet.CalibrationHelper}},Cephei.Cell.Generic.ICell{QLNet.OptimizationMethod},Cephei.Cell.Generic.ICell{QLNet.EndCriteria},Cephei.Cell.Generic.ICell{QLNet.Constraint},Cephei.Cell.Generic.ICell{System.Collections.Generic.List{System.Double}},Cephei.Cell.Generic.ICell{System.Collections.Generic.List{System.Boolean}})
  id: Calibrate(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.CalibrationHelper>> -> Cephei.Cell.Generic.ICell<QLNet.OptimizationMethod> -> Cephei.Cell.Generic.ICell<QLNet.EndCriteria> -> Cephei.Cell.Generic.ICell<QLNet.Constraint> -> Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> -> Cephei.Cell.Generic.ICell<System.Collections.Generic.List<bool>>)
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'member Calibrate: ICell<List<CalibrationHelper>> -> ICell<OptimizationMethod> -> ICell<EndCriteria> -> ICell<Constraint> -> ICell<List<double>> -> ICell<List<bool>> -> ICell<Vasicek>'
  nameWithType: 'member VasicekModel.Calibrate: ICell<List<CalibrationHelper>> -> ICell<OptimizationMethod> -> ICell<EndCriteria> -> ICell<Constraint> -> ICell<List<double>> -> ICell<List<bool>> -> ICell<Vasicek>'
  fullName: 'member Cephei.QL.VasicekModel.Calibrate: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.CalibrationHelper>> -> Cephei.Cell.Generic.ICell<QLNet.OptimizationMethod> -> Cephei.Cell.Generic.ICell<QLNet.EndCriteria> -> Cephei.Cell.Generic.ICell<QLNet.Constraint> -> Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> -> Cephei.Cell.Generic.ICell<System.Collections.Generic.List<bool>> -> Cephei.Cell.Generic.ICell<QLNet.Vasicek>'
  type: Method
  source:
    id: Cephei.QL.VasicekModel.Calibrate(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.CalibrationHelper>> -> Cephei.Cell.Generic.ICell<QLNet.OptimizationMethod> -> Cephei.Cell.Generic.ICell<QLNet.EndCriteria> -> Cephei.Cell.Generic.ICell<QLNet.Constraint> -> Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> -> Cephei.Cell.Generic.ICell<System.Collections.Generic.List<bool>>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 117
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Calibrate: instruments:ICell<List<CalibrationHelper>> -> Method:ICell<OptimizationMethod> -> endCriteria:ICell<EndCriteria> -> additionalConstraint:ICell<Constraint> -> weights:ICell<List<double>> -> fixParameters:ICell<List<bool>> -> ICell<Vasicek>'
    parameters:
    - id: instruments
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<QLNet.CalibrationHelper>>
      attributes: []
    - id: Method
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.OptimizationMethod>
      attributes: []
    - id: endCriteria
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.EndCriteria>
      attributes: []
    - id: additionalConstraint
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Constraint>
      attributes: []
    - id: weights
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.double>>
      attributes: []
    - id: fixParameters
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.bool>>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vasicek>
      attributes: []
  overload: Cephei.QL.VasicekModel.Calibrate*
  attributes: []
- uid: Cephei.QL.VasicekModel.Discount(Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.VasicekModel.Discount(Cephei.Cell.Generic.ICell{System.Double})
  id: Discount(Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'member Discount: ICell<double> -> ICell<float>'
  nameWithType: 'member VasicekModel.Discount: ICell<double> -> ICell<float>'
  fullName: 'member Cephei.QL.VasicekModel.Discount: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.VasicekModel.Discount(Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 109
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Discount: t:ICell<double> -> ICell<float>'
    parameters:
    - id: t
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.VasicekModel.Discount*
  attributes: []
- uid: Cephei.QL.VasicekModel.DiscountBond(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Vector>)
  commentId: M:Cephei.QL.VasicekModel.DiscountBond(Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{QLNet.Vector})
  id: DiscountBond(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Vector>)
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'member DiscountBond: ICell<double> -> ICell<double> -> ICell<Vector> -> ICell<float>'
  nameWithType: 'member VasicekModel.DiscountBond: ICell<double> -> ICell<double> -> ICell<Vector> -> ICell<float>'
  fullName: 'member Cephei.QL.VasicekModel.DiscountBond: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Vector> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.VasicekModel.DiscountBond(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Vector>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 111
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member DiscountBond: now:ICell<double> -> maturity:ICell<double> -> factors:ICell<Vector> -> ICell<float>'
    parameters:
    - id: now
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: maturity
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: factors
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.VasicekModel.DiscountBond*
  attributes: []
- uid: Cephei.QL.VasicekModel.DiscountBond1(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.VasicekModel.DiscountBond1(Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Double})
  id: DiscountBond1(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'member DiscountBond1: ICell<double> -> ICell<double> -> ICell<double> -> ICell<float>'
  nameWithType: 'member VasicekModel.DiscountBond1: ICell<double> -> ICell<double> -> ICell<double> -> ICell<float>'
  fullName: 'member Cephei.QL.VasicekModel.DiscountBond1: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.VasicekModel.DiscountBond1(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 113
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member DiscountBond1: now:ICell<double> -> maturity:ICell<double> -> rate:ICell<double> -> ICell<float>'
    parameters:
    - id: now
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: maturity
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: rate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.VasicekModel.DiscountBond1*
  attributes: []
- uid: Cephei.QL.VasicekModel.DiscountBondOption(Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.VasicekModel.DiscountBondOption(Cephei.Cell.Generic.ICell{QLNet.Option.Type},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Double})
  id: DiscountBondOption(Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'member DiscountBondOption: ICell<Type> -> ICell<double> -> ICell<double> -> ICell<double> -> ICell<float>'
  nameWithType: 'member VasicekModel.DiscountBondOption: ICell<Type> -> ICell<double> -> ICell<double> -> ICell<double> -> ICell<float>'
  fullName: 'member Cephei.QL.VasicekModel.DiscountBondOption: Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.VasicekModel.DiscountBondOption(Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 104
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member DiscountBondOption: Type:ICell<Type> -> strike:ICell<double> -> maturity:ICell<double> -> bondMaturity:ICell<double> -> ICell<float>'
    parameters:
    - id: Type
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Option.Type>
      attributes: []
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: maturity
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: bondMaturity
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.VasicekModel.DiscountBondOption*
  attributes: []
- uid: Cephei.QL.VasicekModel.RegisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
  commentId: M:Cephei.QL.VasicekModel.RegisterWith(Cephei.Cell.Generic.ICell{QLNet.Callback})
  id: RegisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'member RegisterWith: ICell<Callback> -> ICell<Vasicek>'
  nameWithType: 'member VasicekModel.RegisterWith: ICell<Callback> -> ICell<Vasicek>'
  fullName: 'member Cephei.QL.VasicekModel.RegisterWith: Cephei.Cell.Generic.ICell<QLNet.Callback> -> Cephei.Cell.Generic.ICell<QLNet.Vasicek>'
  type: Method
  source:
    id: Cephei.QL.VasicekModel.RegisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 123
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member RegisterWith: handler:ICell<Callback> -> ICell<Vasicek>'
    parameters:
    - id: handler
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Callback>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vasicek>
      attributes: []
  overload: Cephei.QL.VasicekModel.RegisterWith*
  attributes: []
- uid: Cephei.QL.VasicekModel.SetParams(Cephei.Cell.Generic.ICell<QLNet.Vector>)
  commentId: M:Cephei.QL.VasicekModel.SetParams(Cephei.Cell.Generic.ICell{QLNet.Vector})
  id: SetParams(Cephei.Cell.Generic.ICell<QLNet.Vector>)
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'member SetParams: ICell<Vector> -> ICell<Vasicek>'
  nameWithType: 'member VasicekModel.SetParams: ICell<Vector> -> ICell<Vasicek>'
  fullName: 'member Cephei.QL.VasicekModel.SetParams: Cephei.Cell.Generic.ICell<QLNet.Vector> -> Cephei.Cell.Generic.ICell<QLNet.Vasicek>'
  type: Method
  source:
    id: Cephei.QL.VasicekModel.SetParams(Cephei.Cell.Generic.ICell<QLNet.Vector>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 125
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member SetParams: parameters:ICell<Vector> -> ICell<Vasicek>'
    parameters:
    - id: parameters
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vasicek>
      attributes: []
  overload: Cephei.QL.VasicekModel.SetParams*
  attributes: []
- uid: Cephei.QL.VasicekModel.Tree(Cephei.Cell.Generic.ICell<QLNet.TimeGrid>)
  commentId: M:Cephei.QL.VasicekModel.Tree(Cephei.Cell.Generic.ICell{QLNet.TimeGrid})
  id: Tree(Cephei.Cell.Generic.ICell<QLNet.TimeGrid>)
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'member Tree: ICell<TimeGrid> -> ICell<Lattice>'
  nameWithType: 'member VasicekModel.Tree: ICell<TimeGrid> -> ICell<Lattice>'
  fullName: 'member Cephei.QL.VasicekModel.Tree: Cephei.Cell.Generic.ICell<QLNet.TimeGrid> -> Cephei.Cell.Generic.ICell<QLNet.Lattice>'
  type: Method
  source:
    id: Cephei.QL.VasicekModel.Tree(Cephei.Cell.Generic.ICell<QLNet.TimeGrid>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 115
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Tree: grid:ICell<TimeGrid> -> ICell<Lattice>'
    parameters:
    - id: grid
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.TimeGrid>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Lattice>
      attributes: []
  overload: Cephei.QL.VasicekModel.Tree*
  attributes: []
- uid: Cephei.QL.VasicekModel.UnregisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
  commentId: M:Cephei.QL.VasicekModel.UnregisterWith(Cephei.Cell.Generic.ICell{QLNet.Callback})
  id: UnregisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'member UnregisterWith: ICell<Callback> -> ICell<Vasicek>'
  nameWithType: 'member VasicekModel.UnregisterWith: ICell<Callback> -> ICell<Vasicek>'
  fullName: 'member Cephei.QL.VasicekModel.UnregisterWith: Cephei.Cell.Generic.ICell<QLNet.Callback> -> Cephei.Cell.Generic.ICell<QLNet.Vasicek>'
  type: Method
  source:
    id: Cephei.QL.VasicekModel.UnregisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 127
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member UnregisterWith: handler:ICell<Callback> -> ICell<Vasicek>'
    parameters:
    - id: handler
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Callback>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vasicek>
      attributes: []
  overload: Cephei.QL.VasicekModel.UnregisterWith*
  attributes: []
- uid: Cephei.QL.VasicekModel.Value(Cephei.Cell.Generic.ICell<QLNet.Vector> -> Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.CalibrationHelper>>)
  commentId: M:Cephei.QL.VasicekModel.Value(Cephei.Cell.Generic.ICell{QLNet.Vector},Cephei.Cell.Generic.ICell{System.Collections.Generic.List{QLNet.CalibrationHelper}})
  id: Value(Cephei.Cell.Generic.ICell<QLNet.Vector> -> Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.CalibrationHelper>>)
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'member Value: ICell<Vector> -> ICell<List<CalibrationHelper>> -> ICell<float>'
  nameWithType: 'member VasicekModel.Value: ICell<Vector> -> ICell<List<CalibrationHelper>> -> ICell<float>'
  fullName: 'member Cephei.QL.VasicekModel.Value: Cephei.Cell.Generic.ICell<QLNet.Vector> -> Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.CalibrationHelper>> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.VasicekModel.Value(Cephei.Cell.Generic.ICell<QLNet.Vector> -> Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.CalibrationHelper>>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 130
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Value: parameters:ICell<Vector> -> instruments:ICell<List<CalibrationHelper>> -> ICell<float>'
    parameters:
    - id: parameters
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
      attributes: []
    - id: instruments
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<QLNet.CalibrationHelper>>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.VasicekModel.Value*
  attributes: []
- uid: Cephei.QL.VasicekModel.sigma(unit)
  commentId: P:Cephei.QL.VasicekModel.sigma
  id: sigma(unit)
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'property sigma: ICell<float>'
  nameWithType: 'property VasicekModel.sigma: ICell<float>'
  fullName: 'property Cephei.QL.VasicekModel.sigma: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.VasicekModel.sigma(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 100
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property sigma: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.VasicekModel.sigma*
  attributes: []
- uid: Cephei.QL.VasicekModel.r0(unit)
  commentId: P:Cephei.QL.VasicekModel.r0
  id: r0(unit)
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'property r0: ICell<double>'
  nameWithType: 'property VasicekModel.r0: ICell<double>'
  fullName: 'property Cephei.QL.VasicekModel.r0: Cephei.Cell.Generic.ICell<double>'
  type: Property
  source:
    id: Cephei.QL.VasicekModel.r0(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 97
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property r0: ICell<double> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
  overload: Cephei.QL.VasicekModel.r0*
  attributes: []
- uid: Cephei.QL.VasicekModel.lambda(unit)
  commentId: P:Cephei.QL.VasicekModel.lambda
  id: lambda(unit)
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'property lambda: ICell<float>'
  nameWithType: 'property VasicekModel.lambda: ICell<float>'
  fullName: 'property Cephei.QL.VasicekModel.lambda: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.VasicekModel.lambda(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 101
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property lambda: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.VasicekModel.lambda*
  attributes: []
- uid: Cephei.QL.VasicekModel.b(unit)
  commentId: P:Cephei.QL.VasicekModel.b
  id: b(unit)
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'property b: ICell<float>'
  nameWithType: 'property VasicekModel.b: ICell<float>'
  fullName: 'property Cephei.QL.VasicekModel.b: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.VasicekModel.b(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 99
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property b: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.VasicekModel.b*
  attributes: []
- uid: Cephei.QL.VasicekModel.a(unit)
  commentId: P:Cephei.QL.VasicekModel.a
  id: a(unit)
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'property a: ICell<float>'
  nameWithType: 'property VasicekModel.a: ICell<float>'
  fullName: 'property Cephei.QL.VasicekModel.a: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.VasicekModel.a(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 98
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property a: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.VasicekModel.a*
  attributes: []
- uid: Cephei.QL.VasicekModel.Update(unit)
  commentId: P:Cephei.QL.VasicekModel.Update
  id: Update(unit)
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'property Update: ICell<Vasicek>'
  nameWithType: 'property VasicekModel.Update: ICell<Vasicek>'
  fullName: 'property Cephei.QL.VasicekModel.Update: Cephei.Cell.Generic.ICell<QLNet.Vasicek>'
  type: Property
  source:
    id: Cephei.QL.VasicekModel.Update(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 129
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Update: ICell<Vasicek> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vasicek>
      attributes: []
  overload: Cephei.QL.VasicekModel.Update*
  attributes: []
- uid: Cephei.QL.VasicekModel.Sigma(unit)
  commentId: P:Cephei.QL.VasicekModel.Sigma
  id: Sigma(unit)
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'property Sigma: ICell<float>'
  nameWithType: 'property VasicekModel.Sigma: ICell<float>'
  fullName: 'property Cephei.QL.VasicekModel.Sigma: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.VasicekModel.Sigma(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 108
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Sigma: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.VasicekModel.Sigma*
  attributes: []
- uid: Cephei.QL.VasicekModel.Parameters(unit)
  commentId: P:Cephei.QL.VasicekModel.Parameters
  id: Parameters(unit)
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'property Parameters: ICell<Vector>'
  nameWithType: 'property VasicekModel.Parameters: ICell<Vector>'
  fullName: 'property Cephei.QL.VasicekModel.Parameters: Cephei.Cell.Generic.ICell<QLNet.Vector>'
  type: Property
  source:
    id: Cephei.QL.VasicekModel.Parameters(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 122
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Parameters: ICell<Vector> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
      attributes: []
  overload: Cephei.QL.VasicekModel.Parameters*
  attributes: []
- uid: Cephei.QL.VasicekModel.NotifyObservers(unit)
  commentId: P:Cephei.QL.VasicekModel.NotifyObservers
  id: NotifyObservers(unit)
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'property NotifyObservers: ICell<Vasicek>'
  nameWithType: 'property VasicekModel.NotifyObservers: ICell<Vasicek>'
  fullName: 'property Cephei.QL.VasicekModel.NotifyObservers: Cephei.Cell.Generic.ICell<QLNet.Vasicek>'
  type: Property
  source:
    id: Cephei.QL.VasicekModel.NotifyObservers(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 121
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property NotifyObservers: ICell<Vasicek> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vasicek>
      attributes: []
  overload: Cephei.QL.VasicekModel.NotifyObservers*
  attributes: []
- uid: Cephei.QL.VasicekModel.Lambda(unit)
  commentId: P:Cephei.QL.VasicekModel.Lambda
  id: Lambda(unit)
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'property Lambda: ICell<float>'
  nameWithType: 'property VasicekModel.Lambda: ICell<float>'
  fullName: 'property Cephei.QL.VasicekModel.Lambda: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.VasicekModel.Lambda(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 107
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Lambda: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.VasicekModel.Lambda*
  attributes: []
- uid: Cephei.QL.VasicekModel.EndCriteria(unit)
  commentId: P:Cephei.QL.VasicekModel.EndCriteria
  id: EndCriteria(unit)
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'property EndCriteria: ICell<Type>'
  nameWithType: 'property VasicekModel.EndCriteria: ICell<Type>'
  fullName: 'property Cephei.QL.VasicekModel.EndCriteria: Cephei.Cell.Generic.ICell<QLNet.EndCriteria.Type>'
  type: Property
  source:
    id: Cephei.QL.VasicekModel.EndCriteria(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 120
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property EndCriteria: ICell<Type> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.EndCriteria.Type>
      attributes: []
  overload: Cephei.QL.VasicekModel.EndCriteria*
  attributes: []
- uid: Cephei.QL.VasicekModel.Dynamics(unit)
  commentId: P:Cephei.QL.VasicekModel.Dynamics
  id: Dynamics(unit)
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'property Dynamics: ICell<ShortRateDynamics>'
  nameWithType: 'property VasicekModel.Dynamics: ICell<ShortRateDynamics>'
  fullName: 'property Cephei.QL.VasicekModel.Dynamics: Cephei.Cell.Generic.ICell<QLNet.OneFactorModel.ShortRateDynamics>'
  type: Property
  source:
    id: Cephei.QL.VasicekModel.Dynamics(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 106
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Dynamics: ICell<ShortRateDynamics> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.OneFactorModel.ShortRateDynamics>
      attributes: []
  overload: Cephei.QL.VasicekModel.Dynamics*
  attributes: []
- uid: Cephei.QL.VasicekModel.Constraint(unit)
  commentId: P:Cephei.QL.VasicekModel.Constraint
  id: Constraint(unit)
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'property Constraint: ICell<Constraint>'
  nameWithType: 'property VasicekModel.Constraint: ICell<Constraint>'
  fullName: 'property Cephei.QL.VasicekModel.Constraint: Cephei.Cell.Generic.ICell<QLNet.Constraint>'
  type: Property
  source:
    id: Cephei.QL.VasicekModel.Constraint(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 119
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Constraint: ICell<Constraint> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Constraint>
      attributes: []
  overload: Cephei.QL.VasicekModel.Constraint*
  attributes: []
- uid: Cephei.QL.VasicekModel.B(unit)
  commentId: P:Cephei.QL.VasicekModel.B
  id: B(unit)
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'property B: ICell<float>'
  nameWithType: 'property VasicekModel.B: ICell<float>'
  fullName: 'property Cephei.QL.VasicekModel.B: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.VasicekModel.B(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 103
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property B: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.VasicekModel.B*
  attributes: []
- uid: Cephei.QL.VasicekModel.A(unit)
  commentId: P:Cephei.QL.VasicekModel.A
  id: A(unit)
  parent: Cephei.QL.VasicekModel
  langs:
  - csharp
  - vb
  name: 'property A: ICell<float>'
  nameWithType: 'property VasicekModel.A: ICell<float>'
  fullName: 'property Cephei.QL.VasicekModel.A: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.VasicekModel.A(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\VasicekModel.fs
    startLine: 102
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property A: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.VasicekModel.A*
  attributes: []
references:
- uid: Cephei.QL
  commentId: N:Cephei.QL
  name: Cephei.QL
  nameWithType: Cephei.QL
  fullName: Cephei.QL
- uid: TypeRef:System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
  spec.csharp:
  - {}
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - {}
- uid: TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: ConcurrentDictionary<string,ICell>
  nameWithType: ConcurrentDictionary<string,ICell>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Model
  name: Model
  nameWithType: Model
  fullName: Cephei.Cell.Model
  spec.csharp:
  - {}
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - {}
- uid: TypeRef:Cephei.Cell.Generic.Model`1<QLNet.Vasicek>
  name: Model<Vasicek>
  nameWithType: Model<Vasicek>
  fullName: Cephei.Cell.Generic.Model<QLNet.Vasicek>
  spec.csharp:
  - uid: Cephei.Cell.Generic.Model`1
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Generic.Model
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Vasicek
    name: Vasicek
    nameWithType: Vasicek
    fullName: QLNet.Vasicek
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vasicek>
  name: ICell<Vasicek>
  nameWithType: ICell<Vasicek>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Vasicek>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Vasicek
    name: Vasicek
    nameWithType: Vasicek
    fullName: QLNet.Vasicek
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.ICell
  name: ICell
  nameWithType: ICell
  fullName: Cephei.Cell.ICell
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - {}
- uid: TypeRef:Cephei.Cell.ICellEvent
  name: ICellEvent
  nameWithType: ICellEvent
  fullName: Cephei.Cell.ICellEvent
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICellEvent
    name: ICellEvent
    nameWithType: ICellEvent
    fullName: Cephei.Cell.ICellEvent
  - {}
- uid: TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: ICollection<KeyValuePair<string,ICell>>
  nameWithType: ICollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IDictionary<string,ICell>
  nameWithType: IDictionary<string,ICell>
  fullName: System.Collections.Generic.IDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IEnumerable<KeyValuePair<string,ICell>>
  nameWithType: IEnumerable<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IReadOnlyCollection<KeyValuePair<string,ICell>>
  nameWithType: IReadOnlyCollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IReadOnlyDictionary<string,ICell>
  nameWithType: IReadOnlyDictionary<string,ICell>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.ICollection
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
  spec.csharp:
  - {}
  - uid: System.Collections.ICollection
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.ICollection
  - {}
- uid: TypeRef:System.Collections.IDictionary
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
  spec.csharp:
  - {}
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
  - {}
- uid: TypeRef:System.Collections.IEnumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
  spec.csharp:
  - {}
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
  - {}
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  name: IObservable<ICell>
  nameWithType: IObservable<ICell>
  fullName: System.IObservable<Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.Vasicek> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * ICell<Vasicek> * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * ICell<Vasicek> * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<QLNet.Vasicek> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Vasicek
    name: Vasicek
    nameWithType: Vasicek
    fullName: QLNet.Vasicek
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<QLNet.Vasicek>
  name: IObservable<Vasicek>
  nameWithType: IObservable<Vasicek>
  fullName: System.IObservable<QLNet.Vasicek>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Vasicek
    name: Vasicek
    nameWithType: Vasicek
    fullName: QLNet.Vasicek
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.Vasicek>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,Vasicek>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,Vasicek>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,QLNet.Vasicek>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: QLNet.Vasicek
    name: Vasicek
    nameWithType: Vasicek
    fullName: QLNet.Vasicek
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  name: IObservable<KeyValuePair<string,decimal>>
  nameWithType: IObservable<KeyValuePair<string,decimal>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,decimal>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.decimal
    name: decimal
    nameWithType: decimal
    fullName: decimal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  name: IObservable<KeyValuePair<string,float>>
  nameWithType: IObservable<KeyValuePair<string,float>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,float>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  name: IObservable<KeyValuePair<string,int>>
  nameWithType: IObservable<KeyValuePair<string,int>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,int>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.int
    name: int
    nameWithType: int
    fullName: int
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObserver`1<QLNet.Vasicek>
  name: IObserver<Vasicek>
  nameWithType: IObserver<Vasicek>
  fullName: System.IObserver<QLNet.Vasicek>
  spec.csharp:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Vasicek
    name: Vasicek
    nameWithType: Vasicek
    fullName: QLNet.Vasicek
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  name: "member Bind: ICell<'T> -> unit"
  nameWithType: "member Model.Bind: ICell<'T> -> unit"
  fullName: "member Cephei.Cell.Generic.Model.Bind: Cephei.Cell.Generic.ICell<'T> -> unit"
- uid: Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  name: 'abstract member OnCompleted: unit -> unit'
  nameWithType: 'abstract member Model.OnCompleted: unit -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnCompleted: unit -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnError(exn)
  name: 'abstract member OnError: exn -> unit'
  nameWithType: 'abstract member Model.OnError: exn -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnError: exn -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnNext('T)
  name: "abstract member OnNext: 'T -> unit"
  nameWithType: "abstract member Model.OnNext: 'T -> unit"
  fullName: "abstract member Cephei.Cell.Generic.Model.OnNext: 'T -> unit"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  name: "abstract member Subscribe: IObserver<'T> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<'T> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<'T> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: "abstract member Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  name: "abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Value(unit)
  name: "abstract property Value: 'T"
  nameWithType: "abstract property Model.Value: 'T"
  fullName: "abstract property Cephei.Cell.Generic.Model.Value: 'T"
- uid: Cephei.Cell.Model.As(string)
  name: "member As: string -> ICell<'T>"
  nameWithType: "member Model.As: string -> ICell<'T>"
  fullName: "member Cephei.Cell.Model.As: string -> Cephei.Cell.Generic.ICell<'T>"
- uid: Cephei.Cell.Model.Bind(unit)
  name: 'member Bind: unit -> unit'
  nameWithType: 'member Model.Bind: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Bind: unit -> unit'
- uid: Cephei.Cell.Model.Box(unit)
  name: 'abstract property Box: obj'
  nameWithType: 'abstract property Model.Box: obj'
  fullName: 'abstract property Cephei.Cell.Model.Box: obj'
- uid: Cephei.Cell.Model.Change()
  name: 'abstract member Change: CellChange'
  nameWithType: 'abstract member Model.Change: CellChange'
  fullName: 'abstract member Cephei.Cell.Model.Change: Cephei.Cell.CellChange'
- uid: Cephei.Cell.Model.Create(Unit -> 'T * string)
  name: "member Create: Unit -> 'T * string -> Cell<'T>"
  nameWithType: "member Model.Create: Unit -> 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.Create: Unit -> 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.CreateValue('T * string)
  name: "member CreateValue: 'T * string -> Cell<'T>"
  nameWithType: "member Model.CreateValue: 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.CreateValue: 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.Dependants(unit)
  name: 'abstract property Dependants: IEnumerable<ICellEvent>'
  nameWithType: 'abstract property Model.Dependants: IEnumerable<ICellEvent>'
  fullName: 'abstract property Cephei.Cell.Model.Dependants: System.Collections.Generic.IEnumerable<Cephei.Cell.ICellEvent>'
- uid: Cephei.Cell.Model.Dispose(unit)
  name: 'member Dispose: unit -> unit'
  nameWithType: 'member Model.Dispose: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Dispose: unit -> unit'
- uid: Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  name: 'member GetOrAdd: string * ICell -> ICell'
  nameWithType: 'member Model.GetOrAdd: string * ICell -> ICell'
  fullName: 'member Cephei.Cell.Model.GetOrAdd: string * Cephei.Cell.ICell -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.HasFunction(unit)
  name: 'abstract property HasFunction: bool'
  nameWithType: 'abstract property Model.HasFunction: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasFunction: bool'
- uid: Cephei.Cell.Model.HasValue(unit)
  name: 'abstract property HasValue: bool'
  nameWithType: 'abstract property Model.HasValue: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasValue: bool'
- uid: Cephei.Cell.Model.Item(string)
  name: 'property Item: string -> ICell'
  nameWithType: 'property Model.Item: string -> ICell'
  fullName: 'property Cephei.Cell.Model.Item: string -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Mnemonic(unit)
  name: 'abstract property Mnemonic: string'
  nameWithType: 'abstract property Model.Mnemonic: string'
  fullName: 'abstract property Cephei.Cell.Model.Mnemonic: string'
- uid: Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  name: 'abstract member OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  nameWithType: 'abstract member Model.OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  fullName: 'abstract member Cephei.Cell.Model.OnChange: Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession -> unit'
- uid: Cephei.Cell.Model.Parent(unit)
  name: 'abstract property Parent: ICell'
  nameWithType: 'abstract property Model.Parent: ICell'
  fullName: 'abstract property Cephei.Cell.Model.Parent: Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  name: 'abstract member Subscribe: IObserver<ICell> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ICell> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ICell> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: 'abstract member Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,float>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,int>> -> System.IDisposable'
- uid: Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  name: 'member TryAdd: string * ICell -> bool'
  nameWithType: 'member Model.TryAdd: string * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryAdd: string * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  name: 'member TryRemove: string * ICell byref -> bool'
  nameWithType: 'member Model.TryRemove: string * ICell byref -> bool'
  fullName: 'member Cephei.Cell.Model.TryRemove: string * Cephei.Cell.ICell byref -> bool'
- uid: Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  name: 'member TryUpdate: string * ICell * ICell -> bool'
  nameWithType: 'member Model.TryUpdate: string * ICell * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryUpdate: string * Cephei.Cell.ICell * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  name: 'abstract member add_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.add_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.add_Change: Cephei.Cell.CellChange -> unit'
- uid: Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  name: 'abstract member remove_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.remove_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.remove_Change: Cephei.Cell.CellChange -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  name: 'abstract member Clear: unit -> unit'
  nameWithType: 'abstract member ConcurrentDictionary.Clear: unit -> unit'
  fullName: 'abstract member System.Collections.Concurrent.ConcurrentDictionary.Clear: unit -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  name: "abstract member ContainsKey: 'TKey -> bool"
  nameWithType: "abstract member ConcurrentDictionary.ContainsKey: 'TKey -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.ContainsKey: 'TKey -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  name: 'abstract property Count: int'
  nameWithType: 'abstract property ConcurrentDictionary.Count: int'
  fullName: 'abstract property System.Collections.Concurrent.ConcurrentDictionary.Count: int'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  name: "abstract member GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  nameWithType: "abstract member ConcurrentDictionary.GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.GetEnumerator: unit -> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<'TKey,'TValue>>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  name: "member GetOrAdd: 'TKey * 'TValue -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  name: "member GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * System.Func<'TKey,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  name: 'property IsEmpty: bool'
  nameWithType: 'property ConcurrentDictionary.IsEmpty: bool'
  fullName: 'property System.Collections.Concurrent.ConcurrentDictionary.IsEmpty: bool'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  name: "abstract property Item: 'TKey -> 'TValue"
  nameWithType: "abstract property ConcurrentDictionary.Item: 'TKey -> 'TValue"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Item: 'TKey -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  name: "abstract property Keys: ICollection<'TKey>"
  nameWithType: "abstract property ConcurrentDictionary.Keys: ICollection<'TKey>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Keys: System.Collections.Generic.ICollection<'TKey>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  name: "member ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  nameWithType: "member ConcurrentDictionary.ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.ToArray: unit -> System.Collections.Generic.KeyValuePair<'TKey,'TValue> []"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  name: "member TryAdd: 'TKey * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  name: "abstract member TryGetValue: 'TKey * 'TValue byref -> bool"
  nameWithType: "abstract member ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  name: "member TryRemove: 'TKey * 'TValue byref -> bool"
  nameWithType: "member ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  name: "member TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  name: "abstract property Values: ICollection<'TValue>"
  nameWithType: "abstract property ConcurrentDictionary.Values: ICollection<'TValue>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Values: System.Collections.Generic.ICollection<'TValue>"
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
  name: ICell<double>
  nameWithType: ICell<double>
  fullName: Cephei.Cell.Generic.ICell<double>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.double
    name: double
    nameWithType: double
    fullName: double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.VasicekModel.#ctor*
  commentId: Overload:Cephei.QL.VasicekModel.#ctor*
  name: ( .ctor )
  nameWithType: VasicekModel.( .ctor )
  fullName: Cephei.QL.VasicekModel
- uid: TypeRef:Cephei.QL.VasicekModel
  name: VasicekModel
  nameWithType: VasicekModel
  fullName: Cephei.QL.VasicekModel
  spec.csharp:
  - {}
  - uid: Cephei.QL.VasicekModel
    name: VasicekModel
    nameWithType: VasicekModel
    fullName: Cephei.QL.VasicekModel
  - {}
- uid: Cephei.QL.VasicekModel.Calibrate*
  commentId: Overload:Cephei.QL.VasicekModel.Calibrate*
  name: Calibrate
  nameWithType: VasicekModel.Calibrate
  fullName: Cephei.QL.VasicekModel.Calibrate
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<QLNet.CalibrationHelper>>
  name: ICell<List<CalibrationHelper>>
  nameWithType: ICell<List<CalibrationHelper>>
  fullName: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.CalibrationHelper>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.CalibrationHelper
    name: CalibrationHelper
    nameWithType: CalibrationHelper
    fullName: QLNet.CalibrationHelper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.OptimizationMethod>
  name: ICell<OptimizationMethod>
  nameWithType: ICell<OptimizationMethod>
  fullName: Cephei.Cell.Generic.ICell<QLNet.OptimizationMethod>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.OptimizationMethod
    name: OptimizationMethod
    nameWithType: OptimizationMethod
    fullName: QLNet.OptimizationMethod
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.EndCriteria>
  name: ICell<EndCriteria>
  nameWithType: ICell<EndCriteria>
  fullName: Cephei.Cell.Generic.ICell<QLNet.EndCriteria>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.EndCriteria
    name: EndCriteria
    nameWithType: EndCriteria
    fullName: QLNet.EndCriteria
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Constraint>
  name: ICell<Constraint>
  nameWithType: ICell<Constraint>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Constraint>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Constraint
    name: Constraint
    nameWithType: Constraint
    fullName: QLNet.Constraint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.double>>
  name: ICell<List<double>>
  nameWithType: ICell<List<double>>
  fullName: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.double
    name: double
    nameWithType: double
    fullName: double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.bool>>
  name: ICell<List<bool>>
  nameWithType: ICell<List<bool>>
  fullName: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<bool>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.bool
    name: bool
    nameWithType: bool
    fullName: bool
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.VasicekModel.Discount*
  commentId: Overload:Cephei.QL.VasicekModel.Discount*
  name: Discount
  nameWithType: VasicekModel.Discount
  fullName: Cephei.QL.VasicekModel.Discount
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
  name: ICell<float>
  nameWithType: ICell<float>
  fullName: Cephei.Cell.Generic.ICell<float>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.VasicekModel.DiscountBond*
  commentId: Overload:Cephei.QL.VasicekModel.DiscountBond*
  name: DiscountBond
  nameWithType: VasicekModel.DiscountBond
  fullName: Cephei.QL.VasicekModel.DiscountBond
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Vector>
  name: ICell<Vector>
  nameWithType: ICell<Vector>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Vector>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Vector
    name: Vector
    nameWithType: Vector
    fullName: QLNet.Vector
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.VasicekModel.DiscountBond1*
  commentId: Overload:Cephei.QL.VasicekModel.DiscountBond1*
  name: DiscountBond1
  nameWithType: VasicekModel.DiscountBond1
  fullName: Cephei.QL.VasicekModel.DiscountBond1
- uid: Cephei.QL.VasicekModel.DiscountBondOption*
  commentId: Overload:Cephei.QL.VasicekModel.DiscountBondOption*
  name: DiscountBondOption
  nameWithType: VasicekModel.DiscountBondOption
  fullName: Cephei.QL.VasicekModel.DiscountBondOption
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Option.Type>
  name: ICell<Type>
  nameWithType: ICell<Type>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Option.Type>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Option.Type
    name: Type
    nameWithType: Type
    fullName: QLNet.Option.Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.VasicekModel.RegisterWith*
  commentId: Overload:Cephei.QL.VasicekModel.RegisterWith*
  name: RegisterWith
  nameWithType: VasicekModel.RegisterWith
  fullName: Cephei.QL.VasicekModel.RegisterWith
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Callback>
  name: ICell<Callback>
  nameWithType: ICell<Callback>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Callback>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Callback
    name: Callback
    nameWithType: Callback
    fullName: QLNet.Callback
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.VasicekModel.SetParams*
  commentId: Overload:Cephei.QL.VasicekModel.SetParams*
  name: SetParams
  nameWithType: VasicekModel.SetParams
  fullName: Cephei.QL.VasicekModel.SetParams
- uid: Cephei.QL.VasicekModel.Tree*
  commentId: Overload:Cephei.QL.VasicekModel.Tree*
  name: Tree
  nameWithType: VasicekModel.Tree
  fullName: Cephei.QL.VasicekModel.Tree
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.TimeGrid>
  name: ICell<TimeGrid>
  nameWithType: ICell<TimeGrid>
  fullName: Cephei.Cell.Generic.ICell<QLNet.TimeGrid>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.TimeGrid
    name: TimeGrid
    nameWithType: TimeGrid
    fullName: QLNet.TimeGrid
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Lattice>
  name: ICell<Lattice>
  nameWithType: ICell<Lattice>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Lattice>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Lattice
    name: Lattice
    nameWithType: Lattice
    fullName: QLNet.Lattice
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.VasicekModel.UnregisterWith*
  commentId: Overload:Cephei.QL.VasicekModel.UnregisterWith*
  name: UnregisterWith
  nameWithType: VasicekModel.UnregisterWith
  fullName: Cephei.QL.VasicekModel.UnregisterWith
- uid: Cephei.QL.VasicekModel.Value*
  commentId: Overload:Cephei.QL.VasicekModel.Value*
  name: Value
  nameWithType: VasicekModel.Value
  fullName: Cephei.QL.VasicekModel.Value
- uid: Cephei.QL.VasicekModel.sigma*
  commentId: Overload:Cephei.QL.VasicekModel.sigma*
  name: sigma
  nameWithType: VasicekModel.sigma
  fullName: Cephei.QL.VasicekModel.sigma
- uid: Cephei.QL.VasicekModel.r0*
  commentId: Overload:Cephei.QL.VasicekModel.r0*
  name: r0
  nameWithType: VasicekModel.r0
  fullName: Cephei.QL.VasicekModel.r0
- uid: Cephei.QL.VasicekModel.lambda*
  commentId: Overload:Cephei.QL.VasicekModel.lambda*
  name: lambda
  nameWithType: VasicekModel.lambda
  fullName: Cephei.QL.VasicekModel.lambda
- uid: Cephei.QL.VasicekModel.b*
  commentId: Overload:Cephei.QL.VasicekModel.b*
  name: b
  nameWithType: VasicekModel.b
  fullName: Cephei.QL.VasicekModel.b
- uid: Cephei.QL.VasicekModel.a*
  commentId: Overload:Cephei.QL.VasicekModel.a*
  name: a
  nameWithType: VasicekModel.a
  fullName: Cephei.QL.VasicekModel.a
- uid: Cephei.QL.VasicekModel.Update*
  commentId: Overload:Cephei.QL.VasicekModel.Update*
  name: Update
  nameWithType: VasicekModel.Update
  fullName: Cephei.QL.VasicekModel.Update
- uid: Cephei.QL.VasicekModel.Sigma*
  commentId: Overload:Cephei.QL.VasicekModel.Sigma*
  name: Sigma
  nameWithType: VasicekModel.Sigma
  fullName: Cephei.QL.VasicekModel.Sigma
- uid: Cephei.QL.VasicekModel.Parameters*
  commentId: Overload:Cephei.QL.VasicekModel.Parameters*
  name: Parameters
  nameWithType: VasicekModel.Parameters
  fullName: Cephei.QL.VasicekModel.Parameters
- uid: Cephei.QL.VasicekModel.NotifyObservers*
  commentId: Overload:Cephei.QL.VasicekModel.NotifyObservers*
  name: NotifyObservers
  nameWithType: VasicekModel.NotifyObservers
  fullName: Cephei.QL.VasicekModel.NotifyObservers
- uid: Cephei.QL.VasicekModel.Lambda*
  commentId: Overload:Cephei.QL.VasicekModel.Lambda*
  name: Lambda
  nameWithType: VasicekModel.Lambda
  fullName: Cephei.QL.VasicekModel.Lambda
- uid: Cephei.QL.VasicekModel.EndCriteria*
  commentId: Overload:Cephei.QL.VasicekModel.EndCriteria*
  name: EndCriteria
  nameWithType: VasicekModel.EndCriteria
  fullName: Cephei.QL.VasicekModel.EndCriteria
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.EndCriteria.Type>
  name: ICell<Type>
  nameWithType: ICell<Type>
  fullName: Cephei.Cell.Generic.ICell<QLNet.EndCriteria.Type>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.EndCriteria.Type
    name: Type
    nameWithType: Type
    fullName: QLNet.EndCriteria.Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.VasicekModel.Dynamics*
  commentId: Overload:Cephei.QL.VasicekModel.Dynamics*
  name: Dynamics
  nameWithType: VasicekModel.Dynamics
  fullName: Cephei.QL.VasicekModel.Dynamics
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.OneFactorModel.ShortRateDynamics>
  name: ICell<ShortRateDynamics>
  nameWithType: ICell<ShortRateDynamics>
  fullName: Cephei.Cell.Generic.ICell<QLNet.OneFactorModel.ShortRateDynamics>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.OneFactorModel.ShortRateDynamics
    name: ShortRateDynamics
    nameWithType: ShortRateDynamics
    fullName: QLNet.OneFactorModel.ShortRateDynamics
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.VasicekModel.Constraint*
  commentId: Overload:Cephei.QL.VasicekModel.Constraint*
  name: Constraint
  nameWithType: VasicekModel.Constraint
  fullName: Cephei.QL.VasicekModel.Constraint
- uid: Cephei.QL.VasicekModel.B*
  commentId: Overload:Cephei.QL.VasicekModel.B*
  name: B
  nameWithType: VasicekModel.B
  fullName: Cephei.QL.VasicekModel.B
- uid: Cephei.QL.VasicekModel.A*
  commentId: Overload:Cephei.QL.VasicekModel.A*
  name: A
  nameWithType: VasicekModel.A
  fullName: Cephei.QL.VasicekModel.A
