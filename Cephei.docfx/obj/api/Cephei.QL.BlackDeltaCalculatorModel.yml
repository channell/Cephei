### YamlMime:ManagedReference
items:
- uid: Cephei.QL.BlackDeltaCalculatorModel
  commentId: T:Cephei.QL.BlackDeltaCalculatorModel
  id: BlackDeltaCalculatorModel
  parent: Cephei.QL
  children:
  - Cephei.QL.BlackDeltaCalculatorModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.Option.Type> * Cephei.Cell.Generic.ICell<QLNet.DeltaVolQuote.DeltaType> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.BlackDeltaCalculatorModel.AtmStrike(Cephei.Cell.Generic.ICell<QLNet.DeltaVolQuote.AtmType>)
  - Cephei.QL.BlackDeltaCalculatorModel.CumD1(Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.BlackDeltaCalculatorModel.CumD2(Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.BlackDeltaCalculatorModel.dDiscount(unit)
  - Cephei.QL.BlackDeltaCalculatorModel.DeltaFromStrike(Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.BlackDeltaCalculatorModel.dt(unit)
  - Cephei.QL.BlackDeltaCalculatorModel.fDiscount(unit)
  - Cephei.QL.BlackDeltaCalculatorModel.ND1(Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.BlackDeltaCalculatorModel.ND2(Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.BlackDeltaCalculatorModel.ot(unit)
  - Cephei.QL.BlackDeltaCalculatorModel.SetDeltaType(Cephei.Cell.Generic.ICell<QLNet.DeltaVolQuote.DeltaType>)
  - Cephei.QL.BlackDeltaCalculatorModel.SetOptionType(Cephei.Cell.Generic.ICell<QLNet.Option.Type>)
  - Cephei.QL.BlackDeltaCalculatorModel.spot(unit)
  - Cephei.QL.BlackDeltaCalculatorModel.stdDev(unit)
  - Cephei.QL.BlackDeltaCalculatorModel.StrikeFromDelta(Cephei.Cell.Generic.ICell<double>)
  langs:
  - csharp
  - vb
  name: BlackDeltaCalculatorModel
  nameWithType: Cephei.QL.BlackDeltaCalculatorModel
  fullName: Cephei.QL.BlackDeltaCalculatorModel
  type: Class
  source:
    id: Cephei.QL.BlackDeltaCalculatorModel
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BlackDeltaCalculatorModel.fs
    startLine: 35
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: >-
      [<AutoSerializable(true)>]

      type BlackDeltaCalculatorModel (ot:ICell<Type>, dt:ICell<DeltaType>, spot:ICell<double>, dDiscount:ICell<double>, fDiscount:ICell<double>, stdDev:ICell<double>)
          inherit Model<BlackDeltaCalculator>
          interface IDictionary<string,ICell>
          interface ICollection<KeyValuePair<string,ICell>>
          interface IReadOnlyDictionary<string,ICell>
          interface IReadOnlyCollection<KeyValuePair<string,ICell>>
          interface IEnumerable<KeyValuePair<string,ICell>>
          interface IDictionary
          interface ICollection
          interface IEnumerable
          interface IObservable<ICell>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
          interface IObservable<ISession * Model * CellEvent * ICell * DateTime>
          interface IObservable<KeyValuePair<string,float>>
          interface IObservable<KeyValuePair<string,int>>
          interface IObservable<KeyValuePair<string,decimal>>
          interface ICell<BlackDeltaCalculator>
          interface ICell
          interface ICellEvent
          interface IObservable<BlackDeltaCalculator>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,BlackDeltaCalculator>>>
          interface IObservable<ISession * ICell<BlackDeltaCalculator> * CellEvent * ICell * DateTime>
          interface IObserver<BlackDeltaCalculator>
    parameters:
    - id: ot
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Option.Type>
      attributes: []
    - id: dt
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DeltaVolQuote.DeltaType>
      attributes: []
    - id: spot
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: dDiscount
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: fDiscount
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: stdDev
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
  inheritance:
  - TypeRef:System.Object
  - TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:Cephei.Cell.Model
  - TypeRef:Cephei.Cell.Generic.Model`1<QLNet.BlackDeltaCalculator>
  implements:
  - TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BlackDeltaCalculator>
  - TypeRef:Cephei.Cell.ICell
  - TypeRef:Cephei.Cell.ICellEvent
  - TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.ICollection
  - TypeRef:System.Collections.IDictionary
  - TypeRef:System.Collections.IEnumerable
  - TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.BlackDeltaCalculator> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<QLNet.BlackDeltaCalculator>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.BlackDeltaCalculator>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  - TypeRef:System.IObserver`1<QLNet.BlackDeltaCalculator>
  inheritedMembers:
  - Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  - Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  - Cephei.Cell.Generic.Model`1.OnError(exn)
  - Cephei.Cell.Generic.Model`1.OnNext('T)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  - Cephei.Cell.Generic.Model`1.Value(unit)
  - Cephei.Cell.Model.As(string)
  - Cephei.Cell.Model.Bind(unit)
  - Cephei.Cell.Model.Box(unit)
  - Cephei.Cell.Model.Change()
  - Cephei.Cell.Model.Create(Unit -> 'T * string)
  - Cephei.Cell.Model.CreateValue('T * string)
  - Cephei.Cell.Model.Dependants(unit)
  - Cephei.Cell.Model.Dispose(unit)
  - Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.HasFunction(unit)
  - Cephei.Cell.Model.HasValue(unit)
  - Cephei.Cell.Model.Item(string)
  - Cephei.Cell.Model.Mnemonic(unit)
  - Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  - Cephei.Cell.Model.Parent(unit)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  - Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  - Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  - Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  - Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  attributes:
  - type: Microsoft.FSharp.Core.AutoSerializableAttribute
    arguments:
    - type: System.Boolean
      value: true
    namedArguments: []
- uid: Cephei.QL.BlackDeltaCalculatorModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.Option.Type> * Cephei.Cell.Generic.ICell<QLNet.DeltaVolQuote.DeltaType> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.BlackDeltaCalculatorModel.#ctor(Cephei.Cell.Generic.ICell{QLNet.Option.Type},Cephei.Cell.Generic.ICell{QLNet.DeltaVolQuote.DeltaType},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Double})
  id: '#ctor(Cephei.Cell.Generic.ICell<QLNet.Option.Type> * Cephei.Cell.Generic.ICell<QLNet.DeltaVolQuote.DeltaType> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double>)'
  parent: Cephei.QL.BlackDeltaCalculatorModel
  langs:
  - csharp
  - vb
  name: 'new: ICell<Type> * ICell<DeltaType> * ICell<double> * ICell<double> * ICell<double> * ICell<double> -> BlackDeltaCalculatorModel'
  nameWithType: 'new: ICell<Type> * ICell<DeltaType> * ICell<double> * ICell<double> * ICell<double> * ICell<double> -> BlackDeltaCalculatorModel'
  fullName: 'new: Cephei.Cell.Generic.ICell<QLNet.Option.Type> * Cephei.Cell.Generic.ICell<QLNet.DeltaVolQuote.DeltaType> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> -> Cephei.QL.BlackDeltaCalculatorModel'
  type: Constructor
  source:
    id: Cephei.QL.BlackDeltaCalculatorModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.Option.Type> * Cephei.Cell.Generic.ICell<QLNet.DeltaVolQuote.DeltaType> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BlackDeltaCalculatorModel.fs
    startLine: 35
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  summary: Implicit constructor.
  syntax:
    content: 'new: ot:ICell<Type> * dt:ICell<DeltaType> * spot:ICell<double> * dDiscount:ICell<double> * fDiscount:ICell<double> * stdDev:ICell<double> -> BlackDeltaCalculatorModel'
    parameters:
    - id: ot
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Option.Type>
      attributes: []
    - id: dt
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DeltaVolQuote.DeltaType>
      attributes: []
    - id: spot
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: dDiscount
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: fDiscount
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: stdDev
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.QL.BlackDeltaCalculatorModel
      attributes: []
  overload: Cephei.QL.BlackDeltaCalculatorModel.#ctor*
  attributes: []
- uid: Cephei.QL.BlackDeltaCalculatorModel.AtmStrike(Cephei.Cell.Generic.ICell<QLNet.DeltaVolQuote.AtmType>)
  commentId: M:Cephei.QL.BlackDeltaCalculatorModel.AtmStrike(Cephei.Cell.Generic.ICell{QLNet.DeltaVolQuote.AtmType})
  id: AtmStrike(Cephei.Cell.Generic.ICell<QLNet.DeltaVolQuote.AtmType>)
  parent: Cephei.QL.BlackDeltaCalculatorModel
  langs:
  - csharp
  - vb
  name: 'member AtmStrike: ICell<AtmType> -> ICell<float>'
  nameWithType: 'member BlackDeltaCalculatorModel.AtmStrike: ICell<AtmType> -> ICell<float>'
  fullName: 'member Cephei.QL.BlackDeltaCalculatorModel.AtmStrike: Cephei.Cell.Generic.ICell<QLNet.DeltaVolQuote.AtmType> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.BlackDeltaCalculatorModel.AtmStrike(Cephei.Cell.Generic.ICell<QLNet.DeltaVolQuote.AtmType>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BlackDeltaCalculatorModel.fs
    startLine: 89
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member AtmStrike: atmT:ICell<AtmType> -> ICell<float>'
    parameters:
    - id: atmT
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DeltaVolQuote.AtmType>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.BlackDeltaCalculatorModel.AtmStrike*
  attributes: []
- uid: Cephei.QL.BlackDeltaCalculatorModel.CumD1(Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.BlackDeltaCalculatorModel.CumD1(Cephei.Cell.Generic.ICell{System.Double})
  id: CumD1(Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.BlackDeltaCalculatorModel
  langs:
  - csharp
  - vb
  name: 'member CumD1: ICell<double> -> ICell<float>'
  nameWithType: 'member BlackDeltaCalculatorModel.CumD1: ICell<double> -> ICell<float>'
  fullName: 'member Cephei.QL.BlackDeltaCalculatorModel.CumD1: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.BlackDeltaCalculatorModel.CumD1(Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BlackDeltaCalculatorModel.fs
    startLine: 91
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member CumD1: strike:ICell<double> -> ICell<float>'
    parameters:
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.BlackDeltaCalculatorModel.CumD1*
  attributes: []
- uid: Cephei.QL.BlackDeltaCalculatorModel.CumD2(Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.BlackDeltaCalculatorModel.CumD2(Cephei.Cell.Generic.ICell{System.Double})
  id: CumD2(Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.BlackDeltaCalculatorModel
  langs:
  - csharp
  - vb
  name: 'member CumD2: ICell<double> -> ICell<float>'
  nameWithType: 'member BlackDeltaCalculatorModel.CumD2: ICell<double> -> ICell<float>'
  fullName: 'member Cephei.QL.BlackDeltaCalculatorModel.CumD2: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.BlackDeltaCalculatorModel.CumD2(Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BlackDeltaCalculatorModel.fs
    startLine: 93
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member CumD2: strike:ICell<double> -> ICell<float>'
    parameters:
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.BlackDeltaCalculatorModel.CumD2*
  attributes: []
- uid: Cephei.QL.BlackDeltaCalculatorModel.DeltaFromStrike(Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.BlackDeltaCalculatorModel.DeltaFromStrike(Cephei.Cell.Generic.ICell{System.Double})
  id: DeltaFromStrike(Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.BlackDeltaCalculatorModel
  langs:
  - csharp
  - vb
  name: 'member DeltaFromStrike: ICell<double> -> ICell<float>'
  nameWithType: 'member BlackDeltaCalculatorModel.DeltaFromStrike: ICell<double> -> ICell<float>'
  fullName: 'member Cephei.QL.BlackDeltaCalculatorModel.DeltaFromStrike: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.BlackDeltaCalculatorModel.DeltaFromStrike(Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BlackDeltaCalculatorModel.fs
    startLine: 95
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member DeltaFromStrike: strike:ICell<double> -> ICell<float>'
    parameters:
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.BlackDeltaCalculatorModel.DeltaFromStrike*
  attributes: []
- uid: Cephei.QL.BlackDeltaCalculatorModel.ND1(Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.BlackDeltaCalculatorModel.ND1(Cephei.Cell.Generic.ICell{System.Double})
  id: ND1(Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.BlackDeltaCalculatorModel
  langs:
  - csharp
  - vb
  name: 'member ND1: ICell<double> -> ICell<float>'
  nameWithType: 'member BlackDeltaCalculatorModel.ND1: ICell<double> -> ICell<float>'
  fullName: 'member Cephei.QL.BlackDeltaCalculatorModel.ND1: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.BlackDeltaCalculatorModel.ND1(Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BlackDeltaCalculatorModel.fs
    startLine: 97
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member ND1: strike:ICell<double> -> ICell<float>'
    parameters:
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.BlackDeltaCalculatorModel.ND1*
  attributes: []
- uid: Cephei.QL.BlackDeltaCalculatorModel.ND2(Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.BlackDeltaCalculatorModel.ND2(Cephei.Cell.Generic.ICell{System.Double})
  id: ND2(Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.BlackDeltaCalculatorModel
  langs:
  - csharp
  - vb
  name: 'member ND2: ICell<double> -> ICell<float>'
  nameWithType: 'member BlackDeltaCalculatorModel.ND2: ICell<double> -> ICell<float>'
  fullName: 'member Cephei.QL.BlackDeltaCalculatorModel.ND2: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.BlackDeltaCalculatorModel.ND2(Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BlackDeltaCalculatorModel.fs
    startLine: 99
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member ND2: strike:ICell<double> -> ICell<float>'
    parameters:
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.BlackDeltaCalculatorModel.ND2*
  attributes: []
- uid: Cephei.QL.BlackDeltaCalculatorModel.SetDeltaType(Cephei.Cell.Generic.ICell<QLNet.DeltaVolQuote.DeltaType>)
  commentId: M:Cephei.QL.BlackDeltaCalculatorModel.SetDeltaType(Cephei.Cell.Generic.ICell{QLNet.DeltaVolQuote.DeltaType})
  id: SetDeltaType(Cephei.Cell.Generic.ICell<QLNet.DeltaVolQuote.DeltaType>)
  parent: Cephei.QL.BlackDeltaCalculatorModel
  langs:
  - csharp
  - vb
  name: 'member SetDeltaType: ICell<DeltaType> -> ICell<BlackDeltaCalculator>'
  nameWithType: 'member BlackDeltaCalculatorModel.SetDeltaType: ICell<DeltaType> -> ICell<BlackDeltaCalculator>'
  fullName: 'member Cephei.QL.BlackDeltaCalculatorModel.SetDeltaType: Cephei.Cell.Generic.ICell<QLNet.DeltaVolQuote.DeltaType> -> Cephei.Cell.Generic.ICell<QLNet.BlackDeltaCalculator>'
  type: Method
  source:
    id: Cephei.QL.BlackDeltaCalculatorModel.SetDeltaType(Cephei.Cell.Generic.ICell<QLNet.DeltaVolQuote.DeltaType>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BlackDeltaCalculatorModel.fs
    startLine: 101
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member SetDeltaType: dt:ICell<DeltaType> -> ICell<BlackDeltaCalculator>'
    parameters:
    - id: dt
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DeltaVolQuote.DeltaType>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BlackDeltaCalculator>
      attributes: []
  overload: Cephei.QL.BlackDeltaCalculatorModel.SetDeltaType*
  attributes: []
- uid: Cephei.QL.BlackDeltaCalculatorModel.SetOptionType(Cephei.Cell.Generic.ICell<QLNet.Option.Type>)
  commentId: M:Cephei.QL.BlackDeltaCalculatorModel.SetOptionType(Cephei.Cell.Generic.ICell{QLNet.Option.Type})
  id: SetOptionType(Cephei.Cell.Generic.ICell<QLNet.Option.Type>)
  parent: Cephei.QL.BlackDeltaCalculatorModel
  langs:
  - csharp
  - vb
  name: 'member SetOptionType: ICell<Type> -> ICell<BlackDeltaCalculator>'
  nameWithType: 'member BlackDeltaCalculatorModel.SetOptionType: ICell<Type> -> ICell<BlackDeltaCalculator>'
  fullName: 'member Cephei.QL.BlackDeltaCalculatorModel.SetOptionType: Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<QLNet.BlackDeltaCalculator>'
  type: Method
  source:
    id: Cephei.QL.BlackDeltaCalculatorModel.SetOptionType(Cephei.Cell.Generic.ICell<QLNet.Option.Type>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BlackDeltaCalculatorModel.fs
    startLine: 103
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member SetOptionType: ot:ICell<Type> -> ICell<BlackDeltaCalculator>'
    parameters:
    - id: ot
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Option.Type>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BlackDeltaCalculator>
      attributes: []
  overload: Cephei.QL.BlackDeltaCalculatorModel.SetOptionType*
  attributes: []
- uid: Cephei.QL.BlackDeltaCalculatorModel.StrikeFromDelta(Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.BlackDeltaCalculatorModel.StrikeFromDelta(Cephei.Cell.Generic.ICell{System.Double})
  id: StrikeFromDelta(Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.BlackDeltaCalculatorModel
  langs:
  - csharp
  - vb
  name: 'member StrikeFromDelta: ICell<double> -> ICell<float>'
  nameWithType: 'member BlackDeltaCalculatorModel.StrikeFromDelta: ICell<double> -> ICell<float>'
  fullName: 'member Cephei.QL.BlackDeltaCalculatorModel.StrikeFromDelta: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.BlackDeltaCalculatorModel.StrikeFromDelta(Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BlackDeltaCalculatorModel.fs
    startLine: 105
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member StrikeFromDelta: delta:ICell<double> -> ICell<float>'
    parameters:
    - id: delta
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.BlackDeltaCalculatorModel.StrikeFromDelta*
  attributes: []
- uid: Cephei.QL.BlackDeltaCalculatorModel.stdDev(unit)
  commentId: P:Cephei.QL.BlackDeltaCalculatorModel.stdDev
  id: stdDev(unit)
  parent: Cephei.QL.BlackDeltaCalculatorModel
  langs:
  - csharp
  - vb
  name: 'property stdDev: ICell<double>'
  nameWithType: 'property BlackDeltaCalculatorModel.stdDev: ICell<double>'
  fullName: 'property Cephei.QL.BlackDeltaCalculatorModel.stdDev: Cephei.Cell.Generic.ICell<double>'
  type: Property
  source:
    id: Cephei.QL.BlackDeltaCalculatorModel.stdDev(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BlackDeltaCalculatorModel.fs
    startLine: 88
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property stdDev: ICell<double> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
  overload: Cephei.QL.BlackDeltaCalculatorModel.stdDev*
  attributes: []
- uid: Cephei.QL.BlackDeltaCalculatorModel.spot(unit)
  commentId: P:Cephei.QL.BlackDeltaCalculatorModel.spot
  id: spot(unit)
  parent: Cephei.QL.BlackDeltaCalculatorModel
  langs:
  - csharp
  - vb
  name: 'property spot: ICell<double>'
  nameWithType: 'property BlackDeltaCalculatorModel.spot: ICell<double>'
  fullName: 'property Cephei.QL.BlackDeltaCalculatorModel.spot: Cephei.Cell.Generic.ICell<double>'
  type: Property
  source:
    id: Cephei.QL.BlackDeltaCalculatorModel.spot(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BlackDeltaCalculatorModel.fs
    startLine: 85
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property spot: ICell<double> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
  overload: Cephei.QL.BlackDeltaCalculatorModel.spot*
  attributes: []
- uid: Cephei.QL.BlackDeltaCalculatorModel.ot(unit)
  commentId: P:Cephei.QL.BlackDeltaCalculatorModel.ot
  id: ot(unit)
  parent: Cephei.QL.BlackDeltaCalculatorModel
  langs:
  - csharp
  - vb
  name: 'property ot: ICell<Type>'
  nameWithType: 'property BlackDeltaCalculatorModel.ot: ICell<Type>'
  fullName: 'property Cephei.QL.BlackDeltaCalculatorModel.ot: Cephei.Cell.Generic.ICell<QLNet.Option.Type>'
  type: Property
  source:
    id: Cephei.QL.BlackDeltaCalculatorModel.ot(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BlackDeltaCalculatorModel.fs
    startLine: 83
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property ot: ICell<Type> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Option.Type>
      attributes: []
  overload: Cephei.QL.BlackDeltaCalculatorModel.ot*
  attributes: []
- uid: Cephei.QL.BlackDeltaCalculatorModel.fDiscount(unit)
  commentId: P:Cephei.QL.BlackDeltaCalculatorModel.fDiscount
  id: fDiscount(unit)
  parent: Cephei.QL.BlackDeltaCalculatorModel
  langs:
  - csharp
  - vb
  name: 'property fDiscount: ICell<double>'
  nameWithType: 'property BlackDeltaCalculatorModel.fDiscount: ICell<double>'
  fullName: 'property Cephei.QL.BlackDeltaCalculatorModel.fDiscount: Cephei.Cell.Generic.ICell<double>'
  type: Property
  source:
    id: Cephei.QL.BlackDeltaCalculatorModel.fDiscount(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BlackDeltaCalculatorModel.fs
    startLine: 87
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property fDiscount: ICell<double> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
  overload: Cephei.QL.BlackDeltaCalculatorModel.fDiscount*
  attributes: []
- uid: Cephei.QL.BlackDeltaCalculatorModel.dt(unit)
  commentId: P:Cephei.QL.BlackDeltaCalculatorModel.dt
  id: dt(unit)
  parent: Cephei.QL.BlackDeltaCalculatorModel
  langs:
  - csharp
  - vb
  name: 'property dt: ICell<DeltaType>'
  nameWithType: 'property BlackDeltaCalculatorModel.dt: ICell<DeltaType>'
  fullName: 'property Cephei.QL.BlackDeltaCalculatorModel.dt: Cephei.Cell.Generic.ICell<QLNet.DeltaVolQuote.DeltaType>'
  type: Property
  source:
    id: Cephei.QL.BlackDeltaCalculatorModel.dt(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BlackDeltaCalculatorModel.fs
    startLine: 84
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property dt: ICell<DeltaType> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DeltaVolQuote.DeltaType>
      attributes: []
  overload: Cephei.QL.BlackDeltaCalculatorModel.dt*
  attributes: []
- uid: Cephei.QL.BlackDeltaCalculatorModel.dDiscount(unit)
  commentId: P:Cephei.QL.BlackDeltaCalculatorModel.dDiscount
  id: dDiscount(unit)
  parent: Cephei.QL.BlackDeltaCalculatorModel
  langs:
  - csharp
  - vb
  name: 'property dDiscount: ICell<double>'
  nameWithType: 'property BlackDeltaCalculatorModel.dDiscount: ICell<double>'
  fullName: 'property Cephei.QL.BlackDeltaCalculatorModel.dDiscount: Cephei.Cell.Generic.ICell<double>'
  type: Property
  source:
    id: Cephei.QL.BlackDeltaCalculatorModel.dDiscount(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\BlackDeltaCalculatorModel.fs
    startLine: 86
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property dDiscount: ICell<double> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
  overload: Cephei.QL.BlackDeltaCalculatorModel.dDiscount*
  attributes: []
references:
- uid: Cephei.QL
  commentId: N:Cephei.QL
  name: Cephei.QL
  nameWithType: Cephei.QL
  fullName: Cephei.QL
- uid: TypeRef:System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
  spec.csharp:
  - {}
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - {}
- uid: TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: ConcurrentDictionary<string,ICell>
  nameWithType: ConcurrentDictionary<string,ICell>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Model
  name: Model
  nameWithType: Model
  fullName: Cephei.Cell.Model
  spec.csharp:
  - {}
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - {}
- uid: TypeRef:Cephei.Cell.Generic.Model`1<QLNet.BlackDeltaCalculator>
  name: Model<BlackDeltaCalculator>
  nameWithType: Model<BlackDeltaCalculator>
  fullName: Cephei.Cell.Generic.Model<QLNet.BlackDeltaCalculator>
  spec.csharp:
  - uid: Cephei.Cell.Generic.Model`1
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Generic.Model
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.BlackDeltaCalculator
    name: BlackDeltaCalculator
    nameWithType: BlackDeltaCalculator
    fullName: QLNet.BlackDeltaCalculator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BlackDeltaCalculator>
  name: ICell<BlackDeltaCalculator>
  nameWithType: ICell<BlackDeltaCalculator>
  fullName: Cephei.Cell.Generic.ICell<QLNet.BlackDeltaCalculator>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.BlackDeltaCalculator
    name: BlackDeltaCalculator
    nameWithType: BlackDeltaCalculator
    fullName: QLNet.BlackDeltaCalculator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.ICell
  name: ICell
  nameWithType: ICell
  fullName: Cephei.Cell.ICell
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - {}
- uid: TypeRef:Cephei.Cell.ICellEvent
  name: ICellEvent
  nameWithType: ICellEvent
  fullName: Cephei.Cell.ICellEvent
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICellEvent
    name: ICellEvent
    nameWithType: ICellEvent
    fullName: Cephei.Cell.ICellEvent
  - {}
- uid: TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: ICollection<KeyValuePair<string,ICell>>
  nameWithType: ICollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IDictionary<string,ICell>
  nameWithType: IDictionary<string,ICell>
  fullName: System.Collections.Generic.IDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IEnumerable<KeyValuePair<string,ICell>>
  nameWithType: IEnumerable<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IReadOnlyCollection<KeyValuePair<string,ICell>>
  nameWithType: IReadOnlyCollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IReadOnlyDictionary<string,ICell>
  nameWithType: IReadOnlyDictionary<string,ICell>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.ICollection
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
  spec.csharp:
  - {}
  - uid: System.Collections.ICollection
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.ICollection
  - {}
- uid: TypeRef:System.Collections.IDictionary
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
  spec.csharp:
  - {}
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
  - {}
- uid: TypeRef:System.Collections.IEnumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
  spec.csharp:
  - {}
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
  - {}
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  name: IObservable<ICell>
  nameWithType: IObservable<ICell>
  fullName: System.IObservable<Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.BlackDeltaCalculator> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * ICell<BlackDeltaCalculator> * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * ICell<BlackDeltaCalculator> * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<QLNet.BlackDeltaCalculator> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.BlackDeltaCalculator
    name: BlackDeltaCalculator
    nameWithType: BlackDeltaCalculator
    fullName: QLNet.BlackDeltaCalculator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<QLNet.BlackDeltaCalculator>
  name: IObservable<BlackDeltaCalculator>
  nameWithType: IObservable<BlackDeltaCalculator>
  fullName: System.IObservable<QLNet.BlackDeltaCalculator>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.BlackDeltaCalculator
    name: BlackDeltaCalculator
    nameWithType: BlackDeltaCalculator
    fullName: QLNet.BlackDeltaCalculator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.BlackDeltaCalculator>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,BlackDeltaCalculator>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,BlackDeltaCalculator>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,QLNet.BlackDeltaCalculator>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: QLNet.BlackDeltaCalculator
    name: BlackDeltaCalculator
    nameWithType: BlackDeltaCalculator
    fullName: QLNet.BlackDeltaCalculator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  name: IObservable<KeyValuePair<string,decimal>>
  nameWithType: IObservable<KeyValuePair<string,decimal>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,decimal>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.decimal
    name: decimal
    nameWithType: decimal
    fullName: decimal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  name: IObservable<KeyValuePair<string,float>>
  nameWithType: IObservable<KeyValuePair<string,float>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,float>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  name: IObservable<KeyValuePair<string,int>>
  nameWithType: IObservable<KeyValuePair<string,int>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,int>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.int
    name: int
    nameWithType: int
    fullName: int
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObserver`1<QLNet.BlackDeltaCalculator>
  name: IObserver<BlackDeltaCalculator>
  nameWithType: IObserver<BlackDeltaCalculator>
  fullName: System.IObserver<QLNet.BlackDeltaCalculator>
  spec.csharp:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.BlackDeltaCalculator
    name: BlackDeltaCalculator
    nameWithType: BlackDeltaCalculator
    fullName: QLNet.BlackDeltaCalculator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  name: "member Bind: ICell<'T> -> unit"
  nameWithType: "member Model.Bind: ICell<'T> -> unit"
  fullName: "member Cephei.Cell.Generic.Model.Bind: Cephei.Cell.Generic.ICell<'T> -> unit"
- uid: Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  name: 'abstract member OnCompleted: unit -> unit'
  nameWithType: 'abstract member Model.OnCompleted: unit -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnCompleted: unit -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnError(exn)
  name: 'abstract member OnError: exn -> unit'
  nameWithType: 'abstract member Model.OnError: exn -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnError: exn -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnNext('T)
  name: "abstract member OnNext: 'T -> unit"
  nameWithType: "abstract member Model.OnNext: 'T -> unit"
  fullName: "abstract member Cephei.Cell.Generic.Model.OnNext: 'T -> unit"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  name: "abstract member Subscribe: IObserver<'T> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<'T> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<'T> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: "abstract member Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  name: "abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Value(unit)
  name: "abstract property Value: 'T"
  nameWithType: "abstract property Model.Value: 'T"
  fullName: "abstract property Cephei.Cell.Generic.Model.Value: 'T"
- uid: Cephei.Cell.Model.As(string)
  name: "member As: string -> ICell<'T>"
  nameWithType: "member Model.As: string -> ICell<'T>"
  fullName: "member Cephei.Cell.Model.As: string -> Cephei.Cell.Generic.ICell<'T>"
- uid: Cephei.Cell.Model.Bind(unit)
  name: 'member Bind: unit -> unit'
  nameWithType: 'member Model.Bind: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Bind: unit -> unit'
- uid: Cephei.Cell.Model.Box(unit)
  name: 'abstract property Box: obj'
  nameWithType: 'abstract property Model.Box: obj'
  fullName: 'abstract property Cephei.Cell.Model.Box: obj'
- uid: Cephei.Cell.Model.Change()
  name: 'abstract member Change: CellChange'
  nameWithType: 'abstract member Model.Change: CellChange'
  fullName: 'abstract member Cephei.Cell.Model.Change: Cephei.Cell.CellChange'
- uid: Cephei.Cell.Model.Create(Unit -> 'T * string)
  name: "member Create: Unit -> 'T * string -> Cell<'T>"
  nameWithType: "member Model.Create: Unit -> 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.Create: Unit -> 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.CreateValue('T * string)
  name: "member CreateValue: 'T * string -> Cell<'T>"
  nameWithType: "member Model.CreateValue: 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.CreateValue: 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.Dependants(unit)
  name: 'abstract property Dependants: IEnumerable<ICellEvent>'
  nameWithType: 'abstract property Model.Dependants: IEnumerable<ICellEvent>'
  fullName: 'abstract property Cephei.Cell.Model.Dependants: System.Collections.Generic.IEnumerable<Cephei.Cell.ICellEvent>'
- uid: Cephei.Cell.Model.Dispose(unit)
  name: 'member Dispose: unit -> unit'
  nameWithType: 'member Model.Dispose: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Dispose: unit -> unit'
- uid: Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  name: 'member GetOrAdd: string * ICell -> ICell'
  nameWithType: 'member Model.GetOrAdd: string * ICell -> ICell'
  fullName: 'member Cephei.Cell.Model.GetOrAdd: string * Cephei.Cell.ICell -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.HasFunction(unit)
  name: 'abstract property HasFunction: bool'
  nameWithType: 'abstract property Model.HasFunction: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasFunction: bool'
- uid: Cephei.Cell.Model.HasValue(unit)
  name: 'abstract property HasValue: bool'
  nameWithType: 'abstract property Model.HasValue: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasValue: bool'
- uid: Cephei.Cell.Model.Item(string)
  name: 'property Item: string -> ICell'
  nameWithType: 'property Model.Item: string -> ICell'
  fullName: 'property Cephei.Cell.Model.Item: string -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Mnemonic(unit)
  name: 'abstract property Mnemonic: string'
  nameWithType: 'abstract property Model.Mnemonic: string'
  fullName: 'abstract property Cephei.Cell.Model.Mnemonic: string'
- uid: Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  name: 'abstract member OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  nameWithType: 'abstract member Model.OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  fullName: 'abstract member Cephei.Cell.Model.OnChange: Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession -> unit'
- uid: Cephei.Cell.Model.Parent(unit)
  name: 'abstract property Parent: ICell'
  nameWithType: 'abstract property Model.Parent: ICell'
  fullName: 'abstract property Cephei.Cell.Model.Parent: Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  name: 'abstract member Subscribe: IObserver<ICell> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ICell> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ICell> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: 'abstract member Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,float>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,int>> -> System.IDisposable'
- uid: Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  name: 'member TryAdd: string * ICell -> bool'
  nameWithType: 'member Model.TryAdd: string * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryAdd: string * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  name: 'member TryRemove: string * ICell byref -> bool'
  nameWithType: 'member Model.TryRemove: string * ICell byref -> bool'
  fullName: 'member Cephei.Cell.Model.TryRemove: string * Cephei.Cell.ICell byref -> bool'
- uid: Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  name: 'member TryUpdate: string * ICell * ICell -> bool'
  nameWithType: 'member Model.TryUpdate: string * ICell * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryUpdate: string * Cephei.Cell.ICell * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  name: 'abstract member add_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.add_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.add_Change: Cephei.Cell.CellChange -> unit'
- uid: Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  name: 'abstract member remove_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.remove_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.remove_Change: Cephei.Cell.CellChange -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  name: 'abstract member Clear: unit -> unit'
  nameWithType: 'abstract member ConcurrentDictionary.Clear: unit -> unit'
  fullName: 'abstract member System.Collections.Concurrent.ConcurrentDictionary.Clear: unit -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  name: "abstract member ContainsKey: 'TKey -> bool"
  nameWithType: "abstract member ConcurrentDictionary.ContainsKey: 'TKey -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.ContainsKey: 'TKey -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  name: 'abstract property Count: int'
  nameWithType: 'abstract property ConcurrentDictionary.Count: int'
  fullName: 'abstract property System.Collections.Concurrent.ConcurrentDictionary.Count: int'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  name: "abstract member GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  nameWithType: "abstract member ConcurrentDictionary.GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.GetEnumerator: unit -> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<'TKey,'TValue>>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  name: "member GetOrAdd: 'TKey * 'TValue -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  name: "member GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * System.Func<'TKey,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  name: 'property IsEmpty: bool'
  nameWithType: 'property ConcurrentDictionary.IsEmpty: bool'
  fullName: 'property System.Collections.Concurrent.ConcurrentDictionary.IsEmpty: bool'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  name: "abstract property Item: 'TKey -> 'TValue"
  nameWithType: "abstract property ConcurrentDictionary.Item: 'TKey -> 'TValue"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Item: 'TKey -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  name: "abstract property Keys: ICollection<'TKey>"
  nameWithType: "abstract property ConcurrentDictionary.Keys: ICollection<'TKey>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Keys: System.Collections.Generic.ICollection<'TKey>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  name: "member ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  nameWithType: "member ConcurrentDictionary.ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.ToArray: unit -> System.Collections.Generic.KeyValuePair<'TKey,'TValue> []"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  name: "member TryAdd: 'TKey * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  name: "abstract member TryGetValue: 'TKey * 'TValue byref -> bool"
  nameWithType: "abstract member ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  name: "member TryRemove: 'TKey * 'TValue byref -> bool"
  nameWithType: "member ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  name: "member TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  name: "abstract property Values: ICollection<'TValue>"
  nameWithType: "abstract property ConcurrentDictionary.Values: ICollection<'TValue>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Values: System.Collections.Generic.ICollection<'TValue>"
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Option.Type>
  name: ICell<Type>
  nameWithType: ICell<Type>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Option.Type>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Option.Type
    name: Type
    nameWithType: Type
    fullName: QLNet.Option.Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DeltaVolQuote.DeltaType>
  name: ICell<DeltaType>
  nameWithType: ICell<DeltaType>
  fullName: Cephei.Cell.Generic.ICell<QLNet.DeltaVolQuote.DeltaType>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.DeltaVolQuote.DeltaType
    name: DeltaType
    nameWithType: DeltaType
    fullName: QLNet.DeltaVolQuote.DeltaType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
  name: ICell<double>
  nameWithType: ICell<double>
  fullName: Cephei.Cell.Generic.ICell<double>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.double
    name: double
    nameWithType: double
    fullName: double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.BlackDeltaCalculatorModel.#ctor*
  commentId: Overload:Cephei.QL.BlackDeltaCalculatorModel.#ctor*
  name: ( .ctor )
  nameWithType: BlackDeltaCalculatorModel.( .ctor )
  fullName: Cephei.QL.BlackDeltaCalculatorModel
- uid: TypeRef:Cephei.QL.BlackDeltaCalculatorModel
  name: BlackDeltaCalculatorModel
  nameWithType: BlackDeltaCalculatorModel
  fullName: Cephei.QL.BlackDeltaCalculatorModel
  spec.csharp:
  - {}
  - uid: Cephei.QL.BlackDeltaCalculatorModel
    name: BlackDeltaCalculatorModel
    nameWithType: BlackDeltaCalculatorModel
    fullName: Cephei.QL.BlackDeltaCalculatorModel
  - {}
- uid: Cephei.QL.BlackDeltaCalculatorModel.AtmStrike*
  commentId: Overload:Cephei.QL.BlackDeltaCalculatorModel.AtmStrike*
  name: AtmStrike
  nameWithType: BlackDeltaCalculatorModel.AtmStrike
  fullName: Cephei.QL.BlackDeltaCalculatorModel.AtmStrike
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DeltaVolQuote.AtmType>
  name: ICell<AtmType>
  nameWithType: ICell<AtmType>
  fullName: Cephei.Cell.Generic.ICell<QLNet.DeltaVolQuote.AtmType>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.DeltaVolQuote.AtmType
    name: AtmType
    nameWithType: AtmType
    fullName: QLNet.DeltaVolQuote.AtmType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
  name: ICell<float>
  nameWithType: ICell<float>
  fullName: Cephei.Cell.Generic.ICell<float>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.BlackDeltaCalculatorModel.CumD1*
  commentId: Overload:Cephei.QL.BlackDeltaCalculatorModel.CumD1*
  name: CumD1
  nameWithType: BlackDeltaCalculatorModel.CumD1
  fullName: Cephei.QL.BlackDeltaCalculatorModel.CumD1
- uid: Cephei.QL.BlackDeltaCalculatorModel.CumD2*
  commentId: Overload:Cephei.QL.BlackDeltaCalculatorModel.CumD2*
  name: CumD2
  nameWithType: BlackDeltaCalculatorModel.CumD2
  fullName: Cephei.QL.BlackDeltaCalculatorModel.CumD2
- uid: Cephei.QL.BlackDeltaCalculatorModel.DeltaFromStrike*
  commentId: Overload:Cephei.QL.BlackDeltaCalculatorModel.DeltaFromStrike*
  name: DeltaFromStrike
  nameWithType: BlackDeltaCalculatorModel.DeltaFromStrike
  fullName: Cephei.QL.BlackDeltaCalculatorModel.DeltaFromStrike
- uid: Cephei.QL.BlackDeltaCalculatorModel.ND1*
  commentId: Overload:Cephei.QL.BlackDeltaCalculatorModel.ND1*
  name: ND1
  nameWithType: BlackDeltaCalculatorModel.ND1
  fullName: Cephei.QL.BlackDeltaCalculatorModel.ND1
- uid: Cephei.QL.BlackDeltaCalculatorModel.ND2*
  commentId: Overload:Cephei.QL.BlackDeltaCalculatorModel.ND2*
  name: ND2
  nameWithType: BlackDeltaCalculatorModel.ND2
  fullName: Cephei.QL.BlackDeltaCalculatorModel.ND2
- uid: Cephei.QL.BlackDeltaCalculatorModel.SetDeltaType*
  commentId: Overload:Cephei.QL.BlackDeltaCalculatorModel.SetDeltaType*
  name: SetDeltaType
  nameWithType: BlackDeltaCalculatorModel.SetDeltaType
  fullName: Cephei.QL.BlackDeltaCalculatorModel.SetDeltaType
- uid: Cephei.QL.BlackDeltaCalculatorModel.SetOptionType*
  commentId: Overload:Cephei.QL.BlackDeltaCalculatorModel.SetOptionType*
  name: SetOptionType
  nameWithType: BlackDeltaCalculatorModel.SetOptionType
  fullName: Cephei.QL.BlackDeltaCalculatorModel.SetOptionType
- uid: Cephei.QL.BlackDeltaCalculatorModel.StrikeFromDelta*
  commentId: Overload:Cephei.QL.BlackDeltaCalculatorModel.StrikeFromDelta*
  name: StrikeFromDelta
  nameWithType: BlackDeltaCalculatorModel.StrikeFromDelta
  fullName: Cephei.QL.BlackDeltaCalculatorModel.StrikeFromDelta
- uid: Cephei.QL.BlackDeltaCalculatorModel.stdDev*
  commentId: Overload:Cephei.QL.BlackDeltaCalculatorModel.stdDev*
  name: stdDev
  nameWithType: BlackDeltaCalculatorModel.stdDev
  fullName: Cephei.QL.BlackDeltaCalculatorModel.stdDev
- uid: Cephei.QL.BlackDeltaCalculatorModel.spot*
  commentId: Overload:Cephei.QL.BlackDeltaCalculatorModel.spot*
  name: spot
  nameWithType: BlackDeltaCalculatorModel.spot
  fullName: Cephei.QL.BlackDeltaCalculatorModel.spot
- uid: Cephei.QL.BlackDeltaCalculatorModel.ot*
  commentId: Overload:Cephei.QL.BlackDeltaCalculatorModel.ot*
  name: ot
  nameWithType: BlackDeltaCalculatorModel.ot
  fullName: Cephei.QL.BlackDeltaCalculatorModel.ot
- uid: Cephei.QL.BlackDeltaCalculatorModel.fDiscount*
  commentId: Overload:Cephei.QL.BlackDeltaCalculatorModel.fDiscount*
  name: fDiscount
  nameWithType: BlackDeltaCalculatorModel.fDiscount
  fullName: Cephei.QL.BlackDeltaCalculatorModel.fDiscount
- uid: Cephei.QL.BlackDeltaCalculatorModel.dt*
  commentId: Overload:Cephei.QL.BlackDeltaCalculatorModel.dt*
  name: dt
  nameWithType: BlackDeltaCalculatorModel.dt
  fullName: Cephei.QL.BlackDeltaCalculatorModel.dt
- uid: Cephei.QL.BlackDeltaCalculatorModel.dDiscount*
  commentId: Overload:Cephei.QL.BlackDeltaCalculatorModel.dDiscount*
  name: dDiscount
  nameWithType: BlackDeltaCalculatorModel.dDiscount
  fullName: Cephei.QL.BlackDeltaCalculatorModel.dDiscount
