### YamlMime:ManagedReference
items:
- uid: Cephei.QL.StrippedOptionletAdapterModel
  commentId: T:Cephei.QL.StrippedOptionletAdapterModel
  id: StrippedOptionletAdapterModel
  parent: Cephei.QL
  children:
  - Cephei.QL.StrippedOptionletAdapterModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.StrippedOptionletBase>)
  - Cephei.QL.StrippedOptionletAdapterModel.AllowsExtrapolation(unit)
  - Cephei.QL.StrippedOptionletAdapterModel.BlackVariance(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
  - Cephei.QL.StrippedOptionletAdapterModel.BlackVariance1(Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
  - Cephei.QL.StrippedOptionletAdapterModel.BlackVariance2(Cephei.Cell.Generic.ICell<QLNet.Period> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
  - Cephei.QL.StrippedOptionletAdapterModel.BusinessDayConvention(unit)
  - Cephei.QL.StrippedOptionletAdapterModel.Calendar(unit)
  - Cephei.QL.StrippedOptionletAdapterModel.DayCounter(unit)
  - Cephei.QL.StrippedOptionletAdapterModel.DisableExtrapolation(Cephei.Cell.Generic.ICell<bool>)
  - Cephei.QL.StrippedOptionletAdapterModel.Displacement(unit)
  - Cephei.QL.StrippedOptionletAdapterModel.EnableExtrapolation(Cephei.Cell.Generic.ICell<bool>)
  - Cephei.QL.StrippedOptionletAdapterModel.Extrapolate(unit)
  - Cephei.QL.StrippedOptionletAdapterModel.MaxDate(unit)
  - Cephei.QL.StrippedOptionletAdapterModel.MaxStrike(unit)
  - Cephei.QL.StrippedOptionletAdapterModel.MaxTime(unit)
  - Cephei.QL.StrippedOptionletAdapterModel.MinStrike(unit)
  - Cephei.QL.StrippedOptionletAdapterModel.OptionDateFromTenor(Cephei.Cell.Generic.ICell<QLNet.Period>)
  - Cephei.QL.StrippedOptionletAdapterModel.ReferenceDate(unit)
  - Cephei.QL.StrippedOptionletAdapterModel.s(unit)
  - Cephei.QL.StrippedOptionletAdapterModel.SettlementDays(unit)
  - Cephei.QL.StrippedOptionletAdapterModel.SmileSection(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
  - Cephei.QL.StrippedOptionletAdapterModel.SmileSection1(Cephei.Cell.Generic.ICell<QLNet.Period> -> Cephei.Cell.Generic.ICell<bool>)
  - Cephei.QL.StrippedOptionletAdapterModel.SmileSection2(Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<bool>)
  - Cephei.QL.StrippedOptionletAdapterModel.TimeFromReference(Cephei.Cell.Generic.ICell<QLNet.Date>)
  - Cephei.QL.StrippedOptionletAdapterModel.Update(unit)
  - Cephei.QL.StrippedOptionletAdapterModel.Volatility(Cephei.Cell.Generic.ICell<QLNet.Period> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
  - Cephei.QL.StrippedOptionletAdapterModel.Volatility1(Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
  - Cephei.QL.StrippedOptionletAdapterModel.Volatility2(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
  - Cephei.QL.StrippedOptionletAdapterModel.VolatilityType(unit)
  langs:
  - csharp
  - vb
  name: StrippedOptionletAdapterModel
  nameWithType: Cephei.QL.StrippedOptionletAdapterModel
  fullName: Cephei.QL.StrippedOptionletAdapterModel
  type: Class
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 35
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: >-
      [<AutoSerializable(true)>]

      type StrippedOptionletAdapterModel (s:ICell<StrippedOptionletBase>)
          inherit Model<StrippedOptionletAdapter>
          interface IDictionary<string,ICell>
          interface ICollection<KeyValuePair<string,ICell>>
          interface IReadOnlyDictionary<string,ICell>
          interface IReadOnlyCollection<KeyValuePair<string,ICell>>
          interface IEnumerable<KeyValuePair<string,ICell>>
          interface IDictionary
          interface ICollection
          interface IEnumerable
          interface IObservable<ICell>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
          interface IObservable<ISession * Model * CellEvent * ICell * DateTime>
          interface IObservable<KeyValuePair<string,float>>
          interface IObservable<KeyValuePair<string,int>>
          interface IObservable<KeyValuePair<string,decimal>>
          interface ICell<StrippedOptionletAdapter>
          interface ICell
          interface ICellEvent
          interface IObservable<StrippedOptionletAdapter>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,StrippedOptionletAdapter>>>
          interface IObservable<ISession * ICell<StrippedOptionletAdapter> * CellEvent * ICell * DateTime>
          interface IObserver<StrippedOptionletAdapter>
    parameters:
    - id: s
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.StrippedOptionletBase>
      attributes: []
    typeParameters: []
  inheritance:
  - TypeRef:System.Object
  - TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:Cephei.Cell.Model
  - TypeRef:Cephei.Cell.Generic.Model`1<QLNet.StrippedOptionletAdapter>
  implements:
  - TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.StrippedOptionletAdapter>
  - TypeRef:Cephei.Cell.ICell
  - TypeRef:Cephei.Cell.ICellEvent
  - TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.ICollection
  - TypeRef:System.Collections.IDictionary
  - TypeRef:System.Collections.IEnumerable
  - TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.StrippedOptionletAdapter> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<QLNet.StrippedOptionletAdapter>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.StrippedOptionletAdapter>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  - TypeRef:System.IObserver`1<QLNet.StrippedOptionletAdapter>
  inheritedMembers:
  - Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  - Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  - Cephei.Cell.Generic.Model`1.OnError(exn)
  - Cephei.Cell.Generic.Model`1.OnNext('T)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  - Cephei.Cell.Generic.Model`1.Value(unit)
  - Cephei.Cell.Model.As(string)
  - Cephei.Cell.Model.Bind(unit)
  - Cephei.Cell.Model.Box(unit)
  - Cephei.Cell.Model.Change()
  - Cephei.Cell.Model.Create(Unit -> 'T * string)
  - Cephei.Cell.Model.CreateValue('T * string)
  - Cephei.Cell.Model.Dependants(unit)
  - Cephei.Cell.Model.Dispose(unit)
  - Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.HasFunction(unit)
  - Cephei.Cell.Model.HasValue(unit)
  - Cephei.Cell.Model.Item(string)
  - Cephei.Cell.Model.Mnemonic(unit)
  - Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  - Cephei.Cell.Model.Parent(unit)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  - Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  - Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  - Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  - Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  attributes:
  - type: Microsoft.FSharp.Core.AutoSerializableAttribute
    arguments:
    - type: System.Boolean
      value: true
    namedArguments: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.StrippedOptionletBase>)
  commentId: M:Cephei.QL.StrippedOptionletAdapterModel.#ctor(Cephei.Cell.Generic.ICell{QLNet.StrippedOptionletBase})
  id: '#ctor(Cephei.Cell.Generic.ICell<QLNet.StrippedOptionletBase>)'
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'new: ICell<StrippedOptionletBase> -> StrippedOptionletAdapterModel'
  nameWithType: 'new: ICell<StrippedOptionletBase> -> StrippedOptionletAdapterModel'
  fullName: 'new: Cephei.Cell.Generic.ICell<QLNet.StrippedOptionletBase> -> Cephei.QL.StrippedOptionletAdapterModel'
  type: Constructor
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.StrippedOptionletBase>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 35
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  summary: Implicit constructor.
  syntax:
    content: 'new: s:ICell<StrippedOptionletBase> -> StrippedOptionletAdapterModel'
    parameters:
    - id: s
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.StrippedOptionletBase>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.QL.StrippedOptionletAdapterModel
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.#ctor*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.BlackVariance(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
  commentId: M:Cephei.QL.StrippedOptionletAdapterModel.BlackVariance(Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Boolean})
  id: BlackVariance(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'member BlackVariance: ICell<double> -> ICell<double> -> ICell<bool> -> ICell<float>'
  nameWithType: 'member StrippedOptionletAdapterModel.BlackVariance: ICell<double> -> ICell<double> -> ICell<bool> -> ICell<float>'
  fullName: 'member Cephei.QL.StrippedOptionletAdapterModel.BlackVariance: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.BlackVariance(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 103
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member BlackVariance: optionTime:ICell<double> -> strike:ICell<double> -> extrapolate:ICell<bool> -> ICell<float>'
    parameters:
    - id: optionTime
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: extrapolate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.BlackVariance*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.BlackVariance1(Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
  commentId: M:Cephei.QL.StrippedOptionletAdapterModel.BlackVariance1(Cephei.Cell.Generic.ICell{QLNet.Date},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Boolean})
  id: BlackVariance1(Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'member BlackVariance1: ICell<Date> -> ICell<double> -> ICell<bool> -> ICell<float>'
  nameWithType: 'member StrippedOptionletAdapterModel.BlackVariance1: ICell<Date> -> ICell<double> -> ICell<bool> -> ICell<float>'
  fullName: 'member Cephei.QL.StrippedOptionletAdapterModel.BlackVariance1: Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.BlackVariance1(Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 105
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member BlackVariance1: optionDate:ICell<Date> -> strike:ICell<double> -> extrapolate:ICell<bool> -> ICell<float>'
    parameters:
    - id: optionDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: extrapolate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.BlackVariance1*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.BlackVariance2(Cephei.Cell.Generic.ICell<QLNet.Period> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
  commentId: M:Cephei.QL.StrippedOptionletAdapterModel.BlackVariance2(Cephei.Cell.Generic.ICell{QLNet.Period},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Boolean})
  id: BlackVariance2(Cephei.Cell.Generic.ICell<QLNet.Period> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'member BlackVariance2: ICell<Period> -> ICell<double> -> ICell<bool> -> ICell<float>'
  nameWithType: 'member StrippedOptionletAdapterModel.BlackVariance2: ICell<Period> -> ICell<double> -> ICell<bool> -> ICell<float>'
  fullName: 'member Cephei.QL.StrippedOptionletAdapterModel.BlackVariance2: Cephei.Cell.Generic.ICell<QLNet.Period> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.BlackVariance2(Cephei.Cell.Generic.ICell<QLNet.Period> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 107
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member BlackVariance2: optionTenor:ICell<Period> -> strike:ICell<double> -> extrapolate:ICell<bool> -> ICell<float>'
    parameters:
    - id: optionTenor
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
      attributes: []
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: extrapolate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.BlackVariance2*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.DisableExtrapolation(Cephei.Cell.Generic.ICell<bool>)
  commentId: M:Cephei.QL.StrippedOptionletAdapterModel.DisableExtrapolation(Cephei.Cell.Generic.ICell{System.Boolean})
  id: DisableExtrapolation(Cephei.Cell.Generic.ICell<bool>)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'member DisableExtrapolation: ICell<bool> -> ICell<StrippedOptionletAdapter>'
  nameWithType: 'member StrippedOptionletAdapterModel.DisableExtrapolation: ICell<bool> -> ICell<StrippedOptionletAdapter>'
  fullName: 'member Cephei.QL.StrippedOptionletAdapterModel.DisableExtrapolation: Cephei.Cell.Generic.ICell<bool> -> Cephei.Cell.Generic.ICell<QLNet.StrippedOptionletAdapter>'
  type: Method
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.DisableExtrapolation(Cephei.Cell.Generic.ICell<bool>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 132
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member DisableExtrapolation: b:ICell<bool> -> ICell<StrippedOptionletAdapter>'
    parameters:
    - id: b
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.StrippedOptionletAdapter>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.DisableExtrapolation*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.EnableExtrapolation(Cephei.Cell.Generic.ICell<bool>)
  commentId: M:Cephei.QL.StrippedOptionletAdapterModel.EnableExtrapolation(Cephei.Cell.Generic.ICell{System.Boolean})
  id: EnableExtrapolation(Cephei.Cell.Generic.ICell<bool>)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'member EnableExtrapolation: ICell<bool> -> ICell<StrippedOptionletAdapter>'
  nameWithType: 'member StrippedOptionletAdapterModel.EnableExtrapolation: ICell<bool> -> ICell<StrippedOptionletAdapter>'
  fullName: 'member Cephei.QL.StrippedOptionletAdapterModel.EnableExtrapolation: Cephei.Cell.Generic.ICell<bool> -> Cephei.Cell.Generic.ICell<QLNet.StrippedOptionletAdapter>'
  type: Method
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.EnableExtrapolation(Cephei.Cell.Generic.ICell<bool>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 134
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member EnableExtrapolation: b:ICell<bool> -> ICell<StrippedOptionletAdapter>'
    parameters:
    - id: b
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.StrippedOptionletAdapter>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.EnableExtrapolation*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.OptionDateFromTenor(Cephei.Cell.Generic.ICell<QLNet.Period>)
  commentId: M:Cephei.QL.StrippedOptionletAdapterModel.OptionDateFromTenor(Cephei.Cell.Generic.ICell{QLNet.Period})
  id: OptionDateFromTenor(Cephei.Cell.Generic.ICell<QLNet.Period>)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'member OptionDateFromTenor: ICell<Period> -> ICell<Date>'
  nameWithType: 'member StrippedOptionletAdapterModel.OptionDateFromTenor: ICell<Period> -> ICell<Date>'
  fullName: 'member Cephei.QL.StrippedOptionletAdapterModel.OptionDateFromTenor: Cephei.Cell.Generic.ICell<QLNet.Period> -> Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Method
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.OptionDateFromTenor(Cephei.Cell.Generic.ICell<QLNet.Period>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 122
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member OptionDateFromTenor: p:ICell<Period> -> ICell<Date>'
    parameters:
    - id: p
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.OptionDateFromTenor*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.SmileSection(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
  commentId: M:Cephei.QL.StrippedOptionletAdapterModel.SmileSection(Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Boolean})
  id: SmileSection(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'member SmileSection: ICell<double> -> ICell<bool> -> ICell<SmileSection>'
  nameWithType: 'member StrippedOptionletAdapterModel.SmileSection: ICell<double> -> ICell<bool> -> ICell<SmileSection>'
  fullName: 'member Cephei.QL.StrippedOptionletAdapterModel.SmileSection: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool> -> Cephei.Cell.Generic.ICell<QLNet.SmileSection>'
  type: Method
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.SmileSection(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 109
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member SmileSection: optionTime:ICell<double> -> extr:ICell<bool> -> ICell<SmileSection>'
    parameters:
    - id: optionTime
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: extr
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.SmileSection>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.SmileSection*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.SmileSection1(Cephei.Cell.Generic.ICell<QLNet.Period> -> Cephei.Cell.Generic.ICell<bool>)
  commentId: M:Cephei.QL.StrippedOptionletAdapterModel.SmileSection1(Cephei.Cell.Generic.ICell{QLNet.Period},Cephei.Cell.Generic.ICell{System.Boolean})
  id: SmileSection1(Cephei.Cell.Generic.ICell<QLNet.Period> -> Cephei.Cell.Generic.ICell<bool>)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'member SmileSection1: ICell<Period> -> ICell<bool> -> ICell<SmileSection>'
  nameWithType: 'member StrippedOptionletAdapterModel.SmileSection1: ICell<Period> -> ICell<bool> -> ICell<SmileSection>'
  fullName: 'member Cephei.QL.StrippedOptionletAdapterModel.SmileSection1: Cephei.Cell.Generic.ICell<QLNet.Period> -> Cephei.Cell.Generic.ICell<bool> -> Cephei.Cell.Generic.ICell<QLNet.SmileSection>'
  type: Method
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.SmileSection1(Cephei.Cell.Generic.ICell<QLNet.Period> -> Cephei.Cell.Generic.ICell<bool>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 111
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member SmileSection1: optionTenor:ICell<Period> -> extr:ICell<bool> -> ICell<SmileSection>'
    parameters:
    - id: optionTenor
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
      attributes: []
    - id: extr
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.SmileSection>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.SmileSection1*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.SmileSection2(Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<bool>)
  commentId: M:Cephei.QL.StrippedOptionletAdapterModel.SmileSection2(Cephei.Cell.Generic.ICell{QLNet.Date},Cephei.Cell.Generic.ICell{System.Boolean})
  id: SmileSection2(Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<bool>)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'member SmileSection2: ICell<Date> -> ICell<bool> -> ICell<SmileSection>'
  nameWithType: 'member StrippedOptionletAdapterModel.SmileSection2: ICell<Date> -> ICell<bool> -> ICell<SmileSection>'
  fullName: 'member Cephei.QL.StrippedOptionletAdapterModel.SmileSection2: Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<bool> -> Cephei.Cell.Generic.ICell<QLNet.SmileSection>'
  type: Method
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.SmileSection2(Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<bool>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 113
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member SmileSection2: optionDate:ICell<Date> -> extr:ICell<bool> -> ICell<SmileSection>'
    parameters:
    - id: optionDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    - id: extr
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.SmileSection>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.SmileSection2*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.TimeFromReference(Cephei.Cell.Generic.ICell<QLNet.Date>)
  commentId: M:Cephei.QL.StrippedOptionletAdapterModel.TimeFromReference(Cephei.Cell.Generic.ICell{QLNet.Date})
  id: TimeFromReference(Cephei.Cell.Generic.ICell<QLNet.Date>)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'member TimeFromReference: ICell<Date> -> ICell<float>'
  nameWithType: 'member StrippedOptionletAdapterModel.TimeFromReference: ICell<Date> -> ICell<float>'
  fullName: 'member Cephei.QL.StrippedOptionletAdapterModel.TimeFromReference: Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.TimeFromReference(Cephei.Cell.Generic.ICell<QLNet.Date>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 129
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member TimeFromReference: date:ICell<Date> -> ICell<float>'
    parameters:
    - id: date
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.TimeFromReference*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.Volatility(Cephei.Cell.Generic.ICell<QLNet.Period> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
  commentId: M:Cephei.QL.StrippedOptionletAdapterModel.Volatility(Cephei.Cell.Generic.ICell{QLNet.Period},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Boolean})
  id: Volatility(Cephei.Cell.Generic.ICell<QLNet.Period> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'member Volatility: ICell<Period> -> ICell<double> -> ICell<bool> -> ICell<float>'
  nameWithType: 'member StrippedOptionletAdapterModel.Volatility: ICell<Period> -> ICell<double> -> ICell<bool> -> ICell<float>'
  fullName: 'member Cephei.QL.StrippedOptionletAdapterModel.Volatility: Cephei.Cell.Generic.ICell<QLNet.Period> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.Volatility(Cephei.Cell.Generic.ICell<QLNet.Period> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 115
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Volatility: optionTenor:ICell<Period> -> strike:ICell<double> -> extrapolate:ICell<bool> -> ICell<float>'
    parameters:
    - id: optionTenor
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
      attributes: []
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: extrapolate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.Volatility*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.Volatility1(Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
  commentId: M:Cephei.QL.StrippedOptionletAdapterModel.Volatility1(Cephei.Cell.Generic.ICell{QLNet.Date},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Boolean})
  id: Volatility1(Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'member Volatility1: ICell<Date> -> ICell<double> -> ICell<bool> -> ICell<float>'
  nameWithType: 'member StrippedOptionletAdapterModel.Volatility1: ICell<Date> -> ICell<double> -> ICell<bool> -> ICell<float>'
  fullName: 'member Cephei.QL.StrippedOptionletAdapterModel.Volatility1: Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.Volatility1(Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 117
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Volatility1: optionDate:ICell<Date> -> strike:ICell<double> -> extrapolate:ICell<bool> -> ICell<float>'
    parameters:
    - id: optionDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: extrapolate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.Volatility1*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.Volatility2(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
  commentId: M:Cephei.QL.StrippedOptionletAdapterModel.Volatility2(Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Boolean})
  id: Volatility2(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'member Volatility2: ICell<double> -> ICell<double> -> ICell<bool> -> ICell<float>'
  nameWithType: 'member StrippedOptionletAdapterModel.Volatility2: ICell<double> -> ICell<double> -> ICell<bool> -> ICell<float>'
  fullName: 'member Cephei.QL.StrippedOptionletAdapterModel.Volatility2: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.Volatility2(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<bool>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 119
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Volatility2: optionTime:ICell<double> -> strike:ICell<double> -> extrapolate:ICell<bool> -> ICell<float>'
    parameters:
    - id: optionTime
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: extrapolate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.Volatility2*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.s(unit)
  commentId: P:Cephei.QL.StrippedOptionletAdapterModel.s
  id: s(unit)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'property s: ICell<StrippedOptionletBase>'
  nameWithType: 'property StrippedOptionletAdapterModel.s: ICell<StrippedOptionletBase>'
  fullName: 'property Cephei.QL.StrippedOptionletAdapterModel.s: Cephei.Cell.Generic.ICell<QLNet.StrippedOptionletBase>'
  type: Property
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.s(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 96
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property s: ICell<StrippedOptionletBase> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.StrippedOptionletBase>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.s*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.VolatilityType(unit)
  commentId: P:Cephei.QL.StrippedOptionletAdapterModel.VolatilityType
  id: VolatilityType(unit)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'property VolatilityType: ICell<VolatilityType>'
  nameWithType: 'property StrippedOptionletAdapterModel.VolatilityType: ICell<VolatilityType>'
  fullName: 'property Cephei.QL.StrippedOptionletAdapterModel.VolatilityType: Cephei.Cell.Generic.ICell<QLNet.VolatilityType>'
  type: Property
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.VolatilityType(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 102
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property VolatilityType: ICell<VolatilityType> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.VolatilityType>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.VolatilityType*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.Update(unit)
  commentId: P:Cephei.QL.StrippedOptionletAdapterModel.Update
  id: Update(unit)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'property Update: ICell<StrippedOptionletAdapter>'
  nameWithType: 'property StrippedOptionletAdapterModel.Update: ICell<StrippedOptionletAdapter>'
  fullName: 'property Cephei.QL.StrippedOptionletAdapterModel.Update: Cephei.Cell.Generic.ICell<QLNet.StrippedOptionletAdapter>'
  type: Property
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.Update(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 101
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Update: ICell<StrippedOptionletAdapter> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.StrippedOptionletAdapter>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.Update*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.SettlementDays(unit)
  commentId: P:Cephei.QL.StrippedOptionletAdapterModel.SettlementDays
  id: SettlementDays(unit)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'property SettlementDays: ICell<int>'
  nameWithType: 'property StrippedOptionletAdapterModel.SettlementDays: ICell<int>'
  fullName: 'property Cephei.QL.StrippedOptionletAdapterModel.SettlementDays: Cephei.Cell.Generic.ICell<int>'
  type: Property
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.SettlementDays(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 128
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property SettlementDays: ICell<int> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.SettlementDays*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.ReferenceDate(unit)
  commentId: P:Cephei.QL.StrippedOptionletAdapterModel.ReferenceDate
  id: ReferenceDate(unit)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'property ReferenceDate: ICell<Date>'
  nameWithType: 'property StrippedOptionletAdapterModel.ReferenceDate: ICell<Date>'
  fullName: 'property Cephei.QL.StrippedOptionletAdapterModel.ReferenceDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.ReferenceDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 127
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property ReferenceDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.ReferenceDate*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.MinStrike(unit)
  commentId: P:Cephei.QL.StrippedOptionletAdapterModel.MinStrike
  id: MinStrike(unit)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'property MinStrike: ICell<float>'
  nameWithType: 'property StrippedOptionletAdapterModel.MinStrike: ICell<float>'
  fullName: 'property Cephei.QL.StrippedOptionletAdapterModel.MinStrike: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.MinStrike(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 100
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property MinStrike: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.MinStrike*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.MaxTime(unit)
  commentId: P:Cephei.QL.StrippedOptionletAdapterModel.MaxTime
  id: MaxTime(unit)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'property MaxTime: ICell<float>'
  nameWithType: 'property StrippedOptionletAdapterModel.MaxTime: ICell<float>'
  fullName: 'property Cephei.QL.StrippedOptionletAdapterModel.MaxTime: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.MaxTime(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 126
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property MaxTime: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.MaxTime*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.MaxStrike(unit)
  commentId: P:Cephei.QL.StrippedOptionletAdapterModel.MaxStrike
  id: MaxStrike(unit)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'property MaxStrike: ICell<float>'
  nameWithType: 'property StrippedOptionletAdapterModel.MaxStrike: ICell<float>'
  fullName: 'property Cephei.QL.StrippedOptionletAdapterModel.MaxStrike: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.MaxStrike(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 99
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property MaxStrike: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.MaxStrike*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.MaxDate(unit)
  commentId: P:Cephei.QL.StrippedOptionletAdapterModel.MaxDate
  id: MaxDate(unit)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'property MaxDate: ICell<Date>'
  nameWithType: 'property StrippedOptionletAdapterModel.MaxDate: ICell<Date>'
  fullName: 'property Cephei.QL.StrippedOptionletAdapterModel.MaxDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.MaxDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 98
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property MaxDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.MaxDate*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.Extrapolate(unit)
  commentId: P:Cephei.QL.StrippedOptionletAdapterModel.Extrapolate
  id: Extrapolate(unit)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'property Extrapolate: ICell<bool>'
  nameWithType: 'property StrippedOptionletAdapterModel.Extrapolate: ICell<bool>'
  fullName: 'property Cephei.QL.StrippedOptionletAdapterModel.Extrapolate: Cephei.Cell.Generic.ICell<bool>'
  type: Property
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.Extrapolate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 136
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Extrapolate: ICell<bool> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.Extrapolate*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.Displacement(unit)
  commentId: P:Cephei.QL.StrippedOptionletAdapterModel.Displacement
  id: Displacement(unit)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'property Displacement: ICell<float>'
  nameWithType: 'property StrippedOptionletAdapterModel.Displacement: ICell<float>'
  fullName: 'property Cephei.QL.StrippedOptionletAdapterModel.Displacement: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.Displacement(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 97
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Displacement: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.Displacement*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.DayCounter(unit)
  commentId: P:Cephei.QL.StrippedOptionletAdapterModel.DayCounter
  id: DayCounter(unit)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'property DayCounter: ICell<DayCounter>'
  nameWithType: 'property StrippedOptionletAdapterModel.DayCounter: ICell<DayCounter>'
  fullName: 'property Cephei.QL.StrippedOptionletAdapterModel.DayCounter: Cephei.Cell.Generic.ICell<QLNet.DayCounter>'
  type: Property
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.DayCounter(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 125
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property DayCounter: ICell<DayCounter> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.DayCounter*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.Calendar(unit)
  commentId: P:Cephei.QL.StrippedOptionletAdapterModel.Calendar
  id: Calendar(unit)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'property Calendar: ICell<Calendar>'
  nameWithType: 'property StrippedOptionletAdapterModel.Calendar: ICell<Calendar>'
  fullName: 'property Cephei.QL.StrippedOptionletAdapterModel.Calendar: Cephei.Cell.Generic.ICell<QLNet.Calendar>'
  type: Property
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.Calendar(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 124
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Calendar: ICell<Calendar> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Calendar>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.Calendar*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.BusinessDayConvention(unit)
  commentId: P:Cephei.QL.StrippedOptionletAdapterModel.BusinessDayConvention
  id: BusinessDayConvention(unit)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'property BusinessDayConvention: ICell<BusinessDayConvention>'
  nameWithType: 'property StrippedOptionletAdapterModel.BusinessDayConvention: ICell<BusinessDayConvention>'
  fullName: 'property Cephei.QL.StrippedOptionletAdapterModel.BusinessDayConvention: Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention>'
  type: Property
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.BusinessDayConvention(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 121
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property BusinessDayConvention: ICell<BusinessDayConvention> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BusinessDayConvention>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.BusinessDayConvention*
  attributes: []
- uid: Cephei.QL.StrippedOptionletAdapterModel.AllowsExtrapolation(unit)
  commentId: P:Cephei.QL.StrippedOptionletAdapterModel.AllowsExtrapolation
  id: AllowsExtrapolation(unit)
  parent: Cephei.QL.StrippedOptionletAdapterModel
  langs:
  - csharp
  - vb
  name: 'property AllowsExtrapolation: ICell<bool>'
  nameWithType: 'property StrippedOptionletAdapterModel.AllowsExtrapolation: ICell<bool>'
  fullName: 'property Cephei.QL.StrippedOptionletAdapterModel.AllowsExtrapolation: Cephei.Cell.Generic.ICell<bool>'
  type: Property
  source:
    id: Cephei.QL.StrippedOptionletAdapterModel.AllowsExtrapolation(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\StrippedOptionletAdapterModel.fs
    startLine: 131
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property AllowsExtrapolation: ICell<bool> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
  overload: Cephei.QL.StrippedOptionletAdapterModel.AllowsExtrapolation*
  attributes: []
references:
- uid: Cephei.QL
  commentId: N:Cephei.QL
  name: Cephei.QL
  nameWithType: Cephei.QL
  fullName: Cephei.QL
- uid: TypeRef:System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
  spec.csharp:
  - {}
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - {}
- uid: TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: ConcurrentDictionary<string,ICell>
  nameWithType: ConcurrentDictionary<string,ICell>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Model
  name: Model
  nameWithType: Model
  fullName: Cephei.Cell.Model
  spec.csharp:
  - {}
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - {}
- uid: TypeRef:Cephei.Cell.Generic.Model`1<QLNet.StrippedOptionletAdapter>
  name: Model<StrippedOptionletAdapter>
  nameWithType: Model<StrippedOptionletAdapter>
  fullName: Cephei.Cell.Generic.Model<QLNet.StrippedOptionletAdapter>
  spec.csharp:
  - uid: Cephei.Cell.Generic.Model`1
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Generic.Model
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.StrippedOptionletAdapter
    name: StrippedOptionletAdapter
    nameWithType: StrippedOptionletAdapter
    fullName: QLNet.StrippedOptionletAdapter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.StrippedOptionletAdapter>
  name: ICell<StrippedOptionletAdapter>
  nameWithType: ICell<StrippedOptionletAdapter>
  fullName: Cephei.Cell.Generic.ICell<QLNet.StrippedOptionletAdapter>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.StrippedOptionletAdapter
    name: StrippedOptionletAdapter
    nameWithType: StrippedOptionletAdapter
    fullName: QLNet.StrippedOptionletAdapter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.ICell
  name: ICell
  nameWithType: ICell
  fullName: Cephei.Cell.ICell
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - {}
- uid: TypeRef:Cephei.Cell.ICellEvent
  name: ICellEvent
  nameWithType: ICellEvent
  fullName: Cephei.Cell.ICellEvent
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICellEvent
    name: ICellEvent
    nameWithType: ICellEvent
    fullName: Cephei.Cell.ICellEvent
  - {}
- uid: TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: ICollection<KeyValuePair<string,ICell>>
  nameWithType: ICollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IDictionary<string,ICell>
  nameWithType: IDictionary<string,ICell>
  fullName: System.Collections.Generic.IDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IEnumerable<KeyValuePair<string,ICell>>
  nameWithType: IEnumerable<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IReadOnlyCollection<KeyValuePair<string,ICell>>
  nameWithType: IReadOnlyCollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IReadOnlyDictionary<string,ICell>
  nameWithType: IReadOnlyDictionary<string,ICell>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.ICollection
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
  spec.csharp:
  - {}
  - uid: System.Collections.ICollection
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.ICollection
  - {}
- uid: TypeRef:System.Collections.IDictionary
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
  spec.csharp:
  - {}
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
  - {}
- uid: TypeRef:System.Collections.IEnumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
  spec.csharp:
  - {}
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
  - {}
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  name: IObservable<ICell>
  nameWithType: IObservable<ICell>
  fullName: System.IObservable<Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.StrippedOptionletAdapter> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * ICell<StrippedOptionletAdapter> * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * ICell<StrippedOptionletAdapter> * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<QLNet.StrippedOptionletAdapter> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.StrippedOptionletAdapter
    name: StrippedOptionletAdapter
    nameWithType: StrippedOptionletAdapter
    fullName: QLNet.StrippedOptionletAdapter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<QLNet.StrippedOptionletAdapter>
  name: IObservable<StrippedOptionletAdapter>
  nameWithType: IObservable<StrippedOptionletAdapter>
  fullName: System.IObservable<QLNet.StrippedOptionletAdapter>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.StrippedOptionletAdapter
    name: StrippedOptionletAdapter
    nameWithType: StrippedOptionletAdapter
    fullName: QLNet.StrippedOptionletAdapter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.StrippedOptionletAdapter>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,StrippedOptionletAdapter>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,StrippedOptionletAdapter>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,QLNet.StrippedOptionletAdapter>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: QLNet.StrippedOptionletAdapter
    name: StrippedOptionletAdapter
    nameWithType: StrippedOptionletAdapter
    fullName: QLNet.StrippedOptionletAdapter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  name: IObservable<KeyValuePair<string,decimal>>
  nameWithType: IObservable<KeyValuePair<string,decimal>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,decimal>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.decimal
    name: decimal
    nameWithType: decimal
    fullName: decimal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  name: IObservable<KeyValuePair<string,float>>
  nameWithType: IObservable<KeyValuePair<string,float>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,float>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  name: IObservable<KeyValuePair<string,int>>
  nameWithType: IObservable<KeyValuePair<string,int>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,int>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.int
    name: int
    nameWithType: int
    fullName: int
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObserver`1<QLNet.StrippedOptionletAdapter>
  name: IObserver<StrippedOptionletAdapter>
  nameWithType: IObserver<StrippedOptionletAdapter>
  fullName: System.IObserver<QLNet.StrippedOptionletAdapter>
  spec.csharp:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.StrippedOptionletAdapter
    name: StrippedOptionletAdapter
    nameWithType: StrippedOptionletAdapter
    fullName: QLNet.StrippedOptionletAdapter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  name: "member Bind: ICell<'T> -> unit"
  nameWithType: "member Model.Bind: ICell<'T> -> unit"
  fullName: "member Cephei.Cell.Generic.Model.Bind: Cephei.Cell.Generic.ICell<'T> -> unit"
- uid: Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  name: 'abstract member OnCompleted: unit -> unit'
  nameWithType: 'abstract member Model.OnCompleted: unit -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnCompleted: unit -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnError(exn)
  name: 'abstract member OnError: exn -> unit'
  nameWithType: 'abstract member Model.OnError: exn -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnError: exn -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnNext('T)
  name: "abstract member OnNext: 'T -> unit"
  nameWithType: "abstract member Model.OnNext: 'T -> unit"
  fullName: "abstract member Cephei.Cell.Generic.Model.OnNext: 'T -> unit"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  name: "abstract member Subscribe: IObserver<'T> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<'T> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<'T> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: "abstract member Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  name: "abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Value(unit)
  name: "abstract property Value: 'T"
  nameWithType: "abstract property Model.Value: 'T"
  fullName: "abstract property Cephei.Cell.Generic.Model.Value: 'T"
- uid: Cephei.Cell.Model.As(string)
  name: "member As: string -> ICell<'T>"
  nameWithType: "member Model.As: string -> ICell<'T>"
  fullName: "member Cephei.Cell.Model.As: string -> Cephei.Cell.Generic.ICell<'T>"
- uid: Cephei.Cell.Model.Bind(unit)
  name: 'member Bind: unit -> unit'
  nameWithType: 'member Model.Bind: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Bind: unit -> unit'
- uid: Cephei.Cell.Model.Box(unit)
  name: 'abstract property Box: obj'
  nameWithType: 'abstract property Model.Box: obj'
  fullName: 'abstract property Cephei.Cell.Model.Box: obj'
- uid: Cephei.Cell.Model.Change()
  name: 'abstract member Change: CellChange'
  nameWithType: 'abstract member Model.Change: CellChange'
  fullName: 'abstract member Cephei.Cell.Model.Change: Cephei.Cell.CellChange'
- uid: Cephei.Cell.Model.Create(Unit -> 'T * string)
  name: "member Create: Unit -> 'T * string -> Cell<'T>"
  nameWithType: "member Model.Create: Unit -> 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.Create: Unit -> 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.CreateValue('T * string)
  name: "member CreateValue: 'T * string -> Cell<'T>"
  nameWithType: "member Model.CreateValue: 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.CreateValue: 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.Dependants(unit)
  name: 'abstract property Dependants: IEnumerable<ICellEvent>'
  nameWithType: 'abstract property Model.Dependants: IEnumerable<ICellEvent>'
  fullName: 'abstract property Cephei.Cell.Model.Dependants: System.Collections.Generic.IEnumerable<Cephei.Cell.ICellEvent>'
- uid: Cephei.Cell.Model.Dispose(unit)
  name: 'member Dispose: unit -> unit'
  nameWithType: 'member Model.Dispose: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Dispose: unit -> unit'
- uid: Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  name: 'member GetOrAdd: string * ICell -> ICell'
  nameWithType: 'member Model.GetOrAdd: string * ICell -> ICell'
  fullName: 'member Cephei.Cell.Model.GetOrAdd: string * Cephei.Cell.ICell -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.HasFunction(unit)
  name: 'abstract property HasFunction: bool'
  nameWithType: 'abstract property Model.HasFunction: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasFunction: bool'
- uid: Cephei.Cell.Model.HasValue(unit)
  name: 'abstract property HasValue: bool'
  nameWithType: 'abstract property Model.HasValue: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasValue: bool'
- uid: Cephei.Cell.Model.Item(string)
  name: 'property Item: string -> ICell'
  nameWithType: 'property Model.Item: string -> ICell'
  fullName: 'property Cephei.Cell.Model.Item: string -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Mnemonic(unit)
  name: 'abstract property Mnemonic: string'
  nameWithType: 'abstract property Model.Mnemonic: string'
  fullName: 'abstract property Cephei.Cell.Model.Mnemonic: string'
- uid: Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  name: 'abstract member OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  nameWithType: 'abstract member Model.OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  fullName: 'abstract member Cephei.Cell.Model.OnChange: Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession -> unit'
- uid: Cephei.Cell.Model.Parent(unit)
  name: 'abstract property Parent: ICell'
  nameWithType: 'abstract property Model.Parent: ICell'
  fullName: 'abstract property Cephei.Cell.Model.Parent: Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  name: 'abstract member Subscribe: IObserver<ICell> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ICell> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ICell> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: 'abstract member Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,float>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,int>> -> System.IDisposable'
- uid: Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  name: 'member TryAdd: string * ICell -> bool'
  nameWithType: 'member Model.TryAdd: string * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryAdd: string * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  name: 'member TryRemove: string * ICell byref -> bool'
  nameWithType: 'member Model.TryRemove: string * ICell byref -> bool'
  fullName: 'member Cephei.Cell.Model.TryRemove: string * Cephei.Cell.ICell byref -> bool'
- uid: Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  name: 'member TryUpdate: string * ICell * ICell -> bool'
  nameWithType: 'member Model.TryUpdate: string * ICell * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryUpdate: string * Cephei.Cell.ICell * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  name: 'abstract member add_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.add_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.add_Change: Cephei.Cell.CellChange -> unit'
- uid: Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  name: 'abstract member remove_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.remove_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.remove_Change: Cephei.Cell.CellChange -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  name: 'abstract member Clear: unit -> unit'
  nameWithType: 'abstract member ConcurrentDictionary.Clear: unit -> unit'
  fullName: 'abstract member System.Collections.Concurrent.ConcurrentDictionary.Clear: unit -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  name: "abstract member ContainsKey: 'TKey -> bool"
  nameWithType: "abstract member ConcurrentDictionary.ContainsKey: 'TKey -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.ContainsKey: 'TKey -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  name: 'abstract property Count: int'
  nameWithType: 'abstract property ConcurrentDictionary.Count: int'
  fullName: 'abstract property System.Collections.Concurrent.ConcurrentDictionary.Count: int'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  name: "abstract member GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  nameWithType: "abstract member ConcurrentDictionary.GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.GetEnumerator: unit -> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<'TKey,'TValue>>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  name: "member GetOrAdd: 'TKey * 'TValue -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  name: "member GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * System.Func<'TKey,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  name: 'property IsEmpty: bool'
  nameWithType: 'property ConcurrentDictionary.IsEmpty: bool'
  fullName: 'property System.Collections.Concurrent.ConcurrentDictionary.IsEmpty: bool'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  name: "abstract property Item: 'TKey -> 'TValue"
  nameWithType: "abstract property ConcurrentDictionary.Item: 'TKey -> 'TValue"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Item: 'TKey -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  name: "abstract property Keys: ICollection<'TKey>"
  nameWithType: "abstract property ConcurrentDictionary.Keys: ICollection<'TKey>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Keys: System.Collections.Generic.ICollection<'TKey>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  name: "member ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  nameWithType: "member ConcurrentDictionary.ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.ToArray: unit -> System.Collections.Generic.KeyValuePair<'TKey,'TValue> []"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  name: "member TryAdd: 'TKey * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  name: "abstract member TryGetValue: 'TKey * 'TValue byref -> bool"
  nameWithType: "abstract member ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  name: "member TryRemove: 'TKey * 'TValue byref -> bool"
  nameWithType: "member ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  name: "member TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  name: "abstract property Values: ICollection<'TValue>"
  nameWithType: "abstract property ConcurrentDictionary.Values: ICollection<'TValue>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Values: System.Collections.Generic.ICollection<'TValue>"
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.StrippedOptionletBase>
  name: ICell<StrippedOptionletBase>
  nameWithType: ICell<StrippedOptionletBase>
  fullName: Cephei.Cell.Generic.ICell<QLNet.StrippedOptionletBase>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.StrippedOptionletBase
    name: StrippedOptionletBase
    nameWithType: StrippedOptionletBase
    fullName: QLNet.StrippedOptionletBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.StrippedOptionletAdapterModel.#ctor*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.#ctor*
  name: ( .ctor )
  nameWithType: StrippedOptionletAdapterModel.( .ctor )
  fullName: Cephei.QL.StrippedOptionletAdapterModel
- uid: TypeRef:Cephei.QL.StrippedOptionletAdapterModel
  name: StrippedOptionletAdapterModel
  nameWithType: StrippedOptionletAdapterModel
  fullName: Cephei.QL.StrippedOptionletAdapterModel
  spec.csharp:
  - {}
  - uid: Cephei.QL.StrippedOptionletAdapterModel
    name: StrippedOptionletAdapterModel
    nameWithType: StrippedOptionletAdapterModel
    fullName: Cephei.QL.StrippedOptionletAdapterModel
  - {}
- uid: Cephei.QL.StrippedOptionletAdapterModel.BlackVariance*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.BlackVariance*
  name: BlackVariance
  nameWithType: StrippedOptionletAdapterModel.BlackVariance
  fullName: Cephei.QL.StrippedOptionletAdapterModel.BlackVariance
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
  name: ICell<double>
  nameWithType: ICell<double>
  fullName: Cephei.Cell.Generic.ICell<double>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.double
    name: double
    nameWithType: double
    fullName: double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
  name: ICell<bool>
  nameWithType: ICell<bool>
  fullName: Cephei.Cell.Generic.ICell<bool>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.bool
    name: bool
    nameWithType: bool
    fullName: bool
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
  name: ICell<float>
  nameWithType: ICell<float>
  fullName: Cephei.Cell.Generic.ICell<float>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.StrippedOptionletAdapterModel.BlackVariance1*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.BlackVariance1*
  name: BlackVariance1
  nameWithType: StrippedOptionletAdapterModel.BlackVariance1
  fullName: Cephei.QL.StrippedOptionletAdapterModel.BlackVariance1
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
  name: ICell<Date>
  nameWithType: ICell<Date>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Date>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Date
    name: Date
    nameWithType: Date
    fullName: QLNet.Date
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.StrippedOptionletAdapterModel.BlackVariance2*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.BlackVariance2*
  name: BlackVariance2
  nameWithType: StrippedOptionletAdapterModel.BlackVariance2
  fullName: Cephei.QL.StrippedOptionletAdapterModel.BlackVariance2
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
  name: ICell<Period>
  nameWithType: ICell<Period>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Period>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Period
    name: Period
    nameWithType: Period
    fullName: QLNet.Period
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.StrippedOptionletAdapterModel.DisableExtrapolation*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.DisableExtrapolation*
  name: DisableExtrapolation
  nameWithType: StrippedOptionletAdapterModel.DisableExtrapolation
  fullName: Cephei.QL.StrippedOptionletAdapterModel.DisableExtrapolation
- uid: Cephei.QL.StrippedOptionletAdapterModel.EnableExtrapolation*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.EnableExtrapolation*
  name: EnableExtrapolation
  nameWithType: StrippedOptionletAdapterModel.EnableExtrapolation
  fullName: Cephei.QL.StrippedOptionletAdapterModel.EnableExtrapolation
- uid: Cephei.QL.StrippedOptionletAdapterModel.OptionDateFromTenor*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.OptionDateFromTenor*
  name: OptionDateFromTenor
  nameWithType: StrippedOptionletAdapterModel.OptionDateFromTenor
  fullName: Cephei.QL.StrippedOptionletAdapterModel.OptionDateFromTenor
- uid: Cephei.QL.StrippedOptionletAdapterModel.SmileSection*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.SmileSection*
  name: SmileSection
  nameWithType: StrippedOptionletAdapterModel.SmileSection
  fullName: Cephei.QL.StrippedOptionletAdapterModel.SmileSection
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.SmileSection>
  name: ICell<SmileSection>
  nameWithType: ICell<SmileSection>
  fullName: Cephei.Cell.Generic.ICell<QLNet.SmileSection>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.SmileSection
    name: SmileSection
    nameWithType: SmileSection
    fullName: QLNet.SmileSection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.StrippedOptionletAdapterModel.SmileSection1*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.SmileSection1*
  name: SmileSection1
  nameWithType: StrippedOptionletAdapterModel.SmileSection1
  fullName: Cephei.QL.StrippedOptionletAdapterModel.SmileSection1
- uid: Cephei.QL.StrippedOptionletAdapterModel.SmileSection2*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.SmileSection2*
  name: SmileSection2
  nameWithType: StrippedOptionletAdapterModel.SmileSection2
  fullName: Cephei.QL.StrippedOptionletAdapterModel.SmileSection2
- uid: Cephei.QL.StrippedOptionletAdapterModel.TimeFromReference*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.TimeFromReference*
  name: TimeFromReference
  nameWithType: StrippedOptionletAdapterModel.TimeFromReference
  fullName: Cephei.QL.StrippedOptionletAdapterModel.TimeFromReference
- uid: Cephei.QL.StrippedOptionletAdapterModel.Volatility*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.Volatility*
  name: Volatility
  nameWithType: StrippedOptionletAdapterModel.Volatility
  fullName: Cephei.QL.StrippedOptionletAdapterModel.Volatility
- uid: Cephei.QL.StrippedOptionletAdapterModel.Volatility1*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.Volatility1*
  name: Volatility1
  nameWithType: StrippedOptionletAdapterModel.Volatility1
  fullName: Cephei.QL.StrippedOptionletAdapterModel.Volatility1
- uid: Cephei.QL.StrippedOptionletAdapterModel.Volatility2*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.Volatility2*
  name: Volatility2
  nameWithType: StrippedOptionletAdapterModel.Volatility2
  fullName: Cephei.QL.StrippedOptionletAdapterModel.Volatility2
- uid: Cephei.QL.StrippedOptionletAdapterModel.s*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.s*
  name: s
  nameWithType: StrippedOptionletAdapterModel.s
  fullName: Cephei.QL.StrippedOptionletAdapterModel.s
- uid: Cephei.QL.StrippedOptionletAdapterModel.VolatilityType*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.VolatilityType*
  name: VolatilityType
  nameWithType: StrippedOptionletAdapterModel.VolatilityType
  fullName: Cephei.QL.StrippedOptionletAdapterModel.VolatilityType
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.VolatilityType>
  name: ICell<VolatilityType>
  nameWithType: ICell<VolatilityType>
  fullName: Cephei.Cell.Generic.ICell<QLNet.VolatilityType>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.VolatilityType
    name: VolatilityType
    nameWithType: VolatilityType
    fullName: QLNet.VolatilityType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.StrippedOptionletAdapterModel.Update*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.Update*
  name: Update
  nameWithType: StrippedOptionletAdapterModel.Update
  fullName: Cephei.QL.StrippedOptionletAdapterModel.Update
- uid: Cephei.QL.StrippedOptionletAdapterModel.SettlementDays*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.SettlementDays*
  name: SettlementDays
  nameWithType: StrippedOptionletAdapterModel.SettlementDays
  fullName: Cephei.QL.StrippedOptionletAdapterModel.SettlementDays
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
  name: ICell<int>
  nameWithType: ICell<int>
  fullName: Cephei.Cell.Generic.ICell<int>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.int
    name: int
    nameWithType: int
    fullName: int
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.StrippedOptionletAdapterModel.ReferenceDate*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.ReferenceDate*
  name: ReferenceDate
  nameWithType: StrippedOptionletAdapterModel.ReferenceDate
  fullName: Cephei.QL.StrippedOptionletAdapterModel.ReferenceDate
- uid: Cephei.QL.StrippedOptionletAdapterModel.MinStrike*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.MinStrike*
  name: MinStrike
  nameWithType: StrippedOptionletAdapterModel.MinStrike
  fullName: Cephei.QL.StrippedOptionletAdapterModel.MinStrike
- uid: Cephei.QL.StrippedOptionletAdapterModel.MaxTime*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.MaxTime*
  name: MaxTime
  nameWithType: StrippedOptionletAdapterModel.MaxTime
  fullName: Cephei.QL.StrippedOptionletAdapterModel.MaxTime
- uid: Cephei.QL.StrippedOptionletAdapterModel.MaxStrike*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.MaxStrike*
  name: MaxStrike
  nameWithType: StrippedOptionletAdapterModel.MaxStrike
  fullName: Cephei.QL.StrippedOptionletAdapterModel.MaxStrike
- uid: Cephei.QL.StrippedOptionletAdapterModel.MaxDate*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.MaxDate*
  name: MaxDate
  nameWithType: StrippedOptionletAdapterModel.MaxDate
  fullName: Cephei.QL.StrippedOptionletAdapterModel.MaxDate
- uid: Cephei.QL.StrippedOptionletAdapterModel.Extrapolate*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.Extrapolate*
  name: Extrapolate
  nameWithType: StrippedOptionletAdapterModel.Extrapolate
  fullName: Cephei.QL.StrippedOptionletAdapterModel.Extrapolate
- uid: Cephei.QL.StrippedOptionletAdapterModel.Displacement*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.Displacement*
  name: Displacement
  nameWithType: StrippedOptionletAdapterModel.Displacement
  fullName: Cephei.QL.StrippedOptionletAdapterModel.Displacement
- uid: Cephei.QL.StrippedOptionletAdapterModel.DayCounter*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.DayCounter*
  name: DayCounter
  nameWithType: StrippedOptionletAdapterModel.DayCounter
  fullName: Cephei.QL.StrippedOptionletAdapterModel.DayCounter
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
  name: ICell<DayCounter>
  nameWithType: ICell<DayCounter>
  fullName: Cephei.Cell.Generic.ICell<QLNet.DayCounter>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.DayCounter
    name: DayCounter
    nameWithType: DayCounter
    fullName: QLNet.DayCounter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.StrippedOptionletAdapterModel.Calendar*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.Calendar*
  name: Calendar
  nameWithType: StrippedOptionletAdapterModel.Calendar
  fullName: Cephei.QL.StrippedOptionletAdapterModel.Calendar
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Calendar>
  name: ICell<Calendar>
  nameWithType: ICell<Calendar>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Calendar>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Calendar
    name: Calendar
    nameWithType: Calendar
    fullName: QLNet.Calendar
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.StrippedOptionletAdapterModel.BusinessDayConvention*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.BusinessDayConvention*
  name: BusinessDayConvention
  nameWithType: StrippedOptionletAdapterModel.BusinessDayConvention
  fullName: Cephei.QL.StrippedOptionletAdapterModel.BusinessDayConvention
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BusinessDayConvention>
  name: ICell<BusinessDayConvention>
  nameWithType: ICell<BusinessDayConvention>
  fullName: Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.BusinessDayConvention
    name: BusinessDayConvention
    nameWithType: BusinessDayConvention
    fullName: QLNet.BusinessDayConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.StrippedOptionletAdapterModel.AllowsExtrapolation*
  commentId: Overload:Cephei.QL.StrippedOptionletAdapterModel.AllowsExtrapolation*
  name: AllowsExtrapolation
  nameWithType: StrippedOptionletAdapterModel.AllowsExtrapolation
  fullName: Cephei.QL.StrippedOptionletAdapterModel.AllowsExtrapolation
