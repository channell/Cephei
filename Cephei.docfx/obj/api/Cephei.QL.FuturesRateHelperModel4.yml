### YamlMime:ManagedReference
items:
- uid: Cephei.QL.FuturesRateHelperModel4
  commentId: T:Cephei.QL.FuturesRateHelperModel4
  id: FuturesRateHelperModel4
  parent: Cephei.QL
  children:
  - Cephei.QL.FuturesRateHelperModel4.#ctor(Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>> * Cephei.Cell.Generic.ICell<QLNet.Futures.Type>)
  - Cephei.QL.FuturesRateHelperModel4.convAdj(unit)
  - Cephei.QL.FuturesRateHelperModel4.ConvexityAdjustment(unit)
  - Cephei.QL.FuturesRateHelperModel4.dayCounter(unit)
  - Cephei.QL.FuturesRateHelperModel4.EarliestDate(unit)
  - Cephei.QL.FuturesRateHelperModel4.iborEndDate(unit)
  - Cephei.QL.FuturesRateHelperModel4.iborStartDate(unit)
  - Cephei.QL.FuturesRateHelperModel4.ImpliedQuote(unit)
  - Cephei.QL.FuturesRateHelperModel4.LatestDate(unit)
  - Cephei.QL.FuturesRateHelperModel4.LatestRelevantDate(unit)
  - Cephei.QL.FuturesRateHelperModel4.MaturityDate(unit)
  - Cephei.QL.FuturesRateHelperModel4.PillarDate(unit)
  - Cephei.QL.FuturesRateHelperModel4.price(unit)
  - Cephei.QL.FuturesRateHelperModel4.Quote(unit)
  - Cephei.QL.FuturesRateHelperModel4.QuoteError(unit)
  - Cephei.QL.FuturesRateHelperModel4.QuoteIsValid(unit)
  - Cephei.QL.FuturesRateHelperModel4.QuoteValue(unit)
  - Cephei.QL.FuturesRateHelperModel4.RegisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
  - Cephei.QL.FuturesRateHelperModel4.SetTermStructure(Cephei.Cell.Generic.ICell<'?945787>)
  - Cephei.QL.FuturesRateHelperModel4.Type(unit)
  - Cephei.QL.FuturesRateHelperModel4.UnregisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
  - Cephei.QL.FuturesRateHelperModel4.Update(unit)
  langs:
  - csharp
  - vb
  name: FuturesRateHelperModel4
  nameWithType: Cephei.QL.FuturesRateHelperModel4
  fullName: Cephei.QL.FuturesRateHelperModel4
  type: Class
  source:
    id: Cephei.QL.FuturesRateHelperModel4
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FuturesRateHelperModel.fs
    startLine: 354
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: >-
      [<AutoSerializable(true)>]

      type FuturesRateHelperModel4 (price:ICell<Handle<Quote>>, iborStartDate:ICell<Date>, iborEndDate:ICell<Date>, dayCounter:ICell<DayCounter>, convAdj:ICell<Handle<Quote>>, Type:ICell<Type>)
          inherit Model<FuturesRateHelper>
          interface IDictionary<string,ICell>
          interface ICollection<KeyValuePair<string,ICell>>
          interface IReadOnlyDictionary<string,ICell>
          interface IReadOnlyCollection<KeyValuePair<string,ICell>>
          interface IEnumerable<KeyValuePair<string,ICell>>
          interface IDictionary
          interface ICollection
          interface IEnumerable
          interface IObservable<ICell>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
          interface IObservable<ISession * Model * CellEvent * ICell * DateTime>
          interface IObservable<KeyValuePair<string,float>>
          interface IObservable<KeyValuePair<string,int>>
          interface IObservable<KeyValuePair<string,decimal>>
          interface ICell<FuturesRateHelper>
          interface ICell
          interface ICellEvent
          interface IObservable<FuturesRateHelper>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,FuturesRateHelper>>>
          interface IObservable<ISession * ICell<FuturesRateHelper> * CellEvent * ICell * DateTime>
          interface IObserver<FuturesRateHelper>
    parameters:
    - id: price
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Handle`1<QLNet.Quote>>
      attributes: []
    - id: iborStartDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    - id: iborEndDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    - id: dayCounter
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
    - id: convAdj
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Handle`1<QLNet.Quote>>
      attributes: []
    - id: Type
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Futures.Type>
      attributes: []
    typeParameters: []
  inheritance:
  - TypeRef:System.Object
  - TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:Cephei.Cell.Model
  - TypeRef:Cephei.Cell.Generic.Model`1<QLNet.FuturesRateHelper>
  implements:
  - TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FuturesRateHelper>
  - TypeRef:Cephei.Cell.ICell
  - TypeRef:Cephei.Cell.ICellEvent
  - TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.ICollection
  - TypeRef:System.Collections.IDictionary
  - TypeRef:System.Collections.IEnumerable
  - TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.FuturesRateHelper> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<QLNet.FuturesRateHelper>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.FuturesRateHelper>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  - TypeRef:System.IObserver`1<QLNet.FuturesRateHelper>
  inheritedMembers:
  - Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  - Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  - Cephei.Cell.Generic.Model`1.OnError(exn)
  - Cephei.Cell.Generic.Model`1.OnNext('T)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  - Cephei.Cell.Generic.Model`1.Value(unit)
  - Cephei.Cell.Model.As(string)
  - Cephei.Cell.Model.Bind(unit)
  - Cephei.Cell.Model.Box(unit)
  - Cephei.Cell.Model.Change()
  - Cephei.Cell.Model.Create(Unit -> 'T * string)
  - Cephei.Cell.Model.CreateValue('T * string)
  - Cephei.Cell.Model.Dependants(unit)
  - Cephei.Cell.Model.Dispose(unit)
  - Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.HasFunction(unit)
  - Cephei.Cell.Model.HasValue(unit)
  - Cephei.Cell.Model.Item(string)
  - Cephei.Cell.Model.Mnemonic(unit)
  - Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  - Cephei.Cell.Model.Parent(unit)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  - Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  - Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  - Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  - Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  attributes:
  - type: Microsoft.FSharp.Core.AutoSerializableAttribute
    arguments:
    - type: System.Boolean
      value: true
    namedArguments: []
- uid: Cephei.QL.FuturesRateHelperModel4.#ctor(Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>> * Cephei.Cell.Generic.ICell<QLNet.Futures.Type>)
  commentId: M:Cephei.QL.FuturesRateHelperModel4.#ctor(Cephei.Cell.Generic.ICell{QLNet.Handle{QLNet.Quote}},Cephei.Cell.Generic.ICell{QLNet.Date},Cephei.Cell.Generic.ICell{QLNet.Date},Cephei.Cell.Generic.ICell{QLNet.DayCounter},Cephei.Cell.Generic.ICell{QLNet.Handle{QLNet.Quote}},Cephei.Cell.Generic.ICell{QLNet.Futures.Type})
  id: '#ctor(Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>> * Cephei.Cell.Generic.ICell<QLNet.Futures.Type>)'
  parent: Cephei.QL.FuturesRateHelperModel4
  langs:
  - csharp
  - vb
  name: 'new: ICell<Handle<Quote>> * ICell<Date> * ICell<Date> * ICell<DayCounter> * ICell<Handle<Quote>> * ICell<Type> -> FuturesRateHelperModel4'
  nameWithType: 'new: ICell<Handle<Quote>> * ICell<Date> * ICell<Date> * ICell<DayCounter> * ICell<Handle<Quote>> * ICell<Type> -> FuturesRateHelperModel4'
  fullName: 'new: Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>> * Cephei.Cell.Generic.ICell<QLNet.Futures.Type> -> Cephei.QL.FuturesRateHelperModel4'
  type: Constructor
  source:
    id: Cephei.QL.FuturesRateHelperModel4.#ctor(Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>> * Cephei.Cell.Generic.ICell<QLNet.Futures.Type>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FuturesRateHelperModel.fs
    startLine: 354
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  summary: Implicit constructor.
  syntax:
    content: 'new: price:ICell<Handle<Quote>> * iborStartDate:ICell<Date> * iborEndDate:ICell<Date> * dayCounter:ICell<DayCounter> * convAdj:ICell<Handle<Quote>> * Type:ICell<Type> -> FuturesRateHelperModel4'
    parameters:
    - id: price
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Handle`1<QLNet.Quote>>
      attributes: []
    - id: iborStartDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    - id: iborEndDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    - id: dayCounter
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
    - id: convAdj
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Handle`1<QLNet.Quote>>
      attributes: []
    - id: Type
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Futures.Type>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.QL.FuturesRateHelperModel4
      attributes: []
  overload: Cephei.QL.FuturesRateHelperModel4.#ctor*
  attributes: []
- uid: Cephei.QL.FuturesRateHelperModel4.RegisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
  commentId: M:Cephei.QL.FuturesRateHelperModel4.RegisterWith(Cephei.Cell.Generic.ICell{QLNet.Callback})
  id: RegisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
  parent: Cephei.QL.FuturesRateHelperModel4
  langs:
  - csharp
  - vb
  name: 'member RegisterWith: ICell<Callback> -> ICell<FuturesRateHelper>'
  nameWithType: 'member FuturesRateHelperModel4.RegisterWith: ICell<Callback> -> ICell<FuturesRateHelper>'
  fullName: 'member Cephei.QL.FuturesRateHelperModel4.RegisterWith: Cephei.Cell.Generic.ICell<QLNet.Callback> -> Cephei.Cell.Generic.ICell<QLNet.FuturesRateHelper>'
  type: Method
  source:
    id: Cephei.QL.FuturesRateHelperModel4.RegisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FuturesRateHelperModel.fs
    startLine: 421
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member RegisterWith: handler:ICell<Callback> -> ICell<FuturesRateHelper>'
    parameters:
    - id: handler
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Callback>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FuturesRateHelper>
      attributes: []
  overload: Cephei.QL.FuturesRateHelperModel4.RegisterWith*
  attributes: []
- uid: Cephei.QL.FuturesRateHelperModel4.SetTermStructure(Cephei.Cell.Generic.ICell<'?945787>)
  commentId: M:Cephei.QL.FuturesRateHelperModel4.SetTermStructure``1(Cephei.Cell.Generic.ICell{``0})
  id: SetTermStructure(Cephei.Cell.Generic.ICell<'?945787>)
  parent: Cephei.QL.FuturesRateHelperModel4
  langs:
  - csharp
  - vb
  name: "member SetTermStructure: ICell<'?945787> -> ICell<FuturesRateHelper>"
  nameWithType: "member FuturesRateHelperModel4.SetTermStructure: ICell<'?945787> -> ICell<FuturesRateHelper>"
  fullName: "member Cephei.QL.FuturesRateHelperModel4.SetTermStructure: Cephei.Cell.Generic.ICell<'?945787> -> Cephei.Cell.Generic.ICell<QLNet.FuturesRateHelper>"
  type: Method
  source:
    id: Cephei.QL.FuturesRateHelperModel4.SetTermStructure(Cephei.Cell.Generic.ICell<'?945787>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FuturesRateHelperModel.fs
    startLine: 423
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: "member SetTermStructure: ts:ICell<'?945787> -> ICell<FuturesRateHelper>"
    parameters:
    - id: ts
      type: TypeRef:Cephei.Cell.Generic.ICell`1<'?945787>
      attributes: []
    typeParameters:
    - id: "'?"
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FuturesRateHelper>
      attributes: []
  overload: Cephei.QL.FuturesRateHelperModel4.SetTermStructure*
  attributes: []
- uid: Cephei.QL.FuturesRateHelperModel4.UnregisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
  commentId: M:Cephei.QL.FuturesRateHelperModel4.UnregisterWith(Cephei.Cell.Generic.ICell{QLNet.Callback})
  id: UnregisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
  parent: Cephei.QL.FuturesRateHelperModel4
  langs:
  - csharp
  - vb
  name: 'member UnregisterWith: ICell<Callback> -> ICell<FuturesRateHelper>'
  nameWithType: 'member FuturesRateHelperModel4.UnregisterWith: ICell<Callback> -> ICell<FuturesRateHelper>'
  fullName: 'member Cephei.QL.FuturesRateHelperModel4.UnregisterWith: Cephei.Cell.Generic.ICell<QLNet.Callback> -> Cephei.Cell.Generic.ICell<QLNet.FuturesRateHelper>'
  type: Method
  source:
    id: Cephei.QL.FuturesRateHelperModel4.UnregisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FuturesRateHelperModel.fs
    startLine: 425
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member UnregisterWith: handler:ICell<Callback> -> ICell<FuturesRateHelper>'
    parameters:
    - id: handler
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Callback>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FuturesRateHelper>
      attributes: []
  overload: Cephei.QL.FuturesRateHelperModel4.UnregisterWith*
  attributes: []
- uid: Cephei.QL.FuturesRateHelperModel4.price(unit)
  commentId: P:Cephei.QL.FuturesRateHelperModel4.price
  id: price(unit)
  parent: Cephei.QL.FuturesRateHelperModel4
  langs:
  - csharp
  - vb
  name: 'property price: ICell<Handle<Quote>>'
  nameWithType: 'property FuturesRateHelperModel4.price: ICell<Handle<Quote>>'
  fullName: 'property Cephei.QL.FuturesRateHelperModel4.price: Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>>'
  type: Property
  source:
    id: Cephei.QL.FuturesRateHelperModel4.price(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FuturesRateHelperModel.fs
    startLine: 404
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property price: ICell<Handle<Quote>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Handle`1<QLNet.Quote>>
      attributes: []
  overload: Cephei.QL.FuturesRateHelperModel4.price*
  attributes: []
- uid: Cephei.QL.FuturesRateHelperModel4.iborStartDate(unit)
  commentId: P:Cephei.QL.FuturesRateHelperModel4.iborStartDate
  id: iborStartDate(unit)
  parent: Cephei.QL.FuturesRateHelperModel4
  langs:
  - csharp
  - vb
  name: 'property iborStartDate: ICell<Date>'
  nameWithType: 'property FuturesRateHelperModel4.iborStartDate: ICell<Date>'
  fullName: 'property Cephei.QL.FuturesRateHelperModel4.iborStartDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.FuturesRateHelperModel4.iborStartDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FuturesRateHelperModel.fs
    startLine: 405
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property iborStartDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.FuturesRateHelperModel4.iborStartDate*
  attributes: []
- uid: Cephei.QL.FuturesRateHelperModel4.iborEndDate(unit)
  commentId: P:Cephei.QL.FuturesRateHelperModel4.iborEndDate
  id: iborEndDate(unit)
  parent: Cephei.QL.FuturesRateHelperModel4
  langs:
  - csharp
  - vb
  name: 'property iborEndDate: ICell<Date>'
  nameWithType: 'property FuturesRateHelperModel4.iborEndDate: ICell<Date>'
  fullName: 'property Cephei.QL.FuturesRateHelperModel4.iborEndDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.FuturesRateHelperModel4.iborEndDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FuturesRateHelperModel.fs
    startLine: 406
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property iborEndDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.FuturesRateHelperModel4.iborEndDate*
  attributes: []
- uid: Cephei.QL.FuturesRateHelperModel4.dayCounter(unit)
  commentId: P:Cephei.QL.FuturesRateHelperModel4.dayCounter
  id: dayCounter(unit)
  parent: Cephei.QL.FuturesRateHelperModel4
  langs:
  - csharp
  - vb
  name: 'property dayCounter: ICell<DayCounter>'
  nameWithType: 'property FuturesRateHelperModel4.dayCounter: ICell<DayCounter>'
  fullName: 'property Cephei.QL.FuturesRateHelperModel4.dayCounter: Cephei.Cell.Generic.ICell<QLNet.DayCounter>'
  type: Property
  source:
    id: Cephei.QL.FuturesRateHelperModel4.dayCounter(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FuturesRateHelperModel.fs
    startLine: 407
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property dayCounter: ICell<DayCounter> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
  overload: Cephei.QL.FuturesRateHelperModel4.dayCounter*
  attributes: []
- uid: Cephei.QL.FuturesRateHelperModel4.convAdj(unit)
  commentId: P:Cephei.QL.FuturesRateHelperModel4.convAdj
  id: convAdj(unit)
  parent: Cephei.QL.FuturesRateHelperModel4
  langs:
  - csharp
  - vb
  name: 'property convAdj: ICell<Handle<Quote>>'
  nameWithType: 'property FuturesRateHelperModel4.convAdj: ICell<Handle<Quote>>'
  fullName: 'property Cephei.QL.FuturesRateHelperModel4.convAdj: Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>>'
  type: Property
  source:
    id: Cephei.QL.FuturesRateHelperModel4.convAdj(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FuturesRateHelperModel.fs
    startLine: 408
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property convAdj: ICell<Handle<Quote>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Handle`1<QLNet.Quote>>
      attributes: []
  overload: Cephei.QL.FuturesRateHelperModel4.convAdj*
  attributes: []
- uid: Cephei.QL.FuturesRateHelperModel4.Update(unit)
  commentId: P:Cephei.QL.FuturesRateHelperModel4.Update
  id: Update(unit)
  parent: Cephei.QL.FuturesRateHelperModel4
  langs:
  - csharp
  - vb
  name: 'property Update: ICell<FuturesRateHelper>'
  nameWithType: 'property FuturesRateHelperModel4.Update: ICell<FuturesRateHelper>'
  fullName: 'property Cephei.QL.FuturesRateHelperModel4.Update: Cephei.Cell.Generic.ICell<QLNet.FuturesRateHelper>'
  type: Property
  source:
    id: Cephei.QL.FuturesRateHelperModel4.Update(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FuturesRateHelperModel.fs
    startLine: 427
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Update: ICell<FuturesRateHelper> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FuturesRateHelper>
      attributes: []
  overload: Cephei.QL.FuturesRateHelperModel4.Update*
  attributes: []
- uid: Cephei.QL.FuturesRateHelperModel4.Type(unit)
  commentId: P:Cephei.QL.FuturesRateHelperModel4.Type
  id: Type(unit)
  parent: Cephei.QL.FuturesRateHelperModel4
  langs:
  - csharp
  - vb
  name: 'property Type: ICell<Type>'
  nameWithType: 'property FuturesRateHelperModel4.Type: ICell<Type>'
  fullName: 'property Cephei.QL.FuturesRateHelperModel4.Type: Cephei.Cell.Generic.ICell<QLNet.Futures.Type>'
  type: Property
  source:
    id: Cephei.QL.FuturesRateHelperModel4.Type(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FuturesRateHelperModel.fs
    startLine: 409
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Type: ICell<Type> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Futures.Type>
      attributes: []
  overload: Cephei.QL.FuturesRateHelperModel4.Type*
  attributes: []
- uid: Cephei.QL.FuturesRateHelperModel4.QuoteValue(unit)
  commentId: P:Cephei.QL.FuturesRateHelperModel4.QuoteValue
  id: QuoteValue(unit)
  parent: Cephei.QL.FuturesRateHelperModel4
  langs:
  - csharp
  - vb
  name: 'property QuoteValue: ICell<float>'
  nameWithType: 'property FuturesRateHelperModel4.QuoteValue: ICell<float>'
  fullName: 'property Cephei.QL.FuturesRateHelperModel4.QuoteValue: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.FuturesRateHelperModel4.QuoteValue(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FuturesRateHelperModel.fs
    startLine: 420
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property QuoteValue: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.FuturesRateHelperModel4.QuoteValue*
  attributes: []
- uid: Cephei.QL.FuturesRateHelperModel4.QuoteIsValid(unit)
  commentId: P:Cephei.QL.FuturesRateHelperModel4.QuoteIsValid
  id: QuoteIsValid(unit)
  parent: Cephei.QL.FuturesRateHelperModel4
  langs:
  - csharp
  - vb
  name: 'property QuoteIsValid: ICell<bool>'
  nameWithType: 'property FuturesRateHelperModel4.QuoteIsValid: ICell<bool>'
  fullName: 'property Cephei.QL.FuturesRateHelperModel4.QuoteIsValid: Cephei.Cell.Generic.ICell<bool>'
  type: Property
  source:
    id: Cephei.QL.FuturesRateHelperModel4.QuoteIsValid(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FuturesRateHelperModel.fs
    startLine: 419
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property QuoteIsValid: ICell<bool> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
  overload: Cephei.QL.FuturesRateHelperModel4.QuoteIsValid*
  attributes: []
- uid: Cephei.QL.FuturesRateHelperModel4.QuoteError(unit)
  commentId: P:Cephei.QL.FuturesRateHelperModel4.QuoteError
  id: QuoteError(unit)
  parent: Cephei.QL.FuturesRateHelperModel4
  langs:
  - csharp
  - vb
  name: 'property QuoteError: ICell<float>'
  nameWithType: 'property FuturesRateHelperModel4.QuoteError: ICell<float>'
  fullName: 'property Cephei.QL.FuturesRateHelperModel4.QuoteError: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.FuturesRateHelperModel4.QuoteError(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FuturesRateHelperModel.fs
    startLine: 418
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property QuoteError: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.FuturesRateHelperModel4.QuoteError*
  attributes: []
- uid: Cephei.QL.FuturesRateHelperModel4.Quote(unit)
  commentId: P:Cephei.QL.FuturesRateHelperModel4.Quote
  id: Quote(unit)
  parent: Cephei.QL.FuturesRateHelperModel4
  langs:
  - csharp
  - vb
  name: 'property Quote: ICell<Handle<Quote>>'
  nameWithType: 'property FuturesRateHelperModel4.Quote: ICell<Handle<Quote>>'
  fullName: 'property Cephei.QL.FuturesRateHelperModel4.Quote: Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>>'
  type: Property
  source:
    id: Cephei.QL.FuturesRateHelperModel4.Quote(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FuturesRateHelperModel.fs
    startLine: 417
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Quote: ICell<Handle<Quote>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Handle`1<QLNet.Quote>>
      attributes: []
  overload: Cephei.QL.FuturesRateHelperModel4.Quote*
  attributes: []
- uid: Cephei.QL.FuturesRateHelperModel4.PillarDate(unit)
  commentId: P:Cephei.QL.FuturesRateHelperModel4.PillarDate
  id: PillarDate(unit)
  parent: Cephei.QL.FuturesRateHelperModel4
  langs:
  - csharp
  - vb
  name: 'property PillarDate: ICell<Date>'
  nameWithType: 'property FuturesRateHelperModel4.PillarDate: ICell<Date>'
  fullName: 'property Cephei.QL.FuturesRateHelperModel4.PillarDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.FuturesRateHelperModel4.PillarDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FuturesRateHelperModel.fs
    startLine: 416
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property PillarDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.FuturesRateHelperModel4.PillarDate*
  attributes: []
- uid: Cephei.QL.FuturesRateHelperModel4.MaturityDate(unit)
  commentId: P:Cephei.QL.FuturesRateHelperModel4.MaturityDate
  id: MaturityDate(unit)
  parent: Cephei.QL.FuturesRateHelperModel4
  langs:
  - csharp
  - vb
  name: 'property MaturityDate: ICell<Date>'
  nameWithType: 'property FuturesRateHelperModel4.MaturityDate: ICell<Date>'
  fullName: 'property Cephei.QL.FuturesRateHelperModel4.MaturityDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.FuturesRateHelperModel4.MaturityDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FuturesRateHelperModel.fs
    startLine: 415
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property MaturityDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.FuturesRateHelperModel4.MaturityDate*
  attributes: []
- uid: Cephei.QL.FuturesRateHelperModel4.LatestRelevantDate(unit)
  commentId: P:Cephei.QL.FuturesRateHelperModel4.LatestRelevantDate
  id: LatestRelevantDate(unit)
  parent: Cephei.QL.FuturesRateHelperModel4
  langs:
  - csharp
  - vb
  name: 'property LatestRelevantDate: ICell<Date>'
  nameWithType: 'property FuturesRateHelperModel4.LatestRelevantDate: ICell<Date>'
  fullName: 'property Cephei.QL.FuturesRateHelperModel4.LatestRelevantDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.FuturesRateHelperModel4.LatestRelevantDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FuturesRateHelperModel.fs
    startLine: 414
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property LatestRelevantDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.FuturesRateHelperModel4.LatestRelevantDate*
  attributes: []
- uid: Cephei.QL.FuturesRateHelperModel4.LatestDate(unit)
  commentId: P:Cephei.QL.FuturesRateHelperModel4.LatestDate
  id: LatestDate(unit)
  parent: Cephei.QL.FuturesRateHelperModel4
  langs:
  - csharp
  - vb
  name: 'property LatestDate: ICell<Date>'
  nameWithType: 'property FuturesRateHelperModel4.LatestDate: ICell<Date>'
  fullName: 'property Cephei.QL.FuturesRateHelperModel4.LatestDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.FuturesRateHelperModel4.LatestDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FuturesRateHelperModel.fs
    startLine: 413
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property LatestDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.FuturesRateHelperModel4.LatestDate*
  attributes: []
- uid: Cephei.QL.FuturesRateHelperModel4.ImpliedQuote(unit)
  commentId: P:Cephei.QL.FuturesRateHelperModel4.ImpliedQuote
  id: ImpliedQuote(unit)
  parent: Cephei.QL.FuturesRateHelperModel4
  langs:
  - csharp
  - vb
  name: 'property ImpliedQuote: ICell<float>'
  nameWithType: 'property FuturesRateHelperModel4.ImpliedQuote: ICell<float>'
  fullName: 'property Cephei.QL.FuturesRateHelperModel4.ImpliedQuote: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.FuturesRateHelperModel4.ImpliedQuote(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FuturesRateHelperModel.fs
    startLine: 411
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property ImpliedQuote: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.FuturesRateHelperModel4.ImpliedQuote*
  attributes: []
- uid: Cephei.QL.FuturesRateHelperModel4.EarliestDate(unit)
  commentId: P:Cephei.QL.FuturesRateHelperModel4.EarliestDate
  id: EarliestDate(unit)
  parent: Cephei.QL.FuturesRateHelperModel4
  langs:
  - csharp
  - vb
  name: 'property EarliestDate: ICell<Date>'
  nameWithType: 'property FuturesRateHelperModel4.EarliestDate: ICell<Date>'
  fullName: 'property Cephei.QL.FuturesRateHelperModel4.EarliestDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.FuturesRateHelperModel4.EarliestDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FuturesRateHelperModel.fs
    startLine: 412
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property EarliestDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.FuturesRateHelperModel4.EarliestDate*
  attributes: []
- uid: Cephei.QL.FuturesRateHelperModel4.ConvexityAdjustment(unit)
  commentId: P:Cephei.QL.FuturesRateHelperModel4.ConvexityAdjustment
  id: ConvexityAdjustment(unit)
  parent: Cephei.QL.FuturesRateHelperModel4
  langs:
  - csharp
  - vb
  name: 'property ConvexityAdjustment: ICell<float>'
  nameWithType: 'property FuturesRateHelperModel4.ConvexityAdjustment: ICell<float>'
  fullName: 'property Cephei.QL.FuturesRateHelperModel4.ConvexityAdjustment: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.FuturesRateHelperModel4.ConvexityAdjustment(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FuturesRateHelperModel.fs
    startLine: 410
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property ConvexityAdjustment: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.FuturesRateHelperModel4.ConvexityAdjustment*
  attributes: []
references:
- uid: Cephei.QL
  commentId: N:Cephei.QL
  name: Cephei.QL
  nameWithType: Cephei.QL
  fullName: Cephei.QL
- uid: TypeRef:System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
  spec.csharp:
  - {}
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - {}
- uid: TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: ConcurrentDictionary<string,ICell>
  nameWithType: ConcurrentDictionary<string,ICell>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Model
  name: Model
  nameWithType: Model
  fullName: Cephei.Cell.Model
  spec.csharp:
  - {}
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - {}
- uid: TypeRef:Cephei.Cell.Generic.Model`1<QLNet.FuturesRateHelper>
  name: Model<FuturesRateHelper>
  nameWithType: Model<FuturesRateHelper>
  fullName: Cephei.Cell.Generic.Model<QLNet.FuturesRateHelper>
  spec.csharp:
  - uid: Cephei.Cell.Generic.Model`1
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Generic.Model
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.FuturesRateHelper
    name: FuturesRateHelper
    nameWithType: FuturesRateHelper
    fullName: QLNet.FuturesRateHelper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FuturesRateHelper>
  name: ICell<FuturesRateHelper>
  nameWithType: ICell<FuturesRateHelper>
  fullName: Cephei.Cell.Generic.ICell<QLNet.FuturesRateHelper>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.FuturesRateHelper
    name: FuturesRateHelper
    nameWithType: FuturesRateHelper
    fullName: QLNet.FuturesRateHelper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.ICell
  name: ICell
  nameWithType: ICell
  fullName: Cephei.Cell.ICell
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - {}
- uid: TypeRef:Cephei.Cell.ICellEvent
  name: ICellEvent
  nameWithType: ICellEvent
  fullName: Cephei.Cell.ICellEvent
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICellEvent
    name: ICellEvent
    nameWithType: ICellEvent
    fullName: Cephei.Cell.ICellEvent
  - {}
- uid: TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: ICollection<KeyValuePair<string,ICell>>
  nameWithType: ICollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IDictionary<string,ICell>
  nameWithType: IDictionary<string,ICell>
  fullName: System.Collections.Generic.IDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IEnumerable<KeyValuePair<string,ICell>>
  nameWithType: IEnumerable<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IReadOnlyCollection<KeyValuePair<string,ICell>>
  nameWithType: IReadOnlyCollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IReadOnlyDictionary<string,ICell>
  nameWithType: IReadOnlyDictionary<string,ICell>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.ICollection
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
  spec.csharp:
  - {}
  - uid: System.Collections.ICollection
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.ICollection
  - {}
- uid: TypeRef:System.Collections.IDictionary
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
  spec.csharp:
  - {}
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
  - {}
- uid: TypeRef:System.Collections.IEnumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
  spec.csharp:
  - {}
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
  - {}
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  name: IObservable<ICell>
  nameWithType: IObservable<ICell>
  fullName: System.IObservable<Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.FuturesRateHelper> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * ICell<FuturesRateHelper> * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * ICell<FuturesRateHelper> * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<QLNet.FuturesRateHelper> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.FuturesRateHelper
    name: FuturesRateHelper
    nameWithType: FuturesRateHelper
    fullName: QLNet.FuturesRateHelper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<QLNet.FuturesRateHelper>
  name: IObservable<FuturesRateHelper>
  nameWithType: IObservable<FuturesRateHelper>
  fullName: System.IObservable<QLNet.FuturesRateHelper>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.FuturesRateHelper
    name: FuturesRateHelper
    nameWithType: FuturesRateHelper
    fullName: QLNet.FuturesRateHelper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.FuturesRateHelper>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,FuturesRateHelper>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,FuturesRateHelper>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,QLNet.FuturesRateHelper>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: QLNet.FuturesRateHelper
    name: FuturesRateHelper
    nameWithType: FuturesRateHelper
    fullName: QLNet.FuturesRateHelper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  name: IObservable<KeyValuePair<string,decimal>>
  nameWithType: IObservable<KeyValuePair<string,decimal>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,decimal>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.decimal
    name: decimal
    nameWithType: decimal
    fullName: decimal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  name: IObservable<KeyValuePair<string,float>>
  nameWithType: IObservable<KeyValuePair<string,float>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,float>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  name: IObservable<KeyValuePair<string,int>>
  nameWithType: IObservable<KeyValuePair<string,int>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,int>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.int
    name: int
    nameWithType: int
    fullName: int
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObserver`1<QLNet.FuturesRateHelper>
  name: IObserver<FuturesRateHelper>
  nameWithType: IObserver<FuturesRateHelper>
  fullName: System.IObserver<QLNet.FuturesRateHelper>
  spec.csharp:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.FuturesRateHelper
    name: FuturesRateHelper
    nameWithType: FuturesRateHelper
    fullName: QLNet.FuturesRateHelper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  name: "member Bind: ICell<'T> -> unit"
  nameWithType: "member Model.Bind: ICell<'T> -> unit"
  fullName: "member Cephei.Cell.Generic.Model.Bind: Cephei.Cell.Generic.ICell<'T> -> unit"
- uid: Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  name: 'abstract member OnCompleted: unit -> unit'
  nameWithType: 'abstract member Model.OnCompleted: unit -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnCompleted: unit -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnError(exn)
  name: 'abstract member OnError: exn -> unit'
  nameWithType: 'abstract member Model.OnError: exn -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnError: exn -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnNext('T)
  name: "abstract member OnNext: 'T -> unit"
  nameWithType: "abstract member Model.OnNext: 'T -> unit"
  fullName: "abstract member Cephei.Cell.Generic.Model.OnNext: 'T -> unit"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  name: "abstract member Subscribe: IObserver<'T> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<'T> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<'T> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: "abstract member Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  name: "abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Value(unit)
  name: "abstract property Value: 'T"
  nameWithType: "abstract property Model.Value: 'T"
  fullName: "abstract property Cephei.Cell.Generic.Model.Value: 'T"
- uid: Cephei.Cell.Model.As(string)
  name: "member As: string -> ICell<'T>"
  nameWithType: "member Model.As: string -> ICell<'T>"
  fullName: "member Cephei.Cell.Model.As: string -> Cephei.Cell.Generic.ICell<'T>"
- uid: Cephei.Cell.Model.Bind(unit)
  name: 'member Bind: unit -> unit'
  nameWithType: 'member Model.Bind: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Bind: unit -> unit'
- uid: Cephei.Cell.Model.Box(unit)
  name: 'abstract property Box: obj'
  nameWithType: 'abstract property Model.Box: obj'
  fullName: 'abstract property Cephei.Cell.Model.Box: obj'
- uid: Cephei.Cell.Model.Change()
  name: 'abstract member Change: CellChange'
  nameWithType: 'abstract member Model.Change: CellChange'
  fullName: 'abstract member Cephei.Cell.Model.Change: Cephei.Cell.CellChange'
- uid: Cephei.Cell.Model.Create(Unit -> 'T * string)
  name: "member Create: Unit -> 'T * string -> Cell<'T>"
  nameWithType: "member Model.Create: Unit -> 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.Create: Unit -> 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.CreateValue('T * string)
  name: "member CreateValue: 'T * string -> Cell<'T>"
  nameWithType: "member Model.CreateValue: 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.CreateValue: 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.Dependants(unit)
  name: 'abstract property Dependants: IEnumerable<ICellEvent>'
  nameWithType: 'abstract property Model.Dependants: IEnumerable<ICellEvent>'
  fullName: 'abstract property Cephei.Cell.Model.Dependants: System.Collections.Generic.IEnumerable<Cephei.Cell.ICellEvent>'
- uid: Cephei.Cell.Model.Dispose(unit)
  name: 'member Dispose: unit -> unit'
  nameWithType: 'member Model.Dispose: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Dispose: unit -> unit'
- uid: Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  name: 'member GetOrAdd: string * ICell -> ICell'
  nameWithType: 'member Model.GetOrAdd: string * ICell -> ICell'
  fullName: 'member Cephei.Cell.Model.GetOrAdd: string * Cephei.Cell.ICell -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.HasFunction(unit)
  name: 'abstract property HasFunction: bool'
  nameWithType: 'abstract property Model.HasFunction: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasFunction: bool'
- uid: Cephei.Cell.Model.HasValue(unit)
  name: 'abstract property HasValue: bool'
  nameWithType: 'abstract property Model.HasValue: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasValue: bool'
- uid: Cephei.Cell.Model.Item(string)
  name: 'property Item: string -> ICell'
  nameWithType: 'property Model.Item: string -> ICell'
  fullName: 'property Cephei.Cell.Model.Item: string -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Mnemonic(unit)
  name: 'abstract property Mnemonic: string'
  nameWithType: 'abstract property Model.Mnemonic: string'
  fullName: 'abstract property Cephei.Cell.Model.Mnemonic: string'
- uid: Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  name: 'abstract member OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  nameWithType: 'abstract member Model.OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  fullName: 'abstract member Cephei.Cell.Model.OnChange: Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession -> unit'
- uid: Cephei.Cell.Model.Parent(unit)
  name: 'abstract property Parent: ICell'
  nameWithType: 'abstract property Model.Parent: ICell'
  fullName: 'abstract property Cephei.Cell.Model.Parent: Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  name: 'abstract member Subscribe: IObserver<ICell> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ICell> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ICell> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: 'abstract member Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,float>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,int>> -> System.IDisposable'
- uid: Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  name: 'member TryAdd: string * ICell -> bool'
  nameWithType: 'member Model.TryAdd: string * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryAdd: string * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  name: 'member TryRemove: string * ICell byref -> bool'
  nameWithType: 'member Model.TryRemove: string * ICell byref -> bool'
  fullName: 'member Cephei.Cell.Model.TryRemove: string * Cephei.Cell.ICell byref -> bool'
- uid: Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  name: 'member TryUpdate: string * ICell * ICell -> bool'
  nameWithType: 'member Model.TryUpdate: string * ICell * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryUpdate: string * Cephei.Cell.ICell * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  name: 'abstract member add_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.add_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.add_Change: Cephei.Cell.CellChange -> unit'
- uid: Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  name: 'abstract member remove_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.remove_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.remove_Change: Cephei.Cell.CellChange -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  name: 'abstract member Clear: unit -> unit'
  nameWithType: 'abstract member ConcurrentDictionary.Clear: unit -> unit'
  fullName: 'abstract member System.Collections.Concurrent.ConcurrentDictionary.Clear: unit -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  name: "abstract member ContainsKey: 'TKey -> bool"
  nameWithType: "abstract member ConcurrentDictionary.ContainsKey: 'TKey -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.ContainsKey: 'TKey -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  name: 'abstract property Count: int'
  nameWithType: 'abstract property ConcurrentDictionary.Count: int'
  fullName: 'abstract property System.Collections.Concurrent.ConcurrentDictionary.Count: int'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  name: "abstract member GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  nameWithType: "abstract member ConcurrentDictionary.GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.GetEnumerator: unit -> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<'TKey,'TValue>>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  name: "member GetOrAdd: 'TKey * 'TValue -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  name: "member GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * System.Func<'TKey,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  name: 'property IsEmpty: bool'
  nameWithType: 'property ConcurrentDictionary.IsEmpty: bool'
  fullName: 'property System.Collections.Concurrent.ConcurrentDictionary.IsEmpty: bool'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  name: "abstract property Item: 'TKey -> 'TValue"
  nameWithType: "abstract property ConcurrentDictionary.Item: 'TKey -> 'TValue"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Item: 'TKey -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  name: "abstract property Keys: ICollection<'TKey>"
  nameWithType: "abstract property ConcurrentDictionary.Keys: ICollection<'TKey>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Keys: System.Collections.Generic.ICollection<'TKey>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  name: "member ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  nameWithType: "member ConcurrentDictionary.ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.ToArray: unit -> System.Collections.Generic.KeyValuePair<'TKey,'TValue> []"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  name: "member TryAdd: 'TKey * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  name: "abstract member TryGetValue: 'TKey * 'TValue byref -> bool"
  nameWithType: "abstract member ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  name: "member TryRemove: 'TKey * 'TValue byref -> bool"
  nameWithType: "member ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  name: "member TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  name: "abstract property Values: ICollection<'TValue>"
  nameWithType: "abstract property ConcurrentDictionary.Values: ICollection<'TValue>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Values: System.Collections.Generic.ICollection<'TValue>"
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Handle`1<QLNet.Quote>>
  name: ICell<Handle<Quote>>
  nameWithType: ICell<Handle<Quote>>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Handle`1
    name: Handle
    nameWithType: Handle
    fullName: QLNet.Handle
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Quote
    name: Quote
    nameWithType: Quote
    fullName: QLNet.Quote
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
  name: ICell<Date>
  nameWithType: ICell<Date>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Date>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Date
    name: Date
    nameWithType: Date
    fullName: QLNet.Date
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
  name: ICell<DayCounter>
  nameWithType: ICell<DayCounter>
  fullName: Cephei.Cell.Generic.ICell<QLNet.DayCounter>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.DayCounter
    name: DayCounter
    nameWithType: DayCounter
    fullName: QLNet.DayCounter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Futures.Type>
  name: ICell<Type>
  nameWithType: ICell<Type>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Futures.Type>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Futures.Type
    name: Type
    nameWithType: Type
    fullName: QLNet.Futures.Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.FuturesRateHelperModel4.#ctor*
  commentId: Overload:Cephei.QL.FuturesRateHelperModel4.#ctor*
  name: ( .ctor )
  nameWithType: FuturesRateHelperModel4.( .ctor )
  fullName: Cephei.QL.FuturesRateHelperModel4
- uid: TypeRef:Cephei.QL.FuturesRateHelperModel4
  name: FuturesRateHelperModel4
  nameWithType: FuturesRateHelperModel4
  fullName: Cephei.QL.FuturesRateHelperModel4
  spec.csharp:
  - {}
  - uid: Cephei.QL.FuturesRateHelperModel4
    name: FuturesRateHelperModel4
    nameWithType: FuturesRateHelperModel4
    fullName: Cephei.QL.FuturesRateHelperModel4
  - {}
- uid: Cephei.QL.FuturesRateHelperModel4.RegisterWith*
  commentId: Overload:Cephei.QL.FuturesRateHelperModel4.RegisterWith*
  name: RegisterWith
  nameWithType: FuturesRateHelperModel4.RegisterWith
  fullName: Cephei.QL.FuturesRateHelperModel4.RegisterWith
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Callback>
  name: ICell<Callback>
  nameWithType: ICell<Callback>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Callback>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Callback
    name: Callback
    nameWithType: Callback
    fullName: QLNet.Callback
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.FuturesRateHelperModel4.SetTermStructure*
  commentId: Overload:Cephei.QL.FuturesRateHelperModel4.SetTermStructure*
  name: SetTermStructure
  nameWithType: FuturesRateHelperModel4.SetTermStructure
  fullName: Cephei.QL.FuturesRateHelperModel4.SetTermStructure
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<'?945787>
  name: ICell<'?945787>
  nameWithType: ICell<'?945787>
  fullName: Cephei.Cell.Generic.ICell<'?945787>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - name: "'?945787"
    nameWithType: "'?945787"
    fullName: "'?945787"
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.FuturesRateHelperModel4.UnregisterWith*
  commentId: Overload:Cephei.QL.FuturesRateHelperModel4.UnregisterWith*
  name: UnregisterWith
  nameWithType: FuturesRateHelperModel4.UnregisterWith
  fullName: Cephei.QL.FuturesRateHelperModel4.UnregisterWith
- uid: Cephei.QL.FuturesRateHelperModel4.price*
  commentId: Overload:Cephei.QL.FuturesRateHelperModel4.price*
  name: price
  nameWithType: FuturesRateHelperModel4.price
  fullName: Cephei.QL.FuturesRateHelperModel4.price
- uid: Cephei.QL.FuturesRateHelperModel4.iborStartDate*
  commentId: Overload:Cephei.QL.FuturesRateHelperModel4.iborStartDate*
  name: iborStartDate
  nameWithType: FuturesRateHelperModel4.iborStartDate
  fullName: Cephei.QL.FuturesRateHelperModel4.iborStartDate
- uid: Cephei.QL.FuturesRateHelperModel4.iborEndDate*
  commentId: Overload:Cephei.QL.FuturesRateHelperModel4.iborEndDate*
  name: iborEndDate
  nameWithType: FuturesRateHelperModel4.iborEndDate
  fullName: Cephei.QL.FuturesRateHelperModel4.iborEndDate
- uid: Cephei.QL.FuturesRateHelperModel4.dayCounter*
  commentId: Overload:Cephei.QL.FuturesRateHelperModel4.dayCounter*
  name: dayCounter
  nameWithType: FuturesRateHelperModel4.dayCounter
  fullName: Cephei.QL.FuturesRateHelperModel4.dayCounter
- uid: Cephei.QL.FuturesRateHelperModel4.convAdj*
  commentId: Overload:Cephei.QL.FuturesRateHelperModel4.convAdj*
  name: convAdj
  nameWithType: FuturesRateHelperModel4.convAdj
  fullName: Cephei.QL.FuturesRateHelperModel4.convAdj
- uid: Cephei.QL.FuturesRateHelperModel4.Update*
  commentId: Overload:Cephei.QL.FuturesRateHelperModel4.Update*
  name: Update
  nameWithType: FuturesRateHelperModel4.Update
  fullName: Cephei.QL.FuturesRateHelperModel4.Update
- uid: Cephei.QL.FuturesRateHelperModel4.Type*
  commentId: Overload:Cephei.QL.FuturesRateHelperModel4.Type*
  name: Type
  nameWithType: FuturesRateHelperModel4.Type
  fullName: Cephei.QL.FuturesRateHelperModel4.Type
- uid: Cephei.QL.FuturesRateHelperModel4.QuoteValue*
  commentId: Overload:Cephei.QL.FuturesRateHelperModel4.QuoteValue*
  name: QuoteValue
  nameWithType: FuturesRateHelperModel4.QuoteValue
  fullName: Cephei.QL.FuturesRateHelperModel4.QuoteValue
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
  name: ICell<float>
  nameWithType: ICell<float>
  fullName: Cephei.Cell.Generic.ICell<float>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.FuturesRateHelperModel4.QuoteIsValid*
  commentId: Overload:Cephei.QL.FuturesRateHelperModel4.QuoteIsValid*
  name: QuoteIsValid
  nameWithType: FuturesRateHelperModel4.QuoteIsValid
  fullName: Cephei.QL.FuturesRateHelperModel4.QuoteIsValid
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
  name: ICell<bool>
  nameWithType: ICell<bool>
  fullName: Cephei.Cell.Generic.ICell<bool>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.bool
    name: bool
    nameWithType: bool
    fullName: bool
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.FuturesRateHelperModel4.QuoteError*
  commentId: Overload:Cephei.QL.FuturesRateHelperModel4.QuoteError*
  name: QuoteError
  nameWithType: FuturesRateHelperModel4.QuoteError
  fullName: Cephei.QL.FuturesRateHelperModel4.QuoteError
- uid: Cephei.QL.FuturesRateHelperModel4.Quote*
  commentId: Overload:Cephei.QL.FuturesRateHelperModel4.Quote*
  name: Quote
  nameWithType: FuturesRateHelperModel4.Quote
  fullName: Cephei.QL.FuturesRateHelperModel4.Quote
- uid: Cephei.QL.FuturesRateHelperModel4.PillarDate*
  commentId: Overload:Cephei.QL.FuturesRateHelperModel4.PillarDate*
  name: PillarDate
  nameWithType: FuturesRateHelperModel4.PillarDate
  fullName: Cephei.QL.FuturesRateHelperModel4.PillarDate
- uid: Cephei.QL.FuturesRateHelperModel4.MaturityDate*
  commentId: Overload:Cephei.QL.FuturesRateHelperModel4.MaturityDate*
  name: MaturityDate
  nameWithType: FuturesRateHelperModel4.MaturityDate
  fullName: Cephei.QL.FuturesRateHelperModel4.MaturityDate
- uid: Cephei.QL.FuturesRateHelperModel4.LatestRelevantDate*
  commentId: Overload:Cephei.QL.FuturesRateHelperModel4.LatestRelevantDate*
  name: LatestRelevantDate
  nameWithType: FuturesRateHelperModel4.LatestRelevantDate
  fullName: Cephei.QL.FuturesRateHelperModel4.LatestRelevantDate
- uid: Cephei.QL.FuturesRateHelperModel4.LatestDate*
  commentId: Overload:Cephei.QL.FuturesRateHelperModel4.LatestDate*
  name: LatestDate
  nameWithType: FuturesRateHelperModel4.LatestDate
  fullName: Cephei.QL.FuturesRateHelperModel4.LatestDate
- uid: Cephei.QL.FuturesRateHelperModel4.ImpliedQuote*
  commentId: Overload:Cephei.QL.FuturesRateHelperModel4.ImpliedQuote*
  name: ImpliedQuote
  nameWithType: FuturesRateHelperModel4.ImpliedQuote
  fullName: Cephei.QL.FuturesRateHelperModel4.ImpliedQuote
- uid: Cephei.QL.FuturesRateHelperModel4.EarliestDate*
  commentId: Overload:Cephei.QL.FuturesRateHelperModel4.EarliestDate*
  name: EarliestDate
  nameWithType: FuturesRateHelperModel4.EarliestDate
  fullName: Cephei.QL.FuturesRateHelperModel4.EarliestDate
- uid: Cephei.QL.FuturesRateHelperModel4.ConvexityAdjustment*
  commentId: Overload:Cephei.QL.FuturesRateHelperModel4.ConvexityAdjustment*
  name: ConvexityAdjustment
  nameWithType: FuturesRateHelperModel4.ConvexityAdjustment
  fullName: Cephei.QL.FuturesRateHelperModel4.ConvexityAdjustment
