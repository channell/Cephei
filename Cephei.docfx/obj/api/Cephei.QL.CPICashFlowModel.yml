### YamlMime:ManagedReference
items:
- uid: Cephei.QL.CPICashFlowModel
  commentId: T:Cephei.QL.CPICashFlowModel
  id: CPICashFlowModel
  parent: Cephei.QL
  children:
  - Cephei.QL.CPICashFlowModel.#ctor(Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.ZeroInflationIndex> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<bool> * Cephei.Cell.Generic.ICell<QLNet.InterpolationType> * Cephei.Cell.Generic.ICell<QLNet.Frequency>)
  - Cephei.QL.CPICashFlowModel.Accept(Cephei.Cell.Generic.ICell<QLNet.IAcyclicVisitor>)
  - Cephei.QL.CPICashFlowModel.Amount(unit)
  - Cephei.QL.CPICashFlowModel.baseDate(unit)
  - Cephei.QL.CPICashFlowModel.BaseDate(unit)
  - Cephei.QL.CPICashFlowModel.baseFixing(unit)
  - Cephei.QL.CPICashFlowModel.BaseFixing(unit)
  - Cephei.QL.CPICashFlowModel.CompareTo(Cephei.Cell.Generic.ICell<QLNet.CashFlow>)
  - Cephei.QL.CPICashFlowModel.Date(unit)
  - Cephei.QL.CPICashFlowModel.Equals(Cephei.Cell.Generic.ICell<System.Object>)
  - Cephei.QL.CPICashFlowModel.ExCouponDate(unit)
  - Cephei.QL.CPICashFlowModel.fixingDate(unit)
  - Cephei.QL.CPICashFlowModel.FixingDate(unit)
  - Cephei.QL.CPICashFlowModel.frequency(unit)
  - Cephei.QL.CPICashFlowModel.Frequency(unit)
  - Cephei.QL.CPICashFlowModel.growthOnly(unit)
  - Cephei.QL.CPICashFlowModel.GrowthOnly(unit)
  - Cephei.QL.CPICashFlowModel.HasOccurred(Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<System.Nullable<bool>>)
  - Cephei.QL.CPICashFlowModel.index(unit)
  - Cephei.QL.CPICashFlowModel.Index(unit)
  - Cephei.QL.CPICashFlowModel.interpolation(unit)
  - Cephei.QL.CPICashFlowModel.Interpolation(unit)
  - Cephei.QL.CPICashFlowModel.notional(unit)
  - Cephei.QL.CPICashFlowModel.Notional(unit)
  - Cephei.QL.CPICashFlowModel.paymentDate(unit)
  - Cephei.QL.CPICashFlowModel.RegisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
  - Cephei.QL.CPICashFlowModel.TradingExCoupon(Cephei.Cell.Generic.ICell<QLNet.Date>)
  - Cephei.QL.CPICashFlowModel.UnregisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
  langs:
  - csharp
  - vb
  name: CPICashFlowModel
  nameWithType: Cephei.QL.CPICashFlowModel
  fullName: Cephei.QL.CPICashFlowModel
  type: Class
  source:
    id: Cephei.QL.CPICashFlowModel
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 35
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: >-
      [<AutoSerializable(true)>]

      type CPICashFlowModel (notional:ICell<double>, index:ICell<ZeroInflationIndex>, baseDate:ICell<Date>, baseFixing:ICell<double>, fixingDate:ICell<Date>, paymentDate:ICell<Date>, growthOnly:ICell<bool>, interpolation:ICell<InterpolationType>, frequency:ICell<Frequency>)
          inherit Model<CPICashFlow>
          interface IDictionary<string,ICell>
          interface ICollection<KeyValuePair<string,ICell>>
          interface IReadOnlyDictionary<string,ICell>
          interface IReadOnlyCollection<KeyValuePair<string,ICell>>
          interface IEnumerable<KeyValuePair<string,ICell>>
          interface IDictionary
          interface ICollection
          interface IEnumerable
          interface IObservable<ICell>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
          interface IObservable<ISession * Model * CellEvent * ICell * DateTime>
          interface IObservable<KeyValuePair<string,float>>
          interface IObservable<KeyValuePair<string,int>>
          interface IObservable<KeyValuePair<string,decimal>>
          interface ICell<CPICashFlow>
          interface ICell
          interface ICellEvent
          interface IObservable<CPICashFlow>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,CPICashFlow>>>
          interface IObservable<ISession * ICell<CPICashFlow> * CellEvent * ICell * DateTime>
          interface IObserver<CPICashFlow>
    parameters:
    - id: notional
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: index
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.ZeroInflationIndex>
      attributes: []
    - id: baseDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    - id: baseFixing
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: fixingDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    - id: paymentDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    - id: growthOnly
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
    - id: interpolation
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.InterpolationType>
      attributes: []
    - id: frequency
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Frequency>
      attributes: []
    typeParameters: []
  inheritance:
  - TypeRef:System.Object
  - TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:Cephei.Cell.Model
  - TypeRef:Cephei.Cell.Generic.Model`1<QLNet.CPICashFlow>
  implements:
  - TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.CPICashFlow>
  - TypeRef:Cephei.Cell.ICell
  - TypeRef:Cephei.Cell.ICellEvent
  - TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.ICollection
  - TypeRef:System.Collections.IDictionary
  - TypeRef:System.Collections.IEnumerable
  - TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.CPICashFlow> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<QLNet.CPICashFlow>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.CPICashFlow>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  - TypeRef:System.IObserver`1<QLNet.CPICashFlow>
  inheritedMembers:
  - Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  - Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  - Cephei.Cell.Generic.Model`1.OnError(exn)
  - Cephei.Cell.Generic.Model`1.OnNext('T)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  - Cephei.Cell.Generic.Model`1.Value(unit)
  - Cephei.Cell.Model.As(string)
  - Cephei.Cell.Model.Bind(unit)
  - Cephei.Cell.Model.Box(unit)
  - Cephei.Cell.Model.Change()
  - Cephei.Cell.Model.Create(Unit -> 'T * string)
  - Cephei.Cell.Model.CreateValue('T * string)
  - Cephei.Cell.Model.Dependants(unit)
  - Cephei.Cell.Model.Dispose(unit)
  - Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.HasFunction(unit)
  - Cephei.Cell.Model.HasValue(unit)
  - Cephei.Cell.Model.Item(string)
  - Cephei.Cell.Model.Mnemonic(unit)
  - Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  - Cephei.Cell.Model.Parent(unit)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  - Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  - Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  - Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  - Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  attributes:
  - type: Microsoft.FSharp.Core.AutoSerializableAttribute
    arguments:
    - type: System.Boolean
      value: true
    namedArguments: []
- uid: Cephei.QL.CPICashFlowModel.#ctor(Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.ZeroInflationIndex> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<bool> * Cephei.Cell.Generic.ICell<QLNet.InterpolationType> * Cephei.Cell.Generic.ICell<QLNet.Frequency>)
  commentId: M:Cephei.QL.CPICashFlowModel.#ctor(Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{QLNet.ZeroInflationIndex},Cephei.Cell.Generic.ICell{QLNet.Date},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{QLNet.Date},Cephei.Cell.Generic.ICell{QLNet.Date},Cephei.Cell.Generic.ICell{System.Boolean},Cephei.Cell.Generic.ICell{QLNet.InterpolationType},Cephei.Cell.Generic.ICell{QLNet.Frequency})
  id: '#ctor(Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.ZeroInflationIndex> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<bool> * Cephei.Cell.Generic.ICell<QLNet.InterpolationType> * Cephei.Cell.Generic.ICell<QLNet.Frequency>)'
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'new: ICell<double> * ICell<ZeroInflationIndex> * ICell<Date> * ICell<double> * ICell<Date> * ICell<Date> * ICell<bool> * ICell<InterpolationType> * ICell<Frequency> -> CPICashFlowModel'
  nameWithType: 'new: ICell<double> * ICell<ZeroInflationIndex> * ICell<Date> * ICell<double> * ICell<Date> * ICell<Date> * ICell<bool> * ICell<InterpolationType> * ICell<Frequency> -> CPICashFlowModel'
  fullName: 'new: Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.ZeroInflationIndex> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<bool> * Cephei.Cell.Generic.ICell<QLNet.InterpolationType> * Cephei.Cell.Generic.ICell<QLNet.Frequency> -> Cephei.QL.CPICashFlowModel'
  type: Constructor
  source:
    id: Cephei.QL.CPICashFlowModel.#ctor(Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.ZeroInflationIndex> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<bool> * Cephei.Cell.Generic.ICell<QLNet.InterpolationType> * Cephei.Cell.Generic.ICell<QLNet.Frequency>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 35
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  summary: Implicit constructor.
  syntax:
    content: 'new: notional:ICell<double> * index:ICell<ZeroInflationIndex> * baseDate:ICell<Date> * baseFixing:ICell<double> * fixingDate:ICell<Date> * paymentDate:ICell<Date> * growthOnly:ICell<bool> * interpolation:ICell<InterpolationType> * frequency:ICell<Frequency> -> CPICashFlowModel'
    parameters:
    - id: notional
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: index
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.ZeroInflationIndex>
      attributes: []
    - id: baseDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    - id: baseFixing
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: fixingDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    - id: paymentDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    - id: growthOnly
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
    - id: interpolation
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.InterpolationType>
      attributes: []
    - id: frequency
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Frequency>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.QL.CPICashFlowModel
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.#ctor*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.Accept(Cephei.Cell.Generic.ICell<QLNet.IAcyclicVisitor>)
  commentId: M:Cephei.QL.CPICashFlowModel.Accept(Cephei.Cell.Generic.ICell{QLNet.IAcyclicVisitor})
  id: Accept(Cephei.Cell.Generic.ICell<QLNet.IAcyclicVisitor>)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'member Accept: ICell<IAcyclicVisitor> -> ICell<CPICashFlow>'
  nameWithType: 'member CPICashFlowModel.Accept: ICell<IAcyclicVisitor> -> ICell<CPICashFlow>'
  fullName: 'member Cephei.QL.CPICashFlowModel.Accept: Cephei.Cell.Generic.ICell<QLNet.IAcyclicVisitor> -> Cephei.Cell.Generic.ICell<QLNet.CPICashFlow>'
  type: Method
  source:
    id: Cephei.QL.CPICashFlowModel.Accept(Cephei.Cell.Generic.ICell<QLNet.IAcyclicVisitor>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 125
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Accept: v:ICell<IAcyclicVisitor> -> ICell<CPICashFlow>'
    parameters:
    - id: v
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IAcyclicVisitor>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.CPICashFlow>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.Accept*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.CompareTo(Cephei.Cell.Generic.ICell<QLNet.CashFlow>)
  commentId: M:Cephei.QL.CPICashFlowModel.CompareTo(Cephei.Cell.Generic.ICell{QLNet.CashFlow})
  id: CompareTo(Cephei.Cell.Generic.ICell<QLNet.CashFlow>)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'member CompareTo: ICell<CashFlow> -> ICell<int>'
  nameWithType: 'member CPICashFlowModel.CompareTo: ICell<CashFlow> -> ICell<int>'
  fullName: 'member Cephei.QL.CPICashFlowModel.CompareTo: Cephei.Cell.Generic.ICell<QLNet.CashFlow> -> Cephei.Cell.Generic.ICell<int>'
  type: Method
  source:
    id: Cephei.QL.CPICashFlowModel.CompareTo(Cephei.Cell.Generic.ICell<QLNet.CashFlow>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 116
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member CompareTo: cf:ICell<CashFlow> -> ICell<int>'
    parameters:
    - id: cf
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.CashFlow>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.CompareTo*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.Equals(Cephei.Cell.Generic.ICell<System.Object>)
  commentId: M:Cephei.QL.CPICashFlowModel.Equals(Cephei.Cell.Generic.ICell{System.Object})
  id: Equals(Cephei.Cell.Generic.ICell<System.Object>)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'member Equals: ICell<Object> -> ICell<bool>'
  nameWithType: 'member CPICashFlowModel.Equals: ICell<Object> -> ICell<bool>'
  fullName: 'member Cephei.QL.CPICashFlowModel.Equals: Cephei.Cell.Generic.ICell<System.Object> -> Cephei.Cell.Generic.ICell<bool>'
  type: Method
  source:
    id: Cephei.QL.CPICashFlowModel.Equals(Cephei.Cell.Generic.ICell<System.Object>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 118
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Equals: cf:ICell<Object> -> ICell<bool>'
    parameters:
    - id: cf
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Object>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.Equals*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.HasOccurred(Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<System.Nullable<bool>>)
  commentId: M:Cephei.QL.CPICashFlowModel.HasOccurred(Cephei.Cell.Generic.ICell{QLNet.Date},Cephei.Cell.Generic.ICell{System.Nullable{System.Boolean}})
  id: HasOccurred(Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<System.Nullable<bool>>)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'member HasOccurred: ICell<Date> -> ICell<Nullable<bool>> -> ICell<bool>'
  nameWithType: 'member CPICashFlowModel.HasOccurred: ICell<Date> -> ICell<Nullable<bool>> -> ICell<bool>'
  fullName: 'member Cephei.QL.CPICashFlowModel.HasOccurred: Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<System.Nullable<bool>> -> Cephei.Cell.Generic.ICell<bool>'
  type: Method
  source:
    id: Cephei.QL.CPICashFlowModel.HasOccurred(Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<System.Nullable<bool>>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 121
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member HasOccurred: refDate:ICell<Date> -> includeRefDate:ICell<Nullable<bool>> -> ICell<bool>'
    parameters:
    - id: refDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    - id: includeRefDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Nullable`1<Microsoft.FSharp.Core.bool>>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.HasOccurred*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.RegisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
  commentId: M:Cephei.QL.CPICashFlowModel.RegisterWith(Cephei.Cell.Generic.ICell{QLNet.Callback})
  id: RegisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'member RegisterWith: ICell<Callback> -> ICell<CPICashFlow>'
  nameWithType: 'member CPICashFlowModel.RegisterWith: ICell<Callback> -> ICell<CPICashFlow>'
  fullName: 'member Cephei.QL.CPICashFlowModel.RegisterWith: Cephei.Cell.Generic.ICell<QLNet.Callback> -> Cephei.Cell.Generic.ICell<QLNet.CPICashFlow>'
  type: Method
  source:
    id: Cephei.QL.CPICashFlowModel.RegisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 127
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member RegisterWith: handler:ICell<Callback> -> ICell<CPICashFlow>'
    parameters:
    - id: handler
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Callback>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.CPICashFlow>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.RegisterWith*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.TradingExCoupon(Cephei.Cell.Generic.ICell<QLNet.Date>)
  commentId: M:Cephei.QL.CPICashFlowModel.TradingExCoupon(Cephei.Cell.Generic.ICell{QLNet.Date})
  id: TradingExCoupon(Cephei.Cell.Generic.ICell<QLNet.Date>)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'member TradingExCoupon: ICell<Date> -> ICell<bool>'
  nameWithType: 'member CPICashFlowModel.TradingExCoupon: ICell<Date> -> ICell<bool>'
  fullName: 'member Cephei.QL.CPICashFlowModel.TradingExCoupon: Cephei.Cell.Generic.ICell<QLNet.Date> -> Cephei.Cell.Generic.ICell<bool>'
  type: Method
  source:
    id: Cephei.QL.CPICashFlowModel.TradingExCoupon(Cephei.Cell.Generic.ICell<QLNet.Date>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 123
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member TradingExCoupon: refDate:ICell<Date> -> ICell<bool>'
    parameters:
    - id: refDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.TradingExCoupon*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.UnregisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
  commentId: M:Cephei.QL.CPICashFlowModel.UnregisterWith(Cephei.Cell.Generic.ICell{QLNet.Callback})
  id: UnregisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'member UnregisterWith: ICell<Callback> -> ICell<CPICashFlow>'
  nameWithType: 'member CPICashFlowModel.UnregisterWith: ICell<Callback> -> ICell<CPICashFlow>'
  fullName: 'member Cephei.QL.CPICashFlowModel.UnregisterWith: Cephei.Cell.Generic.ICell<QLNet.Callback> -> Cephei.Cell.Generic.ICell<QLNet.CPICashFlow>'
  type: Method
  source:
    id: Cephei.QL.CPICashFlowModel.UnregisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 129
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member UnregisterWith: handler:ICell<Callback> -> ICell<CPICashFlow>'
    parameters:
    - id: handler
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Callback>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.CPICashFlow>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.UnregisterWith*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.paymentDate(unit)
  commentId: P:Cephei.QL.CPICashFlowModel.paymentDate
  id: paymentDate(unit)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'property paymentDate: ICell<Date>'
  nameWithType: 'property CPICashFlowModel.paymentDate: ICell<Date>'
  fullName: 'property Cephei.QL.CPICashFlowModel.paymentDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.CPICashFlowModel.paymentDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 102
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property paymentDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.paymentDate*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.notional(unit)
  commentId: P:Cephei.QL.CPICashFlowModel.notional
  id: notional(unit)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'property notional: ICell<float>'
  nameWithType: 'property CPICashFlowModel.notional: ICell<float>'
  fullName: 'property Cephei.QL.CPICashFlowModel.notional: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.CPICashFlowModel.notional(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 97
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property notional: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.notional*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.interpolation(unit)
  commentId: P:Cephei.QL.CPICashFlowModel.interpolation
  id: interpolation(unit)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'property interpolation: ICell<InterpolationType>'
  nameWithType: 'property CPICashFlowModel.interpolation: ICell<InterpolationType>'
  fullName: 'property Cephei.QL.CPICashFlowModel.interpolation: Cephei.Cell.Generic.ICell<QLNet.InterpolationType>'
  type: Property
  source:
    id: Cephei.QL.CPICashFlowModel.interpolation(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 104
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property interpolation: ICell<InterpolationType> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.InterpolationType>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.interpolation*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.index(unit)
  commentId: P:Cephei.QL.CPICashFlowModel.index
  id: index(unit)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'property index: ICell<Index>'
  nameWithType: 'property CPICashFlowModel.index: ICell<Index>'
  fullName: 'property Cephei.QL.CPICashFlowModel.index: Cephei.Cell.Generic.ICell<QLNet.Index>'
  type: Property
  source:
    id: Cephei.QL.CPICashFlowModel.index(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 98
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property index: ICell<Index> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Index>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.index*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.growthOnly(unit)
  commentId: P:Cephei.QL.CPICashFlowModel.growthOnly
  id: growthOnly(unit)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'property growthOnly: ICell<bool>'
  nameWithType: 'property CPICashFlowModel.growthOnly: ICell<bool>'
  fullName: 'property Cephei.QL.CPICashFlowModel.growthOnly: Cephei.Cell.Generic.ICell<bool>'
  type: Property
  source:
    id: Cephei.QL.CPICashFlowModel.growthOnly(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 103
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property growthOnly: ICell<bool> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.growthOnly*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.frequency(unit)
  commentId: P:Cephei.QL.CPICashFlowModel.frequency
  id: frequency(unit)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'property frequency: ICell<Frequency>'
  nameWithType: 'property CPICashFlowModel.frequency: ICell<Frequency>'
  fullName: 'property Cephei.QL.CPICashFlowModel.frequency: Cephei.Cell.Generic.ICell<QLNet.Frequency>'
  type: Property
  source:
    id: Cephei.QL.CPICashFlowModel.frequency(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 105
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property frequency: ICell<Frequency> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Frequency>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.frequency*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.fixingDate(unit)
  commentId: P:Cephei.QL.CPICashFlowModel.fixingDate
  id: fixingDate(unit)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'property fixingDate: ICell<Date>'
  nameWithType: 'property CPICashFlowModel.fixingDate: ICell<Date>'
  fullName: 'property Cephei.QL.CPICashFlowModel.fixingDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.CPICashFlowModel.fixingDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 101
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property fixingDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.fixingDate*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.baseFixing(unit)
  commentId: P:Cephei.QL.CPICashFlowModel.baseFixing
  id: baseFixing(unit)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'property baseFixing: ICell<float>'
  nameWithType: 'property CPICashFlowModel.baseFixing: ICell<float>'
  fullName: 'property Cephei.QL.CPICashFlowModel.baseFixing: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.CPICashFlowModel.baseFixing(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 100
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property baseFixing: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.baseFixing*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.baseDate(unit)
  commentId: P:Cephei.QL.CPICashFlowModel.baseDate
  id: baseDate(unit)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'property baseDate: ICell<Date>'
  nameWithType: 'property CPICashFlowModel.baseDate: ICell<Date>'
  fullName: 'property Cephei.QL.CPICashFlowModel.baseDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.CPICashFlowModel.baseDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 99
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property baseDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.baseDate*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.Notional(unit)
  commentId: P:Cephei.QL.CPICashFlowModel.Notional
  id: Notional(unit)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'property Notional: ICell<float>'
  nameWithType: 'property CPICashFlowModel.Notional: ICell<float>'
  fullName: 'property Cephei.QL.CPICashFlowModel.Notional: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.CPICashFlowModel.Notional(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 115
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Notional: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.Notional*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.Interpolation(unit)
  commentId: P:Cephei.QL.CPICashFlowModel.Interpolation
  id: Interpolation(unit)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'property Interpolation: ICell<InterpolationType>'
  nameWithType: 'property CPICashFlowModel.Interpolation: ICell<InterpolationType>'
  fullName: 'property Cephei.QL.CPICashFlowModel.Interpolation: Cephei.Cell.Generic.ICell<QLNet.InterpolationType>'
  type: Property
  source:
    id: Cephei.QL.CPICashFlowModel.Interpolation(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 110
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Interpolation: ICell<InterpolationType> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.InterpolationType>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.Interpolation*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.Index(unit)
  commentId: P:Cephei.QL.CPICashFlowModel.Index
  id: Index(unit)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'property Index: ICell<Index>'
  nameWithType: 'property CPICashFlowModel.Index: ICell<Index>'
  fullName: 'property Cephei.QL.CPICashFlowModel.Index: Cephei.Cell.Generic.ICell<QLNet.Index>'
  type: Property
  source:
    id: Cephei.QL.CPICashFlowModel.Index(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 114
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Index: ICell<Index> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Index>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.Index*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.GrowthOnly(unit)
  commentId: P:Cephei.QL.CPICashFlowModel.GrowthOnly
  id: GrowthOnly(unit)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'property GrowthOnly: ICell<bool>'
  nameWithType: 'property CPICashFlowModel.GrowthOnly: ICell<bool>'
  fullName: 'property Cephei.QL.CPICashFlowModel.GrowthOnly: Cephei.Cell.Generic.ICell<bool>'
  type: Property
  source:
    id: Cephei.QL.CPICashFlowModel.GrowthOnly(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 113
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property GrowthOnly: ICell<bool> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.GrowthOnly*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.Frequency(unit)
  commentId: P:Cephei.QL.CPICashFlowModel.Frequency
  id: Frequency(unit)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'property Frequency: ICell<Frequency>'
  nameWithType: 'property CPICashFlowModel.Frequency: ICell<Frequency>'
  fullName: 'property Cephei.QL.CPICashFlowModel.Frequency: Cephei.Cell.Generic.ICell<QLNet.Frequency>'
  type: Property
  source:
    id: Cephei.QL.CPICashFlowModel.Frequency(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 109
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Frequency: ICell<Frequency> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Frequency>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.Frequency*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.FixingDate(unit)
  commentId: P:Cephei.QL.CPICashFlowModel.FixingDate
  id: FixingDate(unit)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'property FixingDate: ICell<Date>'
  nameWithType: 'property CPICashFlowModel.FixingDate: ICell<Date>'
  fullName: 'property Cephei.QL.CPICashFlowModel.FixingDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.CPICashFlowModel.FixingDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 112
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property FixingDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.FixingDate*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.ExCouponDate(unit)
  commentId: P:Cephei.QL.CPICashFlowModel.ExCouponDate
  id: ExCouponDate(unit)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'property ExCouponDate: ICell<Date>'
  nameWithType: 'property CPICashFlowModel.ExCouponDate: ICell<Date>'
  fullName: 'property Cephei.QL.CPICashFlowModel.ExCouponDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.CPICashFlowModel.ExCouponDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 120
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property ExCouponDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.ExCouponDate*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.Date(unit)
  commentId: P:Cephei.QL.CPICashFlowModel.Date
  id: Date(unit)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'property Date: ICell<Date>'
  nameWithType: 'property CPICashFlowModel.Date: ICell<Date>'
  fullName: 'property Cephei.QL.CPICashFlowModel.Date: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.CPICashFlowModel.Date(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 111
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Date: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.Date*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.BaseFixing(unit)
  commentId: P:Cephei.QL.CPICashFlowModel.BaseFixing
  id: BaseFixing(unit)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'property BaseFixing: ICell<float>'
  nameWithType: 'property CPICashFlowModel.BaseFixing: ICell<float>'
  fullName: 'property Cephei.QL.CPICashFlowModel.BaseFixing: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.CPICashFlowModel.BaseFixing(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 108
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property BaseFixing: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.BaseFixing*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.BaseDate(unit)
  commentId: P:Cephei.QL.CPICashFlowModel.BaseDate
  id: BaseDate(unit)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'property BaseDate: ICell<Date>'
  nameWithType: 'property CPICashFlowModel.BaseDate: ICell<Date>'
  fullName: 'property Cephei.QL.CPICashFlowModel.BaseDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.CPICashFlowModel.BaseDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 107
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property BaseDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.BaseDate*
  attributes: []
- uid: Cephei.QL.CPICashFlowModel.Amount(unit)
  commentId: P:Cephei.QL.CPICashFlowModel.Amount
  id: Amount(unit)
  parent: Cephei.QL.CPICashFlowModel
  langs:
  - csharp
  - vb
  name: 'property Amount: ICell<float>'
  nameWithType: 'property CPICashFlowModel.Amount: ICell<float>'
  fullName: 'property Cephei.QL.CPICashFlowModel.Amount: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.CPICashFlowModel.Amount(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPICashFlowModel.fs
    startLine: 106
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Amount: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.CPICashFlowModel.Amount*
  attributes: []
references:
- uid: Cephei.QL
  commentId: N:Cephei.QL
  name: Cephei.QL
  nameWithType: Cephei.QL
  fullName: Cephei.QL
- uid: TypeRef:System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
  spec.csharp:
  - {}
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - {}
- uid: TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: ConcurrentDictionary<string,ICell>
  nameWithType: ConcurrentDictionary<string,ICell>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Model
  name: Model
  nameWithType: Model
  fullName: Cephei.Cell.Model
  spec.csharp:
  - {}
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - {}
- uid: TypeRef:Cephei.Cell.Generic.Model`1<QLNet.CPICashFlow>
  name: Model<CPICashFlow>
  nameWithType: Model<CPICashFlow>
  fullName: Cephei.Cell.Generic.Model<QLNet.CPICashFlow>
  spec.csharp:
  - uid: Cephei.Cell.Generic.Model`1
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Generic.Model
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.CPICashFlow
    name: CPICashFlow
    nameWithType: CPICashFlow
    fullName: QLNet.CPICashFlow
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.CPICashFlow>
  name: ICell<CPICashFlow>
  nameWithType: ICell<CPICashFlow>
  fullName: Cephei.Cell.Generic.ICell<QLNet.CPICashFlow>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.CPICashFlow
    name: CPICashFlow
    nameWithType: CPICashFlow
    fullName: QLNet.CPICashFlow
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.ICell
  name: ICell
  nameWithType: ICell
  fullName: Cephei.Cell.ICell
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - {}
- uid: TypeRef:Cephei.Cell.ICellEvent
  name: ICellEvent
  nameWithType: ICellEvent
  fullName: Cephei.Cell.ICellEvent
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICellEvent
    name: ICellEvent
    nameWithType: ICellEvent
    fullName: Cephei.Cell.ICellEvent
  - {}
- uid: TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: ICollection<KeyValuePair<string,ICell>>
  nameWithType: ICollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IDictionary<string,ICell>
  nameWithType: IDictionary<string,ICell>
  fullName: System.Collections.Generic.IDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IEnumerable<KeyValuePair<string,ICell>>
  nameWithType: IEnumerable<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IReadOnlyCollection<KeyValuePair<string,ICell>>
  nameWithType: IReadOnlyCollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IReadOnlyDictionary<string,ICell>
  nameWithType: IReadOnlyDictionary<string,ICell>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.ICollection
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
  spec.csharp:
  - {}
  - uid: System.Collections.ICollection
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.ICollection
  - {}
- uid: TypeRef:System.Collections.IDictionary
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
  spec.csharp:
  - {}
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
  - {}
- uid: TypeRef:System.Collections.IEnumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
  spec.csharp:
  - {}
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
  - {}
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  name: IObservable<ICell>
  nameWithType: IObservable<ICell>
  fullName: System.IObservable<Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.CPICashFlow> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * ICell<CPICashFlow> * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * ICell<CPICashFlow> * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<QLNet.CPICashFlow> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.CPICashFlow
    name: CPICashFlow
    nameWithType: CPICashFlow
    fullName: QLNet.CPICashFlow
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<QLNet.CPICashFlow>
  name: IObservable<CPICashFlow>
  nameWithType: IObservable<CPICashFlow>
  fullName: System.IObservable<QLNet.CPICashFlow>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.CPICashFlow
    name: CPICashFlow
    nameWithType: CPICashFlow
    fullName: QLNet.CPICashFlow
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.CPICashFlow>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,CPICashFlow>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,CPICashFlow>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,QLNet.CPICashFlow>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: QLNet.CPICashFlow
    name: CPICashFlow
    nameWithType: CPICashFlow
    fullName: QLNet.CPICashFlow
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  name: IObservable<KeyValuePair<string,decimal>>
  nameWithType: IObservable<KeyValuePair<string,decimal>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,decimal>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.decimal
    name: decimal
    nameWithType: decimal
    fullName: decimal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  name: IObservable<KeyValuePair<string,float>>
  nameWithType: IObservable<KeyValuePair<string,float>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,float>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  name: IObservable<KeyValuePair<string,int>>
  nameWithType: IObservable<KeyValuePair<string,int>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,int>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.int
    name: int
    nameWithType: int
    fullName: int
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObserver`1<QLNet.CPICashFlow>
  name: IObserver<CPICashFlow>
  nameWithType: IObserver<CPICashFlow>
  fullName: System.IObserver<QLNet.CPICashFlow>
  spec.csharp:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.CPICashFlow
    name: CPICashFlow
    nameWithType: CPICashFlow
    fullName: QLNet.CPICashFlow
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  name: "member Bind: ICell<'T> -> unit"
  nameWithType: "member Model.Bind: ICell<'T> -> unit"
  fullName: "member Cephei.Cell.Generic.Model.Bind: Cephei.Cell.Generic.ICell<'T> -> unit"
- uid: Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  name: 'abstract member OnCompleted: unit -> unit'
  nameWithType: 'abstract member Model.OnCompleted: unit -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnCompleted: unit -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnError(exn)
  name: 'abstract member OnError: exn -> unit'
  nameWithType: 'abstract member Model.OnError: exn -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnError: exn -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnNext('T)
  name: "abstract member OnNext: 'T -> unit"
  nameWithType: "abstract member Model.OnNext: 'T -> unit"
  fullName: "abstract member Cephei.Cell.Generic.Model.OnNext: 'T -> unit"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  name: "abstract member Subscribe: IObserver<'T> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<'T> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<'T> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: "abstract member Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  name: "abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Value(unit)
  name: "abstract property Value: 'T"
  nameWithType: "abstract property Model.Value: 'T"
  fullName: "abstract property Cephei.Cell.Generic.Model.Value: 'T"
- uid: Cephei.Cell.Model.As(string)
  name: "member As: string -> ICell<'T>"
  nameWithType: "member Model.As: string -> ICell<'T>"
  fullName: "member Cephei.Cell.Model.As: string -> Cephei.Cell.Generic.ICell<'T>"
- uid: Cephei.Cell.Model.Bind(unit)
  name: 'member Bind: unit -> unit'
  nameWithType: 'member Model.Bind: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Bind: unit -> unit'
- uid: Cephei.Cell.Model.Box(unit)
  name: 'abstract property Box: obj'
  nameWithType: 'abstract property Model.Box: obj'
  fullName: 'abstract property Cephei.Cell.Model.Box: obj'
- uid: Cephei.Cell.Model.Change()
  name: 'abstract member Change: CellChange'
  nameWithType: 'abstract member Model.Change: CellChange'
  fullName: 'abstract member Cephei.Cell.Model.Change: Cephei.Cell.CellChange'
- uid: Cephei.Cell.Model.Create(Unit -> 'T * string)
  name: "member Create: Unit -> 'T * string -> Cell<'T>"
  nameWithType: "member Model.Create: Unit -> 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.Create: Unit -> 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.CreateValue('T * string)
  name: "member CreateValue: 'T * string -> Cell<'T>"
  nameWithType: "member Model.CreateValue: 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.CreateValue: 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.Dependants(unit)
  name: 'abstract property Dependants: IEnumerable<ICellEvent>'
  nameWithType: 'abstract property Model.Dependants: IEnumerable<ICellEvent>'
  fullName: 'abstract property Cephei.Cell.Model.Dependants: System.Collections.Generic.IEnumerable<Cephei.Cell.ICellEvent>'
- uid: Cephei.Cell.Model.Dispose(unit)
  name: 'member Dispose: unit -> unit'
  nameWithType: 'member Model.Dispose: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Dispose: unit -> unit'
- uid: Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  name: 'member GetOrAdd: string * ICell -> ICell'
  nameWithType: 'member Model.GetOrAdd: string * ICell -> ICell'
  fullName: 'member Cephei.Cell.Model.GetOrAdd: string * Cephei.Cell.ICell -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.HasFunction(unit)
  name: 'abstract property HasFunction: bool'
  nameWithType: 'abstract property Model.HasFunction: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasFunction: bool'
- uid: Cephei.Cell.Model.HasValue(unit)
  name: 'abstract property HasValue: bool'
  nameWithType: 'abstract property Model.HasValue: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasValue: bool'
- uid: Cephei.Cell.Model.Item(string)
  name: 'property Item: string -> ICell'
  nameWithType: 'property Model.Item: string -> ICell'
  fullName: 'property Cephei.Cell.Model.Item: string -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Mnemonic(unit)
  name: 'abstract property Mnemonic: string'
  nameWithType: 'abstract property Model.Mnemonic: string'
  fullName: 'abstract property Cephei.Cell.Model.Mnemonic: string'
- uid: Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  name: 'abstract member OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  nameWithType: 'abstract member Model.OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  fullName: 'abstract member Cephei.Cell.Model.OnChange: Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession -> unit'
- uid: Cephei.Cell.Model.Parent(unit)
  name: 'abstract property Parent: ICell'
  nameWithType: 'abstract property Model.Parent: ICell'
  fullName: 'abstract property Cephei.Cell.Model.Parent: Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  name: 'abstract member Subscribe: IObserver<ICell> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ICell> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ICell> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: 'abstract member Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,float>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,int>> -> System.IDisposable'
- uid: Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  name: 'member TryAdd: string * ICell -> bool'
  nameWithType: 'member Model.TryAdd: string * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryAdd: string * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  name: 'member TryRemove: string * ICell byref -> bool'
  nameWithType: 'member Model.TryRemove: string * ICell byref -> bool'
  fullName: 'member Cephei.Cell.Model.TryRemove: string * Cephei.Cell.ICell byref -> bool'
- uid: Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  name: 'member TryUpdate: string * ICell * ICell -> bool'
  nameWithType: 'member Model.TryUpdate: string * ICell * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryUpdate: string * Cephei.Cell.ICell * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  name: 'abstract member add_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.add_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.add_Change: Cephei.Cell.CellChange -> unit'
- uid: Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  name: 'abstract member remove_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.remove_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.remove_Change: Cephei.Cell.CellChange -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  name: 'abstract member Clear: unit -> unit'
  nameWithType: 'abstract member ConcurrentDictionary.Clear: unit -> unit'
  fullName: 'abstract member System.Collections.Concurrent.ConcurrentDictionary.Clear: unit -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  name: "abstract member ContainsKey: 'TKey -> bool"
  nameWithType: "abstract member ConcurrentDictionary.ContainsKey: 'TKey -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.ContainsKey: 'TKey -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  name: 'abstract property Count: int'
  nameWithType: 'abstract property ConcurrentDictionary.Count: int'
  fullName: 'abstract property System.Collections.Concurrent.ConcurrentDictionary.Count: int'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  name: "abstract member GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  nameWithType: "abstract member ConcurrentDictionary.GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.GetEnumerator: unit -> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<'TKey,'TValue>>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  name: "member GetOrAdd: 'TKey * 'TValue -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  name: "member GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * System.Func<'TKey,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  name: 'property IsEmpty: bool'
  nameWithType: 'property ConcurrentDictionary.IsEmpty: bool'
  fullName: 'property System.Collections.Concurrent.ConcurrentDictionary.IsEmpty: bool'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  name: "abstract property Item: 'TKey -> 'TValue"
  nameWithType: "abstract property ConcurrentDictionary.Item: 'TKey -> 'TValue"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Item: 'TKey -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  name: "abstract property Keys: ICollection<'TKey>"
  nameWithType: "abstract property ConcurrentDictionary.Keys: ICollection<'TKey>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Keys: System.Collections.Generic.ICollection<'TKey>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  name: "member ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  nameWithType: "member ConcurrentDictionary.ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.ToArray: unit -> System.Collections.Generic.KeyValuePair<'TKey,'TValue> []"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  name: "member TryAdd: 'TKey * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  name: "abstract member TryGetValue: 'TKey * 'TValue byref -> bool"
  nameWithType: "abstract member ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  name: "member TryRemove: 'TKey * 'TValue byref -> bool"
  nameWithType: "member ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  name: "member TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  name: "abstract property Values: ICollection<'TValue>"
  nameWithType: "abstract property ConcurrentDictionary.Values: ICollection<'TValue>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Values: System.Collections.Generic.ICollection<'TValue>"
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
  name: ICell<double>
  nameWithType: ICell<double>
  fullName: Cephei.Cell.Generic.ICell<double>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.double
    name: double
    nameWithType: double
    fullName: double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.ZeroInflationIndex>
  name: ICell<ZeroInflationIndex>
  nameWithType: ICell<ZeroInflationIndex>
  fullName: Cephei.Cell.Generic.ICell<QLNet.ZeroInflationIndex>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.ZeroInflationIndex
    name: ZeroInflationIndex
    nameWithType: ZeroInflationIndex
    fullName: QLNet.ZeroInflationIndex
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
  name: ICell<Date>
  nameWithType: ICell<Date>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Date>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Date
    name: Date
    nameWithType: Date
    fullName: QLNet.Date
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
  name: ICell<bool>
  nameWithType: ICell<bool>
  fullName: Cephei.Cell.Generic.ICell<bool>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.bool
    name: bool
    nameWithType: bool
    fullName: bool
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.InterpolationType>
  name: ICell<InterpolationType>
  nameWithType: ICell<InterpolationType>
  fullName: Cephei.Cell.Generic.ICell<QLNet.InterpolationType>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.InterpolationType
    name: InterpolationType
    nameWithType: InterpolationType
    fullName: QLNet.InterpolationType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Frequency>
  name: ICell<Frequency>
  nameWithType: ICell<Frequency>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Frequency>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Frequency
    name: Frequency
    nameWithType: Frequency
    fullName: QLNet.Frequency
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.CPICashFlowModel.#ctor*
  commentId: Overload:Cephei.QL.CPICashFlowModel.#ctor*
  name: ( .ctor )
  nameWithType: CPICashFlowModel.( .ctor )
  fullName: Cephei.QL.CPICashFlowModel
- uid: TypeRef:Cephei.QL.CPICashFlowModel
  name: CPICashFlowModel
  nameWithType: CPICashFlowModel
  fullName: Cephei.QL.CPICashFlowModel
  spec.csharp:
  - {}
  - uid: Cephei.QL.CPICashFlowModel
    name: CPICashFlowModel
    nameWithType: CPICashFlowModel
    fullName: Cephei.QL.CPICashFlowModel
  - {}
- uid: Cephei.QL.CPICashFlowModel.Accept*
  commentId: Overload:Cephei.QL.CPICashFlowModel.Accept*
  name: Accept
  nameWithType: CPICashFlowModel.Accept
  fullName: Cephei.QL.CPICashFlowModel.Accept
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.IAcyclicVisitor>
  name: ICell<IAcyclicVisitor>
  nameWithType: ICell<IAcyclicVisitor>
  fullName: Cephei.Cell.Generic.ICell<QLNet.IAcyclicVisitor>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.IAcyclicVisitor
    name: IAcyclicVisitor
    nameWithType: IAcyclicVisitor
    fullName: QLNet.IAcyclicVisitor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.CPICashFlowModel.CompareTo*
  commentId: Overload:Cephei.QL.CPICashFlowModel.CompareTo*
  name: CompareTo
  nameWithType: CPICashFlowModel.CompareTo
  fullName: Cephei.QL.CPICashFlowModel.CompareTo
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.CashFlow>
  name: ICell<CashFlow>
  nameWithType: ICell<CashFlow>
  fullName: Cephei.Cell.Generic.ICell<QLNet.CashFlow>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.CashFlow
    name: CashFlow
    nameWithType: CashFlow
    fullName: QLNet.CashFlow
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
  name: ICell<int>
  nameWithType: ICell<int>
  fullName: Cephei.Cell.Generic.ICell<int>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.int
    name: int
    nameWithType: int
    fullName: int
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.CPICashFlowModel.Equals*
  commentId: Overload:Cephei.QL.CPICashFlowModel.Equals*
  name: Equals
  nameWithType: CPICashFlowModel.Equals
  fullName: Cephei.QL.CPICashFlowModel.Equals
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Object>
  name: ICell<Object>
  nameWithType: ICell<Object>
  fullName: Cephei.Cell.Generic.ICell<System.Object>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.CPICashFlowModel.HasOccurred*
  commentId: Overload:Cephei.QL.CPICashFlowModel.HasOccurred*
  name: HasOccurred
  nameWithType: CPICashFlowModel.HasOccurred
  fullName: Cephei.QL.CPICashFlowModel.HasOccurred
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Nullable`1<Microsoft.FSharp.Core.bool>>
  name: ICell<Nullable<bool>>
  nameWithType: ICell<Nullable<bool>>
  fullName: Cephei.Cell.Generic.ICell<System.Nullable<bool>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.bool
    name: bool
    nameWithType: bool
    fullName: bool
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.CPICashFlowModel.RegisterWith*
  commentId: Overload:Cephei.QL.CPICashFlowModel.RegisterWith*
  name: RegisterWith
  nameWithType: CPICashFlowModel.RegisterWith
  fullName: Cephei.QL.CPICashFlowModel.RegisterWith
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Callback>
  name: ICell<Callback>
  nameWithType: ICell<Callback>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Callback>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Callback
    name: Callback
    nameWithType: Callback
    fullName: QLNet.Callback
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.CPICashFlowModel.TradingExCoupon*
  commentId: Overload:Cephei.QL.CPICashFlowModel.TradingExCoupon*
  name: TradingExCoupon
  nameWithType: CPICashFlowModel.TradingExCoupon
  fullName: Cephei.QL.CPICashFlowModel.TradingExCoupon
- uid: Cephei.QL.CPICashFlowModel.UnregisterWith*
  commentId: Overload:Cephei.QL.CPICashFlowModel.UnregisterWith*
  name: UnregisterWith
  nameWithType: CPICashFlowModel.UnregisterWith
  fullName: Cephei.QL.CPICashFlowModel.UnregisterWith
- uid: Cephei.QL.CPICashFlowModel.paymentDate*
  commentId: Overload:Cephei.QL.CPICashFlowModel.paymentDate*
  name: paymentDate
  nameWithType: CPICashFlowModel.paymentDate
  fullName: Cephei.QL.CPICashFlowModel.paymentDate
- uid: Cephei.QL.CPICashFlowModel.notional*
  commentId: Overload:Cephei.QL.CPICashFlowModel.notional*
  name: notional
  nameWithType: CPICashFlowModel.notional
  fullName: Cephei.QL.CPICashFlowModel.notional
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
  name: ICell<float>
  nameWithType: ICell<float>
  fullName: Cephei.Cell.Generic.ICell<float>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.CPICashFlowModel.interpolation*
  commentId: Overload:Cephei.QL.CPICashFlowModel.interpolation*
  name: interpolation
  nameWithType: CPICashFlowModel.interpolation
  fullName: Cephei.QL.CPICashFlowModel.interpolation
- uid: Cephei.QL.CPICashFlowModel.index*
  commentId: Overload:Cephei.QL.CPICashFlowModel.index*
  name: index
  nameWithType: CPICashFlowModel.index
  fullName: Cephei.QL.CPICashFlowModel.index
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Index>
  name: ICell<Index>
  nameWithType: ICell<Index>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Index>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Index
    name: Index
    nameWithType: Index
    fullName: QLNet.Index
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.CPICashFlowModel.growthOnly*
  commentId: Overload:Cephei.QL.CPICashFlowModel.growthOnly*
  name: growthOnly
  nameWithType: CPICashFlowModel.growthOnly
  fullName: Cephei.QL.CPICashFlowModel.growthOnly
- uid: Cephei.QL.CPICashFlowModel.frequency*
  commentId: Overload:Cephei.QL.CPICashFlowModel.frequency*
  name: frequency
  nameWithType: CPICashFlowModel.frequency
  fullName: Cephei.QL.CPICashFlowModel.frequency
- uid: Cephei.QL.CPICashFlowModel.fixingDate*
  commentId: Overload:Cephei.QL.CPICashFlowModel.fixingDate*
  name: fixingDate
  nameWithType: CPICashFlowModel.fixingDate
  fullName: Cephei.QL.CPICashFlowModel.fixingDate
- uid: Cephei.QL.CPICashFlowModel.baseFixing*
  commentId: Overload:Cephei.QL.CPICashFlowModel.baseFixing*
  name: baseFixing
  nameWithType: CPICashFlowModel.baseFixing
  fullName: Cephei.QL.CPICashFlowModel.baseFixing
- uid: Cephei.QL.CPICashFlowModel.baseDate*
  commentId: Overload:Cephei.QL.CPICashFlowModel.baseDate*
  name: baseDate
  nameWithType: CPICashFlowModel.baseDate
  fullName: Cephei.QL.CPICashFlowModel.baseDate
- uid: Cephei.QL.CPICashFlowModel.Notional*
  commentId: Overload:Cephei.QL.CPICashFlowModel.Notional*
  name: Notional
  nameWithType: CPICashFlowModel.Notional
  fullName: Cephei.QL.CPICashFlowModel.Notional
- uid: Cephei.QL.CPICashFlowModel.Interpolation*
  commentId: Overload:Cephei.QL.CPICashFlowModel.Interpolation*
  name: Interpolation
  nameWithType: CPICashFlowModel.Interpolation
  fullName: Cephei.QL.CPICashFlowModel.Interpolation
- uid: Cephei.QL.CPICashFlowModel.Index*
  commentId: Overload:Cephei.QL.CPICashFlowModel.Index*
  name: Index
  nameWithType: CPICashFlowModel.Index
  fullName: Cephei.QL.CPICashFlowModel.Index
- uid: Cephei.QL.CPICashFlowModel.GrowthOnly*
  commentId: Overload:Cephei.QL.CPICashFlowModel.GrowthOnly*
  name: GrowthOnly
  nameWithType: CPICashFlowModel.GrowthOnly
  fullName: Cephei.QL.CPICashFlowModel.GrowthOnly
- uid: Cephei.QL.CPICashFlowModel.Frequency*
  commentId: Overload:Cephei.QL.CPICashFlowModel.Frequency*
  name: Frequency
  nameWithType: CPICashFlowModel.Frequency
  fullName: Cephei.QL.CPICashFlowModel.Frequency
- uid: Cephei.QL.CPICashFlowModel.FixingDate*
  commentId: Overload:Cephei.QL.CPICashFlowModel.FixingDate*
  name: FixingDate
  nameWithType: CPICashFlowModel.FixingDate
  fullName: Cephei.QL.CPICashFlowModel.FixingDate
- uid: Cephei.QL.CPICashFlowModel.ExCouponDate*
  commentId: Overload:Cephei.QL.CPICashFlowModel.ExCouponDate*
  name: ExCouponDate
  nameWithType: CPICashFlowModel.ExCouponDate
  fullName: Cephei.QL.CPICashFlowModel.ExCouponDate
- uid: Cephei.QL.CPICashFlowModel.Date*
  commentId: Overload:Cephei.QL.CPICashFlowModel.Date*
  name: Date
  nameWithType: CPICashFlowModel.Date
  fullName: Cephei.QL.CPICashFlowModel.Date
- uid: Cephei.QL.CPICashFlowModel.BaseFixing*
  commentId: Overload:Cephei.QL.CPICashFlowModel.BaseFixing*
  name: BaseFixing
  nameWithType: CPICashFlowModel.BaseFixing
  fullName: Cephei.QL.CPICashFlowModel.BaseFixing
- uid: Cephei.QL.CPICashFlowModel.BaseDate*
  commentId: Overload:Cephei.QL.CPICashFlowModel.BaseDate*
  name: BaseDate
  nameWithType: CPICashFlowModel.BaseDate
  fullName: Cephei.QL.CPICashFlowModel.BaseDate
- uid: Cephei.QL.CPICashFlowModel.Amount*
  commentId: Overload:Cephei.QL.CPICashFlowModel.Amount*
  name: Amount
  nameWithType: CPICashFlowModel.Amount
  fullName: Cephei.QL.CPICashFlowModel.Amount
