### YamlMime:ManagedReference
items:
- uid: Cephei.QL.CPIBondHelperModel
  commentId: T:Cephei.QL.CPIBondHelperModel
  id: CPIBondHelperModel
  parent: Cephei.QL
  children:
  - Cephei.QL.CPIBondHelperModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>> * Cephei.Cell.Generic.ICell<int> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<bool> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.Period> * Cephei.Cell.Generic.ICell<QLNet.ZeroInflationIndex> * Cephei.Cell.Generic.ICell<QLNet.InterpolationType> * Cephei.Cell.Generic.ICell<QLNet.Schedule> * Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Calendar> * Cephei.Cell.Generic.ICell<QLNet.Period> * Cephei.Cell.Generic.ICell<QLNet.Calendar> * Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> * Cephei.Cell.Generic.ICell<bool> * Cephei.Cell.Generic.ICell<bool>)
  - Cephei.QL.CPIBondHelperModel.accrualDayCounter(unit)
  - Cephei.QL.CPIBondHelperModel.baseCPI(unit)
  - Cephei.QL.CPIBondHelperModel.Bond(unit)
  - Cephei.QL.CPIBondHelperModel.CpiBond(unit)
  - Cephei.QL.CPIBondHelperModel.cpiIndex(unit)
  - Cephei.QL.CPIBondHelperModel.EarliestDate(unit)
  - Cephei.QL.CPIBondHelperModel.exCouponCalendar(unit)
  - Cephei.QL.CPIBondHelperModel.exCouponConvention(unit)
  - Cephei.QL.CPIBondHelperModel.exCouponEndOfMonth(unit)
  - Cephei.QL.CPIBondHelperModel.exCouponPeriod(unit)
  - Cephei.QL.CPIBondHelperModel.faceAmount(unit)
  - Cephei.QL.CPIBondHelperModel.fixedRate(unit)
  - Cephei.QL.CPIBondHelperModel.growthOnly(unit)
  - Cephei.QL.CPIBondHelperModel.ImpliedQuote(unit)
  - Cephei.QL.CPIBondHelperModel.issueDate(unit)
  - Cephei.QL.CPIBondHelperModel.LatestDate(unit)
  - Cephei.QL.CPIBondHelperModel.LatestRelevantDate(unit)
  - Cephei.QL.CPIBondHelperModel.MaturityDate(unit)
  - Cephei.QL.CPIBondHelperModel.observationInterpolation(unit)
  - Cephei.QL.CPIBondHelperModel.observationLag(unit)
  - Cephei.QL.CPIBondHelperModel.paymentCalendar(unit)
  - Cephei.QL.CPIBondHelperModel.paymentConvention(unit)
  - Cephei.QL.CPIBondHelperModel.PillarDate(unit)
  - Cephei.QL.CPIBondHelperModel.price(unit)
  - Cephei.QL.CPIBondHelperModel.Quote(unit)
  - Cephei.QL.CPIBondHelperModel.QuoteError(unit)
  - Cephei.QL.CPIBondHelperModel.QuoteIsValid(unit)
  - Cephei.QL.CPIBondHelperModel.QuoteValue(unit)
  - Cephei.QL.CPIBondHelperModel.RegisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
  - Cephei.QL.CPIBondHelperModel.schedule(unit)
  - Cephei.QL.CPIBondHelperModel.SetTermStructure(Cephei.Cell.Generic.ICell<QLNet.YieldTermStructure>)
  - Cephei.QL.CPIBondHelperModel.settlementDays(unit)
  - Cephei.QL.CPIBondHelperModel.UnregisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
  - Cephei.QL.CPIBondHelperModel.Update(unit)
  - Cephei.QL.CPIBondHelperModel.useCleanPrice(unit)
  - Cephei.QL.CPIBondHelperModel.UseCleanPrice(unit)
  langs:
  - csharp
  - vb
  name: CPIBondHelperModel
  nameWithType: Cephei.QL.CPIBondHelperModel
  fullName: Cephei.QL.CPIBondHelperModel
  type: Class
  source:
    id: Cephei.QL.CPIBondHelperModel
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 35
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: >-
      [<AutoSerializable(true)>]

      type CPIBondHelperModel (price:ICell<Handle<Quote>>, settlementDays:ICell<int>, faceAmount:ICell<double>, growthOnly:ICell<bool>, baseCPI:ICell<double>, observationLag:ICell<Period>, cpiIndex:ICell<ZeroInflationIndex>, observationInterpolation:ICell<InterpolationType>, schedule:ICell<Schedule>, fixedRate:ICell<List<double>>, accrualDayCounter:ICell<DayCounter>, paymentConvention:ICell<BusinessDayConvention>, issueDate:ICell<Date>, paymentCalendar:ICell<Calendar>, exCouponPeriod:ICell<Period>, exCouponCalendar:ICell<Calendar>, exCouponConvention:ICell<BusinessDayConvention>, exCouponEndOfMonth:ICell<bool>, useCleanPrice:ICell<bool>)
          inherit Model<CPIBondHelper>
          interface IDictionary<string,ICell>
          interface ICollection<KeyValuePair<string,ICell>>
          interface IReadOnlyDictionary<string,ICell>
          interface IReadOnlyCollection<KeyValuePair<string,ICell>>
          interface IEnumerable<KeyValuePair<string,ICell>>
          interface IDictionary
          interface ICollection
          interface IEnumerable
          interface IObservable<ICell>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
          interface IObservable<ISession * Model * CellEvent * ICell * DateTime>
          interface IObservable<KeyValuePair<string,float>>
          interface IObservable<KeyValuePair<string,int>>
          interface IObservable<KeyValuePair<string,decimal>>
          interface ICell<CPIBondHelper>
          interface ICell
          interface ICellEvent
          interface IObservable<CPIBondHelper>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,CPIBondHelper>>>
          interface IObservable<ISession * ICell<CPIBondHelper> * CellEvent * ICell * DateTime>
          interface IObserver<CPIBondHelper>
    parameters:
    - id: price
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Handle`1<QLNet.Quote>>
      attributes: []
    - id: settlementDays
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
    - id: faceAmount
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: growthOnly
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
    - id: baseCPI
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: observationLag
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
      attributes: []
    - id: cpiIndex
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.ZeroInflationIndex>
      attributes: []
    - id: observationInterpolation
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.InterpolationType>
      attributes: []
    - id: schedule
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Schedule>
      attributes: []
    - id: fixedRate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.double>>
      attributes: []
    - id: accrualDayCounter
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
    - id: paymentConvention
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BusinessDayConvention>
      attributes: []
    - id: issueDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    - id: paymentCalendar
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Calendar>
      attributes: []
    - id: exCouponPeriod
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
      attributes: []
    - id: exCouponCalendar
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Calendar>
      attributes: []
    - id: exCouponConvention
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BusinessDayConvention>
      attributes: []
    - id: exCouponEndOfMonth
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
    - id: useCleanPrice
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
    typeParameters: []
  inheritance:
  - TypeRef:System.Object
  - TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:Cephei.Cell.Model
  - TypeRef:Cephei.Cell.Generic.Model`1<QLNet.CPIBondHelper>
  implements:
  - TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.CPIBondHelper>
  - TypeRef:Cephei.Cell.ICell
  - TypeRef:Cephei.Cell.ICellEvent
  - TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.ICollection
  - TypeRef:System.Collections.IDictionary
  - TypeRef:System.Collections.IEnumerable
  - TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.CPIBondHelper> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<QLNet.CPIBondHelper>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.CPIBondHelper>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  - TypeRef:System.IObserver`1<QLNet.CPIBondHelper>
  inheritedMembers:
  - Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  - Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  - Cephei.Cell.Generic.Model`1.OnError(exn)
  - Cephei.Cell.Generic.Model`1.OnNext('T)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  - Cephei.Cell.Generic.Model`1.Value(unit)
  - Cephei.Cell.Model.As(string)
  - Cephei.Cell.Model.Bind(unit)
  - Cephei.Cell.Model.Box(unit)
  - Cephei.Cell.Model.Change()
  - Cephei.Cell.Model.Create(Unit -> 'T * string)
  - Cephei.Cell.Model.CreateValue('T * string)
  - Cephei.Cell.Model.Dependants(unit)
  - Cephei.Cell.Model.Dispose(unit)
  - Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.HasFunction(unit)
  - Cephei.Cell.Model.HasValue(unit)
  - Cephei.Cell.Model.Item(string)
  - Cephei.Cell.Model.Mnemonic(unit)
  - Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  - Cephei.Cell.Model.Parent(unit)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  - Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  - Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  - Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  - Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  attributes:
  - type: Microsoft.FSharp.Core.AutoSerializableAttribute
    arguments:
    - type: System.Boolean
      value: true
    namedArguments: []
- uid: Cephei.QL.CPIBondHelperModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>> * Cephei.Cell.Generic.ICell<int> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<bool> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.Period> * Cephei.Cell.Generic.ICell<QLNet.ZeroInflationIndex> * Cephei.Cell.Generic.ICell<QLNet.InterpolationType> * Cephei.Cell.Generic.ICell<QLNet.Schedule> * Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Calendar> * Cephei.Cell.Generic.ICell<QLNet.Period> * Cephei.Cell.Generic.ICell<QLNet.Calendar> * Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> * Cephei.Cell.Generic.ICell<bool> * Cephei.Cell.Generic.ICell<bool>)
  commentId: M:Cephei.QL.CPIBondHelperModel.#ctor(Cephei.Cell.Generic.ICell{QLNet.Handle{QLNet.Quote}},Cephei.Cell.Generic.ICell{System.Int32},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Boolean},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{QLNet.Period},Cephei.Cell.Generic.ICell{QLNet.ZeroInflationIndex},Cephei.Cell.Generic.ICell{QLNet.InterpolationType},Cephei.Cell.Generic.ICell{QLNet.Schedule},Cephei.Cell.Generic.ICell{System.Collections.Generic.List{System.Double}},Cephei.Cell.Generic.ICell{QLNet.DayCounter},Cephei.Cell.Generic.ICell{QLNet.BusinessDayConvention},Cephei.Cell.Generic.ICell{QLNet.Date},Cephei.Cell.Generic.ICell{QLNet.Calendar},Cephei.Cell.Generic.ICell{QLNet.Period},Cephei.Cell.Generic.ICell{QLNet.Calendar},Cephei.Cell.Generic.ICell{QLNet.BusinessDayConvention},Cephei.Cell.Generic.ICell{System.Boolean},Cephei.Cell.Generic.ICell{System.Boolean})
  id: '#ctor(Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>> * Cephei.Cell.Generic.ICell<int> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<bool> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.Period> * Cephei.Cell.Generic.ICell<QLNet.ZeroInflationIndex> * Cephei.Cell.Generic.ICell<QLNet.InterpolationType> * Cephei.Cell.Generic.ICell<QLNet.Schedule> * Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Calendar> * Cephei.Cell.Generic.ICell<QLNet.Period> * Cephei.Cell.Generic.ICell<QLNet.Calendar> * Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> * Cephei.Cell.Generic.ICell<bool> * Cephei.Cell.Generic.ICell<bool>)'
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'new: ICell<Handle<Quote>> * ICell<int> * ICell<double> * ICell<bool> * ICell<double> * ICell<Period> * ICell<ZeroInflationIndex> * ICell<InterpolationType> * ICell<Schedule> * ICell<List<double>> * ICell<DayCounter> * ICell<BusinessDayConvention> * ICell<Date> * ICell<Calendar> * ICell<Period> * ICell<Calendar> * ICell<BusinessDayConvention> * ICell<bool> * ICell<bool> -> CPIBondHelperModel'
  nameWithType: 'new: ICell<Handle<Quote>> * ICell<int> * ICell<double> * ICell<bool> * ICell<double> * ICell<Period> * ICell<ZeroInflationIndex> * ICell<InterpolationType> * ICell<Schedule> * ICell<List<double>> * ICell<DayCounter> * ICell<BusinessDayConvention> * ICell<Date> * ICell<Calendar> * ICell<Period> * ICell<Calendar> * ICell<BusinessDayConvention> * ICell<bool> * ICell<bool> -> CPIBondHelperModel'
  fullName: 'new: Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>> * Cephei.Cell.Generic.ICell<int> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<bool> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.Period> * Cephei.Cell.Generic.ICell<QLNet.ZeroInflationIndex> * Cephei.Cell.Generic.ICell<QLNet.InterpolationType> * Cephei.Cell.Generic.ICell<QLNet.Schedule> * Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Calendar> * Cephei.Cell.Generic.ICell<QLNet.Period> * Cephei.Cell.Generic.ICell<QLNet.Calendar> * Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> * Cephei.Cell.Generic.ICell<bool> * Cephei.Cell.Generic.ICell<bool> -> Cephei.QL.CPIBondHelperModel'
  type: Constructor
  source:
    id: Cephei.QL.CPIBondHelperModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>> * Cephei.Cell.Generic.ICell<int> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<bool> * Cephei.Cell.Generic.ICell<double> * Cephei.Cell.Generic.ICell<QLNet.Period> * Cephei.Cell.Generic.ICell<QLNet.ZeroInflationIndex> * Cephei.Cell.Generic.ICell<QLNet.InterpolationType> * Cephei.Cell.Generic.ICell<QLNet.Schedule> * Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> * Cephei.Cell.Generic.ICell<QLNet.DayCounter> * Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> * Cephei.Cell.Generic.ICell<QLNet.Date> * Cephei.Cell.Generic.ICell<QLNet.Calendar> * Cephei.Cell.Generic.ICell<QLNet.Period> * Cephei.Cell.Generic.ICell<QLNet.Calendar> * Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> * Cephei.Cell.Generic.ICell<bool> * Cephei.Cell.Generic.ICell<bool>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 35
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  summary: Implicit constructor.
  syntax:
    content: 'new: price:ICell<Handle<Quote>> * settlementDays:ICell<int> * faceAmount:ICell<double> * growthOnly:ICell<bool> * baseCPI:ICell<double> * observationLag:ICell<Period> * cpiIndex:ICell<ZeroInflationIndex> * observationInterpolation:ICell<InterpolationType> * schedule:ICell<Schedule> * fixedRate:ICell<List<double>> * accrualDayCounter:ICell<DayCounter> * paymentConvention:ICell<BusinessDayConvention> * issueDate:ICell<Date> * paymentCalendar:ICell<Calendar> * exCouponPeriod:ICell<Period> * exCouponCalendar:ICell<Calendar> * exCouponConvention:ICell<BusinessDayConvention> * exCouponEndOfMonth:ICell<bool> * useCleanPrice:ICell<bool> -> CPIBondHelperModel'
    parameters:
    - id: price
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Handle`1<QLNet.Quote>>
      attributes: []
    - id: settlementDays
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
    - id: faceAmount
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: growthOnly
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
    - id: baseCPI
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: observationLag
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
      attributes: []
    - id: cpiIndex
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.ZeroInflationIndex>
      attributes: []
    - id: observationInterpolation
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.InterpolationType>
      attributes: []
    - id: schedule
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Schedule>
      attributes: []
    - id: fixedRate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.double>>
      attributes: []
    - id: accrualDayCounter
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
    - id: paymentConvention
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BusinessDayConvention>
      attributes: []
    - id: issueDate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
    - id: paymentCalendar
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Calendar>
      attributes: []
    - id: exCouponPeriod
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
      attributes: []
    - id: exCouponCalendar
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Calendar>
      attributes: []
    - id: exCouponConvention
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BusinessDayConvention>
      attributes: []
    - id: exCouponEndOfMonth
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
    - id: useCleanPrice
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.QL.CPIBondHelperModel
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.#ctor*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.RegisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
  commentId: M:Cephei.QL.CPIBondHelperModel.RegisterWith(Cephei.Cell.Generic.ICell{QLNet.Callback})
  id: RegisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'member RegisterWith: ICell<Callback> -> ICell<CPIBondHelper>'
  nameWithType: 'member CPIBondHelperModel.RegisterWith: ICell<Callback> -> ICell<CPIBondHelper>'
  fullName: 'member Cephei.QL.CPIBondHelperModel.RegisterWith: Cephei.Cell.Generic.ICell<QLNet.Callback> -> Cephei.Cell.Generic.ICell<QLNet.CPIBondHelper>'
  type: Method
  source:
    id: Cephei.QL.CPIBondHelperModel.RegisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 147
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member RegisterWith: handler:ICell<Callback> -> ICell<CPIBondHelper>'
    parameters:
    - id: handler
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Callback>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.CPIBondHelper>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.RegisterWith*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.SetTermStructure(Cephei.Cell.Generic.ICell<QLNet.YieldTermStructure>)
  commentId: M:Cephei.QL.CPIBondHelperModel.SetTermStructure(Cephei.Cell.Generic.ICell{QLNet.YieldTermStructure})
  id: SetTermStructure(Cephei.Cell.Generic.ICell<QLNet.YieldTermStructure>)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'member SetTermStructure: ICell<YieldTermStructure> -> ICell<CPIBondHelper>'
  nameWithType: 'member CPIBondHelperModel.SetTermStructure: ICell<YieldTermStructure> -> ICell<CPIBondHelper>'
  fullName: 'member Cephei.QL.CPIBondHelperModel.SetTermStructure: Cephei.Cell.Generic.ICell<QLNet.YieldTermStructure> -> Cephei.Cell.Generic.ICell<QLNet.CPIBondHelper>'
  type: Method
  source:
    id: Cephei.QL.CPIBondHelperModel.SetTermStructure(Cephei.Cell.Generic.ICell<QLNet.YieldTermStructure>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 135
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member SetTermStructure: t:ICell<YieldTermStructure> -> ICell<CPIBondHelper>'
    parameters:
    - id: t
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.YieldTermStructure>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.CPIBondHelper>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.SetTermStructure*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.UnregisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
  commentId: M:Cephei.QL.CPIBondHelperModel.UnregisterWith(Cephei.Cell.Generic.ICell{QLNet.Callback})
  id: UnregisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'member UnregisterWith: ICell<Callback> -> ICell<CPIBondHelper>'
  nameWithType: 'member CPIBondHelperModel.UnregisterWith: ICell<Callback> -> ICell<CPIBondHelper>'
  fullName: 'member Cephei.QL.CPIBondHelperModel.UnregisterWith: Cephei.Cell.Generic.ICell<QLNet.Callback> -> Cephei.Cell.Generic.ICell<QLNet.CPIBondHelper>'
  type: Method
  source:
    id: Cephei.QL.CPIBondHelperModel.UnregisterWith(Cephei.Cell.Generic.ICell<QLNet.Callback>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 149
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member UnregisterWith: handler:ICell<Callback> -> ICell<CPIBondHelper>'
    parameters:
    - id: handler
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Callback>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.CPIBondHelper>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.UnregisterWith*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.useCleanPrice(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.useCleanPrice
  id: useCleanPrice(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property useCleanPrice: ICell<bool>'
  nameWithType: 'property CPIBondHelperModel.useCleanPrice: ICell<bool>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.useCleanPrice: Cephei.Cell.Generic.ICell<bool>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.useCleanPrice(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 131
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property useCleanPrice: ICell<bool> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.useCleanPrice*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.settlementDays(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.settlementDays
  id: settlementDays(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property settlementDays: ICell<int>'
  nameWithType: 'property CPIBondHelperModel.settlementDays: ICell<int>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.settlementDays: Cephei.Cell.Generic.ICell<int>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.settlementDays(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 114
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property settlementDays: ICell<int> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.settlementDays*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.schedule(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.schedule
  id: schedule(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property schedule: ICell<Schedule>'
  nameWithType: 'property CPIBondHelperModel.schedule: ICell<Schedule>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.schedule: Cephei.Cell.Generic.ICell<QLNet.Schedule>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.schedule(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 121
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property schedule: ICell<Schedule> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Schedule>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.schedule*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.price(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.price
  id: price(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property price: ICell<Handle<Quote>>'
  nameWithType: 'property CPIBondHelperModel.price: ICell<Handle<Quote>>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.price: Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.price(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 113
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property price: ICell<Handle<Quote>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Handle`1<QLNet.Quote>>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.price*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.paymentConvention(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.paymentConvention
  id: paymentConvention(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property paymentConvention: ICell<BusinessDayConvention>'
  nameWithType: 'property CPIBondHelperModel.paymentConvention: ICell<BusinessDayConvention>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.paymentConvention: Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.paymentConvention(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 124
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property paymentConvention: ICell<BusinessDayConvention> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BusinessDayConvention>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.paymentConvention*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.paymentCalendar(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.paymentCalendar
  id: paymentCalendar(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property paymentCalendar: ICell<Calendar>'
  nameWithType: 'property CPIBondHelperModel.paymentCalendar: ICell<Calendar>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.paymentCalendar: Cephei.Cell.Generic.ICell<QLNet.Calendar>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.paymentCalendar(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 126
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property paymentCalendar: ICell<Calendar> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Calendar>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.paymentCalendar*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.observationLag(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.observationLag
  id: observationLag(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property observationLag: ICell<Period>'
  nameWithType: 'property CPIBondHelperModel.observationLag: ICell<Period>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.observationLag: Cephei.Cell.Generic.ICell<QLNet.Period>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.observationLag(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 118
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property observationLag: ICell<Period> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.observationLag*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.observationInterpolation(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.observationInterpolation
  id: observationInterpolation(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property observationInterpolation: ICell<InterpolationType>'
  nameWithType: 'property CPIBondHelperModel.observationInterpolation: ICell<InterpolationType>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.observationInterpolation: Cephei.Cell.Generic.ICell<QLNet.InterpolationType>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.observationInterpolation(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 120
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property observationInterpolation: ICell<InterpolationType> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.InterpolationType>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.observationInterpolation*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.issueDate(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.issueDate
  id: issueDate(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property issueDate: ICell<Date>'
  nameWithType: 'property CPIBondHelperModel.issueDate: ICell<Date>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.issueDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.issueDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 125
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property issueDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.issueDate*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.growthOnly(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.growthOnly
  id: growthOnly(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property growthOnly: ICell<bool>'
  nameWithType: 'property CPIBondHelperModel.growthOnly: ICell<bool>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.growthOnly: Cephei.Cell.Generic.ICell<bool>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.growthOnly(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 116
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property growthOnly: ICell<bool> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.growthOnly*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.fixedRate(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.fixedRate
  id: fixedRate(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property fixedRate: ICell<List<double>>'
  nameWithType: 'property CPIBondHelperModel.fixedRate: ICell<List<double>>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.fixedRate: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.fixedRate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 122
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property fixedRate: ICell<List<double>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.double>>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.fixedRate*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.faceAmount(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.faceAmount
  id: faceAmount(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property faceAmount: ICell<double>'
  nameWithType: 'property CPIBondHelperModel.faceAmount: ICell<double>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.faceAmount: Cephei.Cell.Generic.ICell<double>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.faceAmount(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 115
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property faceAmount: ICell<double> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.faceAmount*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.exCouponPeriod(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.exCouponPeriod
  id: exCouponPeriod(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property exCouponPeriod: ICell<Period>'
  nameWithType: 'property CPIBondHelperModel.exCouponPeriod: ICell<Period>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.exCouponPeriod: Cephei.Cell.Generic.ICell<QLNet.Period>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.exCouponPeriod(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 127
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property exCouponPeriod: ICell<Period> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.exCouponPeriod*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.exCouponEndOfMonth(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.exCouponEndOfMonth
  id: exCouponEndOfMonth(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property exCouponEndOfMonth: ICell<bool>'
  nameWithType: 'property CPIBondHelperModel.exCouponEndOfMonth: ICell<bool>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.exCouponEndOfMonth: Cephei.Cell.Generic.ICell<bool>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.exCouponEndOfMonth(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 130
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property exCouponEndOfMonth: ICell<bool> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.exCouponEndOfMonth*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.exCouponConvention(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.exCouponConvention
  id: exCouponConvention(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property exCouponConvention: ICell<BusinessDayConvention>'
  nameWithType: 'property CPIBondHelperModel.exCouponConvention: ICell<BusinessDayConvention>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.exCouponConvention: Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.exCouponConvention(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 129
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property exCouponConvention: ICell<BusinessDayConvention> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BusinessDayConvention>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.exCouponConvention*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.exCouponCalendar(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.exCouponCalendar
  id: exCouponCalendar(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property exCouponCalendar: ICell<Calendar>'
  nameWithType: 'property CPIBondHelperModel.exCouponCalendar: ICell<Calendar>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.exCouponCalendar: Cephei.Cell.Generic.ICell<QLNet.Calendar>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.exCouponCalendar(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 128
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property exCouponCalendar: ICell<Calendar> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Calendar>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.exCouponCalendar*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.cpiIndex(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.cpiIndex
  id: cpiIndex(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property cpiIndex: ICell<ZeroInflationIndex>'
  nameWithType: 'property CPIBondHelperModel.cpiIndex: ICell<ZeroInflationIndex>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.cpiIndex: Cephei.Cell.Generic.ICell<QLNet.ZeroInflationIndex>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.cpiIndex(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 119
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property cpiIndex: ICell<ZeroInflationIndex> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.ZeroInflationIndex>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.cpiIndex*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.baseCPI(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.baseCPI
  id: baseCPI(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property baseCPI: ICell<double>'
  nameWithType: 'property CPIBondHelperModel.baseCPI: ICell<double>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.baseCPI: Cephei.Cell.Generic.ICell<double>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.baseCPI(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 117
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property baseCPI: ICell<double> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.baseCPI*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.accrualDayCounter(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.accrualDayCounter
  id: accrualDayCounter(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property accrualDayCounter: ICell<DayCounter>'
  nameWithType: 'property CPIBondHelperModel.accrualDayCounter: ICell<DayCounter>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.accrualDayCounter: Cephei.Cell.Generic.ICell<QLNet.DayCounter>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.accrualDayCounter(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 123
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property accrualDayCounter: ICell<DayCounter> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.accrualDayCounter*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.UseCleanPrice(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.UseCleanPrice
  id: UseCleanPrice(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property UseCleanPrice: ICell<bool>'
  nameWithType: 'property CPIBondHelperModel.UseCleanPrice: ICell<bool>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.UseCleanPrice: Cephei.Cell.Generic.ICell<bool>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.UseCleanPrice(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 137
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property UseCleanPrice: ICell<bool> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.UseCleanPrice*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.Update(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.Update
  id: Update(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property Update: ICell<CPIBondHelper>'
  nameWithType: 'property CPIBondHelperModel.Update: ICell<CPIBondHelper>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.Update: Cephei.Cell.Generic.ICell<QLNet.CPIBondHelper>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.Update(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 151
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Update: ICell<CPIBondHelper> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.CPIBondHelper>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.Update*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.QuoteValue(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.QuoteValue
  id: QuoteValue(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property QuoteValue: ICell<float>'
  nameWithType: 'property CPIBondHelperModel.QuoteValue: ICell<float>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.QuoteValue: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.QuoteValue(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 146
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property QuoteValue: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.QuoteValue*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.QuoteIsValid(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.QuoteIsValid
  id: QuoteIsValid(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property QuoteIsValid: ICell<bool>'
  nameWithType: 'property CPIBondHelperModel.QuoteIsValid: ICell<bool>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.QuoteIsValid: Cephei.Cell.Generic.ICell<bool>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.QuoteIsValid(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 145
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property QuoteIsValid: ICell<bool> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.QuoteIsValid*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.QuoteError(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.QuoteError
  id: QuoteError(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property QuoteError: ICell<float>'
  nameWithType: 'property CPIBondHelperModel.QuoteError: ICell<float>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.QuoteError: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.QuoteError(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 144
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property QuoteError: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.QuoteError*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.Quote(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.Quote
  id: Quote(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property Quote: ICell<Handle<Quote>>'
  nameWithType: 'property CPIBondHelperModel.Quote: ICell<Handle<Quote>>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.Quote: Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.Quote(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 143
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Quote: ICell<Handle<Quote>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Handle`1<QLNet.Quote>>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.Quote*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.PillarDate(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.PillarDate
  id: PillarDate(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property PillarDate: ICell<Date>'
  nameWithType: 'property CPIBondHelperModel.PillarDate: ICell<Date>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.PillarDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.PillarDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 142
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property PillarDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.PillarDate*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.MaturityDate(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.MaturityDate
  id: MaturityDate(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property MaturityDate: ICell<Date>'
  nameWithType: 'property CPIBondHelperModel.MaturityDate: ICell<Date>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.MaturityDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.MaturityDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 141
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property MaturityDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.MaturityDate*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.LatestRelevantDate(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.LatestRelevantDate
  id: LatestRelevantDate(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property LatestRelevantDate: ICell<Date>'
  nameWithType: 'property CPIBondHelperModel.LatestRelevantDate: ICell<Date>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.LatestRelevantDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.LatestRelevantDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 140
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property LatestRelevantDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.LatestRelevantDate*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.LatestDate(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.LatestDate
  id: LatestDate(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property LatestDate: ICell<Date>'
  nameWithType: 'property CPIBondHelperModel.LatestDate: ICell<Date>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.LatestDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.LatestDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 139
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property LatestDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.LatestDate*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.ImpliedQuote(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.ImpliedQuote
  id: ImpliedQuote(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property ImpliedQuote: ICell<float>'
  nameWithType: 'property CPIBondHelperModel.ImpliedQuote: ICell<float>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.ImpliedQuote: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.ImpliedQuote(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 134
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property ImpliedQuote: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.ImpliedQuote*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.EarliestDate(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.EarliestDate
  id: EarliestDate(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property EarliestDate: ICell<Date>'
  nameWithType: 'property CPIBondHelperModel.EarliestDate: ICell<Date>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.EarliestDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.EarliestDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 138
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property EarliestDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.EarliestDate*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.CpiBond(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.CpiBond
  id: CpiBond(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property CpiBond: ICell<CPIBond>'
  nameWithType: 'property CPIBondHelperModel.CpiBond: ICell<CPIBond>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.CpiBond: Cephei.Cell.Generic.ICell<QLNet.CPIBond>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.CpiBond(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 132
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property CpiBond: ICell<CPIBond> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.CPIBond>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.CpiBond*
  attributes: []
- uid: Cephei.QL.CPIBondHelperModel.Bond(unit)
  commentId: P:Cephei.QL.CPIBondHelperModel.Bond
  id: Bond(unit)
  parent: Cephei.QL.CPIBondHelperModel
  langs:
  - csharp
  - vb
  name: 'property Bond: ICell<Bond>'
  nameWithType: 'property CPIBondHelperModel.Bond: ICell<Bond>'
  fullName: 'property Cephei.QL.CPIBondHelperModel.Bond: Cephei.Cell.Generic.ICell<QLNet.Bond>'
  type: Property
  source:
    id: Cephei.QL.CPIBondHelperModel.Bond(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\CPIBondHelperModel.fs
    startLine: 133
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Bond: ICell<Bond> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Bond>
      attributes: []
  overload: Cephei.QL.CPIBondHelperModel.Bond*
  attributes: []
references:
- uid: Cephei.QL
  commentId: N:Cephei.QL
  name: Cephei.QL
  nameWithType: Cephei.QL
  fullName: Cephei.QL
- uid: TypeRef:System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
  spec.csharp:
  - {}
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - {}
- uid: TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: ConcurrentDictionary<string,ICell>
  nameWithType: ConcurrentDictionary<string,ICell>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Model
  name: Model
  nameWithType: Model
  fullName: Cephei.Cell.Model
  spec.csharp:
  - {}
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - {}
- uid: TypeRef:Cephei.Cell.Generic.Model`1<QLNet.CPIBondHelper>
  name: Model<CPIBondHelper>
  nameWithType: Model<CPIBondHelper>
  fullName: Cephei.Cell.Generic.Model<QLNet.CPIBondHelper>
  spec.csharp:
  - uid: Cephei.Cell.Generic.Model`1
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Generic.Model
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.CPIBondHelper
    name: CPIBondHelper
    nameWithType: CPIBondHelper
    fullName: QLNet.CPIBondHelper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.CPIBondHelper>
  name: ICell<CPIBondHelper>
  nameWithType: ICell<CPIBondHelper>
  fullName: Cephei.Cell.Generic.ICell<QLNet.CPIBondHelper>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.CPIBondHelper
    name: CPIBondHelper
    nameWithType: CPIBondHelper
    fullName: QLNet.CPIBondHelper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.ICell
  name: ICell
  nameWithType: ICell
  fullName: Cephei.Cell.ICell
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - {}
- uid: TypeRef:Cephei.Cell.ICellEvent
  name: ICellEvent
  nameWithType: ICellEvent
  fullName: Cephei.Cell.ICellEvent
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICellEvent
    name: ICellEvent
    nameWithType: ICellEvent
    fullName: Cephei.Cell.ICellEvent
  - {}
- uid: TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: ICollection<KeyValuePair<string,ICell>>
  nameWithType: ICollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IDictionary<string,ICell>
  nameWithType: IDictionary<string,ICell>
  fullName: System.Collections.Generic.IDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IEnumerable<KeyValuePair<string,ICell>>
  nameWithType: IEnumerable<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IReadOnlyCollection<KeyValuePair<string,ICell>>
  nameWithType: IReadOnlyCollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IReadOnlyDictionary<string,ICell>
  nameWithType: IReadOnlyDictionary<string,ICell>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.ICollection
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
  spec.csharp:
  - {}
  - uid: System.Collections.ICollection
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.ICollection
  - {}
- uid: TypeRef:System.Collections.IDictionary
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
  spec.csharp:
  - {}
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
  - {}
- uid: TypeRef:System.Collections.IEnumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
  spec.csharp:
  - {}
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
  - {}
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  name: IObservable<ICell>
  nameWithType: IObservable<ICell>
  fullName: System.IObservable<Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.CPIBondHelper> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * ICell<CPIBondHelper> * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * ICell<CPIBondHelper> * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<QLNet.CPIBondHelper> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.CPIBondHelper
    name: CPIBondHelper
    nameWithType: CPIBondHelper
    fullName: QLNet.CPIBondHelper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<QLNet.CPIBondHelper>
  name: IObservable<CPIBondHelper>
  nameWithType: IObservable<CPIBondHelper>
  fullName: System.IObservable<QLNet.CPIBondHelper>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.CPIBondHelper
    name: CPIBondHelper
    nameWithType: CPIBondHelper
    fullName: QLNet.CPIBondHelper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.CPIBondHelper>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,CPIBondHelper>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,CPIBondHelper>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,QLNet.CPIBondHelper>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: QLNet.CPIBondHelper
    name: CPIBondHelper
    nameWithType: CPIBondHelper
    fullName: QLNet.CPIBondHelper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  name: IObservable<KeyValuePair<string,decimal>>
  nameWithType: IObservable<KeyValuePair<string,decimal>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,decimal>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.decimal
    name: decimal
    nameWithType: decimal
    fullName: decimal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  name: IObservable<KeyValuePair<string,float>>
  nameWithType: IObservable<KeyValuePair<string,float>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,float>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  name: IObservable<KeyValuePair<string,int>>
  nameWithType: IObservable<KeyValuePair<string,int>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,int>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.int
    name: int
    nameWithType: int
    fullName: int
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObserver`1<QLNet.CPIBondHelper>
  name: IObserver<CPIBondHelper>
  nameWithType: IObserver<CPIBondHelper>
  fullName: System.IObserver<QLNet.CPIBondHelper>
  spec.csharp:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.CPIBondHelper
    name: CPIBondHelper
    nameWithType: CPIBondHelper
    fullName: QLNet.CPIBondHelper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  name: "member Bind: ICell<'T> -> unit"
  nameWithType: "member Model.Bind: ICell<'T> -> unit"
  fullName: "member Cephei.Cell.Generic.Model.Bind: Cephei.Cell.Generic.ICell<'T> -> unit"
- uid: Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  name: 'abstract member OnCompleted: unit -> unit'
  nameWithType: 'abstract member Model.OnCompleted: unit -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnCompleted: unit -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnError(exn)
  name: 'abstract member OnError: exn -> unit'
  nameWithType: 'abstract member Model.OnError: exn -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnError: exn -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnNext('T)
  name: "abstract member OnNext: 'T -> unit"
  nameWithType: "abstract member Model.OnNext: 'T -> unit"
  fullName: "abstract member Cephei.Cell.Generic.Model.OnNext: 'T -> unit"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  name: "abstract member Subscribe: IObserver<'T> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<'T> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<'T> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: "abstract member Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  name: "abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Value(unit)
  name: "abstract property Value: 'T"
  nameWithType: "abstract property Model.Value: 'T"
  fullName: "abstract property Cephei.Cell.Generic.Model.Value: 'T"
- uid: Cephei.Cell.Model.As(string)
  name: "member As: string -> ICell<'T>"
  nameWithType: "member Model.As: string -> ICell<'T>"
  fullName: "member Cephei.Cell.Model.As: string -> Cephei.Cell.Generic.ICell<'T>"
- uid: Cephei.Cell.Model.Bind(unit)
  name: 'member Bind: unit -> unit'
  nameWithType: 'member Model.Bind: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Bind: unit -> unit'
- uid: Cephei.Cell.Model.Box(unit)
  name: 'abstract property Box: obj'
  nameWithType: 'abstract property Model.Box: obj'
  fullName: 'abstract property Cephei.Cell.Model.Box: obj'
- uid: Cephei.Cell.Model.Change()
  name: 'abstract member Change: CellChange'
  nameWithType: 'abstract member Model.Change: CellChange'
  fullName: 'abstract member Cephei.Cell.Model.Change: Cephei.Cell.CellChange'
- uid: Cephei.Cell.Model.Create(Unit -> 'T * string)
  name: "member Create: Unit -> 'T * string -> Cell<'T>"
  nameWithType: "member Model.Create: Unit -> 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.Create: Unit -> 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.CreateValue('T * string)
  name: "member CreateValue: 'T * string -> Cell<'T>"
  nameWithType: "member Model.CreateValue: 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.CreateValue: 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.Dependants(unit)
  name: 'abstract property Dependants: IEnumerable<ICellEvent>'
  nameWithType: 'abstract property Model.Dependants: IEnumerable<ICellEvent>'
  fullName: 'abstract property Cephei.Cell.Model.Dependants: System.Collections.Generic.IEnumerable<Cephei.Cell.ICellEvent>'
- uid: Cephei.Cell.Model.Dispose(unit)
  name: 'member Dispose: unit -> unit'
  nameWithType: 'member Model.Dispose: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Dispose: unit -> unit'
- uid: Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  name: 'member GetOrAdd: string * ICell -> ICell'
  nameWithType: 'member Model.GetOrAdd: string * ICell -> ICell'
  fullName: 'member Cephei.Cell.Model.GetOrAdd: string * Cephei.Cell.ICell -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.HasFunction(unit)
  name: 'abstract property HasFunction: bool'
  nameWithType: 'abstract property Model.HasFunction: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasFunction: bool'
- uid: Cephei.Cell.Model.HasValue(unit)
  name: 'abstract property HasValue: bool'
  nameWithType: 'abstract property Model.HasValue: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasValue: bool'
- uid: Cephei.Cell.Model.Item(string)
  name: 'property Item: string -> ICell'
  nameWithType: 'property Model.Item: string -> ICell'
  fullName: 'property Cephei.Cell.Model.Item: string -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Mnemonic(unit)
  name: 'abstract property Mnemonic: string'
  nameWithType: 'abstract property Model.Mnemonic: string'
  fullName: 'abstract property Cephei.Cell.Model.Mnemonic: string'
- uid: Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  name: 'abstract member OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  nameWithType: 'abstract member Model.OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  fullName: 'abstract member Cephei.Cell.Model.OnChange: Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession -> unit'
- uid: Cephei.Cell.Model.Parent(unit)
  name: 'abstract property Parent: ICell'
  nameWithType: 'abstract property Model.Parent: ICell'
  fullName: 'abstract property Cephei.Cell.Model.Parent: Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  name: 'abstract member Subscribe: IObserver<ICell> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ICell> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ICell> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: 'abstract member Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,float>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,int>> -> System.IDisposable'
- uid: Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  name: 'member TryAdd: string * ICell -> bool'
  nameWithType: 'member Model.TryAdd: string * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryAdd: string * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  name: 'member TryRemove: string * ICell byref -> bool'
  nameWithType: 'member Model.TryRemove: string * ICell byref -> bool'
  fullName: 'member Cephei.Cell.Model.TryRemove: string * Cephei.Cell.ICell byref -> bool'
- uid: Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  name: 'member TryUpdate: string * ICell * ICell -> bool'
  nameWithType: 'member Model.TryUpdate: string * ICell * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryUpdate: string * Cephei.Cell.ICell * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  name: 'abstract member add_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.add_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.add_Change: Cephei.Cell.CellChange -> unit'
- uid: Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  name: 'abstract member remove_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.remove_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.remove_Change: Cephei.Cell.CellChange -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  name: 'abstract member Clear: unit -> unit'
  nameWithType: 'abstract member ConcurrentDictionary.Clear: unit -> unit'
  fullName: 'abstract member System.Collections.Concurrent.ConcurrentDictionary.Clear: unit -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  name: "abstract member ContainsKey: 'TKey -> bool"
  nameWithType: "abstract member ConcurrentDictionary.ContainsKey: 'TKey -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.ContainsKey: 'TKey -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  name: 'abstract property Count: int'
  nameWithType: 'abstract property ConcurrentDictionary.Count: int'
  fullName: 'abstract property System.Collections.Concurrent.ConcurrentDictionary.Count: int'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  name: "abstract member GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  nameWithType: "abstract member ConcurrentDictionary.GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.GetEnumerator: unit -> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<'TKey,'TValue>>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  name: "member GetOrAdd: 'TKey * 'TValue -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  name: "member GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * System.Func<'TKey,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  name: 'property IsEmpty: bool'
  nameWithType: 'property ConcurrentDictionary.IsEmpty: bool'
  fullName: 'property System.Collections.Concurrent.ConcurrentDictionary.IsEmpty: bool'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  name: "abstract property Item: 'TKey -> 'TValue"
  nameWithType: "abstract property ConcurrentDictionary.Item: 'TKey -> 'TValue"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Item: 'TKey -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  name: "abstract property Keys: ICollection<'TKey>"
  nameWithType: "abstract property ConcurrentDictionary.Keys: ICollection<'TKey>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Keys: System.Collections.Generic.ICollection<'TKey>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  name: "member ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  nameWithType: "member ConcurrentDictionary.ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.ToArray: unit -> System.Collections.Generic.KeyValuePair<'TKey,'TValue> []"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  name: "member TryAdd: 'TKey * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  name: "abstract member TryGetValue: 'TKey * 'TValue byref -> bool"
  nameWithType: "abstract member ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  name: "member TryRemove: 'TKey * 'TValue byref -> bool"
  nameWithType: "member ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  name: "member TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  name: "abstract property Values: ICollection<'TValue>"
  nameWithType: "abstract property ConcurrentDictionary.Values: ICollection<'TValue>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Values: System.Collections.Generic.ICollection<'TValue>"
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Handle`1<QLNet.Quote>>
  name: ICell<Handle<Quote>>
  nameWithType: ICell<Handle<Quote>>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Handle<QLNet.Quote>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Handle`1
    name: Handle
    nameWithType: Handle
    fullName: QLNet.Handle
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Quote
    name: Quote
    nameWithType: Quote
    fullName: QLNet.Quote
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.int>
  name: ICell<int>
  nameWithType: ICell<int>
  fullName: Cephei.Cell.Generic.ICell<int>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.int
    name: int
    nameWithType: int
    fullName: int
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
  name: ICell<double>
  nameWithType: ICell<double>
  fullName: Cephei.Cell.Generic.ICell<double>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.double
    name: double
    nameWithType: double
    fullName: double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
  name: ICell<bool>
  nameWithType: ICell<bool>
  fullName: Cephei.Cell.Generic.ICell<bool>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.bool
    name: bool
    nameWithType: bool
    fullName: bool
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
  name: ICell<Period>
  nameWithType: ICell<Period>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Period>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Period
    name: Period
    nameWithType: Period
    fullName: QLNet.Period
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.ZeroInflationIndex>
  name: ICell<ZeroInflationIndex>
  nameWithType: ICell<ZeroInflationIndex>
  fullName: Cephei.Cell.Generic.ICell<QLNet.ZeroInflationIndex>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.ZeroInflationIndex
    name: ZeroInflationIndex
    nameWithType: ZeroInflationIndex
    fullName: QLNet.ZeroInflationIndex
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.InterpolationType>
  name: ICell<InterpolationType>
  nameWithType: ICell<InterpolationType>
  fullName: Cephei.Cell.Generic.ICell<QLNet.InterpolationType>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.InterpolationType
    name: InterpolationType
    nameWithType: InterpolationType
    fullName: QLNet.InterpolationType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Schedule>
  name: ICell<Schedule>
  nameWithType: ICell<Schedule>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Schedule>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Schedule
    name: Schedule
    nameWithType: Schedule
    fullName: QLNet.Schedule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.double>>
  name: ICell<List<double>>
  nameWithType: ICell<List<double>>
  fullName: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.double
    name: double
    nameWithType: double
    fullName: double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
  name: ICell<DayCounter>
  nameWithType: ICell<DayCounter>
  fullName: Cephei.Cell.Generic.ICell<QLNet.DayCounter>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.DayCounter
    name: DayCounter
    nameWithType: DayCounter
    fullName: QLNet.DayCounter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BusinessDayConvention>
  name: ICell<BusinessDayConvention>
  nameWithType: ICell<BusinessDayConvention>
  fullName: Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.BusinessDayConvention
    name: BusinessDayConvention
    nameWithType: BusinessDayConvention
    fullName: QLNet.BusinessDayConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
  name: ICell<Date>
  nameWithType: ICell<Date>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Date>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Date
    name: Date
    nameWithType: Date
    fullName: QLNet.Date
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Calendar>
  name: ICell<Calendar>
  nameWithType: ICell<Calendar>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Calendar>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Calendar
    name: Calendar
    nameWithType: Calendar
    fullName: QLNet.Calendar
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.CPIBondHelperModel.#ctor*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.#ctor*
  name: ( .ctor )
  nameWithType: CPIBondHelperModel.( .ctor )
  fullName: Cephei.QL.CPIBondHelperModel
- uid: TypeRef:Cephei.QL.CPIBondHelperModel
  name: CPIBondHelperModel
  nameWithType: CPIBondHelperModel
  fullName: Cephei.QL.CPIBondHelperModel
  spec.csharp:
  - {}
  - uid: Cephei.QL.CPIBondHelperModel
    name: CPIBondHelperModel
    nameWithType: CPIBondHelperModel
    fullName: Cephei.QL.CPIBondHelperModel
  - {}
- uid: Cephei.QL.CPIBondHelperModel.RegisterWith*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.RegisterWith*
  name: RegisterWith
  nameWithType: CPIBondHelperModel.RegisterWith
  fullName: Cephei.QL.CPIBondHelperModel.RegisterWith
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Callback>
  name: ICell<Callback>
  nameWithType: ICell<Callback>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Callback>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Callback
    name: Callback
    nameWithType: Callback
    fullName: QLNet.Callback
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.CPIBondHelperModel.SetTermStructure*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.SetTermStructure*
  name: SetTermStructure
  nameWithType: CPIBondHelperModel.SetTermStructure
  fullName: Cephei.QL.CPIBondHelperModel.SetTermStructure
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.YieldTermStructure>
  name: ICell<YieldTermStructure>
  nameWithType: ICell<YieldTermStructure>
  fullName: Cephei.Cell.Generic.ICell<QLNet.YieldTermStructure>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.YieldTermStructure
    name: YieldTermStructure
    nameWithType: YieldTermStructure
    fullName: QLNet.YieldTermStructure
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.CPIBondHelperModel.UnregisterWith*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.UnregisterWith*
  name: UnregisterWith
  nameWithType: CPIBondHelperModel.UnregisterWith
  fullName: Cephei.QL.CPIBondHelperModel.UnregisterWith
- uid: Cephei.QL.CPIBondHelperModel.useCleanPrice*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.useCleanPrice*
  name: useCleanPrice
  nameWithType: CPIBondHelperModel.useCleanPrice
  fullName: Cephei.QL.CPIBondHelperModel.useCleanPrice
- uid: Cephei.QL.CPIBondHelperModel.settlementDays*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.settlementDays*
  name: settlementDays
  nameWithType: CPIBondHelperModel.settlementDays
  fullName: Cephei.QL.CPIBondHelperModel.settlementDays
- uid: Cephei.QL.CPIBondHelperModel.schedule*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.schedule*
  name: schedule
  nameWithType: CPIBondHelperModel.schedule
  fullName: Cephei.QL.CPIBondHelperModel.schedule
- uid: Cephei.QL.CPIBondHelperModel.price*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.price*
  name: price
  nameWithType: CPIBondHelperModel.price
  fullName: Cephei.QL.CPIBondHelperModel.price
- uid: Cephei.QL.CPIBondHelperModel.paymentConvention*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.paymentConvention*
  name: paymentConvention
  nameWithType: CPIBondHelperModel.paymentConvention
  fullName: Cephei.QL.CPIBondHelperModel.paymentConvention
- uid: Cephei.QL.CPIBondHelperModel.paymentCalendar*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.paymentCalendar*
  name: paymentCalendar
  nameWithType: CPIBondHelperModel.paymentCalendar
  fullName: Cephei.QL.CPIBondHelperModel.paymentCalendar
- uid: Cephei.QL.CPIBondHelperModel.observationLag*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.observationLag*
  name: observationLag
  nameWithType: CPIBondHelperModel.observationLag
  fullName: Cephei.QL.CPIBondHelperModel.observationLag
- uid: Cephei.QL.CPIBondHelperModel.observationInterpolation*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.observationInterpolation*
  name: observationInterpolation
  nameWithType: CPIBondHelperModel.observationInterpolation
  fullName: Cephei.QL.CPIBondHelperModel.observationInterpolation
- uid: Cephei.QL.CPIBondHelperModel.issueDate*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.issueDate*
  name: issueDate
  nameWithType: CPIBondHelperModel.issueDate
  fullName: Cephei.QL.CPIBondHelperModel.issueDate
- uid: Cephei.QL.CPIBondHelperModel.growthOnly*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.growthOnly*
  name: growthOnly
  nameWithType: CPIBondHelperModel.growthOnly
  fullName: Cephei.QL.CPIBondHelperModel.growthOnly
- uid: Cephei.QL.CPIBondHelperModel.fixedRate*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.fixedRate*
  name: fixedRate
  nameWithType: CPIBondHelperModel.fixedRate
  fullName: Cephei.QL.CPIBondHelperModel.fixedRate
- uid: Cephei.QL.CPIBondHelperModel.faceAmount*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.faceAmount*
  name: faceAmount
  nameWithType: CPIBondHelperModel.faceAmount
  fullName: Cephei.QL.CPIBondHelperModel.faceAmount
- uid: Cephei.QL.CPIBondHelperModel.exCouponPeriod*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.exCouponPeriod*
  name: exCouponPeriod
  nameWithType: CPIBondHelperModel.exCouponPeriod
  fullName: Cephei.QL.CPIBondHelperModel.exCouponPeriod
- uid: Cephei.QL.CPIBondHelperModel.exCouponEndOfMonth*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.exCouponEndOfMonth*
  name: exCouponEndOfMonth
  nameWithType: CPIBondHelperModel.exCouponEndOfMonth
  fullName: Cephei.QL.CPIBondHelperModel.exCouponEndOfMonth
- uid: Cephei.QL.CPIBondHelperModel.exCouponConvention*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.exCouponConvention*
  name: exCouponConvention
  nameWithType: CPIBondHelperModel.exCouponConvention
  fullName: Cephei.QL.CPIBondHelperModel.exCouponConvention
- uid: Cephei.QL.CPIBondHelperModel.exCouponCalendar*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.exCouponCalendar*
  name: exCouponCalendar
  nameWithType: CPIBondHelperModel.exCouponCalendar
  fullName: Cephei.QL.CPIBondHelperModel.exCouponCalendar
- uid: Cephei.QL.CPIBondHelperModel.cpiIndex*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.cpiIndex*
  name: cpiIndex
  nameWithType: CPIBondHelperModel.cpiIndex
  fullName: Cephei.QL.CPIBondHelperModel.cpiIndex
- uid: Cephei.QL.CPIBondHelperModel.baseCPI*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.baseCPI*
  name: baseCPI
  nameWithType: CPIBondHelperModel.baseCPI
  fullName: Cephei.QL.CPIBondHelperModel.baseCPI
- uid: Cephei.QL.CPIBondHelperModel.accrualDayCounter*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.accrualDayCounter*
  name: accrualDayCounter
  nameWithType: CPIBondHelperModel.accrualDayCounter
  fullName: Cephei.QL.CPIBondHelperModel.accrualDayCounter
- uid: Cephei.QL.CPIBondHelperModel.UseCleanPrice*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.UseCleanPrice*
  name: UseCleanPrice
  nameWithType: CPIBondHelperModel.UseCleanPrice
  fullName: Cephei.QL.CPIBondHelperModel.UseCleanPrice
- uid: Cephei.QL.CPIBondHelperModel.Update*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.Update*
  name: Update
  nameWithType: CPIBondHelperModel.Update
  fullName: Cephei.QL.CPIBondHelperModel.Update
- uid: Cephei.QL.CPIBondHelperModel.QuoteValue*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.QuoteValue*
  name: QuoteValue
  nameWithType: CPIBondHelperModel.QuoteValue
  fullName: Cephei.QL.CPIBondHelperModel.QuoteValue
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
  name: ICell<float>
  nameWithType: ICell<float>
  fullName: Cephei.Cell.Generic.ICell<float>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.CPIBondHelperModel.QuoteIsValid*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.QuoteIsValid*
  name: QuoteIsValid
  nameWithType: CPIBondHelperModel.QuoteIsValid
  fullName: Cephei.QL.CPIBondHelperModel.QuoteIsValid
- uid: Cephei.QL.CPIBondHelperModel.QuoteError*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.QuoteError*
  name: QuoteError
  nameWithType: CPIBondHelperModel.QuoteError
  fullName: Cephei.QL.CPIBondHelperModel.QuoteError
- uid: Cephei.QL.CPIBondHelperModel.Quote*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.Quote*
  name: Quote
  nameWithType: CPIBondHelperModel.Quote
  fullName: Cephei.QL.CPIBondHelperModel.Quote
- uid: Cephei.QL.CPIBondHelperModel.PillarDate*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.PillarDate*
  name: PillarDate
  nameWithType: CPIBondHelperModel.PillarDate
  fullName: Cephei.QL.CPIBondHelperModel.PillarDate
- uid: Cephei.QL.CPIBondHelperModel.MaturityDate*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.MaturityDate*
  name: MaturityDate
  nameWithType: CPIBondHelperModel.MaturityDate
  fullName: Cephei.QL.CPIBondHelperModel.MaturityDate
- uid: Cephei.QL.CPIBondHelperModel.LatestRelevantDate*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.LatestRelevantDate*
  name: LatestRelevantDate
  nameWithType: CPIBondHelperModel.LatestRelevantDate
  fullName: Cephei.QL.CPIBondHelperModel.LatestRelevantDate
- uid: Cephei.QL.CPIBondHelperModel.LatestDate*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.LatestDate*
  name: LatestDate
  nameWithType: CPIBondHelperModel.LatestDate
  fullName: Cephei.QL.CPIBondHelperModel.LatestDate
- uid: Cephei.QL.CPIBondHelperModel.ImpliedQuote*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.ImpliedQuote*
  name: ImpliedQuote
  nameWithType: CPIBondHelperModel.ImpliedQuote
  fullName: Cephei.QL.CPIBondHelperModel.ImpliedQuote
- uid: Cephei.QL.CPIBondHelperModel.EarliestDate*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.EarliestDate*
  name: EarliestDate
  nameWithType: CPIBondHelperModel.EarliestDate
  fullName: Cephei.QL.CPIBondHelperModel.EarliestDate
- uid: Cephei.QL.CPIBondHelperModel.CpiBond*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.CpiBond*
  name: CpiBond
  nameWithType: CPIBondHelperModel.CpiBond
  fullName: Cephei.QL.CPIBondHelperModel.CpiBond
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.CPIBond>
  name: ICell<CPIBond>
  nameWithType: ICell<CPIBond>
  fullName: Cephei.Cell.Generic.ICell<QLNet.CPIBond>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.CPIBond
    name: CPIBond
    nameWithType: CPIBond
    fullName: QLNet.CPIBond
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.CPIBondHelperModel.Bond*
  commentId: Overload:Cephei.QL.CPIBondHelperModel.Bond*
  name: Bond
  nameWithType: CPIBondHelperModel.Bond
  fullName: Cephei.QL.CPIBondHelperModel.Bond
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Bond>
  name: ICell<Bond>
  nameWithType: ICell<Bond>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Bond>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Bond
    name: Bond
    nameWithType: Bond
    fullName: QLNet.Bond
  - name: '>'
    nameWithType: '>'
    fullName: '>'
