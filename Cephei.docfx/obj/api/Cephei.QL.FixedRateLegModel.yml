### YamlMime:ManagedReference
items:
- uid: Cephei.QL.FixedRateLegModel
  commentId: T:Cephei.QL.FixedRateLegModel
  id: FixedRateLegModel
  parent: Cephei.QL
  children:
  - Cephei.QL.FixedRateLegModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.Schedule>)
  - Cephei.QL.FixedRateLegModel.schedule(unit)
  - Cephei.QL.FixedRateLegModel.Value(unit)
  - Cephei.QL.FixedRateLegModel.WithCouponRates(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter> -> Cephei.Cell.Generic.ICell<QLNet.Compounding> -> Cephei.Cell.Generic.ICell<QLNet.Frequency>)
  - Cephei.QL.FixedRateLegModel.WithCouponRates1(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter> -> Cephei.Cell.Generic.ICell<QLNet.Compounding>)
  - Cephei.QL.FixedRateLegModel.WithCouponRates2(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter>)
  - Cephei.QL.FixedRateLegModel.WithCouponRates3(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter> -> Cephei.Cell.Generic.ICell<QLNet.Compounding> -> Cephei.Cell.Generic.ICell<QLNet.Frequency>)
  - Cephei.QL.FixedRateLegModel.WithCouponRates4(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.InterestRate>>)
  - Cephei.QL.FixedRateLegModel.WithCouponRates5(Cephei.Cell.Generic.ICell<QLNet.InterestRate>)
  - Cephei.QL.FixedRateLegModel.WithCouponRates6(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter>)
  - Cephei.QL.FixedRateLegModel.WithCouponRates7(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter> -> Cephei.Cell.Generic.ICell<QLNet.Compounding>)
  - Cephei.QL.FixedRateLegModel.WithExCouponPeriod(Cephei.Cell.Generic.ICell<QLNet.Period> -> Cephei.Cell.Generic.ICell<QLNet.Calendar> -> Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> -> Cephei.Cell.Generic.ICell<bool>)
  - Cephei.QL.FixedRateLegModel.WithFirstPeriodDayCounter(Cephei.Cell.Generic.ICell<QLNet.DayCounter>)
  - Cephei.QL.FixedRateLegModel.WithLastPeriodDayCounter(Cephei.Cell.Generic.ICell<QLNet.DayCounter>)
  - Cephei.QL.FixedRateLegModel.WithNotionals(Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.FixedRateLegModel.WithNotionals1(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>>)
  - Cephei.QL.FixedRateLegModel.WithPaymentAdjustment(Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention>)
  - Cephei.QL.FixedRateLegModel.WithPaymentCalendar(Cephei.Cell.Generic.ICell<QLNet.Calendar>)
  langs:
  - csharp
  - vb
  name: FixedRateLegModel
  nameWithType: Cephei.QL.FixedRateLegModel
  fullName: Cephei.QL.FixedRateLegModel
  type: Class
  source:
    id: Cephei.QL.FixedRateLegModel
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FixedRateLegModel.fs
    startLine: 35
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: >-
      [<AutoSerializable(true)>]

      type FixedRateLegModel (schedule:ICell<Schedule>)
          inherit Model<FixedRateLeg>
          interface IDictionary<string,ICell>
          interface ICollection<KeyValuePair<string,ICell>>
          interface IReadOnlyDictionary<string,ICell>
          interface IReadOnlyCollection<KeyValuePair<string,ICell>>
          interface IEnumerable<KeyValuePair<string,ICell>>
          interface IDictionary
          interface ICollection
          interface IEnumerable
          interface IObservable<ICell>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
          interface IObservable<ISession * Model * CellEvent * ICell * DateTime>
          interface IObservable<KeyValuePair<string,float>>
          interface IObservable<KeyValuePair<string,int>>
          interface IObservable<KeyValuePair<string,decimal>>
          interface ICell<FixedRateLeg>
          interface ICell
          interface ICellEvent
          interface IObservable<FixedRateLeg>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,FixedRateLeg>>>
          interface IObservable<ISession * ICell<FixedRateLeg> * CellEvent * ICell * DateTime>
          interface IObserver<FixedRateLeg>
    parameters:
    - id: schedule
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Schedule>
      attributes: []
    typeParameters: []
  inheritance:
  - TypeRef:System.Object
  - TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:Cephei.Cell.Model
  - TypeRef:Cephei.Cell.Generic.Model`1<QLNet.FixedRateLeg>
  implements:
  - TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FixedRateLeg>
  - TypeRef:Cephei.Cell.ICell
  - TypeRef:Cephei.Cell.ICellEvent
  - TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.ICollection
  - TypeRef:System.Collections.IDictionary
  - TypeRef:System.Collections.IEnumerable
  - TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.FixedRateLeg> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<QLNet.FixedRateLeg>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.FixedRateLeg>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  - TypeRef:System.IObserver`1<QLNet.FixedRateLeg>
  inheritedMembers:
  - Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  - Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  - Cephei.Cell.Generic.Model`1.OnError(exn)
  - Cephei.Cell.Generic.Model`1.OnNext('T)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  - Cephei.Cell.Generic.Model`1.Value(unit)
  - Cephei.Cell.Model.As(string)
  - Cephei.Cell.Model.Bind(unit)
  - Cephei.Cell.Model.Box(unit)
  - Cephei.Cell.Model.Change()
  - Cephei.Cell.Model.Create(Unit -> 'T * string)
  - Cephei.Cell.Model.CreateValue('T * string)
  - Cephei.Cell.Model.Dependants(unit)
  - Cephei.Cell.Model.Dispose(unit)
  - Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.HasFunction(unit)
  - Cephei.Cell.Model.HasValue(unit)
  - Cephei.Cell.Model.Item(string)
  - Cephei.Cell.Model.Mnemonic(unit)
  - Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  - Cephei.Cell.Model.Parent(unit)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  - Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  - Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  - Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  - Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  attributes:
  - type: Microsoft.FSharp.Core.AutoSerializableAttribute
    arguments:
    - type: System.Boolean
      value: true
    namedArguments: []
- uid: Cephei.QL.FixedRateLegModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.Schedule>)
  commentId: M:Cephei.QL.FixedRateLegModel.#ctor(Cephei.Cell.Generic.ICell{QLNet.Schedule})
  id: '#ctor(Cephei.Cell.Generic.ICell<QLNet.Schedule>)'
  parent: Cephei.QL.FixedRateLegModel
  langs:
  - csharp
  - vb
  name: 'new: ICell<Schedule> -> FixedRateLegModel'
  nameWithType: 'new: ICell<Schedule> -> FixedRateLegModel'
  fullName: 'new: Cephei.Cell.Generic.ICell<QLNet.Schedule> -> Cephei.QL.FixedRateLegModel'
  type: Constructor
  source:
    id: Cephei.QL.FixedRateLegModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.Schedule>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FixedRateLegModel.fs
    startLine: 35
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  summary: Implicit constructor.
  syntax:
    content: 'new: schedule:ICell<Schedule> -> FixedRateLegModel'
    parameters:
    - id: schedule
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Schedule>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.QL.FixedRateLegModel
      attributes: []
  overload: Cephei.QL.FixedRateLegModel.#ctor*
  attributes: []
- uid: Cephei.QL.FixedRateLegModel.WithCouponRates(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter> -> Cephei.Cell.Generic.ICell<QLNet.Compounding> -> Cephei.Cell.Generic.ICell<QLNet.Frequency>)
  commentId: M:Cephei.QL.FixedRateLegModel.WithCouponRates(Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{QLNet.DayCounter},Cephei.Cell.Generic.ICell{QLNet.Compounding},Cephei.Cell.Generic.ICell{QLNet.Frequency})
  id: WithCouponRates(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter> -> Cephei.Cell.Generic.ICell<QLNet.Compounding> -> Cephei.Cell.Generic.ICell<QLNet.Frequency>)
  parent: Cephei.QL.FixedRateLegModel
  langs:
  - csharp
  - vb
  name: 'member WithCouponRates: ICell<double> -> ICell<DayCounter> -> ICell<Compounding> -> ICell<Frequency> -> ICell<FixedRateLeg>'
  nameWithType: 'member FixedRateLegModel.WithCouponRates: ICell<double> -> ICell<DayCounter> -> ICell<Compounding> -> ICell<Frequency> -> ICell<FixedRateLeg>'
  fullName: 'member Cephei.QL.FixedRateLegModel.WithCouponRates: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter> -> Cephei.Cell.Generic.ICell<QLNet.Compounding> -> Cephei.Cell.Generic.ICell<QLNet.Frequency> -> Cephei.Cell.Generic.ICell<QLNet.FixedRateLeg>'
  type: Method
  source:
    id: Cephei.QL.FixedRateLegModel.WithCouponRates(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter> -> Cephei.Cell.Generic.ICell<QLNet.Compounding> -> Cephei.Cell.Generic.ICell<QLNet.Frequency>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FixedRateLegModel.fs
    startLine: 86
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member WithCouponRates: couponRate:ICell<double> -> paymentDayCounter:ICell<DayCounter> -> comp:ICell<Compounding> -> freq:ICell<Frequency> -> ICell<FixedRateLeg>'
    parameters:
    - id: couponRate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: paymentDayCounter
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
    - id: comp
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Compounding>
      attributes: []
    - id: freq
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Frequency>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FixedRateLeg>
      attributes: []
  overload: Cephei.QL.FixedRateLegModel.WithCouponRates*
  attributes: []
- uid: Cephei.QL.FixedRateLegModel.WithCouponRates1(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter> -> Cephei.Cell.Generic.ICell<QLNet.Compounding>)
  commentId: M:Cephei.QL.FixedRateLegModel.WithCouponRates1(Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{QLNet.DayCounter},Cephei.Cell.Generic.ICell{QLNet.Compounding})
  id: WithCouponRates1(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter> -> Cephei.Cell.Generic.ICell<QLNet.Compounding>)
  parent: Cephei.QL.FixedRateLegModel
  langs:
  - csharp
  - vb
  name: 'member WithCouponRates1: ICell<double> -> ICell<DayCounter> -> ICell<Compounding> -> ICell<FixedRateLeg>'
  nameWithType: 'member FixedRateLegModel.WithCouponRates1: ICell<double> -> ICell<DayCounter> -> ICell<Compounding> -> ICell<FixedRateLeg>'
  fullName: 'member Cephei.QL.FixedRateLegModel.WithCouponRates1: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter> -> Cephei.Cell.Generic.ICell<QLNet.Compounding> -> Cephei.Cell.Generic.ICell<QLNet.FixedRateLeg>'
  type: Method
  source:
    id: Cephei.QL.FixedRateLegModel.WithCouponRates1(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter> -> Cephei.Cell.Generic.ICell<QLNet.Compounding>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FixedRateLegModel.fs
    startLine: 88
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member WithCouponRates1: couponRate:ICell<double> -> paymentDayCounter:ICell<DayCounter> -> comp:ICell<Compounding> -> ICell<FixedRateLeg>'
    parameters:
    - id: couponRate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: paymentDayCounter
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
    - id: comp
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Compounding>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FixedRateLeg>
      attributes: []
  overload: Cephei.QL.FixedRateLegModel.WithCouponRates1*
  attributes: []
- uid: Cephei.QL.FixedRateLegModel.WithCouponRates2(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter>)
  commentId: M:Cephei.QL.FixedRateLegModel.WithCouponRates2(Cephei.Cell.Generic.ICell{System.Collections.Generic.List{System.Double}},Cephei.Cell.Generic.ICell{QLNet.DayCounter})
  id: WithCouponRates2(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter>)
  parent: Cephei.QL.FixedRateLegModel
  langs:
  - csharp
  - vb
  name: 'member WithCouponRates2: ICell<List<double>> -> ICell<DayCounter> -> ICell<FixedRateLeg>'
  nameWithType: 'member FixedRateLegModel.WithCouponRates2: ICell<List<double>> -> ICell<DayCounter> -> ICell<FixedRateLeg>'
  fullName: 'member Cephei.QL.FixedRateLegModel.WithCouponRates2: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter> -> Cephei.Cell.Generic.ICell<QLNet.FixedRateLeg>'
  type: Method
  source:
    id: Cephei.QL.FixedRateLegModel.WithCouponRates2(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FixedRateLegModel.fs
    startLine: 90
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member WithCouponRates2: couponRates:ICell<List<double>> -> paymentDayCounter:ICell<DayCounter> -> ICell<FixedRateLeg>'
    parameters:
    - id: couponRates
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.double>>
      attributes: []
    - id: paymentDayCounter
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FixedRateLeg>
      attributes: []
  overload: Cephei.QL.FixedRateLegModel.WithCouponRates2*
  attributes: []
- uid: Cephei.QL.FixedRateLegModel.WithCouponRates3(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter> -> Cephei.Cell.Generic.ICell<QLNet.Compounding> -> Cephei.Cell.Generic.ICell<QLNet.Frequency>)
  commentId: M:Cephei.QL.FixedRateLegModel.WithCouponRates3(Cephei.Cell.Generic.ICell{System.Collections.Generic.List{System.Double}},Cephei.Cell.Generic.ICell{QLNet.DayCounter},Cephei.Cell.Generic.ICell{QLNet.Compounding},Cephei.Cell.Generic.ICell{QLNet.Frequency})
  id: WithCouponRates3(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter> -> Cephei.Cell.Generic.ICell<QLNet.Compounding> -> Cephei.Cell.Generic.ICell<QLNet.Frequency>)
  parent: Cephei.QL.FixedRateLegModel
  langs:
  - csharp
  - vb
  name: 'member WithCouponRates3: ICell<List<double>> -> ICell<DayCounter> -> ICell<Compounding> -> ICell<Frequency> -> ICell<FixedRateLeg>'
  nameWithType: 'member FixedRateLegModel.WithCouponRates3: ICell<List<double>> -> ICell<DayCounter> -> ICell<Compounding> -> ICell<Frequency> -> ICell<FixedRateLeg>'
  fullName: 'member Cephei.QL.FixedRateLegModel.WithCouponRates3: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter> -> Cephei.Cell.Generic.ICell<QLNet.Compounding> -> Cephei.Cell.Generic.ICell<QLNet.Frequency> -> Cephei.Cell.Generic.ICell<QLNet.FixedRateLeg>'
  type: Method
  source:
    id: Cephei.QL.FixedRateLegModel.WithCouponRates3(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter> -> Cephei.Cell.Generic.ICell<QLNet.Compounding> -> Cephei.Cell.Generic.ICell<QLNet.Frequency>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FixedRateLegModel.fs
    startLine: 92
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member WithCouponRates3: couponRates:ICell<List<double>> -> paymentDayCounter:ICell<DayCounter> -> comp:ICell<Compounding> -> freq:ICell<Frequency> -> ICell<FixedRateLeg>'
    parameters:
    - id: couponRates
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.double>>
      attributes: []
    - id: paymentDayCounter
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
    - id: comp
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Compounding>
      attributes: []
    - id: freq
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Frequency>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FixedRateLeg>
      attributes: []
  overload: Cephei.QL.FixedRateLegModel.WithCouponRates3*
  attributes: []
- uid: Cephei.QL.FixedRateLegModel.WithCouponRates4(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.InterestRate>>)
  commentId: M:Cephei.QL.FixedRateLegModel.WithCouponRates4(Cephei.Cell.Generic.ICell{System.Collections.Generic.List{QLNet.InterestRate}})
  id: WithCouponRates4(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.InterestRate>>)
  parent: Cephei.QL.FixedRateLegModel
  langs:
  - csharp
  - vb
  name: 'member WithCouponRates4: ICell<List<InterestRate>> -> ICell<FixedRateLeg>'
  nameWithType: 'member FixedRateLegModel.WithCouponRates4: ICell<List<InterestRate>> -> ICell<FixedRateLeg>'
  fullName: 'member Cephei.QL.FixedRateLegModel.WithCouponRates4: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.InterestRate>> -> Cephei.Cell.Generic.ICell<QLNet.FixedRateLeg>'
  type: Method
  source:
    id: Cephei.QL.FixedRateLegModel.WithCouponRates4(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.InterestRate>>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FixedRateLegModel.fs
    startLine: 94
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member WithCouponRates4: couponRates:ICell<List<InterestRate>> -> ICell<FixedRateLeg>'
    parameters:
    - id: couponRates
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<QLNet.InterestRate>>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FixedRateLeg>
      attributes: []
  overload: Cephei.QL.FixedRateLegModel.WithCouponRates4*
  attributes: []
- uid: Cephei.QL.FixedRateLegModel.WithCouponRates5(Cephei.Cell.Generic.ICell<QLNet.InterestRate>)
  commentId: M:Cephei.QL.FixedRateLegModel.WithCouponRates5(Cephei.Cell.Generic.ICell{QLNet.InterestRate})
  id: WithCouponRates5(Cephei.Cell.Generic.ICell<QLNet.InterestRate>)
  parent: Cephei.QL.FixedRateLegModel
  langs:
  - csharp
  - vb
  name: 'member WithCouponRates5: ICell<InterestRate> -> ICell<FixedRateLeg>'
  nameWithType: 'member FixedRateLegModel.WithCouponRates5: ICell<InterestRate> -> ICell<FixedRateLeg>'
  fullName: 'member Cephei.QL.FixedRateLegModel.WithCouponRates5: Cephei.Cell.Generic.ICell<QLNet.InterestRate> -> Cephei.Cell.Generic.ICell<QLNet.FixedRateLeg>'
  type: Method
  source:
    id: Cephei.QL.FixedRateLegModel.WithCouponRates5(Cephei.Cell.Generic.ICell<QLNet.InterestRate>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FixedRateLegModel.fs
    startLine: 96
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member WithCouponRates5: couponRate:ICell<InterestRate> -> ICell<FixedRateLeg>'
    parameters:
    - id: couponRate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.InterestRate>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FixedRateLeg>
      attributes: []
  overload: Cephei.QL.FixedRateLegModel.WithCouponRates5*
  attributes: []
- uid: Cephei.QL.FixedRateLegModel.WithCouponRates6(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter>)
  commentId: M:Cephei.QL.FixedRateLegModel.WithCouponRates6(Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{QLNet.DayCounter})
  id: WithCouponRates6(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter>)
  parent: Cephei.QL.FixedRateLegModel
  langs:
  - csharp
  - vb
  name: 'member WithCouponRates6: ICell<double> -> ICell<DayCounter> -> ICell<FixedRateLeg>'
  nameWithType: 'member FixedRateLegModel.WithCouponRates6: ICell<double> -> ICell<DayCounter> -> ICell<FixedRateLeg>'
  fullName: 'member Cephei.QL.FixedRateLegModel.WithCouponRates6: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter> -> Cephei.Cell.Generic.ICell<QLNet.FixedRateLeg>'
  type: Method
  source:
    id: Cephei.QL.FixedRateLegModel.WithCouponRates6(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FixedRateLegModel.fs
    startLine: 98
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member WithCouponRates6: couponRate:ICell<double> -> paymentDayCounter:ICell<DayCounter> -> ICell<FixedRateLeg>'
    parameters:
    - id: couponRate
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: paymentDayCounter
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FixedRateLeg>
      attributes: []
  overload: Cephei.QL.FixedRateLegModel.WithCouponRates6*
  attributes: []
- uid: Cephei.QL.FixedRateLegModel.WithCouponRates7(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter> -> Cephei.Cell.Generic.ICell<QLNet.Compounding>)
  commentId: M:Cephei.QL.FixedRateLegModel.WithCouponRates7(Cephei.Cell.Generic.ICell{System.Collections.Generic.List{System.Double}},Cephei.Cell.Generic.ICell{QLNet.DayCounter},Cephei.Cell.Generic.ICell{QLNet.Compounding})
  id: WithCouponRates7(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter> -> Cephei.Cell.Generic.ICell<QLNet.Compounding>)
  parent: Cephei.QL.FixedRateLegModel
  langs:
  - csharp
  - vb
  name: 'member WithCouponRates7: ICell<List<double>> -> ICell<DayCounter> -> ICell<Compounding> -> ICell<FixedRateLeg>'
  nameWithType: 'member FixedRateLegModel.WithCouponRates7: ICell<List<double>> -> ICell<DayCounter> -> ICell<Compounding> -> ICell<FixedRateLeg>'
  fullName: 'member Cephei.QL.FixedRateLegModel.WithCouponRates7: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter> -> Cephei.Cell.Generic.ICell<QLNet.Compounding> -> Cephei.Cell.Generic.ICell<QLNet.FixedRateLeg>'
  type: Method
  source:
    id: Cephei.QL.FixedRateLegModel.WithCouponRates7(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> -> Cephei.Cell.Generic.ICell<QLNet.DayCounter> -> Cephei.Cell.Generic.ICell<QLNet.Compounding>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FixedRateLegModel.fs
    startLine: 100
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member WithCouponRates7: couponRates:ICell<List<double>> -> paymentDayCounter:ICell<DayCounter> -> comp:ICell<Compounding> -> ICell<FixedRateLeg>'
    parameters:
    - id: couponRates
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.double>>
      attributes: []
    - id: paymentDayCounter
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
    - id: comp
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Compounding>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FixedRateLeg>
      attributes: []
  overload: Cephei.QL.FixedRateLegModel.WithCouponRates7*
  attributes: []
- uid: Cephei.QL.FixedRateLegModel.WithExCouponPeriod(Cephei.Cell.Generic.ICell<QLNet.Period> -> Cephei.Cell.Generic.ICell<QLNet.Calendar> -> Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> -> Cephei.Cell.Generic.ICell<bool>)
  commentId: M:Cephei.QL.FixedRateLegModel.WithExCouponPeriod(Cephei.Cell.Generic.ICell{QLNet.Period},Cephei.Cell.Generic.ICell{QLNet.Calendar},Cephei.Cell.Generic.ICell{QLNet.BusinessDayConvention},Cephei.Cell.Generic.ICell{System.Boolean})
  id: WithExCouponPeriod(Cephei.Cell.Generic.ICell<QLNet.Period> -> Cephei.Cell.Generic.ICell<QLNet.Calendar> -> Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> -> Cephei.Cell.Generic.ICell<bool>)
  parent: Cephei.QL.FixedRateLegModel
  langs:
  - csharp
  - vb
  name: 'member WithExCouponPeriod: ICell<Period> -> ICell<Calendar> -> ICell<BusinessDayConvention> -> ICell<bool> -> ICell<FixedRateLeg>'
  nameWithType: 'member FixedRateLegModel.WithExCouponPeriod: ICell<Period> -> ICell<Calendar> -> ICell<BusinessDayConvention> -> ICell<bool> -> ICell<FixedRateLeg>'
  fullName: 'member Cephei.QL.FixedRateLegModel.WithExCouponPeriod: Cephei.Cell.Generic.ICell<QLNet.Period> -> Cephei.Cell.Generic.ICell<QLNet.Calendar> -> Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> -> Cephei.Cell.Generic.ICell<bool> -> Cephei.Cell.Generic.ICell<QLNet.FixedRateLeg>'
  type: Method
  source:
    id: Cephei.QL.FixedRateLegModel.WithExCouponPeriod(Cephei.Cell.Generic.ICell<QLNet.Period> -> Cephei.Cell.Generic.ICell<QLNet.Calendar> -> Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> -> Cephei.Cell.Generic.ICell<bool>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FixedRateLegModel.fs
    startLine: 102
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member WithExCouponPeriod: period:ICell<Period> -> cal:ICell<Calendar> -> convention:ICell<BusinessDayConvention> -> endOfMonth:ICell<bool> -> ICell<FixedRateLeg>'
    parameters:
    - id: period
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
      attributes: []
    - id: cal
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Calendar>
      attributes: []
    - id: convention
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BusinessDayConvention>
      attributes: []
    - id: endOfMonth
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FixedRateLeg>
      attributes: []
  overload: Cephei.QL.FixedRateLegModel.WithExCouponPeriod*
  attributes: []
- uid: Cephei.QL.FixedRateLegModel.WithFirstPeriodDayCounter(Cephei.Cell.Generic.ICell<QLNet.DayCounter>)
  commentId: M:Cephei.QL.FixedRateLegModel.WithFirstPeriodDayCounter(Cephei.Cell.Generic.ICell{QLNet.DayCounter})
  id: WithFirstPeriodDayCounter(Cephei.Cell.Generic.ICell<QLNet.DayCounter>)
  parent: Cephei.QL.FixedRateLegModel
  langs:
  - csharp
  - vb
  name: 'member WithFirstPeriodDayCounter: ICell<DayCounter> -> ICell<FixedRateLeg>'
  nameWithType: 'member FixedRateLegModel.WithFirstPeriodDayCounter: ICell<DayCounter> -> ICell<FixedRateLeg>'
  fullName: 'member Cephei.QL.FixedRateLegModel.WithFirstPeriodDayCounter: Cephei.Cell.Generic.ICell<QLNet.DayCounter> -> Cephei.Cell.Generic.ICell<QLNet.FixedRateLeg>'
  type: Method
  source:
    id: Cephei.QL.FixedRateLegModel.WithFirstPeriodDayCounter(Cephei.Cell.Generic.ICell<QLNet.DayCounter>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FixedRateLegModel.fs
    startLine: 104
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member WithFirstPeriodDayCounter: dayCounter:ICell<DayCounter> -> ICell<FixedRateLeg>'
    parameters:
    - id: dayCounter
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FixedRateLeg>
      attributes: []
  overload: Cephei.QL.FixedRateLegModel.WithFirstPeriodDayCounter*
  attributes: []
- uid: Cephei.QL.FixedRateLegModel.WithLastPeriodDayCounter(Cephei.Cell.Generic.ICell<QLNet.DayCounter>)
  commentId: M:Cephei.QL.FixedRateLegModel.WithLastPeriodDayCounter(Cephei.Cell.Generic.ICell{QLNet.DayCounter})
  id: WithLastPeriodDayCounter(Cephei.Cell.Generic.ICell<QLNet.DayCounter>)
  parent: Cephei.QL.FixedRateLegModel
  langs:
  - csharp
  - vb
  name: 'member WithLastPeriodDayCounter: ICell<DayCounter> -> ICell<FixedRateLeg>'
  nameWithType: 'member FixedRateLegModel.WithLastPeriodDayCounter: ICell<DayCounter> -> ICell<FixedRateLeg>'
  fullName: 'member Cephei.QL.FixedRateLegModel.WithLastPeriodDayCounter: Cephei.Cell.Generic.ICell<QLNet.DayCounter> -> Cephei.Cell.Generic.ICell<QLNet.FixedRateLeg>'
  type: Method
  source:
    id: Cephei.QL.FixedRateLegModel.WithLastPeriodDayCounter(Cephei.Cell.Generic.ICell<QLNet.DayCounter>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FixedRateLegModel.fs
    startLine: 106
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member WithLastPeriodDayCounter: dayCounter:ICell<DayCounter> -> ICell<FixedRateLeg>'
    parameters:
    - id: dayCounter
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FixedRateLeg>
      attributes: []
  overload: Cephei.QL.FixedRateLegModel.WithLastPeriodDayCounter*
  attributes: []
- uid: Cephei.QL.FixedRateLegModel.WithNotionals(Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.FixedRateLegModel.WithNotionals(Cephei.Cell.Generic.ICell{System.Double})
  id: WithNotionals(Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.FixedRateLegModel
  langs:
  - csharp
  - vb
  name: 'member WithNotionals: ICell<double> -> ICell<RateLegBase>'
  nameWithType: 'member FixedRateLegModel.WithNotionals: ICell<double> -> ICell<RateLegBase>'
  fullName: 'member Cephei.QL.FixedRateLegModel.WithNotionals: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.RateLegBase>'
  type: Method
  source:
    id: Cephei.QL.FixedRateLegModel.WithNotionals(Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FixedRateLegModel.fs
    startLine: 110
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member WithNotionals: notional:ICell<double> -> ICell<RateLegBase>'
    parameters:
    - id: notional
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.RateLegBase>
      attributes: []
  overload: Cephei.QL.FixedRateLegModel.WithNotionals*
  attributes: []
- uid: Cephei.QL.FixedRateLegModel.WithNotionals1(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>>)
  commentId: M:Cephei.QL.FixedRateLegModel.WithNotionals1(Cephei.Cell.Generic.ICell{System.Collections.Generic.List{System.Double}})
  id: WithNotionals1(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>>)
  parent: Cephei.QL.FixedRateLegModel
  langs:
  - csharp
  - vb
  name: 'member WithNotionals1: ICell<List<double>> -> ICell<RateLegBase>'
  nameWithType: 'member FixedRateLegModel.WithNotionals1: ICell<List<double>> -> ICell<RateLegBase>'
  fullName: 'member Cephei.QL.FixedRateLegModel.WithNotionals1: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>> -> Cephei.Cell.Generic.ICell<QLNet.RateLegBase>'
  type: Method
  source:
    id: Cephei.QL.FixedRateLegModel.WithNotionals1(Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FixedRateLegModel.fs
    startLine: 112
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member WithNotionals1: notionals:ICell<List<double>> -> ICell<RateLegBase>'
    parameters:
    - id: notionals
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.double>>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.RateLegBase>
      attributes: []
  overload: Cephei.QL.FixedRateLegModel.WithNotionals1*
  attributes: []
- uid: Cephei.QL.FixedRateLegModel.WithPaymentAdjustment(Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention>)
  commentId: M:Cephei.QL.FixedRateLegModel.WithPaymentAdjustment(Cephei.Cell.Generic.ICell{QLNet.BusinessDayConvention})
  id: WithPaymentAdjustment(Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention>)
  parent: Cephei.QL.FixedRateLegModel
  langs:
  - csharp
  - vb
  name: 'member WithPaymentAdjustment: ICell<BusinessDayConvention> -> ICell<RateLegBase>'
  nameWithType: 'member FixedRateLegModel.WithPaymentAdjustment: ICell<BusinessDayConvention> -> ICell<RateLegBase>'
  fullName: 'member Cephei.QL.FixedRateLegModel.WithPaymentAdjustment: Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention> -> Cephei.Cell.Generic.ICell<QLNet.RateLegBase>'
  type: Method
  source:
    id: Cephei.QL.FixedRateLegModel.WithPaymentAdjustment(Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FixedRateLegModel.fs
    startLine: 114
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member WithPaymentAdjustment: convention:ICell<BusinessDayConvention> -> ICell<RateLegBase>'
    parameters:
    - id: convention
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BusinessDayConvention>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.RateLegBase>
      attributes: []
  overload: Cephei.QL.FixedRateLegModel.WithPaymentAdjustment*
  attributes: []
- uid: Cephei.QL.FixedRateLegModel.WithPaymentCalendar(Cephei.Cell.Generic.ICell<QLNet.Calendar>)
  commentId: M:Cephei.QL.FixedRateLegModel.WithPaymentCalendar(Cephei.Cell.Generic.ICell{QLNet.Calendar})
  id: WithPaymentCalendar(Cephei.Cell.Generic.ICell<QLNet.Calendar>)
  parent: Cephei.QL.FixedRateLegModel
  langs:
  - csharp
  - vb
  name: 'member WithPaymentCalendar: ICell<Calendar> -> ICell<FixedRateLeg>'
  nameWithType: 'member FixedRateLegModel.WithPaymentCalendar: ICell<Calendar> -> ICell<FixedRateLeg>'
  fullName: 'member Cephei.QL.FixedRateLegModel.WithPaymentCalendar: Cephei.Cell.Generic.ICell<QLNet.Calendar> -> Cephei.Cell.Generic.ICell<QLNet.FixedRateLeg>'
  type: Method
  source:
    id: Cephei.QL.FixedRateLegModel.WithPaymentCalendar(Cephei.Cell.Generic.ICell<QLNet.Calendar>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FixedRateLegModel.fs
    startLine: 108
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member WithPaymentCalendar: cal:ICell<Calendar> -> ICell<FixedRateLeg>'
    parameters:
    - id: cal
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Calendar>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FixedRateLeg>
      attributes: []
  overload: Cephei.QL.FixedRateLegModel.WithPaymentCalendar*
  attributes: []
- uid: Cephei.QL.FixedRateLegModel.schedule(unit)
  commentId: P:Cephei.QL.FixedRateLegModel.schedule
  id: schedule(unit)
  parent: Cephei.QL.FixedRateLegModel
  langs:
  - csharp
  - vb
  name: 'property schedule: ICell<Schedule>'
  nameWithType: 'property FixedRateLegModel.schedule: ICell<Schedule>'
  fullName: 'property Cephei.QL.FixedRateLegModel.schedule: Cephei.Cell.Generic.ICell<QLNet.Schedule>'
  type: Property
  source:
    id: Cephei.QL.FixedRateLegModel.schedule(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FixedRateLegModel.fs
    startLine: 84
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property schedule: ICell<Schedule> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Schedule>
      attributes: []
  overload: Cephei.QL.FixedRateLegModel.schedule*
  attributes: []
- uid: Cephei.QL.FixedRateLegModel.Value(unit)
  commentId: P:Cephei.QL.FixedRateLegModel.Value
  id: Value(unit)
  parent: Cephei.QL.FixedRateLegModel
  langs:
  - csharp
  - vb
  name: 'property Value: ICell<List<CashFlow>>'
  nameWithType: 'property FixedRateLegModel.Value: ICell<List<CashFlow>>'
  fullName: 'property Cephei.QL.FixedRateLegModel.Value: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.CashFlow>>'
  type: Property
  source:
    id: Cephei.QL.FixedRateLegModel.Value(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\FixedRateLegModel.fs
    startLine: 85
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Value: ICell<List<CashFlow>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<QLNet.CashFlow>>
      attributes: []
  overload: Cephei.QL.FixedRateLegModel.Value*
  attributes: []
references:
- uid: Cephei.QL
  commentId: N:Cephei.QL
  name: Cephei.QL
  nameWithType: Cephei.QL
  fullName: Cephei.QL
- uid: TypeRef:System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
  spec.csharp:
  - {}
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - {}
- uid: TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: ConcurrentDictionary<string,ICell>
  nameWithType: ConcurrentDictionary<string,ICell>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Model
  name: Model
  nameWithType: Model
  fullName: Cephei.Cell.Model
  spec.csharp:
  - {}
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - {}
- uid: TypeRef:Cephei.Cell.Generic.Model`1<QLNet.FixedRateLeg>
  name: Model<FixedRateLeg>
  nameWithType: Model<FixedRateLeg>
  fullName: Cephei.Cell.Generic.Model<QLNet.FixedRateLeg>
  spec.csharp:
  - uid: Cephei.Cell.Generic.Model`1
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Generic.Model
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.FixedRateLeg
    name: FixedRateLeg
    nameWithType: FixedRateLeg
    fullName: QLNet.FixedRateLeg
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.FixedRateLeg>
  name: ICell<FixedRateLeg>
  nameWithType: ICell<FixedRateLeg>
  fullName: Cephei.Cell.Generic.ICell<QLNet.FixedRateLeg>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.FixedRateLeg
    name: FixedRateLeg
    nameWithType: FixedRateLeg
    fullName: QLNet.FixedRateLeg
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.ICell
  name: ICell
  nameWithType: ICell
  fullName: Cephei.Cell.ICell
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - {}
- uid: TypeRef:Cephei.Cell.ICellEvent
  name: ICellEvent
  nameWithType: ICellEvent
  fullName: Cephei.Cell.ICellEvent
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICellEvent
    name: ICellEvent
    nameWithType: ICellEvent
    fullName: Cephei.Cell.ICellEvent
  - {}
- uid: TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: ICollection<KeyValuePair<string,ICell>>
  nameWithType: ICollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IDictionary<string,ICell>
  nameWithType: IDictionary<string,ICell>
  fullName: System.Collections.Generic.IDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IEnumerable<KeyValuePair<string,ICell>>
  nameWithType: IEnumerable<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IReadOnlyCollection<KeyValuePair<string,ICell>>
  nameWithType: IReadOnlyCollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IReadOnlyDictionary<string,ICell>
  nameWithType: IReadOnlyDictionary<string,ICell>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.ICollection
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
  spec.csharp:
  - {}
  - uid: System.Collections.ICollection
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.ICollection
  - {}
- uid: TypeRef:System.Collections.IDictionary
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
  spec.csharp:
  - {}
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
  - {}
- uid: TypeRef:System.Collections.IEnumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
  spec.csharp:
  - {}
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
  - {}
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  name: IObservable<ICell>
  nameWithType: IObservable<ICell>
  fullName: System.IObservable<Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.FixedRateLeg> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * ICell<FixedRateLeg> * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * ICell<FixedRateLeg> * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<QLNet.FixedRateLeg> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.FixedRateLeg
    name: FixedRateLeg
    nameWithType: FixedRateLeg
    fullName: QLNet.FixedRateLeg
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<QLNet.FixedRateLeg>
  name: IObservable<FixedRateLeg>
  nameWithType: IObservable<FixedRateLeg>
  fullName: System.IObservable<QLNet.FixedRateLeg>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.FixedRateLeg
    name: FixedRateLeg
    nameWithType: FixedRateLeg
    fullName: QLNet.FixedRateLeg
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.FixedRateLeg>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,FixedRateLeg>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,FixedRateLeg>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,QLNet.FixedRateLeg>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: QLNet.FixedRateLeg
    name: FixedRateLeg
    nameWithType: FixedRateLeg
    fullName: QLNet.FixedRateLeg
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  name: IObservable<KeyValuePair<string,decimal>>
  nameWithType: IObservable<KeyValuePair<string,decimal>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,decimal>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.decimal
    name: decimal
    nameWithType: decimal
    fullName: decimal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  name: IObservable<KeyValuePair<string,float>>
  nameWithType: IObservable<KeyValuePair<string,float>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,float>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  name: IObservable<KeyValuePair<string,int>>
  nameWithType: IObservable<KeyValuePair<string,int>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,int>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.int
    name: int
    nameWithType: int
    fullName: int
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObserver`1<QLNet.FixedRateLeg>
  name: IObserver<FixedRateLeg>
  nameWithType: IObserver<FixedRateLeg>
  fullName: System.IObserver<QLNet.FixedRateLeg>
  spec.csharp:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.FixedRateLeg
    name: FixedRateLeg
    nameWithType: FixedRateLeg
    fullName: QLNet.FixedRateLeg
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  name: "member Bind: ICell<'T> -> unit"
  nameWithType: "member Model.Bind: ICell<'T> -> unit"
  fullName: "member Cephei.Cell.Generic.Model.Bind: Cephei.Cell.Generic.ICell<'T> -> unit"
- uid: Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  name: 'abstract member OnCompleted: unit -> unit'
  nameWithType: 'abstract member Model.OnCompleted: unit -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnCompleted: unit -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnError(exn)
  name: 'abstract member OnError: exn -> unit'
  nameWithType: 'abstract member Model.OnError: exn -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnError: exn -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnNext('T)
  name: "abstract member OnNext: 'T -> unit"
  nameWithType: "abstract member Model.OnNext: 'T -> unit"
  fullName: "abstract member Cephei.Cell.Generic.Model.OnNext: 'T -> unit"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  name: "abstract member Subscribe: IObserver<'T> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<'T> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<'T> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: "abstract member Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  name: "abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Value(unit)
  name: "abstract property Value: 'T"
  nameWithType: "abstract property Model.Value: 'T"
  fullName: "abstract property Cephei.Cell.Generic.Model.Value: 'T"
- uid: Cephei.Cell.Model.As(string)
  name: "member As: string -> ICell<'T>"
  nameWithType: "member Model.As: string -> ICell<'T>"
  fullName: "member Cephei.Cell.Model.As: string -> Cephei.Cell.Generic.ICell<'T>"
- uid: Cephei.Cell.Model.Bind(unit)
  name: 'member Bind: unit -> unit'
  nameWithType: 'member Model.Bind: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Bind: unit -> unit'
- uid: Cephei.Cell.Model.Box(unit)
  name: 'abstract property Box: obj'
  nameWithType: 'abstract property Model.Box: obj'
  fullName: 'abstract property Cephei.Cell.Model.Box: obj'
- uid: Cephei.Cell.Model.Change()
  name: 'abstract member Change: CellChange'
  nameWithType: 'abstract member Model.Change: CellChange'
  fullName: 'abstract member Cephei.Cell.Model.Change: Cephei.Cell.CellChange'
- uid: Cephei.Cell.Model.Create(Unit -> 'T * string)
  name: "member Create: Unit -> 'T * string -> Cell<'T>"
  nameWithType: "member Model.Create: Unit -> 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.Create: Unit -> 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.CreateValue('T * string)
  name: "member CreateValue: 'T * string -> Cell<'T>"
  nameWithType: "member Model.CreateValue: 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.CreateValue: 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.Dependants(unit)
  name: 'abstract property Dependants: IEnumerable<ICellEvent>'
  nameWithType: 'abstract property Model.Dependants: IEnumerable<ICellEvent>'
  fullName: 'abstract property Cephei.Cell.Model.Dependants: System.Collections.Generic.IEnumerable<Cephei.Cell.ICellEvent>'
- uid: Cephei.Cell.Model.Dispose(unit)
  name: 'member Dispose: unit -> unit'
  nameWithType: 'member Model.Dispose: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Dispose: unit -> unit'
- uid: Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  name: 'member GetOrAdd: string * ICell -> ICell'
  nameWithType: 'member Model.GetOrAdd: string * ICell -> ICell'
  fullName: 'member Cephei.Cell.Model.GetOrAdd: string * Cephei.Cell.ICell -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.HasFunction(unit)
  name: 'abstract property HasFunction: bool'
  nameWithType: 'abstract property Model.HasFunction: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasFunction: bool'
- uid: Cephei.Cell.Model.HasValue(unit)
  name: 'abstract property HasValue: bool'
  nameWithType: 'abstract property Model.HasValue: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasValue: bool'
- uid: Cephei.Cell.Model.Item(string)
  name: 'property Item: string -> ICell'
  nameWithType: 'property Model.Item: string -> ICell'
  fullName: 'property Cephei.Cell.Model.Item: string -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Mnemonic(unit)
  name: 'abstract property Mnemonic: string'
  nameWithType: 'abstract property Model.Mnemonic: string'
  fullName: 'abstract property Cephei.Cell.Model.Mnemonic: string'
- uid: Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  name: 'abstract member OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  nameWithType: 'abstract member Model.OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  fullName: 'abstract member Cephei.Cell.Model.OnChange: Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession -> unit'
- uid: Cephei.Cell.Model.Parent(unit)
  name: 'abstract property Parent: ICell'
  nameWithType: 'abstract property Model.Parent: ICell'
  fullName: 'abstract property Cephei.Cell.Model.Parent: Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  name: 'abstract member Subscribe: IObserver<ICell> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ICell> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ICell> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: 'abstract member Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,float>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,int>> -> System.IDisposable'
- uid: Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  name: 'member TryAdd: string * ICell -> bool'
  nameWithType: 'member Model.TryAdd: string * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryAdd: string * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  name: 'member TryRemove: string * ICell byref -> bool'
  nameWithType: 'member Model.TryRemove: string * ICell byref -> bool'
  fullName: 'member Cephei.Cell.Model.TryRemove: string * Cephei.Cell.ICell byref -> bool'
- uid: Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  name: 'member TryUpdate: string * ICell * ICell -> bool'
  nameWithType: 'member Model.TryUpdate: string * ICell * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryUpdate: string * Cephei.Cell.ICell * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  name: 'abstract member add_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.add_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.add_Change: Cephei.Cell.CellChange -> unit'
- uid: Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  name: 'abstract member remove_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.remove_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.remove_Change: Cephei.Cell.CellChange -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  name: 'abstract member Clear: unit -> unit'
  nameWithType: 'abstract member ConcurrentDictionary.Clear: unit -> unit'
  fullName: 'abstract member System.Collections.Concurrent.ConcurrentDictionary.Clear: unit -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  name: "abstract member ContainsKey: 'TKey -> bool"
  nameWithType: "abstract member ConcurrentDictionary.ContainsKey: 'TKey -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.ContainsKey: 'TKey -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  name: 'abstract property Count: int'
  nameWithType: 'abstract property ConcurrentDictionary.Count: int'
  fullName: 'abstract property System.Collections.Concurrent.ConcurrentDictionary.Count: int'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  name: "abstract member GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  nameWithType: "abstract member ConcurrentDictionary.GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.GetEnumerator: unit -> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<'TKey,'TValue>>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  name: "member GetOrAdd: 'TKey * 'TValue -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  name: "member GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * System.Func<'TKey,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  name: 'property IsEmpty: bool'
  nameWithType: 'property ConcurrentDictionary.IsEmpty: bool'
  fullName: 'property System.Collections.Concurrent.ConcurrentDictionary.IsEmpty: bool'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  name: "abstract property Item: 'TKey -> 'TValue"
  nameWithType: "abstract property ConcurrentDictionary.Item: 'TKey -> 'TValue"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Item: 'TKey -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  name: "abstract property Keys: ICollection<'TKey>"
  nameWithType: "abstract property ConcurrentDictionary.Keys: ICollection<'TKey>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Keys: System.Collections.Generic.ICollection<'TKey>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  name: "member ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  nameWithType: "member ConcurrentDictionary.ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.ToArray: unit -> System.Collections.Generic.KeyValuePair<'TKey,'TValue> []"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  name: "member TryAdd: 'TKey * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  name: "abstract member TryGetValue: 'TKey * 'TValue byref -> bool"
  nameWithType: "abstract member ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  name: "member TryRemove: 'TKey * 'TValue byref -> bool"
  nameWithType: "member ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  name: "member TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  name: "abstract property Values: ICollection<'TValue>"
  nameWithType: "abstract property ConcurrentDictionary.Values: ICollection<'TValue>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Values: System.Collections.Generic.ICollection<'TValue>"
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Schedule>
  name: ICell<Schedule>
  nameWithType: ICell<Schedule>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Schedule>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Schedule
    name: Schedule
    nameWithType: Schedule
    fullName: QLNet.Schedule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.FixedRateLegModel.#ctor*
  commentId: Overload:Cephei.QL.FixedRateLegModel.#ctor*
  name: ( .ctor )
  nameWithType: FixedRateLegModel.( .ctor )
  fullName: Cephei.QL.FixedRateLegModel
- uid: TypeRef:Cephei.QL.FixedRateLegModel
  name: FixedRateLegModel
  nameWithType: FixedRateLegModel
  fullName: Cephei.QL.FixedRateLegModel
  spec.csharp:
  - {}
  - uid: Cephei.QL.FixedRateLegModel
    name: FixedRateLegModel
    nameWithType: FixedRateLegModel
    fullName: Cephei.QL.FixedRateLegModel
  - {}
- uid: Cephei.QL.FixedRateLegModel.WithCouponRates*
  commentId: Overload:Cephei.QL.FixedRateLegModel.WithCouponRates*
  name: WithCouponRates
  nameWithType: FixedRateLegModel.WithCouponRates
  fullName: Cephei.QL.FixedRateLegModel.WithCouponRates
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
  name: ICell<double>
  nameWithType: ICell<double>
  fullName: Cephei.Cell.Generic.ICell<double>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.double
    name: double
    nameWithType: double
    fullName: double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
  name: ICell<DayCounter>
  nameWithType: ICell<DayCounter>
  fullName: Cephei.Cell.Generic.ICell<QLNet.DayCounter>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.DayCounter
    name: DayCounter
    nameWithType: DayCounter
    fullName: QLNet.DayCounter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Compounding>
  name: ICell<Compounding>
  nameWithType: ICell<Compounding>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Compounding>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Compounding
    name: Compounding
    nameWithType: Compounding
    fullName: QLNet.Compounding
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Frequency>
  name: ICell<Frequency>
  nameWithType: ICell<Frequency>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Frequency>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Frequency
    name: Frequency
    nameWithType: Frequency
    fullName: QLNet.Frequency
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.FixedRateLegModel.WithCouponRates1*
  commentId: Overload:Cephei.QL.FixedRateLegModel.WithCouponRates1*
  name: WithCouponRates1
  nameWithType: FixedRateLegModel.WithCouponRates1
  fullName: Cephei.QL.FixedRateLegModel.WithCouponRates1
- uid: Cephei.QL.FixedRateLegModel.WithCouponRates2*
  commentId: Overload:Cephei.QL.FixedRateLegModel.WithCouponRates2*
  name: WithCouponRates2
  nameWithType: FixedRateLegModel.WithCouponRates2
  fullName: Cephei.QL.FixedRateLegModel.WithCouponRates2
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<Microsoft.FSharp.Core.double>>
  name: ICell<List<double>>
  nameWithType: ICell<List<double>>
  fullName: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<double>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.double
    name: double
    nameWithType: double
    fullName: double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.FixedRateLegModel.WithCouponRates3*
  commentId: Overload:Cephei.QL.FixedRateLegModel.WithCouponRates3*
  name: WithCouponRates3
  nameWithType: FixedRateLegModel.WithCouponRates3
  fullName: Cephei.QL.FixedRateLegModel.WithCouponRates3
- uid: Cephei.QL.FixedRateLegModel.WithCouponRates4*
  commentId: Overload:Cephei.QL.FixedRateLegModel.WithCouponRates4*
  name: WithCouponRates4
  nameWithType: FixedRateLegModel.WithCouponRates4
  fullName: Cephei.QL.FixedRateLegModel.WithCouponRates4
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<QLNet.InterestRate>>
  name: ICell<List<InterestRate>>
  nameWithType: ICell<List<InterestRate>>
  fullName: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.InterestRate>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.InterestRate
    name: InterestRate
    nameWithType: InterestRate
    fullName: QLNet.InterestRate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.FixedRateLegModel.WithCouponRates5*
  commentId: Overload:Cephei.QL.FixedRateLegModel.WithCouponRates5*
  name: WithCouponRates5
  nameWithType: FixedRateLegModel.WithCouponRates5
  fullName: Cephei.QL.FixedRateLegModel.WithCouponRates5
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.InterestRate>
  name: ICell<InterestRate>
  nameWithType: ICell<InterestRate>
  fullName: Cephei.Cell.Generic.ICell<QLNet.InterestRate>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.InterestRate
    name: InterestRate
    nameWithType: InterestRate
    fullName: QLNet.InterestRate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.FixedRateLegModel.WithCouponRates6*
  commentId: Overload:Cephei.QL.FixedRateLegModel.WithCouponRates6*
  name: WithCouponRates6
  nameWithType: FixedRateLegModel.WithCouponRates6
  fullName: Cephei.QL.FixedRateLegModel.WithCouponRates6
- uid: Cephei.QL.FixedRateLegModel.WithCouponRates7*
  commentId: Overload:Cephei.QL.FixedRateLegModel.WithCouponRates7*
  name: WithCouponRates7
  nameWithType: FixedRateLegModel.WithCouponRates7
  fullName: Cephei.QL.FixedRateLegModel.WithCouponRates7
- uid: Cephei.QL.FixedRateLegModel.WithExCouponPeriod*
  commentId: Overload:Cephei.QL.FixedRateLegModel.WithExCouponPeriod*
  name: WithExCouponPeriod
  nameWithType: FixedRateLegModel.WithExCouponPeriod
  fullName: Cephei.QL.FixedRateLegModel.WithExCouponPeriod
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Period>
  name: ICell<Period>
  nameWithType: ICell<Period>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Period>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Period
    name: Period
    nameWithType: Period
    fullName: QLNet.Period
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Calendar>
  name: ICell<Calendar>
  nameWithType: ICell<Calendar>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Calendar>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Calendar
    name: Calendar
    nameWithType: Calendar
    fullName: QLNet.Calendar
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.BusinessDayConvention>
  name: ICell<BusinessDayConvention>
  nameWithType: ICell<BusinessDayConvention>
  fullName: Cephei.Cell.Generic.ICell<QLNet.BusinessDayConvention>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.BusinessDayConvention
    name: BusinessDayConvention
    nameWithType: BusinessDayConvention
    fullName: QLNet.BusinessDayConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.bool>
  name: ICell<bool>
  nameWithType: ICell<bool>
  fullName: Cephei.Cell.Generic.ICell<bool>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.bool
    name: bool
    nameWithType: bool
    fullName: bool
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.FixedRateLegModel.WithFirstPeriodDayCounter*
  commentId: Overload:Cephei.QL.FixedRateLegModel.WithFirstPeriodDayCounter*
  name: WithFirstPeriodDayCounter
  nameWithType: FixedRateLegModel.WithFirstPeriodDayCounter
  fullName: Cephei.QL.FixedRateLegModel.WithFirstPeriodDayCounter
- uid: Cephei.QL.FixedRateLegModel.WithLastPeriodDayCounter*
  commentId: Overload:Cephei.QL.FixedRateLegModel.WithLastPeriodDayCounter*
  name: WithLastPeriodDayCounter
  nameWithType: FixedRateLegModel.WithLastPeriodDayCounter
  fullName: Cephei.QL.FixedRateLegModel.WithLastPeriodDayCounter
- uid: Cephei.QL.FixedRateLegModel.WithNotionals*
  commentId: Overload:Cephei.QL.FixedRateLegModel.WithNotionals*
  name: WithNotionals
  nameWithType: FixedRateLegModel.WithNotionals
  fullName: Cephei.QL.FixedRateLegModel.WithNotionals
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.RateLegBase>
  name: ICell<RateLegBase>
  nameWithType: ICell<RateLegBase>
  fullName: Cephei.Cell.Generic.ICell<QLNet.RateLegBase>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.RateLegBase
    name: RateLegBase
    nameWithType: RateLegBase
    fullName: QLNet.RateLegBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.FixedRateLegModel.WithNotionals1*
  commentId: Overload:Cephei.QL.FixedRateLegModel.WithNotionals1*
  name: WithNotionals1
  nameWithType: FixedRateLegModel.WithNotionals1
  fullName: Cephei.QL.FixedRateLegModel.WithNotionals1
- uid: Cephei.QL.FixedRateLegModel.WithPaymentAdjustment*
  commentId: Overload:Cephei.QL.FixedRateLegModel.WithPaymentAdjustment*
  name: WithPaymentAdjustment
  nameWithType: FixedRateLegModel.WithPaymentAdjustment
  fullName: Cephei.QL.FixedRateLegModel.WithPaymentAdjustment
- uid: Cephei.QL.FixedRateLegModel.WithPaymentCalendar*
  commentId: Overload:Cephei.QL.FixedRateLegModel.WithPaymentCalendar*
  name: WithPaymentCalendar
  nameWithType: FixedRateLegModel.WithPaymentCalendar
  fullName: Cephei.QL.FixedRateLegModel.WithPaymentCalendar
- uid: Cephei.QL.FixedRateLegModel.schedule*
  commentId: Overload:Cephei.QL.FixedRateLegModel.schedule*
  name: schedule
  nameWithType: FixedRateLegModel.schedule
  fullName: Cephei.QL.FixedRateLegModel.schedule
- uid: Cephei.QL.FixedRateLegModel.Value*
  commentId: Overload:Cephei.QL.FixedRateLegModel.Value*
  name: Value
  nameWithType: FixedRateLegModel.Value
  fullName: Cephei.QL.FixedRateLegModel.Value
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Collections.Generic.List`1<QLNet.CashFlow>>
  name: ICell<List<CashFlow>>
  nameWithType: ICell<List<CashFlow>>
  fullName: Cephei.Cell.Generic.ICell<System.Collections.Generic.List<QLNet.CashFlow>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.CashFlow
    name: CashFlow
    nameWithType: CashFlow
    fullName: QLNet.CashFlow
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
