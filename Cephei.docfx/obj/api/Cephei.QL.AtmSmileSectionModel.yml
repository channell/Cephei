### YamlMime:ManagedReference
items:
- uid: Cephei.QL.AtmSmileSectionModel
  commentId: T:Cephei.QL.AtmSmileSectionModel
  id: AtmSmileSectionModel
  parent: Cephei.QL
  children:
  - Cephei.QL.AtmSmileSectionModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.SmileSection> * Cephei.Cell.Generic.ICell<System.Nullable<double>>)
  - Cephei.QL.AtmSmileSectionModel.atm(unit)
  - Cephei.QL.AtmSmileSectionModel.AtmLevel(unit)
  - Cephei.QL.AtmSmileSectionModel.DayCounter(unit)
  - Cephei.QL.AtmSmileSectionModel.Density(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.AtmSmileSectionModel.DigitalOptionPrice(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.AtmSmileSectionModel.ExerciseDate(unit)
  - Cephei.QL.AtmSmileSectionModel.ExerciseTime(unit)
  - Cephei.QL.AtmSmileSectionModel.MaxStrike(unit)
  - Cephei.QL.AtmSmileSectionModel.MinStrike(unit)
  - Cephei.QL.AtmSmileSectionModel.OptionPrice(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.AtmSmileSectionModel.ReferenceDate(unit)
  - Cephei.QL.AtmSmileSectionModel.Shift(unit)
  - Cephei.QL.AtmSmileSectionModel.source(unit)
  - Cephei.QL.AtmSmileSectionModel.Update(unit)
  - Cephei.QL.AtmSmileSectionModel.Variance(Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.AtmSmileSectionModel.Vega(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.AtmSmileSectionModel.Volatility(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.VolatilityType> -> Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.AtmSmileSectionModel.Volatility1(Cephei.Cell.Generic.ICell<double>)
  - Cephei.QL.AtmSmileSectionModel.VolatilityType(unit)
  langs:
  - csharp
  - vb
  name: AtmSmileSectionModel
  nameWithType: Cephei.QL.AtmSmileSectionModel
  fullName: Cephei.QL.AtmSmileSectionModel
  type: Class
  source:
    id: Cephei.QL.AtmSmileSectionModel
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\AtmSmileSectionModel.fs
    startLine: 35
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: >-
      [<AutoSerializable(true)>]

      type AtmSmileSectionModel (source:ICell<SmileSection>, atm:ICell<Nullable<double>>)
          inherit Model<AtmSmileSection>
          interface IDictionary<string,ICell>
          interface ICollection<KeyValuePair<string,ICell>>
          interface IReadOnlyDictionary<string,ICell>
          interface IReadOnlyCollection<KeyValuePair<string,ICell>>
          interface IEnumerable<KeyValuePair<string,ICell>>
          interface IDictionary
          interface ICollection
          interface IEnumerable
          interface IObservable<ICell>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
          interface IObservable<ISession * Model * CellEvent * ICell * DateTime>
          interface IObservable<KeyValuePair<string,float>>
          interface IObservable<KeyValuePair<string,int>>
          interface IObservable<KeyValuePair<string,decimal>>
          interface ICell<AtmSmileSection>
          interface ICell
          interface ICellEvent
          interface IObservable<AtmSmileSection>
          interface IObservable<KeyValuePair<ISession,KeyValuePair<string,AtmSmileSection>>>
          interface IObservable<ISession * ICell<AtmSmileSection> * CellEvent * ICell * DateTime>
          interface IObserver<AtmSmileSection>
    parameters:
    - id: source
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.SmileSection>
      attributes: []
    - id: atm
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Nullable`1<Microsoft.FSharp.Core.double>>
      attributes: []
    typeParameters: []
  inheritance:
  - TypeRef:System.Object
  - TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:Cephei.Cell.Model
  - TypeRef:Cephei.Cell.Generic.Model`1<QLNet.AtmSmileSection>
  implements:
  - TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.AtmSmileSection>
  - TypeRef:Cephei.Cell.ICell
  - TypeRef:Cephei.Cell.ICellEvent
  - TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  - TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  - TypeRef:System.Collections.ICollection
  - TypeRef:System.Collections.IDictionary
  - TypeRef:System.Collections.IEnumerable
  - TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.AtmSmileSection> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  - TypeRef:System.IObservable`1<QLNet.AtmSmileSection>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.AtmSmileSection>>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  - TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  - TypeRef:System.IObserver`1<QLNet.AtmSmileSection>
  inheritedMembers:
  - Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  - Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  - Cephei.Cell.Generic.Model`1.OnError(exn)
  - Cephei.Cell.Generic.Model`1.OnNext('T)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  - Cephei.Cell.Generic.Model`1.Value(unit)
  - Cephei.Cell.Model.As(string)
  - Cephei.Cell.Model.Bind(unit)
  - Cephei.Cell.Model.Box(unit)
  - Cephei.Cell.Model.Change()
  - Cephei.Cell.Model.Create(Unit -> 'T * string)
  - Cephei.Cell.Model.CreateValue('T * string)
  - Cephei.Cell.Model.Dependants(unit)
  - Cephei.Cell.Model.Dispose(unit)
  - Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.HasFunction(unit)
  - Cephei.Cell.Model.HasValue(unit)
  - Cephei.Cell.Model.Item(string)
  - Cephei.Cell.Model.Mnemonic(unit)
  - Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  - Cephei.Cell.Model.Parent(unit)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  - Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  - Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  - Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  - Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  - Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  - Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  - System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  - System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  - System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  attributes:
  - type: Microsoft.FSharp.Core.AutoSerializableAttribute
    arguments:
    - type: System.Boolean
      value: true
    namedArguments: []
- uid: Cephei.QL.AtmSmileSectionModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.SmileSection> * Cephei.Cell.Generic.ICell<System.Nullable<double>>)
  commentId: M:Cephei.QL.AtmSmileSectionModel.#ctor(Cephei.Cell.Generic.ICell{QLNet.SmileSection},Cephei.Cell.Generic.ICell{System.Nullable{System.Double}})
  id: '#ctor(Cephei.Cell.Generic.ICell<QLNet.SmileSection> * Cephei.Cell.Generic.ICell<System.Nullable<double>>)'
  parent: Cephei.QL.AtmSmileSectionModel
  langs:
  - csharp
  - vb
  name: 'new: ICell<SmileSection> * ICell<Nullable<double>> -> AtmSmileSectionModel'
  nameWithType: 'new: ICell<SmileSection> * ICell<Nullable<double>> -> AtmSmileSectionModel'
  fullName: 'new: Cephei.Cell.Generic.ICell<QLNet.SmileSection> * Cephei.Cell.Generic.ICell<System.Nullable<double>> -> Cephei.QL.AtmSmileSectionModel'
  type: Constructor
  source:
    id: Cephei.QL.AtmSmileSectionModel.#ctor(Cephei.Cell.Generic.ICell<QLNet.SmileSection> * Cephei.Cell.Generic.ICell<System.Nullable<double>>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\AtmSmileSectionModel.fs
    startLine: 35
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  summary: Implicit constructor.
  syntax:
    content: 'new: source:ICell<SmileSection> * atm:ICell<Nullable<double>> -> AtmSmileSectionModel'
    parameters:
    - id: source
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.SmileSection>
      attributes: []
    - id: atm
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Nullable`1<Microsoft.FSharp.Core.double>>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.QL.AtmSmileSectionModel
      attributes: []
  overload: Cephei.QL.AtmSmileSectionModel.#ctor*
  attributes: []
- uid: Cephei.QL.AtmSmileSectionModel.Density(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.AtmSmileSectionModel.Density(Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Double})
  id: Density(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.AtmSmileSectionModel
  langs:
  - csharp
  - vb
  name: 'member Density: ICell<double> -> ICell<double> -> ICell<double> -> ICell<float>'
  nameWithType: 'member AtmSmileSectionModel.Density: ICell<double> -> ICell<double> -> ICell<double> -> ICell<float>'
  fullName: 'member Cephei.QL.AtmSmileSectionModel.Density: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.AtmSmileSectionModel.Density(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\AtmSmileSectionModel.fs
    startLine: 91
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Density: strike:ICell<double> -> discount:ICell<double> -> gap:ICell<double> -> ICell<float>'
    parameters:
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: discount
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: gap
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.AtmSmileSectionModel.Density*
  attributes: []
- uid: Cephei.QL.AtmSmileSectionModel.DigitalOptionPrice(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.AtmSmileSectionModel.DigitalOptionPrice(Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{QLNet.Option.Type},Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Double})
  id: DigitalOptionPrice(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.AtmSmileSectionModel
  langs:
  - csharp
  - vb
  name: 'member DigitalOptionPrice: ICell<double> -> ICell<Type> -> ICell<double> -> ICell<double> -> ICell<float>'
  nameWithType: 'member AtmSmileSectionModel.DigitalOptionPrice: ICell<double> -> ICell<Type> -> ICell<double> -> ICell<double> -> ICell<float>'
  fullName: 'member Cephei.QL.AtmSmileSectionModel.DigitalOptionPrice: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.AtmSmileSectionModel.DigitalOptionPrice(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\AtmSmileSectionModel.fs
    startLine: 93
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member DigitalOptionPrice: strike:ICell<double> -> Type:ICell<Type> -> discount:ICell<double> -> gap:ICell<double> -> ICell<float>'
    parameters:
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: Type
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Option.Type>
      attributes: []
    - id: discount
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: gap
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.AtmSmileSectionModel.DigitalOptionPrice*
  attributes: []
- uid: Cephei.QL.AtmSmileSectionModel.OptionPrice(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.AtmSmileSectionModel.OptionPrice(Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{QLNet.Option.Type},Cephei.Cell.Generic.ICell{System.Double})
  id: OptionPrice(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.AtmSmileSectionModel
  langs:
  - csharp
  - vb
  name: 'member OptionPrice: ICell<double> -> ICell<Type> -> ICell<double> -> ICell<float>'
  nameWithType: 'member AtmSmileSectionModel.OptionPrice: ICell<double> -> ICell<Type> -> ICell<double> -> ICell<float>'
  fullName: 'member Cephei.QL.AtmSmileSectionModel.OptionPrice: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.AtmSmileSectionModel.OptionPrice(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.Option.Type> -> Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\AtmSmileSectionModel.fs
    startLine: 95
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member OptionPrice: strike:ICell<double> -> Type:ICell<Type> -> discount:ICell<double> -> ICell<float>'
    parameters:
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: Type
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Option.Type>
      attributes: []
    - id: discount
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.AtmSmileSectionModel.OptionPrice*
  attributes: []
- uid: Cephei.QL.AtmSmileSectionModel.Variance(Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.AtmSmileSectionModel.Variance(Cephei.Cell.Generic.ICell{System.Double})
  id: Variance(Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.AtmSmileSectionModel
  langs:
  - csharp
  - vb
  name: 'member Variance: ICell<double> -> ICell<float>'
  nameWithType: 'member AtmSmileSectionModel.Variance: ICell<double> -> ICell<float>'
  fullName: 'member Cephei.QL.AtmSmileSectionModel.Variance: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.AtmSmileSectionModel.Variance(Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\AtmSmileSectionModel.fs
    startLine: 98
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Variance: strike:ICell<double> -> ICell<float>'
    parameters:
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.AtmSmileSectionModel.Variance*
  attributes: []
- uid: Cephei.QL.AtmSmileSectionModel.Vega(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.AtmSmileSectionModel.Vega(Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{System.Double})
  id: Vega(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.AtmSmileSectionModel
  langs:
  - csharp
  - vb
  name: 'member Vega: ICell<double> -> ICell<double> -> ICell<float>'
  nameWithType: 'member AtmSmileSectionModel.Vega: ICell<double> -> ICell<double> -> ICell<float>'
  fullName: 'member Cephei.QL.AtmSmileSectionModel.Vega: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.AtmSmileSectionModel.Vega(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\AtmSmileSectionModel.fs
    startLine: 100
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Vega: strike:ICell<double> -> discount:ICell<double> -> ICell<float>'
    parameters:
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: discount
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.AtmSmileSectionModel.Vega*
  attributes: []
- uid: Cephei.QL.AtmSmileSectionModel.Volatility(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.VolatilityType> -> Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.AtmSmileSectionModel.Volatility(Cephei.Cell.Generic.ICell{System.Double},Cephei.Cell.Generic.ICell{QLNet.VolatilityType},Cephei.Cell.Generic.ICell{System.Double})
  id: Volatility(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.VolatilityType> -> Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.AtmSmileSectionModel
  langs:
  - csharp
  - vb
  name: 'member Volatility: ICell<double> -> ICell<VolatilityType> -> ICell<double> -> ICell<float>'
  nameWithType: 'member AtmSmileSectionModel.Volatility: ICell<double> -> ICell<VolatilityType> -> ICell<double> -> ICell<float>'
  fullName: 'member Cephei.QL.AtmSmileSectionModel.Volatility: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.VolatilityType> -> Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.AtmSmileSectionModel.Volatility(Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<QLNet.VolatilityType> -> Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\AtmSmileSectionModel.fs
    startLine: 102
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Volatility: strike:ICell<double> -> volatilityType:ICell<VolatilityType> -> shift:ICell<double> -> ICell<float>'
    parameters:
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    - id: volatilityType
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.VolatilityType>
      attributes: []
    - id: shift
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.AtmSmileSectionModel.Volatility*
  attributes: []
- uid: Cephei.QL.AtmSmileSectionModel.Volatility1(Cephei.Cell.Generic.ICell<double>)
  commentId: M:Cephei.QL.AtmSmileSectionModel.Volatility1(Cephei.Cell.Generic.ICell{System.Double})
  id: Volatility1(Cephei.Cell.Generic.ICell<double>)
  parent: Cephei.QL.AtmSmileSectionModel
  langs:
  - csharp
  - vb
  name: 'member Volatility1: ICell<double> -> ICell<float>'
  nameWithType: 'member AtmSmileSectionModel.Volatility1: ICell<double> -> ICell<float>'
  fullName: 'member Cephei.QL.AtmSmileSectionModel.Volatility1: Cephei.Cell.Generic.ICell<double> -> Cephei.Cell.Generic.ICell<float>'
  type: Method
  source:
    id: Cephei.QL.AtmSmileSectionModel.Volatility1(Cephei.Cell.Generic.ICell<double>)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\AtmSmileSectionModel.fs
    startLine: 104
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'member Volatility1: strike:ICell<double> -> ICell<float>'
    parameters:
    - id: strike
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
      attributes: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.AtmSmileSectionModel.Volatility1*
  attributes: []
- uid: Cephei.QL.AtmSmileSectionModel.source(unit)
  commentId: P:Cephei.QL.AtmSmileSectionModel.source
  id: source(unit)
  parent: Cephei.QL.AtmSmileSectionModel
  langs:
  - csharp
  - vb
  name: 'property source: ICell<SmileSection>'
  nameWithType: 'property AtmSmileSectionModel.source: ICell<SmileSection>'
  fullName: 'property Cephei.QL.AtmSmileSectionModel.source: Cephei.Cell.Generic.ICell<QLNet.SmileSection>'
  type: Property
  source:
    id: Cephei.QL.AtmSmileSectionModel.source(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\AtmSmileSectionModel.fs
    startLine: 80
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property source: ICell<SmileSection> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.SmileSection>
      attributes: []
  overload: Cephei.QL.AtmSmileSectionModel.source*
  attributes: []
- uid: Cephei.QL.AtmSmileSectionModel.atm(unit)
  commentId: P:Cephei.QL.AtmSmileSectionModel.atm
  id: atm(unit)
  parent: Cephei.QL.AtmSmileSectionModel
  langs:
  - csharp
  - vb
  name: 'property atm: ICell<Nullable<double>>'
  nameWithType: 'property AtmSmileSectionModel.atm: ICell<Nullable<double>>'
  fullName: 'property Cephei.QL.AtmSmileSectionModel.atm: Cephei.Cell.Generic.ICell<System.Nullable<double>>'
  type: Property
  source:
    id: Cephei.QL.AtmSmileSectionModel.atm(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\AtmSmileSectionModel.fs
    startLine: 81
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property atm: ICell<Nullable<double>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Nullable`1<Microsoft.FSharp.Core.double>>
      attributes: []
  overload: Cephei.QL.AtmSmileSectionModel.atm*
  attributes: []
- uid: Cephei.QL.AtmSmileSectionModel.VolatilityType(unit)
  commentId: P:Cephei.QL.AtmSmileSectionModel.VolatilityType
  id: VolatilityType(unit)
  parent: Cephei.QL.AtmSmileSectionModel
  langs:
  - csharp
  - vb
  name: 'property VolatilityType: ICell<VolatilityType>'
  nameWithType: 'property AtmSmileSectionModel.VolatilityType: ICell<VolatilityType>'
  fullName: 'property Cephei.QL.AtmSmileSectionModel.VolatilityType: Cephei.Cell.Generic.ICell<QLNet.VolatilityType>'
  type: Property
  source:
    id: Cephei.QL.AtmSmileSectionModel.VolatilityType(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\AtmSmileSectionModel.fs
    startLine: 90
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property VolatilityType: ICell<VolatilityType> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.VolatilityType>
      attributes: []
  overload: Cephei.QL.AtmSmileSectionModel.VolatilityType*
  attributes: []
- uid: Cephei.QL.AtmSmileSectionModel.Update(unit)
  commentId: P:Cephei.QL.AtmSmileSectionModel.Update
  id: Update(unit)
  parent: Cephei.QL.AtmSmileSectionModel
  langs:
  - csharp
  - vb
  name: 'property Update: ICell<AtmSmileSection>'
  nameWithType: 'property AtmSmileSectionModel.Update: ICell<AtmSmileSection>'
  fullName: 'property Cephei.QL.AtmSmileSectionModel.Update: Cephei.Cell.Generic.ICell<QLNet.AtmSmileSection>'
  type: Property
  source:
    id: Cephei.QL.AtmSmileSectionModel.Update(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\AtmSmileSectionModel.fs
    startLine: 97
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Update: ICell<AtmSmileSection> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.AtmSmileSection>
      attributes: []
  overload: Cephei.QL.AtmSmileSectionModel.Update*
  attributes: []
- uid: Cephei.QL.AtmSmileSectionModel.Shift(unit)
  commentId: P:Cephei.QL.AtmSmileSectionModel.Shift
  id: Shift(unit)
  parent: Cephei.QL.AtmSmileSectionModel
  langs:
  - csharp
  - vb
  name: 'property Shift: ICell<float>'
  nameWithType: 'property AtmSmileSectionModel.Shift: ICell<float>'
  fullName: 'property Cephei.QL.AtmSmileSectionModel.Shift: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.AtmSmileSectionModel.Shift(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\AtmSmileSectionModel.fs
    startLine: 89
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property Shift: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.AtmSmileSectionModel.Shift*
  attributes: []
- uid: Cephei.QL.AtmSmileSectionModel.ReferenceDate(unit)
  commentId: P:Cephei.QL.AtmSmileSectionModel.ReferenceDate
  id: ReferenceDate(unit)
  parent: Cephei.QL.AtmSmileSectionModel
  langs:
  - csharp
  - vb
  name: 'property ReferenceDate: ICell<Date>'
  nameWithType: 'property AtmSmileSectionModel.ReferenceDate: ICell<Date>'
  fullName: 'property Cephei.QL.AtmSmileSectionModel.ReferenceDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.AtmSmileSectionModel.ReferenceDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\AtmSmileSectionModel.fs
    startLine: 88
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property ReferenceDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.AtmSmileSectionModel.ReferenceDate*
  attributes: []
- uid: Cephei.QL.AtmSmileSectionModel.MinStrike(unit)
  commentId: P:Cephei.QL.AtmSmileSectionModel.MinStrike
  id: MinStrike(unit)
  parent: Cephei.QL.AtmSmileSectionModel
  langs:
  - csharp
  - vb
  name: 'property MinStrike: ICell<float>'
  nameWithType: 'property AtmSmileSectionModel.MinStrike: ICell<float>'
  fullName: 'property Cephei.QL.AtmSmileSectionModel.MinStrike: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.AtmSmileSectionModel.MinStrike(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\AtmSmileSectionModel.fs
    startLine: 87
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property MinStrike: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.AtmSmileSectionModel.MinStrike*
  attributes: []
- uid: Cephei.QL.AtmSmileSectionModel.MaxStrike(unit)
  commentId: P:Cephei.QL.AtmSmileSectionModel.MaxStrike
  id: MaxStrike(unit)
  parent: Cephei.QL.AtmSmileSectionModel
  langs:
  - csharp
  - vb
  name: 'property MaxStrike: ICell<float>'
  nameWithType: 'property AtmSmileSectionModel.MaxStrike: ICell<float>'
  fullName: 'property Cephei.QL.AtmSmileSectionModel.MaxStrike: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.AtmSmileSectionModel.MaxStrike(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\AtmSmileSectionModel.fs
    startLine: 86
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property MaxStrike: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.AtmSmileSectionModel.MaxStrike*
  attributes: []
- uid: Cephei.QL.AtmSmileSectionModel.ExerciseTime(unit)
  commentId: P:Cephei.QL.AtmSmileSectionModel.ExerciseTime
  id: ExerciseTime(unit)
  parent: Cephei.QL.AtmSmileSectionModel
  langs:
  - csharp
  - vb
  name: 'property ExerciseTime: ICell<float>'
  nameWithType: 'property AtmSmileSectionModel.ExerciseTime: ICell<float>'
  fullName: 'property Cephei.QL.AtmSmileSectionModel.ExerciseTime: Cephei.Cell.Generic.ICell<float>'
  type: Property
  source:
    id: Cephei.QL.AtmSmileSectionModel.ExerciseTime(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\AtmSmileSectionModel.fs
    startLine: 85
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property ExerciseTime: ICell<float> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
      attributes: []
  overload: Cephei.QL.AtmSmileSectionModel.ExerciseTime*
  attributes: []
- uid: Cephei.QL.AtmSmileSectionModel.ExerciseDate(unit)
  commentId: P:Cephei.QL.AtmSmileSectionModel.ExerciseDate
  id: ExerciseDate(unit)
  parent: Cephei.QL.AtmSmileSectionModel
  langs:
  - csharp
  - vb
  name: 'property ExerciseDate: ICell<Date>'
  nameWithType: 'property AtmSmileSectionModel.ExerciseDate: ICell<Date>'
  fullName: 'property Cephei.QL.AtmSmileSectionModel.ExerciseDate: Cephei.Cell.Generic.ICell<QLNet.Date>'
  type: Property
  source:
    id: Cephei.QL.AtmSmileSectionModel.ExerciseDate(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\AtmSmileSectionModel.fs
    startLine: 84
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property ExerciseDate: ICell<Date> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
      attributes: []
  overload: Cephei.QL.AtmSmileSectionModel.ExerciseDate*
  attributes: []
- uid: Cephei.QL.AtmSmileSectionModel.DayCounter(unit)
  commentId: P:Cephei.QL.AtmSmileSectionModel.DayCounter
  id: DayCounter(unit)
  parent: Cephei.QL.AtmSmileSectionModel
  langs:
  - csharp
  - vb
  name: 'property DayCounter: ICell<DayCounter>'
  nameWithType: 'property AtmSmileSectionModel.DayCounter: ICell<DayCounter>'
  fullName: 'property Cephei.QL.AtmSmileSectionModel.DayCounter: Cephei.Cell.Generic.ICell<QLNet.DayCounter>'
  type: Property
  source:
    id: Cephei.QL.AtmSmileSectionModel.DayCounter(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\AtmSmileSectionModel.fs
    startLine: 83
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property DayCounter: ICell<DayCounter> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
      attributes: []
  overload: Cephei.QL.AtmSmileSectionModel.DayCounter*
  attributes: []
- uid: Cephei.QL.AtmSmileSectionModel.AtmLevel(unit)
  commentId: P:Cephei.QL.AtmSmileSectionModel.AtmLevel
  id: AtmLevel(unit)
  parent: Cephei.QL.AtmSmileSectionModel
  langs:
  - csharp
  - vb
  name: 'property AtmLevel: ICell<Nullable<float>>'
  nameWithType: 'property AtmSmileSectionModel.AtmLevel: ICell<Nullable<float>>'
  fullName: 'property Cephei.QL.AtmSmileSectionModel.AtmLevel: Cephei.Cell.Generic.ICell<System.Nullable<float>>'
  type: Property
  source:
    id: Cephei.QL.AtmSmileSectionModel.AtmLevel(unit)
    path: C:\Users\steve\source\repos\Cephei2\Cephei.QL\Types\AtmSmileSectionModel.fs
    startLine: 82
  assemblies:
  - Cephei.QL
  namespace: Cephei.QL
  syntax:
    content: 'property AtmLevel: ICell<Nullable<float>> with get'
    parameters: []
    typeParameters: []
    return:
      id: ''
      type: TypeRef:Cephei.Cell.Generic.ICell`1<System.Nullable`1<Microsoft.FSharp.Core.float>>
      attributes: []
  overload: Cephei.QL.AtmSmileSectionModel.AtmLevel*
  attributes: []
references:
- uid: Cephei.QL
  commentId: N:Cephei.QL
  name: Cephei.QL
  nameWithType: Cephei.QL
  fullName: Cephei.QL
- uid: TypeRef:System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
  spec.csharp:
  - {}
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - {}
- uid: TypeRef:System.Collections.Concurrent.ConcurrentDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: ConcurrentDictionary<string,ICell>
  nameWithType: ConcurrentDictionary<string,ICell>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Model
  name: Model
  nameWithType: Model
  fullName: Cephei.Cell.Model
  spec.csharp:
  - {}
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - {}
- uid: TypeRef:Cephei.Cell.Generic.Model`1<QLNet.AtmSmileSection>
  name: Model<AtmSmileSection>
  nameWithType: Model<AtmSmileSection>
  fullName: Cephei.Cell.Generic.Model<QLNet.AtmSmileSection>
  spec.csharp:
  - uid: Cephei.Cell.Generic.Model`1
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Generic.Model
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.AtmSmileSection
    name: AtmSmileSection
    nameWithType: AtmSmileSection
    fullName: QLNet.AtmSmileSection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.AtmSmileSection>
  name: ICell<AtmSmileSection>
  nameWithType: ICell<AtmSmileSection>
  fullName: Cephei.Cell.Generic.ICell<QLNet.AtmSmileSection>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.AtmSmileSection
    name: AtmSmileSection
    nameWithType: AtmSmileSection
    fullName: QLNet.AtmSmileSection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.ICell
  name: ICell
  nameWithType: ICell
  fullName: Cephei.Cell.ICell
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - {}
- uid: TypeRef:Cephei.Cell.ICellEvent
  name: ICellEvent
  nameWithType: ICellEvent
  fullName: Cephei.Cell.ICellEvent
  spec.csharp:
  - {}
  - uid: Cephei.Cell.ICellEvent
    name: ICellEvent
    nameWithType: ICellEvent
    fullName: Cephei.Cell.ICellEvent
  - {}
- uid: TypeRef:System.Collections.Generic.ICollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: ICollection<KeyValuePair<string,ICell>>
  nameWithType: ICollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IDictionary<string,ICell>
  nameWithType: IDictionary<string,ICell>
  fullName: System.Collections.Generic.IDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IEnumerable<KeyValuePair<string,ICell>>
  nameWithType: IEnumerable<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyCollection`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>
  name: IReadOnlyCollection<KeyValuePair<string,ICell>>
  nameWithType: IReadOnlyCollection<KeyValuePair<string,ICell>>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>
  name: IReadOnlyDictionary<string,ICell>
  nameWithType: IReadOnlyDictionary<string,ICell>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string,Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.Collections.ICollection
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
  spec.csharp:
  - {}
  - uid: System.Collections.ICollection
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.ICollection
  - {}
- uid: TypeRef:System.Collections.IDictionary
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
  spec.csharp:
  - {}
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
  - {}
- uid: TypeRef:System.Collections.IEnumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
  spec.csharp:
  - {}
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
  - {}
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ICell>
  name: IObservable<ICell>
  nameWithType: IObservable<ICell>
  fullName: System.IObservable<Cephei.Cell.ICell>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell`1<QLNet.AtmSmileSection> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * ICell<AtmSmileSection> * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * ICell<AtmSmileSection> * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<QLNet.AtmSmileSection> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.AtmSmileSection
    name: AtmSmileSection
    nameWithType: AtmSmileSection
    fullName: QLNet.AtmSmileSection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  name: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  nameWithType: IObservable<ISession * Model * CellEvent * ICell * DateTime>
  fullName: System.IObservable<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.Model
    name: Model
    nameWithType: Model
    fullName: Cephei.Cell.Model
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.CellEvent
    name: CellEvent
    nameWithType: CellEvent
    fullName: Cephei.Cell.CellEvent
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: " * "
    nameWithType: " * "
    fullName: " * "
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<QLNet.AtmSmileSection>
  name: IObservable<AtmSmileSection>
  nameWithType: IObservable<AtmSmileSection>
  fullName: System.IObservable<QLNet.AtmSmileSection>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.AtmSmileSection
    name: AtmSmileSection
    nameWithType: AtmSmileSection
    fullName: QLNet.AtmSmileSection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Cephei.Cell.ICell>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,ICell>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Cephei.Cell.ICell
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.ICell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,QLNet.AtmSmileSection>>>
  name: IObservable<KeyValuePair<ISession,KeyValuePair<string,AtmSmileSection>>>
  nameWithType: IObservable<KeyValuePair<ISession,KeyValuePair<string,AtmSmileSection>>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,QLNet.AtmSmileSection>>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cephei.Cell.ISession
    name: ISession
    nameWithType: ISession
    fullName: Cephei.Cell.ISession
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: QLNet.AtmSmileSection
    name: AtmSmileSection
    nameWithType: AtmSmileSection
    fullName: QLNet.AtmSmileSection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.decimal>>
  name: IObservable<KeyValuePair<string,decimal>>
  nameWithType: IObservable<KeyValuePair<string,decimal>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,decimal>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.decimal
    name: decimal
    nameWithType: decimal
    fullName: decimal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.float>>
  name: IObservable<KeyValuePair<string,float>>
  nameWithType: IObservable<KeyValuePair<string,float>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,float>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObservable`1<System.Collections.Generic.KeyValuePair`2<Microsoft.FSharp.Core.string,Microsoft.FSharp.Core.int>>
  name: IObservable<KeyValuePair<string,int>>
  nameWithType: IObservable<KeyValuePair<string,int>>
  fullName: System.IObservable<System.Collections.Generic.KeyValuePair<string,int>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.string
    name: string
    nameWithType: string
    fullName: string
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.int
    name: int
    nameWithType: int
    fullName: int
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:System.IObserver`1<QLNet.AtmSmileSection>
  name: IObserver<AtmSmileSection>
  nameWithType: IObserver<AtmSmileSection>
  fullName: System.IObserver<QLNet.AtmSmileSection>
  spec.csharp:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.AtmSmileSection
    name: AtmSmileSection
    nameWithType: AtmSmileSection
    fullName: QLNet.AtmSmileSection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.Cell.Generic.Model`1.Bind(Cephei.Cell.Generic.ICell<'T>)
  name: "member Bind: ICell<'T> -> unit"
  nameWithType: "member Model.Bind: ICell<'T> -> unit"
  fullName: "member Cephei.Cell.Generic.Model.Bind: Cephei.Cell.Generic.ICell<'T> -> unit"
- uid: Cephei.Cell.Generic.Model`1.OnCompleted(unit)
  name: 'abstract member OnCompleted: unit -> unit'
  nameWithType: 'abstract member Model.OnCompleted: unit -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnCompleted: unit -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnError(exn)
  name: 'abstract member OnError: exn -> unit'
  nameWithType: 'abstract member Model.OnError: exn -> unit'
  fullName: 'abstract member Cephei.Cell.Generic.Model.OnError: exn -> unit'
- uid: Cephei.Cell.Generic.Model`1.OnNext('T)
  name: "abstract member OnNext: 'T -> unit"
  nameWithType: "abstract member Model.OnNext: 'T -> unit"
  fullName: "abstract member Cephei.Cell.Generic.Model.OnNext: 'T -> unit"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<'T>)
  name: "abstract member Subscribe: IObserver<'T> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<'T> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<'T> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: "abstract member Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<ISession * ICell<'T> * CellEvent * ICell * DateTime> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Generic.ICell<'T> * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>>)
  name: "abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  nameWithType: "abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,'T>>> -> IDisposable"
  fullName: "abstract member Cephei.Cell.Generic.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,'T>>> -> System.IDisposable"
- uid: Cephei.Cell.Generic.Model`1.Value(unit)
  name: "abstract property Value: 'T"
  nameWithType: "abstract property Model.Value: 'T"
  fullName: "abstract property Cephei.Cell.Generic.Model.Value: 'T"
- uid: Cephei.Cell.Model.As(string)
  name: "member As: string -> ICell<'T>"
  nameWithType: "member Model.As: string -> ICell<'T>"
  fullName: "member Cephei.Cell.Model.As: string -> Cephei.Cell.Generic.ICell<'T>"
- uid: Cephei.Cell.Model.Bind(unit)
  name: 'member Bind: unit -> unit'
  nameWithType: 'member Model.Bind: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Bind: unit -> unit'
- uid: Cephei.Cell.Model.Box(unit)
  name: 'abstract property Box: obj'
  nameWithType: 'abstract property Model.Box: obj'
  fullName: 'abstract property Cephei.Cell.Model.Box: obj'
- uid: Cephei.Cell.Model.Change()
  name: 'abstract member Change: CellChange'
  nameWithType: 'abstract member Model.Change: CellChange'
  fullName: 'abstract member Cephei.Cell.Model.Change: Cephei.Cell.CellChange'
- uid: Cephei.Cell.Model.Create(Unit -> 'T * string)
  name: "member Create: Unit -> 'T * string -> Cell<'T>"
  nameWithType: "member Model.Create: Unit -> 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.Create: Unit -> 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.CreateValue('T * string)
  name: "member CreateValue: 'T * string -> Cell<'T>"
  nameWithType: "member Model.CreateValue: 'T * string -> Cell<'T>"
  fullName: "member Cephei.Cell.Model.CreateValue: 'T * string -> Cephei.Cell.Generic.Cell<'T>"
- uid: Cephei.Cell.Model.Dependants(unit)
  name: 'abstract property Dependants: IEnumerable<ICellEvent>'
  nameWithType: 'abstract property Model.Dependants: IEnumerable<ICellEvent>'
  fullName: 'abstract property Cephei.Cell.Model.Dependants: System.Collections.Generic.IEnumerable<Cephei.Cell.ICellEvent>'
- uid: Cephei.Cell.Model.Dispose(unit)
  name: 'member Dispose: unit -> unit'
  nameWithType: 'member Model.Dispose: unit -> unit'
  fullName: 'member Cephei.Cell.Model.Dispose: unit -> unit'
- uid: Cephei.Cell.Model.GetOrAdd(string * Cephei.Cell.ICell)
  name: 'member GetOrAdd: string * ICell -> ICell'
  nameWithType: 'member Model.GetOrAdd: string * ICell -> ICell'
  fullName: 'member Cephei.Cell.Model.GetOrAdd: string * Cephei.Cell.ICell -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.HasFunction(unit)
  name: 'abstract property HasFunction: bool'
  nameWithType: 'abstract property Model.HasFunction: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasFunction: bool'
- uid: Cephei.Cell.Model.HasValue(unit)
  name: 'abstract property HasValue: bool'
  nameWithType: 'abstract property Model.HasValue: bool'
  fullName: 'abstract property Cephei.Cell.Model.HasValue: bool'
- uid: Cephei.Cell.Model.Item(string)
  name: 'property Item: string -> ICell'
  nameWithType: 'property Model.Item: string -> ICell'
  fullName: 'property Cephei.Cell.Model.Item: string -> Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Mnemonic(unit)
  name: 'abstract property Mnemonic: string'
  nameWithType: 'abstract property Model.Mnemonic: string'
  fullName: 'abstract property Cephei.Cell.Model.Mnemonic: string'
- uid: Cephei.Cell.Model.OnChange(Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession)
  name: 'abstract member OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  nameWithType: 'abstract member Model.OnChange: CellEvent * ICellEvent * DateTime * ISession -> unit'
  fullName: 'abstract member Cephei.Cell.Model.OnChange: Cephei.Cell.CellEvent * Cephei.Cell.ICellEvent * System.DateTime * Cephei.Cell.ISession -> unit'
- uid: Cephei.Cell.Model.Parent(unit)
  name: 'abstract property Parent: ICell'
  nameWithType: 'abstract property Model.Parent: ICell'
  fullName: 'abstract property Cephei.Cell.Model.Parent: Cephei.Cell.ICell'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ICell>)
  name: 'abstract member Subscribe: IObserver<ICell> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ICell> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ICell> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime>)
  name: 'abstract member Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<ISession * Model * CellEvent * ICell * DateTime> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<Cephei.Cell.ISession * Cephei.Cell.Model * Cephei.Cell.CellEvent * Cephei.Cell.ICell * System.DateTime> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<ISession,KeyValuePair<string,ICell>>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<Cephei.Cell.ISession,System.Collections.Generic.KeyValuePair<string,Cephei.Cell.ICell>>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,decimal>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,decimal>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,float>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,float>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,float>> -> System.IDisposable'
- uid: Cephei.Cell.Model.Subscribe(System.IObserver<System.Collections.Generic.KeyValuePair<string,int>>)
  name: 'abstract member Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  nameWithType: 'abstract member Model.Subscribe: IObserver<KeyValuePair<string,int>> -> IDisposable'
  fullName: 'abstract member Cephei.Cell.Model.Subscribe: System.IObserver<System.Collections.Generic.KeyValuePair<string,int>> -> System.IDisposable'
- uid: Cephei.Cell.Model.TryAdd(string * Cephei.Cell.ICell)
  name: 'member TryAdd: string * ICell -> bool'
  nameWithType: 'member Model.TryAdd: string * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryAdd: string * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.TryRemove(string * Cephei.Cell.ICell byref)
  name: 'member TryRemove: string * ICell byref -> bool'
  nameWithType: 'member Model.TryRemove: string * ICell byref -> bool'
  fullName: 'member Cephei.Cell.Model.TryRemove: string * Cephei.Cell.ICell byref -> bool'
- uid: Cephei.Cell.Model.TryUpdate(string * Cephei.Cell.ICell * Cephei.Cell.ICell)
  name: 'member TryUpdate: string * ICell * ICell -> bool'
  nameWithType: 'member Model.TryUpdate: string * ICell * ICell -> bool'
  fullName: 'member Cephei.Cell.Model.TryUpdate: string * Cephei.Cell.ICell * Cephei.Cell.ICell -> bool'
- uid: Cephei.Cell.Model.add_Change(Cephei.Cell.CellChange)
  name: 'abstract member add_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.add_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.add_Change: Cephei.Cell.CellChange -> unit'
- uid: Cephei.Cell.Model.remove_Change(Cephei.Cell.CellChange)
  name: 'abstract member remove_Change: CellChange -> unit'
  nameWithType: 'abstract member Model.remove_Change: CellChange -> unit'
  fullName: 'abstract member Cephei.Cell.Model.remove_Change: Cephei.Cell.CellChange -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * 'TValue * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * 'TValue * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate('TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue>)
  name: "member AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.AddOrUpdate: 'TKey * Func<'TKey,'TValue> * Func<'TKey,'TValue,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.AddOrUpdate: 'TKey * System.Func<'TKey,'TValue> * System.Func<'TKey,'TValue,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Clear(unit)
  name: 'abstract member Clear: unit -> unit'
  nameWithType: 'abstract member ConcurrentDictionary.Clear: unit -> unit'
  fullName: 'abstract member System.Collections.Concurrent.ConcurrentDictionary.Clear: unit -> unit'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey('TKey)
  name: "abstract member ContainsKey: 'TKey -> bool"
  nameWithType: "abstract member ConcurrentDictionary.ContainsKey: 'TKey -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.ContainsKey: 'TKey -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Count(unit)
  name: 'abstract property Count: int'
  nameWithType: 'abstract property ConcurrentDictionary.Count: int'
  fullName: 'abstract property System.Collections.Concurrent.ConcurrentDictionary.Count: int'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator(unit)
  name: "abstract member GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  nameWithType: "abstract member ConcurrentDictionary.GetEnumerator: unit -> IEnumerator<KeyValuePair<'TKey,'TValue>>"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.GetEnumerator: unit -> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<'TKey,'TValue>>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * 'TValue)
  name: "member GetOrAdd: 'TKey * 'TValue -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * 'TValue -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd('TKey * System.Func<'TKey,'TValue>)
  name: "member GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  nameWithType: "member ConcurrentDictionary.GetOrAdd: 'TKey * Func<'TKey,'TValue> -> 'TValue"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd: 'TKey * System.Func<'TKey,'TValue> -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty(unit)
  name: 'property IsEmpty: bool'
  nameWithType: 'property ConcurrentDictionary.IsEmpty: bool'
  fullName: 'property System.Collections.Concurrent.ConcurrentDictionary.IsEmpty: bool'
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Item('TKey)
  name: "abstract property Item: 'TKey -> 'TValue"
  nameWithType: "abstract property ConcurrentDictionary.Item: 'TKey -> 'TValue"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Item: 'TKey -> 'TValue"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Keys(unit)
  name: "abstract property Keys: ICollection<'TKey>"
  nameWithType: "abstract property ConcurrentDictionary.Keys: ICollection<'TKey>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Keys: System.Collections.Generic.ICollection<'TKey>"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ToArray(unit)
  name: "member ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  nameWithType: "member ConcurrentDictionary.ToArray: unit -> KeyValuePair<'TKey,'TValue> []"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.ToArray: unit -> System.Collections.Generic.KeyValuePair<'TKey,'TValue> []"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd('TKey * 'TValue)
  name: "member TryAdd: 'TKey * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryAdd: 'TKey * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue('TKey * 'TValue byref)
  name: "abstract member TryGetValue: 'TKey * 'TValue byref -> bool"
  nameWithType: "abstract member ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
  fullName: "abstract member System.Collections.Concurrent.ConcurrentDictionary.TryGetValue: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove('TKey * 'TValue byref)
  name: "member TryRemove: 'TKey * 'TValue byref -> bool"
  nameWithType: "member ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryRemove: 'TKey * 'TValue byref -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate('TKey * 'TValue * 'TValue)
  name: "member TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  nameWithType: "member ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
  fullName: "member System.Collections.Concurrent.ConcurrentDictionary.TryUpdate: 'TKey * 'TValue * 'TValue -> bool"
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Values(unit)
  name: "abstract property Values: ICollection<'TValue>"
  nameWithType: "abstract property ConcurrentDictionary.Values: ICollection<'TValue>"
  fullName: "abstract property System.Collections.Concurrent.ConcurrentDictionary.Values: System.Collections.Generic.ICollection<'TValue>"
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.SmileSection>
  name: ICell<SmileSection>
  nameWithType: ICell<SmileSection>
  fullName: Cephei.Cell.Generic.ICell<QLNet.SmileSection>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.SmileSection
    name: SmileSection
    nameWithType: SmileSection
    fullName: QLNet.SmileSection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Nullable`1<Microsoft.FSharp.Core.double>>
  name: ICell<Nullable<double>>
  nameWithType: ICell<Nullable<double>>
  fullName: Cephei.Cell.Generic.ICell<System.Nullable<double>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.double
    name: double
    nameWithType: double
    fullName: double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.AtmSmileSectionModel.#ctor*
  commentId: Overload:Cephei.QL.AtmSmileSectionModel.#ctor*
  name: ( .ctor )
  nameWithType: AtmSmileSectionModel.( .ctor )
  fullName: Cephei.QL.AtmSmileSectionModel
- uid: TypeRef:Cephei.QL.AtmSmileSectionModel
  name: AtmSmileSectionModel
  nameWithType: AtmSmileSectionModel
  fullName: Cephei.QL.AtmSmileSectionModel
  spec.csharp:
  - {}
  - uid: Cephei.QL.AtmSmileSectionModel
    name: AtmSmileSectionModel
    nameWithType: AtmSmileSectionModel
    fullName: Cephei.QL.AtmSmileSectionModel
  - {}
- uid: Cephei.QL.AtmSmileSectionModel.Density*
  commentId: Overload:Cephei.QL.AtmSmileSectionModel.Density*
  name: Density
  nameWithType: AtmSmileSectionModel.Density
  fullName: Cephei.QL.AtmSmileSectionModel.Density
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.double>
  name: ICell<double>
  nameWithType: ICell<double>
  fullName: Cephei.Cell.Generic.ICell<double>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.double
    name: double
    nameWithType: double
    fullName: double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<Microsoft.FSharp.Core.float>
  name: ICell<float>
  nameWithType: ICell<float>
  fullName: Cephei.Cell.Generic.ICell<float>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.AtmSmileSectionModel.DigitalOptionPrice*
  commentId: Overload:Cephei.QL.AtmSmileSectionModel.DigitalOptionPrice*
  name: DigitalOptionPrice
  nameWithType: AtmSmileSectionModel.DigitalOptionPrice
  fullName: Cephei.QL.AtmSmileSectionModel.DigitalOptionPrice
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Option.Type>
  name: ICell<Type>
  nameWithType: ICell<Type>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Option.Type>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Option.Type
    name: Type
    nameWithType: Type
    fullName: QLNet.Option.Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.AtmSmileSectionModel.OptionPrice*
  commentId: Overload:Cephei.QL.AtmSmileSectionModel.OptionPrice*
  name: OptionPrice
  nameWithType: AtmSmileSectionModel.OptionPrice
  fullName: Cephei.QL.AtmSmileSectionModel.OptionPrice
- uid: Cephei.QL.AtmSmileSectionModel.Variance*
  commentId: Overload:Cephei.QL.AtmSmileSectionModel.Variance*
  name: Variance
  nameWithType: AtmSmileSectionModel.Variance
  fullName: Cephei.QL.AtmSmileSectionModel.Variance
- uid: Cephei.QL.AtmSmileSectionModel.Vega*
  commentId: Overload:Cephei.QL.AtmSmileSectionModel.Vega*
  name: Vega
  nameWithType: AtmSmileSectionModel.Vega
  fullName: Cephei.QL.AtmSmileSectionModel.Vega
- uid: Cephei.QL.AtmSmileSectionModel.Volatility*
  commentId: Overload:Cephei.QL.AtmSmileSectionModel.Volatility*
  name: Volatility
  nameWithType: AtmSmileSectionModel.Volatility
  fullName: Cephei.QL.AtmSmileSectionModel.Volatility
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.VolatilityType>
  name: ICell<VolatilityType>
  nameWithType: ICell<VolatilityType>
  fullName: Cephei.Cell.Generic.ICell<QLNet.VolatilityType>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.VolatilityType
    name: VolatilityType
    nameWithType: VolatilityType
    fullName: QLNet.VolatilityType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.AtmSmileSectionModel.Volatility1*
  commentId: Overload:Cephei.QL.AtmSmileSectionModel.Volatility1*
  name: Volatility1
  nameWithType: AtmSmileSectionModel.Volatility1
  fullName: Cephei.QL.AtmSmileSectionModel.Volatility1
- uid: Cephei.QL.AtmSmileSectionModel.source*
  commentId: Overload:Cephei.QL.AtmSmileSectionModel.source*
  name: source
  nameWithType: AtmSmileSectionModel.source
  fullName: Cephei.QL.AtmSmileSectionModel.source
- uid: Cephei.QL.AtmSmileSectionModel.atm*
  commentId: Overload:Cephei.QL.AtmSmileSectionModel.atm*
  name: atm
  nameWithType: AtmSmileSectionModel.atm
  fullName: Cephei.QL.AtmSmileSectionModel.atm
- uid: Cephei.QL.AtmSmileSectionModel.VolatilityType*
  commentId: Overload:Cephei.QL.AtmSmileSectionModel.VolatilityType*
  name: VolatilityType
  nameWithType: AtmSmileSectionModel.VolatilityType
  fullName: Cephei.QL.AtmSmileSectionModel.VolatilityType
- uid: Cephei.QL.AtmSmileSectionModel.Update*
  commentId: Overload:Cephei.QL.AtmSmileSectionModel.Update*
  name: Update
  nameWithType: AtmSmileSectionModel.Update
  fullName: Cephei.QL.AtmSmileSectionModel.Update
- uid: Cephei.QL.AtmSmileSectionModel.Shift*
  commentId: Overload:Cephei.QL.AtmSmileSectionModel.Shift*
  name: Shift
  nameWithType: AtmSmileSectionModel.Shift
  fullName: Cephei.QL.AtmSmileSectionModel.Shift
- uid: Cephei.QL.AtmSmileSectionModel.ReferenceDate*
  commentId: Overload:Cephei.QL.AtmSmileSectionModel.ReferenceDate*
  name: ReferenceDate
  nameWithType: AtmSmileSectionModel.ReferenceDate
  fullName: Cephei.QL.AtmSmileSectionModel.ReferenceDate
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.Date>
  name: ICell<Date>
  nameWithType: ICell<Date>
  fullName: Cephei.Cell.Generic.ICell<QLNet.Date>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.Date
    name: Date
    nameWithType: Date
    fullName: QLNet.Date
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.AtmSmileSectionModel.MinStrike*
  commentId: Overload:Cephei.QL.AtmSmileSectionModel.MinStrike*
  name: MinStrike
  nameWithType: AtmSmileSectionModel.MinStrike
  fullName: Cephei.QL.AtmSmileSectionModel.MinStrike
- uid: Cephei.QL.AtmSmileSectionModel.MaxStrike*
  commentId: Overload:Cephei.QL.AtmSmileSectionModel.MaxStrike*
  name: MaxStrike
  nameWithType: AtmSmileSectionModel.MaxStrike
  fullName: Cephei.QL.AtmSmileSectionModel.MaxStrike
- uid: Cephei.QL.AtmSmileSectionModel.ExerciseTime*
  commentId: Overload:Cephei.QL.AtmSmileSectionModel.ExerciseTime*
  name: ExerciseTime
  nameWithType: AtmSmileSectionModel.ExerciseTime
  fullName: Cephei.QL.AtmSmileSectionModel.ExerciseTime
- uid: Cephei.QL.AtmSmileSectionModel.ExerciseDate*
  commentId: Overload:Cephei.QL.AtmSmileSectionModel.ExerciseDate*
  name: ExerciseDate
  nameWithType: AtmSmileSectionModel.ExerciseDate
  fullName: Cephei.QL.AtmSmileSectionModel.ExerciseDate
- uid: Cephei.QL.AtmSmileSectionModel.DayCounter*
  commentId: Overload:Cephei.QL.AtmSmileSectionModel.DayCounter*
  name: DayCounter
  nameWithType: AtmSmileSectionModel.DayCounter
  fullName: Cephei.QL.AtmSmileSectionModel.DayCounter
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<QLNet.DayCounter>
  name: ICell<DayCounter>
  nameWithType: ICell<DayCounter>
  fullName: Cephei.Cell.Generic.ICell<QLNet.DayCounter>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: QLNet.DayCounter
    name: DayCounter
    nameWithType: DayCounter
    fullName: QLNet.DayCounter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Cephei.QL.AtmSmileSectionModel.AtmLevel*
  commentId: Overload:Cephei.QL.AtmSmileSectionModel.AtmLevel*
  name: AtmLevel
  nameWithType: AtmSmileSectionModel.AtmLevel
  fullName: Cephei.QL.AtmSmileSectionModel.AtmLevel
- uid: TypeRef:Cephei.Cell.Generic.ICell`1<System.Nullable`1<Microsoft.FSharp.Core.float>>
  name: ICell<Nullable<float>>
  nameWithType: ICell<Nullable<float>>
  fullName: Cephei.Cell.Generic.ICell<System.Nullable<float>>
  spec.csharp:
  - uid: Cephei.Cell.Generic.ICell`1
    name: ICell
    nameWithType: ICell
    fullName: Cephei.Cell.Generic.ICell
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.float
    name: float
    nameWithType: float
    fullName: float
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
